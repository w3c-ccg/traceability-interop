{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1b57808c-6cfa-4553-a51d-d0d9516e24aa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "564a0b3c-794a-40f6-ac75-a69e86b67d0b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f63fc44b-0bd5-4ad1-b1c7-bdb2b8ac5296",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5f6f8146-5086-481d-a79d-f673490499a2"
                }
              }
            ]
          },
          {
            "id": "00e84b67-3fdd-4aa4-b03f-59655d92ccc1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "92367079-9163-4ee7-a75e-36aba0447407",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d781b4cc-59a7-445d-803b-0fedf025ba84"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6ba732cc-56bd-4800-ae13-93072219cc32",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "82a230d2-4cfb-4941-97d1-ac0847fef249",
            "name": "Positive Testing",
            "item": [
              {
                "id": "576e444e-e363-46a8-970b-f3c69317ee8d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6884f334-3ed6-4919-bab6-daee1cb526ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9079764-ca67-43dd-924b-c679b317a2ea"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1fbfd18-d856-403b-8e21-2e56b2e5b827",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27879c37-f856-4ff9-8771-e01d9a5a7627"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e7512095-85e1-4501-b27d-7e0402bc7e21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff3ca639-45f5-4980-bf74-adbf9ab39d66"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27d70046-f9cd-437f-8b3b-8b4150cb572c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "51d75aa7-7a2a-4da8-be13-9a1faf33580a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ecb7156-9978-4d31-bbfc-6d3f3cd3f695",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9146f73-b0d6-43fa-9315-88bd2d2249ba"
            }
          }
        ]
      },
      {
        "id": "f2ef0965-9503-45f1-86a4-d7971702d1b8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7160d8fc-a0df-4b0d-b869-f5a99560b797",
            "name": "Negative Testing",
            "item": [
              {
                "id": "701a7e89-0d6f-44dc-9f4f-d885f90c7180",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9655af8-6d36-46a6-84e7-ed8a9ddfb010",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3910e8d1-bde3-49e8-85c5-802748435611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b53d85cc-9334-487b-adac-40b531411daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def9171b-d14b-4055-a5d9-c77215d276eb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba89ef4d-648a-4db0-aac3-7526d7afb7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05c2f390-5045-4500-bb89-220a83b8d5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e771054f-ddf6-4b83-857f-a20d4b7707d5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3366b019-da24-40b4-a9ed-37a8a0747094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a652365-2ae8-4072-bd90-deabadb74c76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50d5a2c3-69c1-4ff8-86a4-1ad7c9a4b72f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6151ad14-1be1-4951-8938-f8c9ebe643ac",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea6642d-772e-4405-acee-02ec42671c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5339b6cb-e4fe-44f3-bc76-28d49a4a31f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793014f0-c5a6-4825-9737-36a531455a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c24691-47cf-4960-aea5-bd40a8903fcc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38ed3d1b-671d-45c8-a239-a5eeae67c989",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3042402a-b407-4d4a-b5f8-d6359f7c8aab",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f60e2c4a-764c-4627-8fbd-5916b270e0c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6e037ce5-4a07-4968-87fe-a89829fb3936"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d42426c4-b291-4cc1-86f1-e6adabfb6847",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c1997a07-d447-4a5f-8979-7a9c8498fdb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c556dc1-03ca-461e-973c-e7012b1bb122",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77f35fe4-7b42-4e14-8747-c377717e25d2"
            }
          }
        ]
      },
      {
        "id": "2b95707a-acbf-4fff-87d2-f898ff30fd61",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7c578dbb-077f-4618-a786-2842224bc1cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "416d62a6-1603-49a6-85be-48ed3de10729",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2ed8738e-3494-4ef7-87eb-2801f44908f2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c4910b-228c-43f1-9c9b-b4f9729b913b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3150ca-cf97-4bb3-9198-ddb9ad59be45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe6ca89-d82b-4549-b636-49307d7fb44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15419606-c6ad-42fb-8b98-a74e287a2f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d16963-4b82-4a51-befe-3d51691d46aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef7c1c3-48a7-4cf3-8ba9-0c562b578e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c14d443-b630-47bb-a6a4-6776aa65292e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4762e9-cb49-486a-87aa-aac11936f27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6de5126c-d6a0-4e8e-8823-d7a126d609ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1818261-f9f7-460a-bbe2-80dcbb3be3f0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae8f30b-faca-442a-813c-03494ad5a398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd044c0e-5d76-4c06-bce2-0803102dbb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bea494-68e1-4da7-913f-cfbc63ca7fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c42e082-9ae1-4e92-9d6f-d67233ccd252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a12dd68-8f04-4ec3-b5d5-2e981abe3ffe",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a183079f-7795-4b27-af46-5812c110cff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef07b738-677c-4bd6-9a74-7fdc03b2bb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12ef4e8-efca-4344-afdf-986f5f24c332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9224c9c0-ea50-43d8-af85-dfd74d89d0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440422d1-39ed-43d7-81d7-2089e601feba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34333eb-b6cb-40a4-8885-d9c943e77d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982a3213-401d-430a-b74e-f794bea0d34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac71179-8091-4e54-b7ab-d171bb9f3147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fee954b7-00e3-4508-98a9-8d43d72544dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0367684-f404-4824-9dce-41027bace923",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc73e13-b304-4443-aa8b-2f213983e951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab70c763-bf5e-4d97-aade-54ff0a03a4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b75ae8-7069-4979-a1a4-367cc2208d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a72686f-0f80-4aff-aa32-6ffc0d6b2a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3719bac9-254d-4722-a8cc-0fa4522e2ae7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad81db31-700c-4194-a2d2-f2b615052899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f349f72-9076-43e4-826a-ed994d99e52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e441354f-22bf-47b5-a0b0-7b83dd2fbe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a2ce20-887f-43d1-90b1-cfdb0afb2b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9512098-6115-47c6-90ac-eb86ab84189c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e88202-9fbc-4ef0-9336-f51ec38ac894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c6171b-814e-4b1a-b16e-c6c623fcd7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6430785f-92ae-46e3-b6b7-915ed46793d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27e4f189-c5a2-4673-83e5-ea452ef94357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c968bc76-55d4-4f5c-bd7e-5b33119a1ddd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e378d25-2f72-46b4-a485-279011796996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfc262b-56f6-4969-9ad1-cab66bc3e4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eaf487-5334-4c37-803c-ae767bd0826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c58942a2-0873-4584-9051-4d1c3f32e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec04289-5471-4cc0-abee-f334bd9c8cf2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5185690b-fd7d-4131-8465-1b5e2c933dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79094352-31c2-4bd8-8476-0eba0886e7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ddfff5-0c12-47d5-82ee-8df1e455eb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97fa5d1f-475c-4568-97de-dc9e8d7d1c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe04259-53a5-40d6-9cd4-9d1c2be73382",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656f908a-8fa5-4c2a-bbc8-e5641665531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3bd8db-51c3-41e9-b186-c2e02597f67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9b5876-90a0-440d-8904-ced66889cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e760331-92d7-4872-a3df-bb8cb06e64fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8639b769-9c33-4e2b-bac9-ebaee0b4af39",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258140d9-eb08-4bda-9a93-c7f392bad83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d083eb-ee73-4ea8-b338-f0c5bd3ef929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c060faf-2ad8-4a75-964b-c7cc2a078853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "940ee74a-a15b-468b-9a58-8d8d15c41784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ae0192-887a-4adf-80b9-2656e53e884c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae4d221-fa56-4276-97ce-1cd1c376c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345ea778-7a64-4a50-b91e-505f62d0a8b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac01052-4b07-4edf-a17e-8b75ee09c807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a15804a-ad22-4040-9d8b-8cb76199168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f320174-a7f6-4248-9f2a-4e8f0e901e68",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24a5b51-09ef-4a4e-932d-46eecc98a142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6a9cf3-f3bb-46fc-8459-4b8eaee21bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad42115-099d-42ba-a098-4e5873df2676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5dcbfb8-4732-4290-9207-c301f795f9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed18799-61f4-4344-aa5b-ac95f57941cb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8859671-0cdd-46bb-9af7-acd3cb9ce3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de20020d-315c-4871-8626-a0f630b2bad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03673baa-8a91-4b6f-b43c-a7a9cf01cfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6dc2013e-16ab-496b-89bf-a38d2cef504c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f14150-cbd5-4d1e-9c84-0e67b39f89a6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f75d15-eea9-4e06-9679-b6c763b2b976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2761adab-c444-4aa4-8fd2-98a34fcbc565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801b2647-b2b2-4822-8e43-40df77b01704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ffab5fc-626c-4185-b545-2a51d62a2865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097d8e57-ace1-47f7-b4d3-fdfe0f77c643",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206dd78b-1a91-4623-804a-b070138be600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd30923-f330-4f56-aa66-d94693b4ddce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd4d006-01b8-4d6e-b033-c8bc16dcb894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b1c2fd8-f2fe-4b46-946e-5992c1606b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fd17c3-cdd8-47f5-8e49-5a8c9dac216f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a21255f-5e5b-4343-be48-ca6e281fe2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d02a7f-6881-4aaa-a6c1-931f9ff8349b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8645298f-26a3-4a05-8227-ec75934011f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d85b504-2310-4523-bfef-0771905483b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28836168-0e6a-4447-bcc4-02756ffd782f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0003264e-9a4e-45d5-be65-41930b4097be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e91099-c785-42c2-8ac8-140e03e6e220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fe89a0-2b4e-4fc0-bc95-0436c4ac6b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f24249-f606-4184-83c8-d3a69939c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16253a77-3864-47b0-9874-084dfe51c6e2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107bedc5-0780-469d-8377-6c5956c43aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2a3016-db8d-4d97-827c-4174a234947b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7b0f67-b0c5-4044-955b-7a3410669844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "992d2350-b5ce-4309-8633-882bc29756b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf7ac37-349b-47f8-b650-94c76da8c894",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c48701-830e-47ef-927d-c3bfc9a0e7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609cd49c-5a71-4a3e-bfc9-fdd7b2e781a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b777a70f-6c15-47c3-883f-42d9d66c2579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fedac3d-78f8-4788-928a-90cd3a49fa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b0c225-ab72-4d52-8f7c-9c4827dc395e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb8a348-37cc-404c-b0b2-c10ea8bfc244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c02199-4dd1-4043-8828-5489c1fa3fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3dd7812-1a5d-4b86-bb7f-9d312e33d9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d104f92b-9fdc-458b-9a46-179a235d6915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98b725f-1cb7-4d9d-a4aa-01dd694ce84a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7a1385-2862-4d3c-be0a-63c6a56bde88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0fd503-d4ba-4a63-848f-d5606f8f5cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772c4eea-68c3-46cc-aa71-8582917879dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3e533e-ffe0-45fd-ae05-ad1df538ff6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfcafa45-afdd-414c-b015-226ece29460b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadc4911-0dae-49f1-8ae1-5b2590f7499f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbffd66-f66f-4785-9a95-a9764718572b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5504a94-eae7-40f5-9bcd-812f25d8fffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a5277a-74c3-4bb9-a6d8-5e4831d190e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e9c5c7-24a9-4706-80c9-6aba87152779",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64eeafd-7c47-45cb-9b0f-8dfb72f21552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a684be-abe4-4ec6-8811-d05764a2a708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609ac211-1177-4e2a-9903-e04decdb11e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed93850c-9e3a-4947-b561-329b68d17bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47f83d6-6b6c-4c4d-bebf-d5e6beb12302",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebd0ecd-a725-424c-bbef-455307eb2212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15dc638-a5b3-4750-abc0-167f55242e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cd71be-10fb-44e8-9570-1026a57f8520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "951ac9e1-8d38-4bfe-9ce2-70d491b91134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ed0839-50df-4bf0-9088-618c63837ad1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05867a02-bb29-450a-b45d-18c13ee62c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46c6213-4037-4590-b66a-ca65a4fcbedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b106bb1b-da73-4b0b-a411-c53af2054dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bedcb2c-f2c1-4b8f-8b73-ec8465580e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989d3c7d-5537-441a-9116-971bbd59cc4a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5bd239-cd7e-4233-afaa-8ec5d698086c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085d349c-b84e-4c5d-a538-abc7edf6275e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b18d1e-3467-4765-9f8a-1f429a3f8d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0480a539-92c7-4029-9f29-9bd883f53e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a958ec0-08d4-447d-bc45-ed8ff325d528",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f56d42-326d-4424-9a45-ecd30aa25308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e780477-8153-49ee-b658-6a2e83519a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5ab982-76a5-442a-9c39-fe3bbc287949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "191c6ffa-fab1-47b9-8f5d-3941dfa41e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13787ff-9606-47c0-b2f6-8b252cd8bb60",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9393757f-bd6f-4060-b8e9-7b5396735b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65288073-6e6b-4aaf-9fc5-42bbb11a2c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb063c6-2dca-430c-8045-70fc3b4e0af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd68783-8269-4c24-8d63-7a558153a9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423d3263-39b1-4f0a-b861-dcf5652d030b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad30998-38ef-4e54-8f1c-85415f082fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92e6ddc-1651-4809-abd0-eec581616abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1d68c9-638f-471e-b754-6d3b574972a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6244741-bd0e-4dfe-a5a4-a89b7eb42261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc0dbec-875d-4fc1-8193-16fc838ee827",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247f57ea-e79d-4514-a40a-07f87d8d6b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a806c90a-6f48-4e4d-824a-d5cc5f7d6ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf3c191-e90e-46fb-a0a4-2345e88d31d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71fdfcbc-a823-48bd-bc4b-0995d15ead3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2baf6ec-e378-4564-b8e2-9a46360e6666",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd45b288-d2cf-49f2-9d13-25435e773814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b70b79f-05db-4252-ad4e-ed373fdb4ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120fe58b-f592-49cc-8ebe-7f88ac3584a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d3103c-7c26-4561-9997-361a0b7ceadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c83864f-6729-4680-b598-bc51cc38a131",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa10adcc-066b-4837-908b-a9f08057788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bc5372-cdf1-4f79-be16-5f4fcb6e793d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884a719b-9fda-4e18-83ce-d5c8c2df725f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec039e6-63be-48a9-ae95-efc20475cfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e650b3ba-2861-4c6d-826c-c3bc5da64811",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2020b8-d364-4712-a7d0-e60ae86685c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf816d05-1180-4d2b-8f3f-06ff233d4440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8509250c-1ce2-4bce-935e-72621ef35f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "96d09432-2b66-4eb1-9e0a-0c04d49cd845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7aa2736-f12f-4305-9cde-55e857d696b2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ece8748-0cf1-44f0-afa0-b3389cab7b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15315cd9-60ef-4fad-808b-8d065c9df6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c0872f-8ba8-4197-9fa0-a88fed04459b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "649656a0-457a-4bde-a8b5-7924f6c13f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021911b4-8c21-4501-8756-eea52054d556",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129229a9-326a-4339-81e5-f3903618abaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8e834a-af55-41af-931f-0de76c1ab45a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb946e38-f89f-4c4a-a9ba-1f989ee1dd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61cd65fa-1a7d-4bac-a79d-2c721a7bba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0aea8a-ff3b-46bc-9f55-28edd8617b62",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6597326b-e4a2-46d2-9641-b1dfc4f18d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419a0f8e-f3f6-4ad1-94ee-e61ad27b6afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b4f927-aa32-44b7-bc21-931e1b3215f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30e98285-37ff-4006-bf2c-e00e7e80b23f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d5a8b4-e234-47e6-b282-a2857e4042e0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baaa83f4-1234-4116-93af-6e62c15e6886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0602fe-e326-4967-af68-73bbf846a3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b8503d-fba4-46bc-8ad5-352dafd1c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4613c56-5ebb-4504-af1e-f773d8e1ef81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ab299d-c2b8-4731-bc8e-f5058e323007",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502c46b7-2eb6-48cd-a672-04a9a33ae907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2629bedd-f6ca-4da7-b07c-feff99b4a411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482e5f16-3fed-4105-b9e7-b37ea452875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ba3ac2-77ab-43a5-929f-2719e8cad8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81790af-46cb-46e7-98f8-fd811e77c7a4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6f149b-8863-479b-b17f-7c72dda313f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f57ebe-b7bc-4af1-b902-e7b8a55457b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20682ca-fdb6-4b6c-bc96-92d88ca6e940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "085ce7e6-fc15-425f-98dd-93e9d52603c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad3cc99-b649-4e54-8d2b-b7c73fe2b069",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c83bcd5-df4a-4590-80d0-1a085aef1a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2d07dd-5eb8-44d1-b12c-42f7b95bc31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c06eb1e-a406-4b0d-ba90-9f31fec34cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "90a619f2-7ecb-46c4-9f14-0fa0ed85aaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5793b5-3c06-4eb3-aee1-519acaeceafd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f29197-c73f-40af-a70d-537da70f56d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c67513-fabe-4db5-8fe3-0da4ebca3424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8074f44f-afc3-4383-acdb-2a51c4927c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad114cf7-e606-43ed-b696-2b3baaf59110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be89f5d-5c91-4205-9e5e-6ac5f8c3cff5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6307b51a-f877-4d78-abae-ba1bd0ea52a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb53d58-2a83-4e19-8610-68670f628856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563d0ca9-9a8c-4c96-98ad-2b82a4479cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "17ffdf36-7116-4c33-96d1-0e22bfa0c6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab765ea-829d-4246-b61b-4f8ba759209b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4f4c76-e68e-447d-bc96-abaf0764080b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a260da19-bc02-4bf0-99d1-73c24de70cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8696eb5-9a23-4b1a-befb-78043fb39433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd94a9e-e00b-44cf-a5c0-f81245bd40d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437f975a-4ba4-43ff-abe6-86d29a3c8ad8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60774987-ae18-4d35-8146-2c8bcf2065aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e993eac3-a062-4d8d-989e-5da10c0bc352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc5f177-2015-4c6d-8872-398d13c03997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbd5c50-5e5c-4ecf-9828-9ee3653bfc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9aa67e-c1e2-49bf-8b4b-c59427cb7d6c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e25e62-a766-48db-aaae-5a41c6d03c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d429f9-21d1-4963-be49-f194b74e5c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4d9c9a-0876-46fa-9f44-6e59ad379119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ea2bbc-18ed-4147-92a0-b21cba28ee8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b972744-e0f1-4dcb-94df-1474b4968b64",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9035d46d-cb4f-4979-8e2a-9eac075deefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1adff55c-7711-4cfa-bcd4-56a1d9e3d374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a25c35-62cb-4eef-9c71-894bd9c1d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c40ae68a-87b7-4b07-b698-b2b92f0d49d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b24635-9dc8-42cb-b185-fea2b82d279f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4380ecfc-2f49-4fe3-90cb-50e99673b5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49793c20-a8f5-4c9c-b1f3-2e11fd5b12e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77781e8-a66a-4976-b897-d11f244aefc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b36a2a-79e9-4b38-9edd-7b032928f6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a2f1de-0ceb-4376-8618-749dace05403",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e725177-c799-47f3-99b7-bc96677a779b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd526f11-6d6c-4711-a9be-6e6f9e2621cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20077caf-ca97-494f-b1d2-ebd996706728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa273cf-a5b7-4aad-8db4-2d8adb159bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58cd69f-18bf-4e83-b589-e6642f210a0e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db584efa-21c3-4958-8502-c1c19e376928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4600f3-ae01-4ebe-b041-e7033cd27a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c37955-ae6c-4ab7-9051-be852c693783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "18848d24-4b53-4bbc-8175-eb4b9261c990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6d73bf-c9f0-494e-a154-4a1513b9dd1e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6712947-958e-4316-92c2-4be35c98e02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a05778e-535e-4ca0-a4d2-a2ca816daf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d884f6f-fe3c-481f-8e9e-ab7458ff3492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf25273c-41aa-4720-ae57-74ca48b47792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d7e04c-9ab8-4d55-9687-ed7252a4ba33",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03027c7d-7847-4177-a502-8be3bb2464de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eaca7fb-d578-48c4-b21a-da7065bea44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8ad3c2-caee-4841-9cfd-151618744add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc46deb-7fad-48e3-9c48-9bbb095c64db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d27194-2d80-4842-9c71-791f47e3eeee",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d49b74e-6027-442c-bb34-bdae86cbd1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8516f87-e940-408f-91a3-cfd123da67f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c107b773-3c68-4c56-af7a-8a0ecaa26bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee73b7c-62c6-41ff-a77e-0a93747ae405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62404e69-0ac8-437e-8f53-8f8274db55eb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6c3a95-2932-4963-a026-daae4a301dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b3a36a-0691-4ae3-bab9-553cf0c94449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd745f7-981d-4849-954b-b1609b70b7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "768b3cda-2052-4cd5-a33f-7f75017b3e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1484e9a7-f171-494d-9d4d-e684d54494e7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edba0d50-8bd4-48f3-bd9a-80826a8a1bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cbb30b-28f6-4446-8f67-cefc1af96042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133327b4-bec6-4490-968b-d8231e791915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec88972-36f5-4d3e-acb3-c7c5111a8e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233d11c6-9cec-4a03-919c-d84832be3a44",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c13b202-a8eb-4dc3-9d25-26d04a3fcc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71ff92e-a9f6-4678-b40b-a4a6a1b8a238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c5ccf7-96bb-4642-a5e1-13e87f51c04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10fd4eec-1db7-4b31-adc4-6eb1606212c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebc9aaf-65e6-4375-82d8-9dcc7648f0b5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd69113-42f2-4fae-b8f8-db8982a0c061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea240847-eb7f-4845-8456-a20029e47bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83815ac-fbcf-42cb-9542-d03fd746d784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "773c68e3-50c1-4b65-90ce-6b3077371cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee96a4d-111b-42c6-9ab2-2f89460b1917",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b279f1fa-5366-490d-9101-afc07a9e1384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc123dc5-e1d9-4af5-90de-e7b155c6da17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894f2a79-8751-43a8-b5a0-7d58e43fde5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e964495-1b01-49aa-864c-3000d295991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632c6ecd-7d38-4610-bba6-8e2399d939f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d97576c-dbd1-46c4-bd7c-d0131808a4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760851f0-f6c1-4987-878b-34e8eaf2b6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eae619e-e638-4f53-9476-d96c9d8041e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f533b794-7737-4483-a9b1-19370a1368a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a41895a-7080-4d80-8218-a3a56e03231e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a155855-244f-41c5-800e-2b0ca86f2f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f71caf5-519c-4259-94f3-b57c7d92b480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4762b24c-cc77-4214-8e45-d69ce9963793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2853391e-e44d-4728-8520-37b9f2d50648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db18892-0515-41fb-91c0-3706003c4a43",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994bbc0-86d6-41a0-9ba2-e4d2386b7f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e644d0a-7114-445c-9520-e92e1caaae6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf5f87f-a45a-458d-b3bd-83ae93fe5988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e174b0d4-0867-424c-895d-82abf6e35a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e780480-4d33-4566-ad64-15bdde02c328",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dcff5e-2d87-42d1-8a65-e4c8c05bf221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff14666-af97-4c2d-8bee-b3f7db6dbe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff87562-1daa-4ef6-8707-9642443768e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e8ffe3-7808-491a-99f8-0eca193c4187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12536193-5183-4b7a-9848-6b31d41d5cbd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6baa28-7d28-41dc-9b79-b97033248e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e48af5-ae22-4863-a058-b50baf58d411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4f3572-47b5-4e0f-b7ae-ee46e86c5f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21bb6009-ca71-4b42-b51c-c60e1edef639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0966e8b0-6f7d-4708-95c6-d552ab33ca67",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b764b799-cce2-46d8-be10-8306b3259dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b0ae3b-84a9-43cd-87eb-53313bc9018e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f4e7ee-6efc-4774-8632-82fa142bba0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b5c8b2-ff23-468a-8e4e-45d8f156cbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0049ea72-0119-40ea-92c8-9a6bfd534385",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa1dcb7-04d2-4b98-8848-90a9a63fffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0968bcb9-2311-45fc-b88f-1570ff79a9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be17de0-ab9f-44f1-907b-c64043df5b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4749c6-10ff-4dd0-8d73-0ff658cd66e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb7992a-f187-4798-b2ce-994bde201376",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbff22c1-5853-4a4f-8b4d-5d339168e6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e04986-b2c6-49b9-bbe9-d7ae94c72bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91f2841-13a6-488f-b9c2-d4660a1cc7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "670e4706-307f-474a-976a-a855060d04de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68a847a-e01f-49d9-a996-ac4eb9ef5794",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb25c549-828d-4d07-8e5c-927359a36a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645a9883-0af7-4157-87cf-c300245a13f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366896f3-4f32-4991-8048-fa9bf7b8f7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b2ebb7-86d4-493d-a26c-163564116187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bec4966-d2ba-48d8-9b9b-1def584ff5f4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd68947-89f6-4182-88b9-80e09f829e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0814d99e-8c9e-4f4d-b32c-7027b3a0ae9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfeadb6-cdbb-487d-aac9-919f265fa5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5d32f4-d16f-478b-957d-8d626466d5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0908ab-b1ae-4ded-9790-db72868cb926",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbcb204-e90b-4890-bceb-a7a35f03a996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70734788-c0b6-49f5-876e-90f5dfc92fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315066e9-912a-42bc-b371-efa3f72a9c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcace9d7-2b1d-4062-bc4b-059b273060d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e0c8b3-7aac-49c0-a305-cde2e2a397ef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b05e10-2f65-4a33-a615-ffe8ec7d6f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1088a03c-59ce-480a-8dc1-38b830cbda19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27e9739-5b2b-4ee9-ae86-dbe75c5fe4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "190e2d71-dcca-4025-a21f-d8c36f6cc017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3fe255-12fe-48ec-9835-5cfed1f619a6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31df5e21-1191-45bb-8e3a-b1be7ca773c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44300778-ee6e-4aa3-8b67-75567658ec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e318d1-8dd5-4230-9dce-61d361d157fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a8f790-b243-48d6-b7cb-cadf079d941d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898e3824-e6b2-42b9-8349-3d9ba9827ce2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9116a4f1-fc46-4e45-b228-f5361d3a490d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8acaf6-fec2-4b3d-8ac6-a1b34158579a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5afa5c-2ed6-4569-8399-97bea1b6e2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef452c6-a593-43f5-b8eb-f989be99b914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a500839-9252-4eff-a1e2-55054800bc41",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1837df06-5c0e-482d-b69f-49aa7abae0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27b98dc-1299-463a-b686-961597730f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db71b5b-5829-43c6-b48a-654a9a1f4131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abc96eca-b4a6-4eff-b3e5-5b32efd1ac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f8d1f7-f45c-4969-8387-56986c82adbf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0b252d-dd6f-47c1-8e72-a33ad96e4985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223151a3-9743-4071-8a60-fca11196849c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ad54fb-d39f-4583-85bf-7184b1fbdc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c01edfb-abac-4bb9-86d7-c9ae88ea6dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a507da-0604-4215-8251-f6cf14a52d1d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f9e824-0827-44af-bdd9-99021f5c8e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba91d73a-bb9d-474a-80ba-b6f91a03405c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7d51bc-16ed-4645-80b4-7ada72066a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31555fd-7460-49bc-b2ef-6a6438ecb113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4069b11-e4e5-4078-ae21-5353de59f94d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d320d71-8f5f-4283-9775-ea549b7e3ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69765c5-14ff-4042-85ba-04b6962e3682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12945ca0-9973-4d60-a002-fea03c7e0545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02dc5c5d-d528-4ef6-b29a-602b256e2f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee454a4-70b2-4b9a-ab93-d8fd582363c4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7896ab-73de-4de5-8818-b0e7b0d30219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cad2d03-7067-41d9-9039-e5022d229350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a59504-87d2-43d3-a795-894616365534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f921b2-c5d8-45fb-b31b-a1c175b00a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9a42ed-aa4f-498c-83f6-59671b755726",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e17195-e19a-48fa-9b9b-47b55eb7f758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e894c0b-06f6-43aa-b163-51ab15b4f4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7b188d-813c-4db9-ab18-5ee59eb53ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc7987e-bc04-4445-97f1-adeabea3ce66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cbacde-4340-484d-b9d7-4bcfb9a95e33",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347dccfe-434d-4f90-834e-1c05fa815b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9910346-b3a1-44aa-9784-69051c5595b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c08d46-a70a-41d9-ab67-3ef044094194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24b3f39e-832f-430f-b0ca-e77061f229cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f196e4e-a1a7-4061-a5e8-096199d4e16d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf64a229-134b-4308-b90f-d17914aebe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc909a2-fc02-4977-b1aa-fa0d808954d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c047c737-22ff-41a3-ae00-9ebd32547d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5730581-eef3-46a7-a9ac-f2add5030e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da1a836-d442-4bec-a5c0-57cff415ab69",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515681e9-e1d5-4db1-b90c-436ebd19cc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e70add8b-44bd-4d1a-8af2-ac97e9862b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f30e82e-3d52-44fe-ab98-bc0444c431e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcef366-a73b-44bc-a14d-7b70de2f5149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3258bbf-a16e-4605-86a8-4b8fbebc8584",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1071ac91-398a-458c-ad90-87871e6c3c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f83f380-9897-4258-99da-e0c88fcb68a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0017981f-33fc-4b6f-8c2b-9c2acf43cc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "326623a1-8b28-4029-ad8c-940740e0d380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5855346a-6916-4434-b75a-d2dfbafd1bfc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d57745c-8885-4cde-ba91-62bc3bdcb5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1c5e39-e23c-487c-ae25-bbbd3eb2bf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca63fe24-cd19-4096-8b5c-4c316d0d392b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35b59ee-4e24-4e94-a905-fadb1eb6762d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04057883-3a58-4bd9-a962-20ab0aafaac6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62599092-cabb-4fda-8dde-5840dec20ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0901b629-7090-4a8c-a7a3-5cee8eaf59bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2424a386-9094-43fc-9a56-f5c52f787215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "582cac8a-0590-43ae-8118-51ee0edef3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e7d7d-e625-478e-a2a8-5c14fb25f66d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e7cdde-d59b-4746-9833-7a9a4aad02bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7105afde-9edf-473f-b1e9-319439e19c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de695bea-591e-49fc-9469-9f74efe9a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "558217f9-f31d-4fab-b7f9-325846afb7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0084fc-f069-457f-9042-2d0f1b9004a6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26928b06-39be-4e6c-ab29-c425cab20abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3d0369-d0d0-4477-a3b4-edf7bf10db53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b27ae1-ae68-436b-ae44-12c68a747400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "983cb57a-4fc4-4586-9acc-9bba2d182377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25353702-7c69-4988-a298-1e769b5791df",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b709e9-754e-4792-9651-8af52f8b1366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd0fdc8-56a2-4db9-ba0e-c9ecb37b43bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb575af3-4842-4f2d-8a58-d2300f9357f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5703d4b0-5c71-47be-954e-2f2f3b91566b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369d98dc-de34-40a1-8717-f7bb2688236b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7076463b-2bf4-45ab-98ec-7763a6569402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af7d0a4-5ab2-41fd-bae5-4842d8a9a688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3877dd16-0c0a-4c96-8c08-15b4494aa5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "312fd97d-4f66-408a-958d-3a60b1d3c6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923e6416-d072-4765-ab1b-7ab8c1e2fa11",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e254b5a0-372f-40fb-b819-8c9e803037f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c49fb35-a612-4137-a4ee-3c95e45e4bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc34629-977b-4bf7-a268-491ae5352e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6700cbc8-5559-495d-970f-a484f43c3809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5a9e1c-6516-4146-af1a-4334083d969d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5cc99a-6144-4e84-9156-ff187c16d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f280ad7-1434-4202-990f-1ac4118dfd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95ad55d-4454-4acd-aba7-85be4fbd5ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "33ce5390-15f0-4328-af39-d79052aa4084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce4bbee-f0fd-4509-b3f3-a9000c7ea838",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d0e663-f76e-4bd1-9abc-63362d9aaf11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "26905874-d9d3-45f6-bf25-346c4971ee91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b14c483-9080-4f6c-bd63-3ac7e0921881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0ec389-b9ca-4301-ac06-772f2556f14f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e58eefb1-3019-42af-ba44-209d83755813",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74f9b25d-3b88-4e09-8ef3-241422516033",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cce4442-8112-4fcf-90db-96f1d5ca6d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf7d120e-39fe-4b49-8a0a-e4dc5a4c1360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d220e4-8bdd-4103-a7f0-b1e89fa68f93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9552d141-0478-4953-87de-6b156e6ca264"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9732ab28-880d-4fe5-b75d-444b364d4fd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cc45644-196b-4d68-91da-9742b51134d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "589d790d-c7e8-43f2-acdc-9ee78c1e6dd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78eece06-70bf-492d-9690-2a60c3ab4be2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a8e7e7f3-b69e-4eea-be8e-54b50e197f43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63316186-bf00-46e2-b3cd-742d44e4f1a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4433bad-9755-493a-9fdc-5de459778146",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "649956ae-a0bd-4bf3-a6a7-c1108567b713"
                }
              }
            ]
          },
          {
            "id": "04425246-eb5c-45f1-b675-b01a28a4c724",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19436638-a067-4f85-8046-863d8a8343fc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "89fb2504-ad7b-40a7-9c66-7ed0f46dc07f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc616af-9c9f-4834-aaa5-fc9002d0f4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eb9a13b6-165c-48fe-86ca-5819e775b57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36dbbd29-1a69-4a7e-bb3e-95f03646164e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df763a8-c04a-4d0f-a1ac-f1d7b54c7396"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0b0194c-ea88-4815-aaa3-e20997a8c209",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9669e9f1-a132-4916-b6f9-4a665bd8ed2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6211dd14-9bdf-4422-8a47-bc4587a9a4db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a11d2958-7d36-4093-9721-d89d396bb3b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4824705d-87c9-4375-9e08-b0a47fee3de1"
                    }
                  }
                ]
              },
              {
                "id": "705b794f-36b6-4992-a550-39f5850726bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9729fba0-355f-4094-a3a1-cc742f2ca0fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7646c55-feaa-4a21-a0d1-05d78f337dd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7538e2e7-2e64-45aa-8dea-77f498f041f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57cb7d08-718b-47fc-9c2a-df9cda91fd53"
                    }
                  }
                ]
              },
              {
                "id": "932df69d-6bf5-401a-8e19-799e1c1036a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3903af4b-6cd1-4743-b837-6b41740f4817",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c57a999-d6de-4b59-a6e1-e5aa6ace4ca2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "409e9ce4-06d1-4651-b110-5d05aac2f8e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66b428e0-2655-4763-a50d-53cdfd11725d"
                    }
                  }
                ]
              },
              {
                "id": "38549a18-c21d-4f68-ab80-9d2881aa5ec4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d580770-3868-4435-9abb-98d1523785f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f85c14dd-aa9a-42ee-8a89-4e2886a65064"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63854d59-7d19-4a02-9e71-b520a2bd7b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "504711eb-213e-4fde-9f58-dc4a54c45037"
                    }
                  }
                ]
              },
              {
                "id": "996b32a8-5df9-43ea-aaef-f5b918294c96",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47699d5-3c06-46fb-8520-f82d32809320",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b54338ea-05b2-4a4c-91d2-cc0d40689eb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74c39ea8-d6c0-417c-862d-a99565a1c37d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0eeff086-44fd-4dc2-a3c0-709079ce9b72"
                    }
                  }
                ]
              },
              {
                "id": "a027a4d7-18ef-4b31-af02-fbb83d29e6fb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93edeaf3-2a01-49d2-9e15-c75c8a315483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a89a4972-56ab-45eb-b52c-32e2ff5d6613"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c6f0573-a2f1-47fd-870c-9f2c4d99991b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "342feab5-c911-4926-a041-3d55ad3baf04"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "444fcdac-754c-4af6-9584-d54ef726f7a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fee63980-5374-42ad-9f0b-6bf9da56c804"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4684968-0bf9-4c13-ba5a-262a1a310b48",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd6ff2ef-0545-4718-a135-fa7b21fb27d0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1092c644-77bd-431e-971c-8f679070c05f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "387393e8-a5ee-4056-b14a-6515a834cf7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f13f8ea4-043a-4572-b990-afb04ba1339e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d91bf4e-beaf-4229-a2ba-4b57038bf181"
            }
          }
        ]
      },
      {
        "id": "bdcf5e5d-6eb2-4af2-873c-a539de2af8d1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5d28f555-7edd-44fd-9174-bf7463c38d0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ba201ed-033d-49ae-88fa-1f11155a6811",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03ec7fd7-83f9-40de-9905-d76a3a63f1d2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d20b73d-6c46-488b-8f8b-a7dc74b8165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7420538-c786-4429-af1a-09240dbcebc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b7d637-9ff5-4d49-963b-db23f885ff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "001819f5-862e-4106-b61d-bf798f24e224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0233f36-1765-46f8-8516-4e609aec2744",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7fcf8c-899f-4166-9143-09f49e579fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4834eefd-35f5-4602-b4d4-452999bfe0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a0ace6-8fd0-442e-9aed-cf072b209779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7736127-736c-4362-89dc-37213530dc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b646595d-245a-4d5b-91fd-abe0596819a9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e8e332-e1d9-4df2-a1f5-39edaf42d2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa615693-9668-4ed3-b5fe-8fd3b7607a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a197d302-1e0c-4de0-8404-0522f89b2b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba635953-3a77-4530-8c1a-8ee8a58af282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada6b9d-6828-4b3a-b9a8-6dfd6a309105",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2aeddd-c51e-482d-98be-88462582956f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03375e78-503f-4fb2-b8b9-caabce331939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61afac0a-db92-45f5-8e74-c77e3086303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7673b6f5-eefa-45a7-8c04-32288c7e5888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc4e45f-ba70-4cb0-b0c6-2a119543c9e3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160059c8-b3f2-4da3-a25b-74ded938f842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67200a50-5e4d-4149-9fda-9b839b368c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea603547-ab49-4564-93a2-4bbea8e54ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e03b893-6c73-4888-a781-78beb7910fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521b886a-b244-441a-9750-5a6f5c8c5237",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea1fdf6-4720-4c73-bbff-e6ba5ecda453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b5c265-91ad-4969-b410-acb81656dd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc864cd3-79b6-47bf-932e-176e5e7024e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc9142c-e9ea-4b88-a5c3-bc2eafe74c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e8fafc-52ae-4cce-b276-2bee7da6a889",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7aa460c-d694-4089-a4a7-827cbdb30516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e36a400-319d-4dd9-afd1-e5752ac35c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d66a61e-a410-4b7c-bab9-69d504b5b60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "735c77e8-44aa-4853-a2ab-3795035d2b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d02871-e162-4263-ab87-a6c02ca979a3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36792620-d8dd-4278-8856-ce13fe17a078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6733c0d-683a-4b8b-8d2c-fe8c7559acae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158d3f3d-0ad9-4d76-866e-825f00e951ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bbefc7a-5722-4494-8914-c3a6d5a41222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d729683-3ecc-4186-845f-03b9d162c689",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba744c23-8933-424c-ae3b-cdc19f1e7c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f67bca2-b508-4508-b4c4-e5f13ff3fa99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551b6f45-ca37-4259-89cd-c05f4d4936ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f398dc83-d5e7-4782-82ef-cf66b9a32ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47751d8-0441-4cbd-a834-d7413f1aa3b0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a548f3c0-17ff-4ffa-acef-7e088c54fc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6afddd-c9a6-4390-b554-8bcbeb2c0c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330fccb1-2dfb-4547-90dd-b5fa7749174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38c918ca-8865-4bcd-97cd-d5c1d8a5420d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c42b5f-5578-4490-81e0-10710e8cdf04",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85baa7f0-ef0d-4e2c-8385-ec4d208273cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1248863c-88f7-4840-b99f-d35bdd19a255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bc45bb-b830-4edb-b984-d7d6e3b56db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3af65d6d-8331-45b5-afec-b8505a32cce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cedf885-bf95-4c0c-9ace-89535a5b5dab",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d93bfe-c8b6-423f-a4bb-dedb57c5d26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103f90cd-bec5-4e9b-ac25-beb0b7bc4373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee20c1c-0bf4-4e86-91fd-bfe782ffd957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eafecb-ad6d-4aa6-9dda-9945cfc35f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ff07de-a656-4745-a82b-c54451d20a8d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e34991-3eba-4ac8-9393-816eb424fe18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bef8f2-4f84-4d37-9452-055215a5b322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871f7020-80ba-40cb-b861-145f65c5f013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3f2993-1cf9-4ce4-8239-4663a2019cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2fe075-0ad9-4a82-a2fc-be7f475706ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac390a0-f0ff-48a1-9451-9fee6a63733c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d73d16-e6cb-44d2-a137-4a2852c21dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6cdddb-12b3-4576-b515-8e8b32130811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b5c260-bdb9-4a27-8fb7-c0c2a8b994c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26294a9-4c1d-44f2-9f40-5562855d8ccc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1508324-7129-403b-ac41-0314ccba8c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9665b5aa-a20f-4d77-90ab-4728f10f2049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf66914-aa2e-4ac0-b382-2c7da49ecd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a51977-59ba-40d8-8afd-8f1cefbe64a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd28e30-96b5-4065-94a7-027e84987712",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1189d8-e98e-4745-89a8-85abf7fe4053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96cbf09-a505-4478-9004-d4f97b8b943a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8d48eb-5d26-4279-9dc3-cdb7b8c4c167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8198060-17d7-4d50-9ced-2ee50e76e8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cca973-41a5-4062-a8d3-401802f66a9a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124b4106-850c-41ba-9dd0-a66effe7e929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762970f2-7dff-48a5-907a-f416669dfa51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf48ca3-0e4d-4bc2-9ea8-2cd158eaeb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "521513c0-46e2-4ed3-8937-f631a88a2d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac93eb5-6001-4f10-8bf8-ff784f1ef1ae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce7c462-a63c-41b9-9ac7-d12270f69dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bd7a01-830b-4327-97ee-46e0ec9101a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c1c171-9892-4d12-a6c3-6b32cf0e518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "30fe507f-b99c-431f-a728-76b6fed7cc1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf91d92-e1f7-4983-ae45-4df7e24fec21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64640e7-61bc-488b-8e41-cbcddfb41103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cd017f-4c2a-4456-a199-4f4680a52dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d1170c-dd63-4aa1-b5a7-ce6588e00614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bce7cf6-ae47-49bf-bdf0-7dcf99714330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72c68a0-74a7-4c01-bb99-a5f8e2ad2e5d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e401f8c1-94c9-4d5e-9952-98fabc1916e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81be3d0-5e0c-4e0d-865e-17fe76bf8412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8be831-3f79-4085-ac52-5db8e80a4dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8373f1c6-819f-4b3c-9ba8-a04de349b0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473dcc5f-c264-42c7-8dcd-8fc3051a95de",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ddac68-0aca-4e02-880f-2b25be24439f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4069eff1-09b0-48a1-be02-4058eafba65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dbecc2-49a3-4c9d-9c84-b3df59074035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca211804-7450-42cd-a301-37543a7f8d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daaf5ca-7e28-404e-b15d-ef5a1ccddce9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ef0223-c73f-4d02-ba83-9471e4e2a41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415fac6c-f4ae-4e0a-aad4-97f145c3632a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b7fffe-0016-4a41-97e4-39de4a558832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b7717b-8abc-416d-b5bb-109f88104d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96db8c19-afcd-40bc-a962-59a716f70e04",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f09a2a2-b823-4b6e-9817-4f087fd04588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b20587-a4f4-402b-a6bd-be8a39979fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c89a3ae-0014-4f7e-a90c-79515b72acf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf03a9e-082a-4e7a-b52e-bfde8a31fb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8020fb-8f49-4d50-ba18-0b8c06fdf674",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3b0b73-8489-461d-8545-8885e5504a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3821b61-96d3-4696-bdf9-5eb0d9e74dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a7aaaf-113f-4919-a03c-2ad098b95f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf5dba4-a454-46e9-b859-e3e52c13a207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c41cbc-8665-471e-b1fc-adeeb728a118",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f30cf58-3f78-475c-93a0-5b1a34c3d2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378a1888-55d5-47a7-954f-2bbc1f665683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf11b32e-79a9-4b1d-93b0-f1f4d2546988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad36e30-37bb-4646-af0b-529d724e7844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b06e54-c709-4fa5-a82c-acd118ef0ec5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e1ba58-cb25-46a6-a89f-25cf9b6781d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361f4d6d-0648-4694-9793-580f5d41c29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c795a479-6b2c-4bb6-8b7c-ebda84a5e5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "280861dd-d31e-422b-bf5e-a429bae03cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c884e2-5da2-44ab-b412-a6563b77cf77",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d88964-902d-4bb5-955a-c0f8f16b5016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a938295-f7c8-4ab4-a0b5-69aaa5c46678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a724704d-2cff-44a1-beda-4dd275e40ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d30e6aa3-e432-4aa3-a1c9-e653daf720df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3974ff62-41ca-4ebe-828d-6c565cd25476",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d16bf36-0ac6-4705-b51f-9508039256d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f0b74a-3347-4c0d-8633-79c80fd37e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eb342f-f06a-4ab7-817d-f78c1bc9dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9784deab-8391-4e2e-816b-7b6f97399b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3e3a37-2304-4a9f-bc2e-e60ce1f15d4b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08616f83-fe84-428e-b3ad-759835d821c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7bf18c-c089-4ed0-9924-866c38a46cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693ee30b-973f-4023-986e-7a19a5ef2fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e2767c-826a-43c0-b440-657c101330c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c798a91e-f335-4edd-964b-1ff5441896c8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e25472-6a40-4f06-bae2-36f445ea66b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab749992-c07f-426b-b4b4-b5bd7accded9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47389ffa-9a65-48e1-9d19-a0b4afc44bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec521d9c-0cb2-4cce-8ffa-b7348a8fdc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84efaad3-1f03-4667-adf0-5cca18d0299c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b55b22-5a49-407d-b347-477d7d65f832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae428e5-06e9-4e25-8593-2747977e1ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c32c76-a327-40d6-bc9f-95e40c9f641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a24faca-31c7-4b05-8738-0bfbf0a66a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de23f9e3-a621-4ae5-ac09-a01c97393cd9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be281530-48e4-45b0-a9b9-92a6fad5f66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5295e78b-442c-462e-85b9-585eda483f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b8a4ef-970d-445b-beb6-4ec99a677f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59fd42d7-f841-476b-a764-84e116a22039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b8e3dd-72d5-498f-b924-49d62046e433",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3207c505-e915-49c6-9142-54ff97ab3e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e2edd6-2ad0-44cf-b41c-a2605c962c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de373f0a-d875-4030-ae1e-f8eb35a7de99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9773c4a1-8529-4f52-8ed9-5fcaf29a6e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bef37c-7ce3-4d1e-9013-c38845947079",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f97c74-0e82-46e1-b15f-54a05053a709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0356d7e3-c8fd-4b91-93aa-9e9513a31fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71913198-5d9f-423b-a7f7-337ddf315123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "878ffb27-56a5-40c3-a5ae-0011f384a37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0616332-8efc-4e74-9306-8a8445339937",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71937fa2-9429-4423-94d3-ce02518a8a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9637f1a-de1a-4e77-9967-f0db1241300d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6957bf7-f58d-48fd-815e-e4d93417479a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "106979d4-59da-4b90-a555-ec6f8d2b2b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd9aa9e-bcfe-4212-87c4-20d7b658503d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c9478e-e12a-4597-8107-d5cbc0937f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f585d8-283d-4880-b0e1-421164fc1f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44fcc7d-451b-4e75-acfa-e004a1653a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a603c98-d1df-42a7-ae81-3ce3a010b81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de7eb10-fd5e-4860-bce2-3f6da8a128be",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f4c967-0cf0-429f-91e0-32e231c3897a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5310db9-3ec2-4494-84ba-7c63c71f8272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d8d486-5ddb-4633-959d-65f8a7d266de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4dc216-1373-49d8-aaf8-e01f52f120b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "345bc355-29e3-431e-a287-0b7aa18424b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "170e0f7e-f3ea-4532-b111-c6998a548a46",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46bfa6b-2937-468d-ad8d-8c7abfb0073e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "18f076c2-ffad-484b-82ba-40b3fc0e982c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af292c9-652b-4da7-a615-1af931a23138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53320ca9-70e5-49b6-b6ae-a7c185a4a1f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a29a9cd-7628-43f9-afa4-eea5a8417dca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb67c7a6-0324-4acb-a94d-c539cde404d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44fbbde5-bcd6-46b9-a549-590f53c82d6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90bbcb09-444e-44ce-ab3c-43b42937de13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53801fe5-3e1d-4824-b305-84dbeba4e412",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53e5dc17-7cc9-45bc-88a1-d6aa2672d2f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c76f4f1-53d7-41b0-8283-4aeb5a208d67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f1337e6-3970-490c-881f-02b5514370f9"
            }
          }
        ]
      },
      {
        "id": "c2beab2c-e68b-415a-b70e-dc098ebb6815",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "93afa6c2-9b32-4423-9115-a7de9b3c3c3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b785a29a-7db4-4e50-accf-934986f570d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d6aebd41-0e3c-4135-a5d5-27cddf106b04",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421983f4-d9ec-43f4-9881-9f9500e9246e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef109039-7af8-43e1-a6f8-c15b59d04dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531b8fc6-0bfb-4933-b47b-da127e79793b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ec12df-ceca-4595-a788-e02d1c8c6144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be04d038-99af-407a-82f4-44a25373e89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495bbef3-c817-4101-9fc3-a349c5d5b0dc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa7396c-41b7-490f-b9ad-919fa08977de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb878a67-b454-432c-b0da-4e371d3677b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfbb312-e588-4b68-b1e9-0846e062bed0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c88efa7-7c41-4afe-a002-6a42ebafffae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe90eeb0-adf5-4299-89e7-1899e5deb40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8431c00-0a8c-4795-acc8-555038ec1d27",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8895037-a7a0-4965-b18f-396ca9290589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88030310-c7c8-4274-9ae7-7c1514b83789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851ffc56-7325-421f-bf88-ac27a8a2c927",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748e97bc-87f6-4513-8f92-36d5d8f74547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a85f4a-eb20-42c5-8141-2743e998a0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9c2cdf-be5c-4d53-8348-6896d91e2b4d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5c17aa-9cd1-4cf1-8d45-b593ce607878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c10817-e906-4519-877f-96bc7a3493a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cdb415-f110-4103-ab49-57fffe47e5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45638e67-df42-4840-a6bd-f559ae7fe113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f996fd6-3465-4096-82b8-61e8f47d068a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d419c49b-3cfe-44ae-9fe0-25b0e8861a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27c3fc86-fcd5-4048-9a73-d8d07bb00729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcb2ffa-36b4-41f0-a19d-e43c7d6ce2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5ae037-a336-4650-8e4c-d562034dc120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0d3d67-5155-4f62-90ee-bc55b6aefbf2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac374859-e784-484a-928a-f0740793fc75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d182dea-68d6-44ca-b26f-f7fceff1811a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "993d59c5-1200-4f94-b8cb-46cfea3c0de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad4c5ea-318a-4807-a965-5b453f09ad03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfe8245-c6b3-43c4-ba5b-5889139367b8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a042864-ab6b-4c4c-bb53-6433f59c077c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "692ca93d-f189-452e-9be6-9f605bbf5981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bf58ba-4464-4a2b-a46c-77a7ea86a328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0780800e-2396-49c2-b96b-7084645c2258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef11c09-56c8-4b93-a275-9c8e8e334d78",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4956202-bb19-4b04-b553-5b1e3a24018b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49881bdd-9e97-4d19-8c03-46d81271bd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65633c34-8950-4824-aeb6-6c7c8f1bd4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e33bfa-643b-4691-9436-9b9a24be6ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ab44b9-866d-4333-9aae-07fa6e75b8a6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365dd407-7251-4458-9f40-3edc4de57f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad21709-5dd3-49b3-b35d-86d2982dc18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ece3383-2279-448d-a4fe-958635501a4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e8acd5-9fad-4311-9950-5715f4632b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793f8b29-5be3-4cf0-bc5f-fd94d086abc4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91a2961-3d1a-4fd4-a492-74430768fca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0e3838-528b-42bb-953e-5f97799dd965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d113ed-f15d-4028-9ddf-e952b7d24bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0752f17e-d3c2-4954-89a7-df48e8eba8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64620db5-ee6f-4b9f-8cbc-667cdaa5d7a1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e2f25-8cec-4f36-a08d-e2048914918d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5635d550-4f7f-4741-857f-2d42c76014cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4540004-7ad5-47e4-909b-0141ce94d737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1c335d-749d-4d64-afc3-5860cc948c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e32903e-cec8-4f13-88ca-bfdb176221a4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d270e273-4a40-4b3a-8c1d-8e52a5a4ae05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d062f75-3b61-4384-993a-f0fd2502f142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6489b03b-d53c-4051-b87e-6e9ba57e19f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f619b245-70ff-41f2-9102-07964328bb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc50058f-9c3c-448d-b37a-0a07d714fd9c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5024a2-c83b-4deb-9c9b-6cc252978ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ca69fc-e6ac-4bf1-b65f-52c583799bc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa10402-40ec-4d87-a603-a066f48739f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51955ec3-169c-47d4-81c5-9c0efec6fb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db28b058-29fa-455c-81f8-b64f0daa9e46",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb668c6-320f-4e5b-918c-71017bb38951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee79eac-41e7-40c8-a7e3-dfcffadd3c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4eeadd-9d38-4c19-b47f-4caa950b9a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c53f873-6c70-4eed-bf15-97a2035b4755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cca09c-6f7b-44aa-916b-12c1bc8e945d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f354d5-c664-4385-ad2b-15806b2cd954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013da9d0-3883-4095-a079-ca08eddb2c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b369386-af5c-41bc-9b2f-eea4afd84e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dec219-ca98-4b43-ad0f-d35780885228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61ea63b-a8dd-4e48-9a2b-b9f5e15d02d6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872c3249-80b0-4590-b9af-ce2e50214269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad75c41-37f6-4acd-87a9-b2c04dcc4fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fc768d-9367-4268-be88-2dcbbc838ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1721c5d8-82a2-41a4-9b23-63cc10aeb718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b96db39-e0f7-4089-9fec-cb96a4d43b1f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c760303-3bc6-4bdd-a0e2-82fe155db4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12377a19-cfe2-458c-84cf-d553fab5c853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad09983d-9b3d-4cc7-b5fb-ff6e816ee91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a120e5-138a-4c52-9ff3-78a82db39130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371c7630-3238-4e5a-a2ea-9a99afc250cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c417f6f0-ebf5-4307-ba8b-9876afd3620f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1258a236-7647-4be5-91a2-b5768921287a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4237f9-6545-493d-b062-a91184b99291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0394e710-1506-49ff-acdf-68a0ffd08f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c040f2a-2879-47f0-a19e-426f3908098d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dac0f55-853e-4d37-b1e5-b0c66e4a2464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cfa1bf-dd33-4676-bb59-6b581c6d1ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25f6ae5-29bc-4836-81e6-8001228442a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5519aa7d-226a-4bfa-ab0c-83b309233409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6363e6ed-7e34-4f43-b3cc-b6ffc7762fb2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4e9091-b5a0-494a-ade3-fc67cbf5b6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793d2562-2afe-42fe-80d7-e5f2b246845b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e550265-cc3b-4818-8bd6-3903b494a1d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e90585-2b97-4afb-804f-aea2122d017a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435583d7-d911-4a38-8762-e43f824abc87",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15beaf51-8749-4f80-a26d-5a4a31eabf66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde7fc0b-13e5-45c0-be9a-d698407a5ab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706e88ec-49a7-4139-afaa-453ccbe29694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ce04e5-0a49-4652-8747-a8a06bba9a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de8790b-7ee6-4dfc-9d36-c5ed8db217c5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc9e6af-237e-4e75-9c87-affa8c647cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7805f4b3-eda2-492f-90c5-956428d1728b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8d63ae-2a84-4440-9311-df59805ba846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986ec3fb-4d1a-40be-b270-62dda1f6af63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fe1be9-e576-4424-83cb-88c4d9b7d574",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926ce361-e3af-4715-a57d-7ed50850c172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c92bf5d-d808-4024-9254-c00224132acc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fb9de0-5f3e-42b8-b6e3-f5c7786dacb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39e3cdb-bd22-4799-b658-c50dbc9bcf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffb45ed-fd3f-42e8-9d9e-3b8358fa1235",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb24cac-8f89-42d8-b6f2-4188e758884a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbf25d3-138d-4993-8948-c1461cd8d592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b69fa1-5d80-4535-87d1-5016e271f7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fcbc9e-3c18-4345-9464-625801ed4244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92915ba8-bad2-4505-bd29-cee36e73dd4f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3682387-00d8-45b4-b2eb-2d0c1e19b165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b90e64-0c35-49c6-8790-c0403fb123b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4fdb070-6dc1-456d-9b8d-5c7eef72c97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c68ba1c-09ab-41ab-b432-b61ae31537cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade94552-2456-4539-a93d-fba72951a78c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b177c201-730e-478d-bf76-827f52560f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e104273-e3e2-46b5-a7d0-8029b474cec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35c995c-02b3-4012-9a7c-5cee5add435d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d0f1d5-247c-456d-b0b7-e53f27593885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe1b4cf-c3db-40af-a05e-a4998296bf03",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79e40b4-2c58-43a2-95a8-7186f592ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a93494-e95b-4d16-9da5-63a16f7ac6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62230219-ff46-4d93-9e92-4884bf713f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d865e746-c9d2-49b2-997c-b6900f034edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021e78a9-dfe8-4bd3-908f-fc4229d7364b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eefb183-e757-4b77-9231-e9ae4544da80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "930a6d47-8ad1-4544-a4b7-45c34ca90789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7807fb7-452c-48f1-8b2a-0be71e19abb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fcacb3-2db2-411e-8615-11ec95f2a53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c5d1d-bcf5-4da4-a68a-c9060d6eb114",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0040b86c-b962-4a6d-bcdd-8f00a9ab4924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8b1ea8-68d7-488d-8463-1a1001a7eccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c074cf15-0c4c-49e6-9319-286e2c52acb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723c46d3-ab2c-4039-a823-19ec18a95a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac7719-7f46-4095-be1f-7d6e883e1786",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f5937-761d-4e6d-ac3c-294ba3740ae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4440d9-e3ad-4abe-851a-f87947f742d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035f9d3e-6fff-4b4e-863c-d422f628cec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d11240a-d8a3-4e63-902c-455874af23aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527ee8bf-576f-4730-8911-7fa8c0152b01",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b942d465-7a48-4777-b7db-03aa49f1dd13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56621f3e-9f85-4ef6-8c72-c86a62ff49ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653fc64e-3cda-493c-a4fe-71497eaa845d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23455521-413f-4928-9b07-323a3946875b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfedd56-5a65-49ad-9283-1afafe3b901b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99c8f1e-881d-4e19-871f-1b9863c773c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c5d6ff-e44d-4995-8733-00d3dc24407f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd18abc-b36b-466a-8b47-03ce321d255c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425bf5b6-caff-4e07-b2eb-e95a4ca8c466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838d4d53-ca67-4ea0-8fca-94888ce7accc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40704114-318b-4048-b49e-fca95d980f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc03a5c-fcd7-4ccd-a77e-61babaf3b2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f5b458-aa06-4d19-a5d3-b04cb78c4778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f477e446-2c91-4c6c-9297-4cd984b6cb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d0a81f-1a74-43ab-bf0b-2f370c09f3bf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98dbec4-ba49-4062-950d-7cfdee7abed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9859d120-6635-4197-83b2-9ef4dbfeac64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514edf7d-c3f5-4563-929f-c28e0f9631ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f301db-0700-43eb-b362-178abc57139a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a80467-fad6-46c5-8a70-d9b8b7058917",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1e202b-66d5-4b08-ab53-79feca25df00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d89d651-2ac5-45ef-803b-20da1312f4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70c29a6-d6a9-40d1-9163-50615bd4a74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84527938-14c7-4a66-b5e2-039ebf84f5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ec68ab-bb1f-4d42-a2fd-9299ccaa1ad2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33824961-5614-4de6-8afe-3f332826ad91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9361cd0f-9e02-4862-a1e4-dfe3301902bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ade3a8-3cad-4f9e-8ab2-ee902d1b0aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841597ed-9018-421f-8687-5b90832acbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed0042c-ab7c-4e08-9eee-88fdefc5e9b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d4cbcb-28d8-4783-8269-e9f25b06c53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191c5f94-a8ab-4b3e-860d-65b9c001bf4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e5d713-94be-4ac3-b711-5ec4344db268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa5370a-e14d-4bc1-bf5b-a1c095085151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a52e486-ac34-4768-8890-61cf310a2ed3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d7f77d-1223-484b-8314-1993fc5a1adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599a74f9-2efb-47ed-a7b2-939b02913c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf266725-3c3c-4ac3-90ca-48bc72a6ce7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ccd028-5534-44ee-9091-a7a9dca2ee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dc1bf6-d094-49f8-abec-3327437463f9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a461c33-0e46-4fb3-b259-a7210f4c910e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60506d98-7246-493f-b36b-11c14c5eade9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4830f714-d8b3-417f-b0a6-547de603a195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8d4e74-2021-464e-a214-e9b0b089e571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586ed957-584e-4df8-a33a-d04d4788de0e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78650bd7-21ef-4d02-b857-6b33b3e1136e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3ffdd8-559c-404e-9333-9f718fe99500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd23c20-f7ba-4e39-a5ed-e258a9e8c923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562c67cc-c29e-46f5-a1cd-e8fbf932a20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcc7bac-84c0-459b-9784-8c53b1bb7a85",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af321f7-4074-4bc5-a30f-01cf39f57ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf047ae-5bb5-423e-ac0b-b16cf0c22c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ababeb-c010-40b3-a52a-5f422857aa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfde1c31-6d96-44e2-85ea-20bf13be3111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a52e4ad-b763-4618-a6bc-c6e35522af67",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b64f3d1-1456-4624-b65c-aca9f8846b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753baaa9-deda-4ac9-b389-b91b4c5a7984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54e3de8-2405-4fab-b72d-af5aecde4cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae578d1-e715-42d6-a531-80629c1b2466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcaff69-d187-4912-a1fb-924db344d40c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bb64d7-c095-41fa-86df-0238b7489723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d1ec9c-5808-43ec-b80a-9710d44707d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c3f542-c7f1-4f7b-94bb-16113e03597a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631d794e-0b72-4d92-9155-b8e80eac7fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7286453f-5da7-48fe-beaf-4fbfc5cdf429",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971c9258-e037-45dc-8e2a-cfab11d50c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1866187-4b04-4068-8666-4ba9c45d304f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bfbece-22dd-4c32-851a-da8b91afad87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332a8ad7-7187-4bd0-ab6a-9a4eedd202be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46ae05d-286b-4425-85db-73ee0954fd5f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00830c82-2555-4866-b5dc-d0ff09b0bad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bccb5cb-d6a6-4d01-9e68-cd3a1df96255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f1ebde-9aa6-4809-b7a9-821b63188272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c78da514-fc08-4fc1-b89b-231019066027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2aaf8d-058c-4a65-80ee-36ae3d1829cb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8760b493-7ee8-4c9a-a5e5-f0faef8a7665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fa46aa-e991-47ad-85a9-e4071790775d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c351f9b-1b42-4232-bf96-083f2cd16ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40dcbfc5-ca40-4393-81c7-697b733e418d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3b0504-65d9-48dd-8d64-9196bd609dcf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529cc2d9-712e-4cde-b413-7c2cfbb66ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85173f6e-5ebc-4a0b-8b48-b57355f49891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9451ef8a-6784-4ec7-bc09-a136acee9ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53ff90b-c6b5-45a1-abed-2b05d5e04b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b54bce-cf81-4c80-93a9-0c64bdbb3f75",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d316cd72-a33b-4300-ba1d-ae9e6872f2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "003456c9-b512-4ed0-bd4d-d946ebeec253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0fd7c0-755a-43a4-a752-0d9f8d05bec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358465a0-8c4d-4505-b387-d98298688121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22970eab-078b-4486-a075-822e02941eeb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b68e26f-2259-44fe-892e-bc3489c9a29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c28d394-9639-42ff-a7cd-afe6d096922c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8b08d7-265b-47c4-ab1b-5ee34d42fe47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52d6805-00b0-4cec-a8c6-ffedf81fd742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2f4c16-37af-498f-93e2-dada06aa5908",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d73992-2c80-4039-8599-492aab5def6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b10023-dfb0-44a9-9cde-3dd438689597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca6ce3d-a731-414d-a3a4-d1afd4668357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7fdbc0-7c98-4b31-9ca8-caf27b78e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b7e280-7d28-4e26-a2bc-eda3c0f9f9f6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443a3de0-c751-4ca4-a052-7d64bd5d5272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f46bc5e-a6b0-461f-a948-0f0ecc99e520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92ad92b-203b-4639-bab7-7fadf0a0558b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9062880-a932-4aff-805c-c5b84c0d1ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7c1782-6ae4-41ee-b4a9-0b05e9651b71",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0f25ba-1a9e-4bce-ba2d-d3552bafa12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed6d77d-bc7f-446f-a1a0-56d5c8776c5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3188f0a0-87ce-4b1a-b9ec-88757f70bb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b056248-a230-4a5a-88e8-a440f1d5e00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5878bf5f-b9c4-4fc2-abfa-f8baf9a8997c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ad9fa5-9f43-4683-b8b9-b25a39b2af3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9f5032-f7e4-47dd-82d5-0ea912a9dea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5dab34-6a5a-4b58-92e1-6245091039d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff21cd87-793b-4be2-912f-0f3263e64d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac2a29-aab0-4dba-90e0-fe750785d7f6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9d1168-4792-46e4-a463-d86bdd8b5fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f6b091-5d48-4c76-897a-6fc13d13157c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b7d5a3-124b-4847-a664-2e9c3372955f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe8b082-5d7b-4349-996c-ba4c8de2e0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745cab7f-781c-47c1-a945-419401f4615e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa717bc5-1d06-414f-9a62-08aa6d47e420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12f15e4-2059-4dc0-975b-7a76150f0ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2a8889-8c16-4d74-87ba-f1fe44f3decc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec67e9d5-c4d4-4d2d-8e50-81001fbb2945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e103bcb-9d9b-4c0c-8c10-85496d9ff477",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47ee98c-da5e-4da7-b541-1d00e39ac099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208d04d5-6f5c-43af-8340-97f16fb9c939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf15589c-b6a0-4afe-9c57-e14d897dee71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0527a1c8-03bb-4cc7-b04b-ce4be712d60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f509fe34-de79-44a0-b46f-d5c81190af50",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a059dc-e27e-484e-aafc-1a89927dc446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006baf71-d870-4636-abbd-f17190136da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88774f8-6b7a-4f13-8750-52bfe6359fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e396b13b-826e-4226-a284-c3515d633c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094c85ce-93ce-4037-85cc-d9b754a64430",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6a970a-28e9-48bb-9efb-8e52c64e92d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ee3980-868d-4fff-845b-b6b09e08ea22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9080c770-ecf7-4ed3-9b3a-9de189f0dcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc0356b-7cf6-4399-9d10-7547b1fdb474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2876a934-ca80-497e-b54d-52b491482e7a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a56cb52-0ba7-47ce-ae37-1fe145618fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571214fa-3c75-4814-8030-47b1909b73db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f022116-5179-49e7-9d83-e20d5cd37d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d797cd8-a974-4518-be08-7d8a5edcc883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b4616d-24e0-4e62-aa12-d70911cd5c68",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d008019-27b9-43d2-b119-72b4967cad15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c8e784-515b-4e33-9684-1e6a533466e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63674935-1776-4b42-ab78-aa5133882f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e985031-651c-401b-bdce-d6098fc40a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b798c50-a903-4410-b685-b75699a4ab95",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82530b44-1cf2-4b0e-96c4-4d5d8cd8d679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c432b15-154f-4547-927c-19d166288e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a8b8af-6ab6-46f4-aadb-dc30dbe8401f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849957ec-ef24-466b-b1cd-112346fc8818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a63b1e2-b06d-4ead-a7a1-a15800f84b95",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06319afc-2dad-4a2c-934e-23b68f34c835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8a48e50-805e-4ffe-9230-a1cf29575927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4f1ed3-6e9a-400d-a8bf-35b6b90aaa93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e0d065-45c3-4651-89a1-8d9cc1936726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1be47d-b4dc-4d9b-812d-948a01179caa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8b710b-9fb1-4f15-a65b-3f68f127a9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea01c433-e25a-4f5b-9098-44d12a5aa0de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7c246a-474f-4114-ac56-70fcfdfeb192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125a2738-6d05-420b-b536-b0ffbad4277e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89220fd-d3c2-4bb7-8d0e-13afb8b551d3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcd5639-a041-4edc-a618-c1eebf4901c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fe355b-d0fa-48f8-9081-86f806fee2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836ca907-463a-4961-9cd6-91916d815c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fcef0d-b64c-4d4d-b6ac-c022ed48fb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f01b4a8-e5ab-4b9a-b1a5-c8c2a69104d3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74e04e7-6cd8-4ebe-932f-3b52c9228416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f06576-20ae-4250-a235-8690e246247b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d700738f-c31d-49fd-b38b-ef613fece831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76761a68-4163-4e8f-9d24-b7e9c75b8814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d439b81-cb52-4831-b72c-020f2003a25b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14627a7a-6954-4d22-a9c7-778d371a5939",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97ee6497-52ea-457a-a482-1e5e8f0385b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771e29fb-989e-4b08-b254-e2caba4119d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a97349b-a29d-4faf-877a-d5a5d70dfd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a8d64c-4e48-40cc-88f2-c94743f68ac7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d63a58-95cb-4c62-8f1b-dd19d33eec8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440b68aa-d5bf-43a5-bfdd-d9fe7467a91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11fc564-7a26-4b43-91d6-2338d4d47d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6a240b-b014-453a-81f0-c9b8348f4f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab193dc-738e-4b29-93fd-263c7db009a8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3134f343-b23e-4508-8876-273cd95e704b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77eb4b13-9cf4-4b63-b1f7-00756607cbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3b6e25-9a83-43c6-ad1b-2e45aef47e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b5a2cf-4715-4c4a-b4be-1e904961cce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3385e4ee-8167-4793-8140-cb0a8dd9abaa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47963245-8641-4e7a-b841-2f7fe303e46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6cd42a0-a532-492c-b9e1-7a49718cef09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917821f0-0248-4b16-88ae-bec8f97fd48e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31b0aba-379b-4b16-b761-06288fbb890b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec42fc18-3d5c-4450-be82-8193a70623d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad15d619-3d4d-4db9-9739-c3ced9bfdf55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaea70f7-f2f5-44ba-aeab-78ed94c2f583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d49cbc9-ee60-4bc0-930e-1f2c96da401c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64437369-c104-4338-8d9a-4e8bb7727cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897e99b5-1c78-44d3-8eb0-cea639d31b33",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e6cbda-6d24-453c-8464-e4a093245968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9235439f-2202-40d2-b5be-f6c3b5e9ed41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7837cfa-9bd4-4c51-b0e8-c49937f33b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0defc6d3-39b6-480b-8f9f-c90315d29b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ebc17-3992-445b-b8d5-c31f33e22c5a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fe87c2-62d9-4834-a719-67e9725ab89a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a3a3157-c809-4aa8-97fa-a2f823467e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa08532-ae9e-4558-9e02-ad65b09e5041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99948a21-f554-4003-bf29-2d002a2ece3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251e0633-b3fa-4196-b19d-1bfe7967ccb8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da70048f-b57f-4448-ac6d-e5a3bef6cb9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb2acc9-9eb7-4554-8c2e-2d61d668515c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d8185-fbf0-4ba5-a1f3-ffa86f507f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be8d28e-b2c7-4faa-bbc1-aeaecb9188af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2905fb57-01db-4cdb-a2c8-139fec8369a3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d095f7-9d6e-44a7-b0cb-613958752331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e113b40b-1116-4cb1-96e7-b34322aedbce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b28633c-ccfb-427b-af81-3fc2381d162b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fceaffa7-fbe6-4db7-b77c-0d94f22c26fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e116ffcf-850f-4334-b152-77984c9245d3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0b00fc-8c54-4cc1-bca8-5c6e9b3dc405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f10feb-280a-4cd8-a288-8bb0272a5822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c7b6e24-8ea4-4e35-be57-91d7ce6b8cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e2bc90-07f2-49e4-be3e-ebc5f43e9c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a307908-1cae-4180-bde3-6c5523900deb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80cece1-153a-420d-b1df-c1c3170425aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3a3542-c1da-4e65-a71c-f9dd096715a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447724c5-4382-4add-962e-9f8546ad9052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068595fd-409b-4ca1-aa36-d2c66cf186b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c47840d-48d6-43dd-acea-a98b3ce72bbc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69307de-4d59-49ea-9b2d-05ee31f633f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc1c9cde-cb8e-4160-a896-622b285cd171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ec017b-4a33-4a6e-922e-9f5b884675df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66e0d99-5d00-459a-93d6-65d08154fed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177b7e44-3c64-4f12-b7a0-d45e3d5106e3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9345e881-f57b-4a68-8d35-4a1dd11a8754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48784c01-be32-4d26-908b-41f6395fab2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41b2733-9e00-4b97-884b-74342c5ab5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ca511f-cce2-47e2-b24e-d71f975fa3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac3dc8e-b3b6-47df-af8e-6c519ca71d18",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c20b82-18dc-42ed-b550-a3bccc3034b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddcc227b-2a4f-480a-ac56-0ffad085882a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f142e2-20e7-4f61-b5fb-62ac6911f172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce49064-4a4f-4d23-962d-f2f8b213a425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271b15df-9541-4aa6-8aa3-3fdff6de982b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422078fb-7dbd-46fa-bc3d-d7e6a1672928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550e1237-5f01-4a0b-b453-6d5e9c08c931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b509806b-d3bc-4334-a58b-215488e7dd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9731d3a3-6341-457c-b9ac-503bcb9d09b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bdf2eb-0dae-47ff-990b-17f03c7c8e50",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c399523-0d35-4b6c-aeb8-f216eb9835e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f76878-7297-455f-a63e-f4d434165eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09386ac-f124-44c4-b383-cd041943b211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2226bdb9-0a09-45a2-80a1-f2d72045b8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c15dd7-69c0-447b-841b-394b5ebb0412",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1524be44-1a84-424a-92ed-ecf4e3801fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9b0089-5d3e-4e8c-86ac-da3375414340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926e166e-eb63-4b17-8559-0b23e1dd67ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4f5d3b-7bd5-4dad-b3d5-283d83082565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7252e36d-0e90-4ed0-b98d-d3792eca0035",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f5c828-effa-4e05-af70-1e7263e9b992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59308562-54b2-4d56-b69e-c43207cfb3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2045f9-336e-444a-a6a2-a12ae0f27200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a30b9b-4f5c-4af3-b9b4-f61fb90b1b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d576e8f4-76c2-491b-a526-6eab5e4bd17c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cceb5c6-9168-4af2-9bbc-e2062eaad889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2d2700-1da7-4de1-9f77-0ff2d288b374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05ab315-8625-4146-95ff-b1a7d71c08a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caa6ede-ae6f-4a0c-b32c-fcbc34916f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294b8cb9-7c3b-4c93-8302-9e6bc97c915a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0734b20-2232-4294-9d80-7be0a0f5f5a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb80e451-3dc3-488c-b2ba-3225785b3650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26626de1-9c19-4653-b0f7-52a3bfcaebef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08720f82-3152-4083-96a0-55bd859dc717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e40841-f2a4-4243-bc1c-7d7c78aa0f32",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85915d9d-a124-4612-be73-264815698e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5c9948-833f-4ab8-86f2-0f81d6ae0ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230c2bd5-7e5c-473b-a25b-fd41d33e7833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18e91dd-31e9-4d04-aeef-5c4bff53ce30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25b6a55-ac46-4e03-ab3c-9a0a03917c7f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fcfc64-7bce-4057-9bea-a50d313030cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10515fd4-dd76-4c5e-803b-2242a9b7fc35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4c3472-7652-4dcc-bc16-98eeb7b183eb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fbb586c-da2e-4765-a09f-cd41cbe88e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5100c4dc-d285-465c-9558-7d74e482f390",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030a7802-cce6-4a09-93b2-d3531d5bb8b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "994d5516-220b-4c67-9f65-f9a7c6f52967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05b39b7-1a3f-4536-837e-533d17f64c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51416b2b-3b90-4708-9ec9-426548fbc8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2477c4f8-08ae-4805-b322-1e39af8644d8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d0cbbb-e0df-4220-b344-cf7c27bfdb33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "368d5671-1b5b-4938-b704-132f719f885e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db4cf4f-cc1c-4e20-a1e1-ab9a0606aaba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50241ec-bfa8-4d4a-9baa-c08100a986d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe38979-71de-4c9a-8106-b7ce3ac6dfc5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa86bdae-2ac3-4099-b12e-bb8d5c7f3cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24ccdc6a-71f9-47db-8150-e158dc1429a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c39aac9-d24e-4a48-8d14-107a5b3336db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d49b6d4-d990-454d-b2b4-f6c6cc368939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f2af9f6-711f-45da-950a-33acd2e8517d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a90e0dc-328d-4a52-b81a-3278f79abb55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24992ea3-28ef-44b0-b91c-4c0aab146eb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b02b72-b586-4685-b0ea-0aba801f1512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a3593c-9669-4505-8208-96b43683bef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56334d3b-a739-4f05-a2df-703ee6f22a9d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08147b0-9a5a-48d3-8ae4-138acaac823e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c520ea2c-ac15-4d6f-9c72-5c974a4d10ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6402452-8a54-4458-831a-97fff1240b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035c4cb1-362e-4890-b116-4f471d3ad18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900fe5a-a19e-4a12-8b8f-ed03e099cfa4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e44af0-651a-44d5-8bdd-929cee5ccc34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4877be93-77d5-49bb-bf3b-a6f7abd23760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d22f12-1b7e-4cf4-9d1f-0e6efa93ac9a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f166cf-d78a-4c70-a1b8-5828c5bd62fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544cbf02-0d03-4c9e-931d-4cfa461f05a5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406263dd-e64a-4dd2-97c4-54a1a7871259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f0c0677-9f9a-4585-afa4-dcd38c9fc9f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7715134-2a14-4eee-a2f3-ba0c3cc9df2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87574068-9562-4ec0-a873-24801fcb3e30"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d782578-bbb0-421d-823d-97e96ff78107",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8443a55-d744-40d1-911d-81f95d7cfbd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74c141ad-8137-40af-b317-945389138fce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7311aa51-b405-4fd8-9e86-21d05f785428"
                    }
                  }
                ]
              },
              {
                "id": "0a9a0558-4626-4b68-a4cd-bdf23f4e5fe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6ceee39-515a-437c-809d-5689e5b13a95",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7104ed-1993-4dd9-8c28-da3d5dcede2e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "799a4cfb-e183-4d8b-8d2e-a64458b8aac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688ba38e-5f65-4449-94b0-b6e8c31508c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "440ec63c-1208-455b-a3c6-d3d015f9f1a3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6affa1ef-d9f8-481a-90c4-b13c79c6978f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "caa63499-3b38-4f52-883f-58543832901a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3351ee32-f24a-4b4f-b6d4-8db22256e41f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc218ed1-e8a1-4f5d-864d-1609d9fa24a3"
                    }
                  }
                ]
              },
              {
                "id": "26eee982-a5eb-4050-a655-4fc5931e002e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "920d23d0-c0cf-4709-b1d8-e4af76665c34",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdbd1a0-3725-4ba5-89e0-e91dfd7b6af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f1c53184-b96f-4e87-8745-27ef1319e8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1bcc3b-61dd-4870-8501-76ce29452b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d65943-7104-488d-83ba-2932cc8f514a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d43449ac-ed57-4980-83ab-915b5d62cfef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "721fe8fa-8ff5-496c-b608-bf0968d84135",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bfb4993-1389-4326-b96d-a9af53af4f42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3bf038f-79dd-4400-9a6a-3ab0441c0c39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca6072a9-3e50-4c3d-9f4d-088384bd929a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e6a3aff-ac15-4a8a-8a6c-6558c4168580"
                    }
                  }
                ]
              },
              {
                "id": "aa970654-cd5d-4e8d-a2b4-eba5757f6247",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c163b7fc-e4d2-4a9f-9107-01e201bfe79b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "650ba997-d070-45cd-8071-10533e52d672"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17c6f674-02e6-4257-b902-f8044d5a0dd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65e091c2-1303-4c63-97b1-c70ecef2ed6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6730c15b-0054-4bb3-ab48-a74232734d45",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d548333e-97ad-4992-8b78-2e11707e6933"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbb36b05-fdbe-4528-9c6c-caa523fc0915",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9500402f-7d2c-436e-b11c-b73af3308930"
            }
          }
        ]
      },
      {
        "id": "03ec0641-b89b-45e3-8c5c-3a049f80e5bf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4b9d78b1-8bb6-4781-ab4e-a9f96c2be2f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "390e2040-47f4-46c6-98b1-570aea9843e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8d085ee-a0e6-4a24-9aa2-3fd3c65eb535",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ecbcd9-4d06-40a8-8524-6f4055c631f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e6b28270-353e-4d91-8d9d-f7de1aff1fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb76bb3f-6912-4b5d-93b6-631e10282fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "733143ac-313d-4909-a8e4-04c651033086"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9336b9eb-5f91-491b-ae3b-1d1ab8ba590a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a109eb74-1548-4420-88bc-726b5f442180"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24e52362-528d-409e-97da-c8dda009be5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e560e9ba-a399-4081-888b-475631d2bde8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f438304c-8401-4db8-bb0c-9e5037a0048f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2c11f431-c6f1-4aca-b2fb-8e385bca4b21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5ef1580-7d16-433d-a2f0-8da0e67655a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cc51a94-bf54-4065-8a3d-29b7d7211434"
            }
          }
        ]
      },
      {
        "id": "4daca324-9ebf-4800-880a-718c42698cc5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b40d504c-ac7c-464e-a580-9ed182697bdd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "40498840-713f-40ad-9ccd-5d9dcf5d344d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ba02c86-a073-4f20-8bd6-c697bf778de7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9c916b-6104-40d8-b251-97cf0d93d37c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b563ca-cbb7-41c4-857f-8684f37aae35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dde3b0-d423-4c0f-80a4-92ca20234655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d21e4bc3-0128-4087-84e3-c4d7bbb8dd5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54d6b0d3-1b18-494c-8309-36742bf9cd84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85cd6171-3e2e-41f4-9b9d-57202b2b2629"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9ef67a-b890-41e6-94bb-ddedac88f97e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e96105d4-1bb6-4a58-b0b2-05551835ff58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c73096b-dd09-400b-9db2-377bb3eb3f59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b2548fd2-1853-4ccd-949d-2f8494be65a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84dc3f70-eb51-476b-9ef5-102a34d89c39",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "75589278-75e3-47ab-9b50-11104f7f9975"
            }
          }
        ]
      },
      {
        "id": "e5e41a85-5b72-46c8-a1f6-cab17570387c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4c083715-a1c2-405d-b4dd-57c753310ab9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80b776a3-4dd6-470e-a80c-9b6c37dca642",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69bf7521-a1cb-4b54-9f31-a4e7859c4c37",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8abef7a-1601-414e-84c4-37a4dcab9ef5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641d0787-14f0-46e3-8e1d-e86bfd449d24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34fe4ac-93e7-43d3-b602-e188b9a1add9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d823d1e-b7a1-4229-8805-655960ff3f72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e99ef40-1efd-4751-a2e3-79a296de6b3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec5146f1-a6ee-4e91-a74c-763e80eaac81"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "418c6134-202e-4d29-941d-286e207cbac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d3540f2-1111-418b-b3ee-9547c3a71d4a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27fe162a-e13e-4fa0-995a-a75cfb2ea0e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "502c2f69-32ab-4345-89d5-1818b22d1cb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6531476-0f07-4c79-a918-3beafb45d989",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "178fde1f-57b2-4869-860a-e7fa6c2bdde2"
            }
          }
        ]
      },
      {
        "id": "0e56df6b-b011-43e4-b173-9a297ec0d61d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e291c4f8-0121-4692-886f-e1ea7409548a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3741f9ce-8ee4-4359-96ba-5795cca50415",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "29255dd2-573a-466f-9de2-3d32ec643291",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91b033db-781c-456d-999f-dee464b1af4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5d2f66a-916e-4b86-94c5-196e30cb7ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 98.27777777777777,
      "responseMin": 9,
      "responseMax": 7865,
      "responseSd": 544.1848518639935,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1713486913166,
      "completed": 1713486946019
    },
    "executions": [
      {
        "id": "564a0b3c-794a-40f6-ac75-a69e86b67d0b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5eecaa86-6ec8-4633-9e78-5595445cc93e",
          "httpRequestId": "43448317-a788-45c8-8bab-2f5194a09894"
        },
        "item": {
          "id": "564a0b3c-794a-40f6-ac75-a69e86b67d0b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4c240d6c-1523-46af-a2e2-8989ab323924",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "00e84b67-3fdd-4aa4-b03f-59655d92ccc1",
        "cursor": {
          "ref": "3a3b7c37-53ba-47ab-88e8-26629ea48ce9",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8052eea3-0499-4058-9719-faf9dd6cbf55"
        },
        "item": {
          "id": "00e84b67-3fdd-4aa4-b03f-59655d92ccc1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9ca2f4ad-8d28-4d3c-9cb0-dc4aade64b75",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "576e444e-e363-46a8-970b-f3c69317ee8d",
        "cursor": {
          "ref": "e673ff37-8677-4585-a27a-d30ab1127e9e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2b1406c2-7da0-467f-b8bd-174c482078d8"
        },
        "item": {
          "id": "576e444e-e363-46a8-970b-f3c69317ee8d",
          "name": "did_json"
        },
        "response": {
          "id": "1c87a662-2644-45f3-ab9a-3c45a87a7800",
          "status": "OK",
          "code": 200,
          "responseTime": 288,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9655af8-6d36-46a6-84e7-ed8a9ddfb010",
        "cursor": {
          "ref": "ce49247e-1da6-4d87-bbce-a0461fbb817e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa32452c-7280-4698-b503-8b4b5b0bd5ab"
        },
        "item": {
          "id": "a9655af8-6d36-46a6-84e7-ed8a9ddfb010",
          "name": "did:invalid"
        },
        "response": {
          "id": "71b59461-4501-4bd7-8f7a-73db79e4aaa1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 452,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9655af8-6d36-46a6-84e7-ed8a9ddfb010",
        "cursor": {
          "ref": "ce49247e-1da6-4d87-bbce-a0461fbb817e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa32452c-7280-4698-b503-8b4b5b0bd5ab"
        },
        "item": {
          "id": "a9655af8-6d36-46a6-84e7-ed8a9ddfb010",
          "name": "did:invalid"
        },
        "response": {
          "id": "71b59461-4501-4bd7-8f7a-73db79e4aaa1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 452,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def9171b-d14b-4055-a5d9-c77215d276eb",
        "cursor": {
          "ref": "bd5d84a9-9fcc-442d-9cf0-6c37d414f21b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c594515f-3bf0-4f2e-872b-8b633858f117"
        },
        "item": {
          "id": "def9171b-d14b-4055-a5d9-c77215d276eb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8cd5d86d-6449-493f-a835-007a07e67309",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e771054f-ddf6-4b83-857f-a20d4b7707d5",
        "cursor": {
          "ref": "36a73b45-22a7-4d62-bb26-38b2650e8e6d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09c41f63-7603-43a6-84de-20779975612d"
        },
        "item": {
          "id": "e771054f-ddf6-4b83-857f-a20d4b7707d5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d95c34e1-6690-4ed8-beb5-a0d91f764014",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6151ad14-1be1-4951-8938-f8c9ebe643ac",
        "cursor": {
          "ref": "f229abf5-579e-46ca-ad2c-0ec68dd492e1",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eed840d8-62a3-4c67-86aa-0dc213406110"
        },
        "item": {
          "id": "6151ad14-1be1-4951-8938-f8c9ebe643ac",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bf348dff-042d-4160-89b7-6aba89cf83c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3042402a-b407-4d4a-b5f8-d6359f7c8aab",
        "cursor": {
          "ref": "d79d811f-f3e6-4d0b-87b7-a8de8096a6e5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b025c761-ae93-4210-8039-269704b066ed"
        },
        "item": {
          "id": "3042402a-b407-4d4a-b5f8-d6359f7c8aab",
          "name": "identifiers"
        },
        "response": {
          "id": "f526f0ed-c838-4165-be68-f8539d351e9b",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed8738e-3494-4ef7-87eb-2801f44908f2",
        "cursor": {
          "ref": "54db59c7-13bb-4f62-94cc-56df23875d9c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8ffe6d2e-cf5c-48c1-949c-316d260ee321"
        },
        "item": {
          "id": "2ed8738e-3494-4ef7-87eb-2801f44908f2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "298d2bab-1c2b-4318-90fc-aa48db284e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d16963-4b82-4a51-befe-3d51691d46aa",
        "cursor": {
          "ref": "536e317d-ef30-44c0-8ca4-2da6488b378e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "279e2226-09a4-4005-bfa2-2cc5a42701e1"
        },
        "item": {
          "id": "34d16963-4b82-4a51-befe-3d51691d46aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e8e57619-3103-404e-92da-2e585439305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1818261-f9f7-460a-bbe2-80dcbb3be3f0",
        "cursor": {
          "ref": "f9887b82-81dc-4b29-a539-8f7ce362bf05",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c0853d3f-6db4-405f-892c-ed7ff874cdde"
        },
        "item": {
          "id": "e1818261-f9f7-460a-bbe2-80dcbb3be3f0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a194028f-c6d0-4b12-a153-e5317835adf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a12dd68-8f04-4ec3-b5d5-2e981abe3ffe",
        "cursor": {
          "ref": "13e5d6ca-0d4a-49fa-be6e-f48b072f3a24",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "609c2ab0-33c1-4d41-b0d8-b3273e669ce6"
        },
        "item": {
          "id": "3a12dd68-8f04-4ec3-b5d5-2e981abe3ffe",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8256e2e9-d893-416d-93a6-3925d6c0eb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440422d1-39ed-43d7-81d7-2089e601feba",
        "cursor": {
          "ref": "3fa681eb-679c-4dd0-8385-5441580a9ce2",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0e9022bd-5875-4ed1-bd0a-3a20b2152d13"
        },
        "item": {
          "id": "440422d1-39ed-43d7-81d7-2089e601feba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a1062b69-914b-4c53-8dc5-24d8356feac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0367684-f404-4824-9dce-41027bace923",
        "cursor": {
          "ref": "96fb2ef8-482a-43da-a768-a52ce83284dd",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "030e35ee-1e71-4c5a-b624-fe4080e107cd"
        },
        "item": {
          "id": "b0367684-f404-4824-9dce-41027bace923",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fbdcda92-e286-41ea-98c7-c0faf591cb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3719bac9-254d-4722-a8cc-0fa4522e2ae7",
        "cursor": {
          "ref": "19315216-dfdb-49e1-a8d5-097c8ce94ae4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fa226104-7fd6-46da-9333-a33184c99a90"
        },
        "item": {
          "id": "3719bac9-254d-4722-a8cc-0fa4522e2ae7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c23e8c92-99ec-4207-adc7-0af17d227b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9512098-6115-47c6-90ac-eb86ab84189c",
        "cursor": {
          "ref": "b884fb9d-df83-4991-b0be-88ed484823df",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0a22653c-545d-4746-8c2b-86ec49412256"
        },
        "item": {
          "id": "f9512098-6115-47c6-90ac-eb86ab84189c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5fcd15da-9d0e-4ca0-8f99-d3ac74f919bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c968bc76-55d4-4f5c-bd7e-5b33119a1ddd",
        "cursor": {
          "ref": "3b2f6a5a-274d-4404-b7b6-7f1a12c64a98",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5de2fdb6-c96c-415c-b3fc-09a5554f6849"
        },
        "item": {
          "id": "c968bc76-55d4-4f5c-bd7e-5b33119a1ddd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc8d460d-7913-4d04-95e9-fe6d99c19335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec04289-5471-4cc0-abee-f334bd9c8cf2",
        "cursor": {
          "ref": "4cf4e59a-2f5b-479c-8260-7c13e62df181",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "48030e95-537c-435f-a28e-568cadc64ae2"
        },
        "item": {
          "id": "fec04289-5471-4cc0-abee-f334bd9c8cf2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f17cbbbc-30a1-4623-bb4c-f0af3aafd63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe04259-53a5-40d6-9cd4-9d1c2be73382",
        "cursor": {
          "ref": "2ca911ca-56a3-4ddd-b971-88711e48eff4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "61e67c5e-cd3c-4dab-a7e1-9bbf4b27a53e"
        },
        "item": {
          "id": "8fe04259-53a5-40d6-9cd4-9d1c2be73382",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "90e494e2-d685-481c-9a9e-1b7d81753e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8639b769-9c33-4e2b-bac9-ebaee0b4af39",
        "cursor": {
          "ref": "d8117f1d-0d70-46c9-96be-be359f495e54",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8f5e001d-0196-47af-889e-7bdf65d03b3f"
        },
        "item": {
          "id": "8639b769-9c33-4e2b-bac9-ebaee0b4af39",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7997034d-f6a2-47a2-ab1a-6574ca649c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ae0192-887a-4adf-80b9-2656e53e884c",
        "cursor": {
          "ref": "9f056284-f5ff-4110-8e45-96d6bd749ff4",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "35ea3654-0e19-4025-9627-749e156d6751"
        },
        "item": {
          "id": "59ae0192-887a-4adf-80b9-2656e53e884c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "22635aac-8bfd-4d9e-8711-f35a313d9333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f320174-a7f6-4248-9f2a-4e8f0e901e68",
        "cursor": {
          "ref": "06d9202f-6fe5-4e41-864e-decc389a290b",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "85c66ece-7580-474c-83ba-a24e58fc6901"
        },
        "item": {
          "id": "9f320174-a7f6-4248-9f2a-4e8f0e901e68",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1aa91294-ef41-4b04-97b4-7ab4941d5147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed18799-61f4-4344-aa5b-ac95f57941cb",
        "cursor": {
          "ref": "1bd55f26-3096-47f6-8670-4bdae08d0a77",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ea09a293-17c4-4b75-ab82-f6e95fd24ac6"
        },
        "item": {
          "id": "7ed18799-61f4-4344-aa5b-ac95f57941cb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9873f7a3-649c-484f-a3c7-347266efd2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f14150-cbd5-4d1e-9c84-0e67b39f89a6",
        "cursor": {
          "ref": "faa15c93-225d-404a-ad5b-f8d08e0207f3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0dffe897-b7b9-468b-babe-f87cfc37c709"
        },
        "item": {
          "id": "b8f14150-cbd5-4d1e-9c84-0e67b39f89a6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "74ff776f-809a-4f34-b3d4-65e692575ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097d8e57-ace1-47f7-b4d3-fdfe0f77c643",
        "cursor": {
          "ref": "6ba82901-8c89-423d-b5b2-1f6a9ada9c57",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "07b9cc0c-37bd-462b-8237-c0527981eee8"
        },
        "item": {
          "id": "097d8e57-ace1-47f7-b4d3-fdfe0f77c643",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7884afa8-421c-4b13-a80a-4db3e904d5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fd17c3-cdd8-47f5-8e49-5a8c9dac216f",
        "cursor": {
          "ref": "7abe1c24-1ade-499e-ba75-bf515860c0e8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3ec69002-5d03-4733-996b-41034477eec5"
        },
        "item": {
          "id": "54fd17c3-cdd8-47f5-8e49-5a8c9dac216f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3431b12e-b93c-44cb-819e-41e1e56b6773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28836168-0e6a-4447-bcc4-02756ffd782f",
        "cursor": {
          "ref": "9b635b63-5925-457e-91bd-7174a0d60247",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b21e65ed-fe47-4bb1-92c8-18db4d8d18d5"
        },
        "item": {
          "id": "28836168-0e6a-4447-bcc4-02756ffd782f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cc2fd5f4-22e3-44d5-aaeb-9c4184cad13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16253a77-3864-47b0-9874-084dfe51c6e2",
        "cursor": {
          "ref": "a04f4e38-cd7d-408f-901b-ccbe38f61e57",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ed5477ba-79eb-4651-85b2-5be88cbdf683"
        },
        "item": {
          "id": "16253a77-3864-47b0-9874-084dfe51c6e2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "669c699b-a621-463a-b4af-7116895d5145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf7ac37-349b-47f8-b650-94c76da8c894",
        "cursor": {
          "ref": "bff9bcd5-c7d7-4e24-b568-5fdcf81665f9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "db3f251b-b1d9-473f-aa79-d98ccead9235"
        },
        "item": {
          "id": "3cf7ac37-349b-47f8-b650-94c76da8c894",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d3b4b1db-762e-4172-9421-e775f5341f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b0c225-ab72-4d52-8f7c-9c4827dc395e",
        "cursor": {
          "ref": "9ed7a331-bd05-4eb4-b507-0a0284fac7ee",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "58112580-343a-42f3-9815-e48dfc512867"
        },
        "item": {
          "id": "f0b0c225-ab72-4d52-8f7c-9c4827dc395e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "13ff8cf4-ca06-454a-88ca-d3b182674ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98b725f-1cb7-4d9d-a4aa-01dd694ce84a",
        "cursor": {
          "ref": "2ad86add-f5c3-43c5-8b7e-d88ded074c1e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "db61679a-4286-4d71-99d6-5883e8ca4cd7"
        },
        "item": {
          "id": "f98b725f-1cb7-4d9d-a4aa-01dd694ce84a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cb5131c1-b2ec-4763-9d2c-682ea69dd57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfcafa45-afdd-414c-b015-226ece29460b",
        "cursor": {
          "ref": "9fe823b4-047a-4ded-a946-cf14d20359ea",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "018ae519-c2e7-42d4-aedf-caf9f57d4b4b"
        },
        "item": {
          "id": "bfcafa45-afdd-414c-b015-226ece29460b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "39ca1587-09ec-48b4-b302-7ef67104b867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e9c5c7-24a9-4706-80c9-6aba87152779",
        "cursor": {
          "ref": "0aafa01e-2d61-4d06-addc-81ebf3b86035",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f26a6cc0-50d7-435b-9997-1be260592e47"
        },
        "item": {
          "id": "47e9c5c7-24a9-4706-80c9-6aba87152779",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e89556b3-f6f2-43d5-9d83-c3617a67ca33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47f83d6-6b6c-4c4d-bebf-d5e6beb12302",
        "cursor": {
          "ref": "4449f893-24cf-4971-9d81-64493d8d108d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "815024ae-d55e-44ec-942b-3a1ab4ff0176"
        },
        "item": {
          "id": "b47f83d6-6b6c-4c4d-bebf-d5e6beb12302",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1844d2b2-2c2f-4073-a9f4-b0af036a6a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ed0839-50df-4bf0-9088-618c63837ad1",
        "cursor": {
          "ref": "21e8e4b5-1ab4-4100-bae9-ab4b7b41a3b7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dcd55822-8e6c-4931-befb-4b69ef5b768d"
        },
        "item": {
          "id": "42ed0839-50df-4bf0-9088-618c63837ad1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2358b120-bc1a-4429-b1d7-358995a7c741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989d3c7d-5537-441a-9116-971bbd59cc4a",
        "cursor": {
          "ref": "e544b06d-a446-42e9-b47b-32db6efc2e33",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e68f8273-35a4-4722-84f3-67ffb121eb3c"
        },
        "item": {
          "id": "989d3c7d-5537-441a-9116-971bbd59cc4a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a1841fd1-ae74-4804-b672-026e0f2ab52b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a958ec0-08d4-447d-bc45-ed8ff325d528",
        "cursor": {
          "ref": "a41fb2d7-4a99-49e0-96b8-9d3bb285133b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "47dfcaa1-9127-4562-a4d8-a2e40c642ad4"
        },
        "item": {
          "id": "7a958ec0-08d4-447d-bc45-ed8ff325d528",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "90b3a941-5d42-4c80-8dbe-96d98cb8ec54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13787ff-9606-47c0-b2f6-8b252cd8bb60",
        "cursor": {
          "ref": "00cd1710-2635-4a25-9838-466439d01f6d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "30eea0a6-2a04-4f17-a560-fc5a329a19de"
        },
        "item": {
          "id": "e13787ff-9606-47c0-b2f6-8b252cd8bb60",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1ec629c1-4518-4b68-9c64-2043330e2d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423d3263-39b1-4f0a-b861-dcf5652d030b",
        "cursor": {
          "ref": "dd650d09-f066-471c-a093-4e35d351c3bb",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c5715ca7-c6c5-425d-99c5-b1344e07e9cc"
        },
        "item": {
          "id": "423d3263-39b1-4f0a-b861-dcf5652d030b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8f21fc53-bafc-4a7d-be38-8a45327bd8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc0dbec-875d-4fc1-8193-16fc838ee827",
        "cursor": {
          "ref": "7f76a4f5-d0a9-48af-b7f5-1bf9fc06c3cb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "90b73cca-3a49-48d2-97ea-d33cd2051950"
        },
        "item": {
          "id": "8cc0dbec-875d-4fc1-8193-16fc838ee827",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0f3b194e-75a6-4052-95b8-cecb53227a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2baf6ec-e378-4564-b8e2-9a46360e6666",
        "cursor": {
          "ref": "4cf032e9-b654-4203-8e3e-963a2242c7fe",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9233fbbd-b119-4718-a063-d6fc4e99d2ad"
        },
        "item": {
          "id": "a2baf6ec-e378-4564-b8e2-9a46360e6666",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c4c26d67-ce42-4f9a-82a4-f8e5abdc620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c83864f-6729-4680-b598-bc51cc38a131",
        "cursor": {
          "ref": "e559829a-5eee-452c-9cca-4919f946f1c4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c9bec499-67b6-4010-b907-62d8d6d90242"
        },
        "item": {
          "id": "0c83864f-6729-4680-b598-bc51cc38a131",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aedbba50-d142-4a6d-967b-a606aae7041a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e650b3ba-2861-4c6d-826c-c3bc5da64811",
        "cursor": {
          "ref": "f51f4495-baa0-40ed-9927-460377fa1b24",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4e78a785-d7b6-4465-8da1-80d616967ae7"
        },
        "item": {
          "id": "e650b3ba-2861-4c6d-826c-c3bc5da64811",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "81346573-a2ef-48bc-806c-7b863cd92d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7aa2736-f12f-4305-9cde-55e857d696b2",
        "cursor": {
          "ref": "04339b34-3afc-4e09-8718-56b3966073b6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8efe7a9f-d17a-4970-8cf4-97614cf9885a"
        },
        "item": {
          "id": "f7aa2736-f12f-4305-9cde-55e857d696b2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5e553c0f-d301-40c2-a610-d5642dc28cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021911b4-8c21-4501-8756-eea52054d556",
        "cursor": {
          "ref": "a4035fce-ecc4-4dbb-9825-d4f06a0fbb55",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a99ce9ff-f056-4c97-aa43-c2bf4d3c5709"
        },
        "item": {
          "id": "021911b4-8c21-4501-8756-eea52054d556",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eae17e6f-bcac-479c-b548-a82f78347bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0aea8a-ff3b-46bc-9f55-28edd8617b62",
        "cursor": {
          "ref": "7507011d-96ba-4d29-8d92-d7aef82f3a64",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d9b032ef-92f4-4712-86aa-c22a3cea3100"
        },
        "item": {
          "id": "6f0aea8a-ff3b-46bc-9f55-28edd8617b62",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "126fec98-789b-4b6f-8ba6-d463bc8118e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d5a8b4-e234-47e6-b282-a2857e4042e0",
        "cursor": {
          "ref": "6f224c20-08f2-4492-ada6-0471fe45ef36",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f846b62c-4693-49cc-a9ae-7a7fb8917879"
        },
        "item": {
          "id": "c6d5a8b4-e234-47e6-b282-a2857e4042e0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7b1cb5db-a3f5-45bb-9145-1034f0ab2598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ab299d-c2b8-4731-bc8e-f5058e323007",
        "cursor": {
          "ref": "64308207-99a5-42e3-82be-16d13e3d6393",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "84adfff2-2f67-4fa1-acc8-f3e4bf695249"
        },
        "item": {
          "id": "71ab299d-c2b8-4731-bc8e-f5058e323007",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cb3a4adb-99f2-41b4-a520-ac65e698667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81790af-46cb-46e7-98f8-fd811e77c7a4",
        "cursor": {
          "ref": "d279639d-bd71-4238-b2c7-7f9246ffa9a4",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fc58e86a-4d4d-44c4-9714-eac3242abaa4"
        },
        "item": {
          "id": "f81790af-46cb-46e7-98f8-fd811e77c7a4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dfce045c-b5cf-42fc-bb11-0f87df6e2bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad3cc99-b649-4e54-8d2b-b7c73fe2b069",
        "cursor": {
          "ref": "25f90a00-6832-457d-a864-677a0ad16b53",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "16ec07ae-0bf5-4901-9d96-7bdad480cb1d"
        },
        "item": {
          "id": "bad3cc99-b649-4e54-8d2b-b7c73fe2b069",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ed9e4eba-e349-4cfb-a12f-1e1c9f36816e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5793b5-3c06-4eb3-aee1-519acaeceafd",
        "cursor": {
          "ref": "533e2319-4301-4ba2-83b8-7981ddccfe25",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "29cd557c-9b55-435c-b956-6a58691d2912"
        },
        "item": {
          "id": "6c5793b5-3c06-4eb3-aee1-519acaeceafd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "490196bc-d41d-4365-a2d1-ce73dcdbc89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be89f5d-5c91-4205-9e5e-6ac5f8c3cff5",
        "cursor": {
          "ref": "9842c3ad-d78d-40a3-93b4-8a7602d1ecdb",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c6ea0ad9-a8fe-4426-a892-49e25e87f75e"
        },
        "item": {
          "id": "5be89f5d-5c91-4205-9e5e-6ac5f8c3cff5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0dad7956-37bf-4e02-8867-4dd59d63a62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab765ea-829d-4246-b61b-4f8ba759209b",
        "cursor": {
          "ref": "06cee230-e7fb-4dee-a56d-394eb66d1306",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d1c5c26-7841-4a82-8d29-a3a7702fff2a"
        },
        "item": {
          "id": "6ab765ea-829d-4246-b61b-4f8ba759209b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "538e4f1f-ef50-4346-a21d-2378c568f1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437f975a-4ba4-43ff-abe6-86d29a3c8ad8",
        "cursor": {
          "ref": "8c569da2-c2c4-4275-9d85-92c9b5af11ea",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cddbc634-d550-4317-b101-da6585e344db"
        },
        "item": {
          "id": "437f975a-4ba4-43ff-abe6-86d29a3c8ad8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "36095641-6c66-429b-b7b3-8f19a4e69153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9aa67e-c1e2-49bf-8b4b-c59427cb7d6c",
        "cursor": {
          "ref": "5bbebf37-6ced-4c74-8dfb-6599fd79d381",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fdbbaff1-f501-437c-89ca-2e43cc97c751"
        },
        "item": {
          "id": "7f9aa67e-c1e2-49bf-8b4b-c59427cb7d6c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c36929cc-c44d-42e6-a5d0-eb4329b28ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b972744-e0f1-4dcb-94df-1474b4968b64",
        "cursor": {
          "ref": "9bd11db9-1207-4810-9322-83b264bfbaf0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2854f55c-702d-422b-87fe-7662298bd17a"
        },
        "item": {
          "id": "0b972744-e0f1-4dcb-94df-1474b4968b64",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ba5d7f27-33d4-47cb-86cd-4d3fb9a91d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b24635-9dc8-42cb-b185-fea2b82d279f",
        "cursor": {
          "ref": "876e7857-17d0-4d22-9ed4-906b98546899",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3f728e46-34a8-4af7-a6f1-b40e26b4aaff"
        },
        "item": {
          "id": "36b24635-9dc8-42cb-b185-fea2b82d279f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "22b2a305-a4e6-4906-a068-c825fec97593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a2f1de-0ceb-4376-8618-749dace05403",
        "cursor": {
          "ref": "1792baeb-3cc9-4c3c-9f66-d9344774161b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b174cf53-0149-4244-90ac-7a374dd4e670"
        },
        "item": {
          "id": "46a2f1de-0ceb-4376-8618-749dace05403",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9779c8e9-f3be-4b92-a194-904af64f9b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58cd69f-18bf-4e83-b589-e6642f210a0e",
        "cursor": {
          "ref": "180579b7-3018-4077-aeec-52e287d96c80",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d495c57a-d64c-4c78-982a-1ebb3380065c"
        },
        "item": {
          "id": "a58cd69f-18bf-4e83-b589-e6642f210a0e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1d372f3a-b73b-4b17-967d-7a6ec259f36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6d73bf-c9f0-494e-a154-4a1513b9dd1e",
        "cursor": {
          "ref": "85330a80-271d-469c-b484-723db922ff3f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ce2b0f0e-1a37-4883-bae0-598ae274c866"
        },
        "item": {
          "id": "2a6d73bf-c9f0-494e-a154-4a1513b9dd1e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "37a80155-9ffd-4531-8473-3e12f8dfd279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d7e04c-9ab8-4d55-9687-ed7252a4ba33",
        "cursor": {
          "ref": "0cfaa193-056d-4b41-a21c-e3c40bd4609e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "924e0e07-6258-4a3c-b454-5fecdb01a51d"
        },
        "item": {
          "id": "c5d7e04c-9ab8-4d55-9687-ed7252a4ba33",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d00f9e7e-6ddb-4cf8-8cab-9fb0a3955917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d27194-2d80-4842-9c71-791f47e3eeee",
        "cursor": {
          "ref": "1fd82b75-1a64-4623-a4e8-da61553b3916",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2fb83e7e-2a76-472f-8df2-68c2744f774c"
        },
        "item": {
          "id": "e0d27194-2d80-4842-9c71-791f47e3eeee",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2489ca97-06d8-45bc-abcb-8c9e8ecf41d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62404e69-0ac8-437e-8f53-8f8274db55eb",
        "cursor": {
          "ref": "9da9f1a1-e3ee-4f2a-a19a-60e1d1655ddf",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b80b9bf2-1125-4c1d-8d8f-aa9e651ed60a"
        },
        "item": {
          "id": "62404e69-0ac8-437e-8f53-8f8274db55eb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3f435724-2f14-419d-a0b6-5d37489225fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1484e9a7-f171-494d-9d4d-e684d54494e7",
        "cursor": {
          "ref": "9288fe1e-1033-45c8-b260-92fdf3b9176a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "69666357-c756-4228-859a-13e4f0f3f22c"
        },
        "item": {
          "id": "1484e9a7-f171-494d-9d4d-e684d54494e7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c8043e7c-3512-496b-b6fe-796731660a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233d11c6-9cec-4a03-919c-d84832be3a44",
        "cursor": {
          "ref": "26d4ef35-7837-4b62-b7e4-01b2ec134da8",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d5a781d7-c66e-4b06-8383-86ff717899ea"
        },
        "item": {
          "id": "233d11c6-9cec-4a03-919c-d84832be3a44",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6d51440c-c52c-4b1b-bc9e-01f99243ef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebc9aaf-65e6-4375-82d8-9dcc7648f0b5",
        "cursor": {
          "ref": "907a30ff-b8a5-4cca-89f8-d6541e2a9cde",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6aeed1a3-e60d-4524-947f-778d39e3c9e7"
        },
        "item": {
          "id": "1ebc9aaf-65e6-4375-82d8-9dcc7648f0b5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e4167f67-9d5e-46c8-a9e3-17a3fb1c6447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee96a4d-111b-42c6-9ab2-2f89460b1917",
        "cursor": {
          "ref": "fbf75638-8592-4938-9fe9-d35840515af0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f16f6cc6-45ec-4987-a456-090964edb94e"
        },
        "item": {
          "id": "1ee96a4d-111b-42c6-9ab2-2f89460b1917",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f2adf987-436f-4faf-882c-fb92f3851d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632c6ecd-7d38-4610-bba6-8e2399d939f8",
        "cursor": {
          "ref": "1f16a0fe-9216-4ecf-bd3f-1413269792f3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b5d69bcb-05d2-40c6-81c6-a737dfadc410"
        },
        "item": {
          "id": "632c6ecd-7d38-4610-bba6-8e2399d939f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dcf4d702-1f9d-4552-9f0f-cc36aa7aa13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a41895a-7080-4d80-8218-a3a56e03231e",
        "cursor": {
          "ref": "548f48ca-e799-4fcd-9d9b-4a29b89979fc",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81d1169e-36d2-4ed9-891a-509a8b138af1"
        },
        "item": {
          "id": "5a41895a-7080-4d80-8218-a3a56e03231e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "64a78a0d-e230-4649-9829-5761f812fdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db18892-0515-41fb-91c0-3706003c4a43",
        "cursor": {
          "ref": "6a91d59e-83f7-448a-8ffd-131041a62afb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e73bde9-81ab-43d3-b35d-4f5e7c165535"
        },
        "item": {
          "id": "7db18892-0515-41fb-91c0-3706003c4a43",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6af6bbb0-698f-4c96-a697-fe7a171dc518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e780480-4d33-4566-ad64-15bdde02c328",
        "cursor": {
          "ref": "dd063cdd-333c-4b39-8453-488fc14958db",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0156d2e8-a3b2-413c-8999-651db36aa08d"
        },
        "item": {
          "id": "4e780480-4d33-4566-ad64-15bdde02c328",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b10f27d2-19db-4cf1-b6b2-2bbea9cbefc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12536193-5183-4b7a-9848-6b31d41d5cbd",
        "cursor": {
          "ref": "73c7d94d-7f4c-43a0-99f9-209a2e001656",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b3243ffb-8c62-49e8-897b-be9cdf0e93f0"
        },
        "item": {
          "id": "12536193-5183-4b7a-9848-6b31d41d5cbd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "23aeab23-a9de-4351-9551-f2fe52a1ef76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0966e8b0-6f7d-4708-95c6-d552ab33ca67",
        "cursor": {
          "ref": "ff735ce1-182f-4d00-a713-2873ef3982eb",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0d87d8c8-2b32-4f2f-a1fb-c9196a3875b8"
        },
        "item": {
          "id": "0966e8b0-6f7d-4708-95c6-d552ab33ca67",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a5936123-a629-455a-b95b-ce4914f77bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0049ea72-0119-40ea-92c8-9a6bfd534385",
        "cursor": {
          "ref": "5b82bac8-0278-4561-9bda-4c8f86e3c8d3",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7d4a75b4-75b0-49d4-8abe-3f24044d261f"
        },
        "item": {
          "id": "0049ea72-0119-40ea-92c8-9a6bfd534385",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c7b4c28c-8065-49bc-8129-c623897f8daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb7992a-f187-4798-b2ce-994bde201376",
        "cursor": {
          "ref": "90ebd74a-0b46-42a2-bf83-b79b5bee8d98",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "86a259e5-491c-4e23-b3fc-e2b3c69e40b5"
        },
        "item": {
          "id": "3bb7992a-f187-4798-b2ce-994bde201376",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5dccbd62-7e82-4c1c-b6fc-e677ebc12e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68a847a-e01f-49d9-a996-ac4eb9ef5794",
        "cursor": {
          "ref": "ee1e9142-62a1-4e3a-a43e-85bf9123785b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a0eb79ea-7142-4195-bc95-98d5101b35fc"
        },
        "item": {
          "id": "e68a847a-e01f-49d9-a996-ac4eb9ef5794",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "53c5f5f9-b17f-4c37-b8fa-2c9f1993ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bec4966-d2ba-48d8-9b9b-1def584ff5f4",
        "cursor": {
          "ref": "6f032015-c2b2-41d8-a907-5130b2d0cd0f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0bdfe2b3-b23f-4ee5-aa8a-3c62b3e00350"
        },
        "item": {
          "id": "2bec4966-d2ba-48d8-9b9b-1def584ff5f4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "faf088ee-8468-45ce-a925-ceff179fb30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0908ab-b1ae-4ded-9790-db72868cb926",
        "cursor": {
          "ref": "4ed1295a-6629-48da-a8a1-605286c2d762",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "871cc2d1-e03f-44c1-835c-97228d795388"
        },
        "item": {
          "id": "7b0908ab-b1ae-4ded-9790-db72868cb926",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e9e61129-6994-4d5a-af24-4c6940cdb352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e0c8b3-7aac-49c0-a305-cde2e2a397ef",
        "cursor": {
          "ref": "fe7018dc-78ac-4364-a6b6-6d61f7dcadc1",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a37358c2-4186-43e0-80f4-74f1a1fccd0b"
        },
        "item": {
          "id": "d9e0c8b3-7aac-49c0-a305-cde2e2a397ef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "781f19c1-bc17-4ab0-90ed-a18a02c32432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3fe255-12fe-48ec-9835-5cfed1f619a6",
        "cursor": {
          "ref": "75437645-de06-413e-8027-484e97b8385d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0696dd9d-3a77-4b29-9d47-57fa0be7accd"
        },
        "item": {
          "id": "9e3fe255-12fe-48ec-9835-5cfed1f619a6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7a8e94ba-5595-4d7b-96f7-446579586bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898e3824-e6b2-42b9-8349-3d9ba9827ce2",
        "cursor": {
          "ref": "5e3a1440-ac7d-42bc-b437-235fa5df5310",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8cf58688-f1c7-4dba-a681-772b50f0a8d5"
        },
        "item": {
          "id": "898e3824-e6b2-42b9-8349-3d9ba9827ce2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9470aad7-df4b-4dc3-80a8-a4ec001e63c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a500839-9252-4eff-a1e2-55054800bc41",
        "cursor": {
          "ref": "b7d3bfd1-b4e8-49f9-b7bd-e1b31965848a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7816a2bc-d827-4aa9-b88d-772d7dc6c3c1"
        },
        "item": {
          "id": "3a500839-9252-4eff-a1e2-55054800bc41",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1f4cb366-a294-4777-abdc-4d30e649aa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f8d1f7-f45c-4969-8387-56986c82adbf",
        "cursor": {
          "ref": "668fb8de-a7d8-40b4-8399-81a89b2425b5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0d8b753d-6cbf-4db9-bcd6-dcab9f19bac8"
        },
        "item": {
          "id": "56f8d1f7-f45c-4969-8387-56986c82adbf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bd835d91-4ca1-4fe7-9a46-a77eca044d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a507da-0604-4215-8251-f6cf14a52d1d",
        "cursor": {
          "ref": "36b3b6c0-0746-49ac-ba9c-41afda1c028a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7ea21cc0-b32c-4d70-be77-f03306c817b5"
        },
        "item": {
          "id": "80a507da-0604-4215-8251-f6cf14a52d1d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "46c1e12c-d4ba-4d4d-8066-f9bc8fa2cec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4069b11-e4e5-4078-ae21-5353de59f94d",
        "cursor": {
          "ref": "89098d0a-a213-4b04-ac76-478e2702597a",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0a60e71d-d429-437d-a406-71f26720ec0e"
        },
        "item": {
          "id": "c4069b11-e4e5-4078-ae21-5353de59f94d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3079d532-545f-496f-b861-27af57a1feed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee454a4-70b2-4b9a-ab93-d8fd582363c4",
        "cursor": {
          "ref": "1503a191-25aa-4ad6-acc3-244d5cb6a6f7",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "914d1ee3-f9d8-4293-b16d-745d4ed45945"
        },
        "item": {
          "id": "eee454a4-70b2-4b9a-ab93-d8fd582363c4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8e5ae880-e5a9-4c4b-b723-36544b199b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9a42ed-aa4f-498c-83f6-59671b755726",
        "cursor": {
          "ref": "f29f3ea0-70bb-4f42-9327-4251e53b6f07",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "76cadd90-a1c6-4ae7-b73d-b4e783d39b23"
        },
        "item": {
          "id": "db9a42ed-aa4f-498c-83f6-59671b755726",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a5a0b431-3d9e-4955-927a-ae47361535e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cbacde-4340-484d-b9d7-4bcfb9a95e33",
        "cursor": {
          "ref": "b7ab9987-2bd9-4e3f-8548-f41b634c7537",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "be5dc9de-55a1-4375-b29d-5c0be71a2cbd"
        },
        "item": {
          "id": "b9cbacde-4340-484d-b9d7-4bcfb9a95e33",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "01024ca1-522e-48ee-a0ff-018d70206f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f196e4e-a1a7-4061-a5e8-096199d4e16d",
        "cursor": {
          "ref": "57f7db04-d634-4eee-ae43-2074a5ab0b08",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5e39a551-3be8-45a0-9f6f-b5cf73150713"
        },
        "item": {
          "id": "6f196e4e-a1a7-4061-a5e8-096199d4e16d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "18c1c5d2-da8f-46f6-9f77-9c281b082396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da1a836-d442-4bec-a5c0-57cff415ab69",
        "cursor": {
          "ref": "a3ee12c5-936c-40c0-acb0-0f6c0f61b335",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8f0d747e-b32c-4e8d-b7cb-8764d680ec54"
        },
        "item": {
          "id": "8da1a836-d442-4bec-a5c0-57cff415ab69",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9ed7a3da-b8ac-4a99-a888-1ec3db06378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3258bbf-a16e-4605-86a8-4b8fbebc8584",
        "cursor": {
          "ref": "4c75660e-3a13-4b48-972b-a0111252024c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "948c1838-3db4-423a-8a6c-c5609d68f9bf"
        },
        "item": {
          "id": "c3258bbf-a16e-4605-86a8-4b8fbebc8584",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0fde1f3f-4ee3-439a-ab76-6c5607c16b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5855346a-6916-4434-b75a-d2dfbafd1bfc",
        "cursor": {
          "ref": "215f6781-e423-4810-902b-a4a4407a7f4b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d8ab3c72-5d7f-43e7-8419-10b6b9918d82"
        },
        "item": {
          "id": "5855346a-6916-4434-b75a-d2dfbafd1bfc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "70ec3ad9-1b35-401f-8b96-4762fc1173b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04057883-3a58-4bd9-a962-20ab0aafaac6",
        "cursor": {
          "ref": "392a4508-8c46-4383-9828-ef9d9c8de0f7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e9b9e9a7-8723-4188-9360-909bc12c53f7"
        },
        "item": {
          "id": "04057883-3a58-4bd9-a962-20ab0aafaac6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d007baff-be41-4b82-83af-2c25dbe2ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e7d7d-e625-478e-a2a8-5c14fb25f66d",
        "cursor": {
          "ref": "518d17d2-08b5-4b66-89a3-fe62ae3881b0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "86e0ba8d-5596-4c2f-a435-56811af65996"
        },
        "item": {
          "id": "a97e7d7d-e625-478e-a2a8-5c14fb25f66d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bcac584e-0670-4b26-9ab6-7c88f930a2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0084fc-f069-457f-9042-2d0f1b9004a6",
        "cursor": {
          "ref": "56f822d8-4ed2-4963-8a7c-a9150a3586f6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "34b29b34-7520-4f5b-a699-5fcb6b2160ae"
        },
        "item": {
          "id": "9e0084fc-f069-457f-9042-2d0f1b9004a6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f68c533b-cd26-44ee-ab35-9a45834a3ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25353702-7c69-4988-a298-1e769b5791df",
        "cursor": {
          "ref": "e3783b51-5412-4569-870a-806b9b176a48",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5d11231f-ccfa-42d2-b3ce-0f238dab4eb2"
        },
        "item": {
          "id": "25353702-7c69-4988-a298-1e769b5791df",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bcf109cc-1664-4aa3-a1ef-fbae90ffe76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369d98dc-de34-40a1-8717-f7bb2688236b",
        "cursor": {
          "ref": "606f0a32-76ec-4919-9497-4372eecae48f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cdf07ea2-6b54-4242-9ca9-11279997f5d6"
        },
        "item": {
          "id": "369d98dc-de34-40a1-8717-f7bb2688236b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5b7cdd40-1cca-45d5-9fd4-5da238dcbd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923e6416-d072-4765-ab1b-7ab8c1e2fa11",
        "cursor": {
          "ref": "9f9842f9-3083-4f66-864a-a9505726e7ae",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8f41b6d3-d959-4b4a-a0b8-b90fd09afff2"
        },
        "item": {
          "id": "923e6416-d072-4765-ab1b-7ab8c1e2fa11",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "160500d0-0f1c-4924-924a-7368888f2864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a9e1c-6516-4146-af1a-4334083d969d",
        "cursor": {
          "ref": "3d7afbdd-e96c-4d30-9b7c-5f593e0e9765",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "67075fd6-5a7d-4573-977b-5364a35f5c09"
        },
        "item": {
          "id": "ec5a9e1c-6516-4146-af1a-4334083d969d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "49cbdb97-29fb-4e60-a8ec-4cbafd6cb329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce4bbee-f0fd-4509-b3f3-a9000c7ea838",
        "cursor": {
          "ref": "83412d87-cfe6-44df-9a98-e7ebcd5a440e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "eba05714-3185-43ba-ab06-a65623b1009b"
        },
        "item": {
          "id": "5ce4bbee-f0fd-4509-b3f3-a9000c7ea838",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "81287fbd-6445-46c9-a880-1e25597f9019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f9b25d-3b88-4e09-8ef3-241422516033",
        "cursor": {
          "ref": "6bc18388-9600-48b5-8e6d-3497cc393090",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fceddaf6-8390-4eab-a337-566f91f24123"
        },
        "item": {
          "id": "74f9b25d-3b88-4e09-8ef3-241422516033",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9b577188-ddc3-434c-8104-e62eabcd9a60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fb2504-ad7b-40a7-9c66-7ed0f46dc07f",
        "cursor": {
          "ref": "075b856d-ec55-483e-ac13-541119316f91",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fd29272e-634a-4430-87fe-fbe10f6d0e56"
        },
        "item": {
          "id": "89fb2504-ad7b-40a7-9c66-7ed0f46dc07f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c64835f5-2059-4d61-a1d7-16d2ca0096c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f0b0194c-ea88-4815-aaa3-e20997a8c209",
        "cursor": {
          "ref": "13da97bd-bf3f-4a01-9861-26a25688dba9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eb0dee97-c3bb-47eb-98fe-9d06b997bda5"
        },
        "item": {
          "id": "f0b0194c-ea88-4815-aaa3-e20997a8c209",
          "name": "credentials_issue"
        },
        "response": {
          "id": "be3941b8-b3f6-4abd-89d3-ab06119f751f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "705b794f-36b6-4992-a550-39f5850726bc",
        "cursor": {
          "ref": "8c0fb452-df62-4985-b611-588f752001de",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bc17058a-8c41-473a-bf1b-535ad98f3751"
        },
        "item": {
          "id": "705b794f-36b6-4992-a550-39f5850726bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "04af352f-5983-4659-9757-29fd9c43883c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "932df69d-6bf5-401a-8e19-799e1c1036a3",
        "cursor": {
          "ref": "5a3dee10-cbed-4bc2-997f-5b5cccebd17c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ffe6b0c9-7200-48f1-a30c-d5971ee760eb"
        },
        "item": {
          "id": "932df69d-6bf5-401a-8e19-799e1c1036a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "93fcfcc8-a998-435a-8bd0-bf1db4a5dc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "38549a18-c21d-4f68-ab80-9d2881aa5ec4",
        "cursor": {
          "ref": "a641b6eb-b5fc-4c2a-9900-b70eef70bff2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7297f67a-31d6-4bd9-a1eb-082af31d7779"
        },
        "item": {
          "id": "38549a18-c21d-4f68-ab80-9d2881aa5ec4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f390e5ee-611c-4949-ad36-b9e85b706218",
          "status": "Created",
          "code": 201,
          "responseTime": 7865,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "996b32a8-5df9-43ea-aaef-f5b918294c96",
        "cursor": {
          "ref": "22652bba-d61f-466c-b8da-e338fd42e848",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4b34b4a9-a102-4266-b3af-3f48138ab3ec"
        },
        "item": {
          "id": "996b32a8-5df9-43ea-aaef-f5b918294c96",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7a2f6234-3461-4d16-9f14-daea2cec46ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a027a4d7-18ef-4b31-af02-fbb83d29e6fb",
        "cursor": {
          "ref": "543b5c07-f3c8-464e-9e24-5a743b204997",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3bfc1b3d-9b27-4e8a-a7d3-c1c6cb23ae15"
        },
        "item": {
          "id": "a027a4d7-18ef-4b31-af02-fbb83d29e6fb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "2c88cbb3-fb3e-4ee6-ac07-6316b3b33e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "03ec7fd7-83f9-40de-9905-d76a3a63f1d2",
        "cursor": {
          "ref": "ec248865-165e-4e91-ad40-14a483774e81",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "46fbc49a-c84e-481f-928e-5568d5bc3943"
        },
        "item": {
          "id": "03ec7fd7-83f9-40de-9905-d76a3a63f1d2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "eb18957b-7822-4e65-9a55-41187da8521e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0233f36-1765-46f8-8516-4e609aec2744",
        "cursor": {
          "ref": "07ea8749-0808-4a33-9ecf-3d03f51b6239",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bafe01f5-e6ae-4e08-bd56-becbe9e1c556"
        },
        "item": {
          "id": "d0233f36-1765-46f8-8516-4e609aec2744",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9dfaefec-3fbe-4e5f-b89a-fa156d633fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b646595d-245a-4d5b-91fd-abe0596819a9",
        "cursor": {
          "ref": "a329e993-7a7c-478e-9e70-dc04fdcb9377",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6078231b-0189-49c0-8795-c4753be992f4"
        },
        "item": {
          "id": "b646595d-245a-4d5b-91fd-abe0596819a9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "99f947c9-dc9f-47e4-8027-d763e843e384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada6b9d-6828-4b3a-b9a8-6dfd6a309105",
        "cursor": {
          "ref": "5c95a50c-358c-4e8a-b1e3-8bed6624e33e",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1ee58c2c-c8bf-4b71-a648-594abeb88a7b"
        },
        "item": {
          "id": "1ada6b9d-6828-4b3a-b9a8-6dfd6a309105",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "db8d1a16-2081-42a9-995a-2e3402db2deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc4e45f-ba70-4cb0-b0c6-2a119543c9e3",
        "cursor": {
          "ref": "42053e8a-5285-4caf-ae63-bd067039a4e6",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4fb78ec4-2bbc-4e88-8f84-2d54a31bf3a2"
        },
        "item": {
          "id": "adc4e45f-ba70-4cb0-b0c6-2a119543c9e3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dcaaf1e0-7239-4b41-8856-6db228b90448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521b886a-b244-441a-9750-5a6f5c8c5237",
        "cursor": {
          "ref": "ddecddc2-707e-425f-a98f-a8d06384e6b4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2a51d928-d086-45e7-b7cd-3c8fc319597a"
        },
        "item": {
          "id": "521b886a-b244-441a-9750-5a6f5c8c5237",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "84f0ac26-4673-45bd-b862-5fb93419db81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e8fafc-52ae-4cce-b276-2bee7da6a889",
        "cursor": {
          "ref": "8f179772-c2eb-4c38-8fb9-3e0a1e61f26b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2b47d9ef-c237-47d2-b1f8-024d390424c7"
        },
        "item": {
          "id": "86e8fafc-52ae-4cce-b276-2bee7da6a889",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eac53936-2ed3-432f-9739-7824f2c94e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d02871-e162-4263-ab87-a6c02ca979a3",
        "cursor": {
          "ref": "d18a580e-a864-44d5-9825-45a56603665b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a6f2bd9-4669-47f3-bbe6-cda751a9ec27"
        },
        "item": {
          "id": "62d02871-e162-4263-ab87-a6c02ca979a3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "74edc337-b791-4238-a356-aac545e5d133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d729683-3ecc-4186-845f-03b9d162c689",
        "cursor": {
          "ref": "81a5e49f-002c-4538-a0a2-37e49b6e6123",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fb5b8d4e-da7b-4973-8811-e4ddd780e081"
        },
        "item": {
          "id": "4d729683-3ecc-4186-845f-03b9d162c689",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "80efb99b-8b14-41b1-a67b-6a63dd7e57b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47751d8-0441-4cbd-a834-d7413f1aa3b0",
        "cursor": {
          "ref": "84956f16-9f2c-40ef-8f4f-14cf32f939c9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1540a2c0-22ea-4b95-bdc3-bdff490d07a1"
        },
        "item": {
          "id": "b47751d8-0441-4cbd-a834-d7413f1aa3b0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c60b1b17-eb9e-4390-b83f-0ac903b88860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c42b5f-5578-4490-81e0-10710e8cdf04",
        "cursor": {
          "ref": "69696725-ded8-4fc7-8992-de0ba254551a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "327246c0-82b0-42fd-a49e-d943f7d362d6"
        },
        "item": {
          "id": "76c42b5f-5578-4490-81e0-10710e8cdf04",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "87ba0db0-a4e0-406f-9533-1bbc7035c72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cedf885-bf95-4c0c-9ace-89535a5b5dab",
        "cursor": {
          "ref": "06dbb9c2-019f-46da-be9c-a7659b2cb515",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2faa89fe-6332-4cc1-abce-49dee3075348"
        },
        "item": {
          "id": "3cedf885-bf95-4c0c-9ace-89535a5b5dab",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "38c39f6a-0ecf-406e-a85a-86648fdaf3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ff07de-a656-4745-a82b-c54451d20a8d",
        "cursor": {
          "ref": "8edd90b9-1537-43be-ae0d-27f12d8124f4",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2290faf5-3213-477d-9676-cb90559985db"
        },
        "item": {
          "id": "69ff07de-a656-4745-a82b-c54451d20a8d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "01dacc44-3bba-42df-9400-dc548469a5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2fe075-0ad9-4a82-a2fc-be7f475706ce",
        "cursor": {
          "ref": "d6c24dfa-c6fe-4c59-aa2c-66d2fd028d71",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "df60138f-3627-41ae-b476-0f932c52a9e6"
        },
        "item": {
          "id": "cf2fe075-0ad9-4a82-a2fc-be7f475706ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2408b527-ec04-4c79-a099-7bebfb4ec36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26294a9-4c1d-44f2-9f40-5562855d8ccc",
        "cursor": {
          "ref": "61a6bcea-35d7-4993-b309-41c156b783e9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1f1ca0cf-dc70-4487-bdc2-be8f673102ca"
        },
        "item": {
          "id": "c26294a9-4c1d-44f2-9f40-5562855d8ccc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "14aa3552-a577-4305-a94d-a6aad6640d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd28e30-96b5-4065-94a7-027e84987712",
        "cursor": {
          "ref": "7d24eac1-9be8-4d94-81b0-76789432e844",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4284a49f-a0c5-4097-a035-75536627b48f"
        },
        "item": {
          "id": "fcd28e30-96b5-4065-94a7-027e84987712",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "90ea0c3b-88e4-46c9-ba79-3202161a2522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cca973-41a5-4062-a8d3-401802f66a9a",
        "cursor": {
          "ref": "c8c3a9e8-2076-4427-ac0a-0f8db96d3705",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b21ab0fd-3659-42d0-9f1f-2a219531da07"
        },
        "item": {
          "id": "02cca973-41a5-4062-a8d3-401802f66a9a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "727b6fe3-046f-4c22-a9e2-e76d51f73d89",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "2ac93eb5-6001-4f10-8bf8-ff784f1ef1ae",
        "cursor": {
          "ref": "2b6d3c4e-d64c-44f5-be9b-6835df6b4fce",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d6f86072-f92e-451d-8612-530fccd55bee"
        },
        "item": {
          "id": "2ac93eb5-6001-4f10-8bf8-ff784f1ef1ae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "57f2c9d1-c731-45b3-b867-68e7b3bc32e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf91d92-e1f7-4983-ae45-4df7e24fec21",
        "cursor": {
          "ref": "1fc096ee-a2bb-4dd8-acb3-5dd243f59ab4",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e9826b54-dd0d-46c4-8459-91477e8d1b8f"
        },
        "item": {
          "id": "1bf91d92-e1f7-4983-ae45-4df7e24fec21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d69bb4da-9957-405e-9bb2-26ae4e57f7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72c68a0-74a7-4c01-bb99-a5f8e2ad2e5d",
        "cursor": {
          "ref": "8b8847b2-4db6-4275-856f-300e8cf6a08a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a2cf6144-a1a1-4818-bd1b-ae10b4772459"
        },
        "item": {
          "id": "c72c68a0-74a7-4c01-bb99-a5f8e2ad2e5d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0a0b2ca3-d102-4791-bebf-fc3d5f2f24b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473dcc5f-c264-42c7-8dcd-8fc3051a95de",
        "cursor": {
          "ref": "b1a88ba5-8f2e-4c30-a155-da564b235b10",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cb497055-e202-4f67-9e69-8f8776b8120f"
        },
        "item": {
          "id": "473dcc5f-c264-42c7-8dcd-8fc3051a95de",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7d0265cf-dad2-4929-9974-c4d11088bb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daaf5ca-7e28-404e-b15d-ef5a1ccddce9",
        "cursor": {
          "ref": "22bec465-fcc5-4003-9b88-b12b23f4535b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2c9f8157-486d-4dc7-b717-20bdae32b0c1"
        },
        "item": {
          "id": "6daaf5ca-7e28-404e-b15d-ef5a1ccddce9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7d18f8ec-3e34-47af-ad07-3c48b24802b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96db8c19-afcd-40bc-a962-59a716f70e04",
        "cursor": {
          "ref": "33b1bcc1-3f39-4305-872d-3d2b9f258738",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "70d6125f-39a6-4686-9f36-1e9551796ec1"
        },
        "item": {
          "id": "96db8c19-afcd-40bc-a962-59a716f70e04",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0afcfb73-8a0f-4e71-8c98-cec74d7d791f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8020fb-8f49-4d50-ba18-0b8c06fdf674",
        "cursor": {
          "ref": "9946ba83-867a-4a10-9e7a-c99dc1e60e3a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "caf44a9e-0261-45dd-aef1-c8bdeda23cfc"
        },
        "item": {
          "id": "9d8020fb-8f49-4d50-ba18-0b8c06fdf674",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "716de329-bc76-4780-a5dd-a33586eaac3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c41cbc-8665-471e-b1fc-adeeb728a118",
        "cursor": {
          "ref": "c9d17753-1319-445e-8f25-18f194fbea25",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3abca93d-9a33-4d87-b403-ccfef160316d"
        },
        "item": {
          "id": "60c41cbc-8665-471e-b1fc-adeeb728a118",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "334b58c2-055a-4a76-867a-359033af39d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "95b06e54-c709-4fa5-a82c-acd118ef0ec5",
        "cursor": {
          "ref": "0e2a9208-6d61-4db7-a307-3caadfec54ce",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7772e572-f9b3-43af-a766-3c79795c8073"
        },
        "item": {
          "id": "95b06e54-c709-4fa5-a82c-acd118ef0ec5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b7762723-d649-4f1c-9147-e28057dd1394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c884e2-5da2-44ab-b412-a6563b77cf77",
        "cursor": {
          "ref": "27aa43dc-6b97-498a-9bb6-f302b993c35e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb3ac923-de31-433e-904c-14f41643fd58"
        },
        "item": {
          "id": "48c884e2-5da2-44ab-b412-a6563b77cf77",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "32b1ee76-5bdb-454b-a0b5-4b5e18bb52f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3974ff62-41ca-4ebe-828d-6c565cd25476",
        "cursor": {
          "ref": "a96a0b81-a338-494c-80f5-c57961aab2e6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a0eb3d50-3b99-442f-ac0c-4de11c7ed162"
        },
        "item": {
          "id": "3974ff62-41ca-4ebe-828d-6c565cd25476",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a4be48b9-607b-4eb5-a437-2e7d619009c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3e3a37-2304-4a9f-bc2e-e60ce1f15d4b",
        "cursor": {
          "ref": "5b3fba9c-6fcd-42fa-8a88-d3079b57b4f0",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "511ec9c5-e8ea-4e14-a7b4-ba42892097b1"
        },
        "item": {
          "id": "8d3e3a37-2304-4a9f-bc2e-e60ce1f15d4b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5b4c1870-1902-44cd-be3a-590817febb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c798a91e-f335-4edd-964b-1ff5441896c8",
        "cursor": {
          "ref": "b1afb888-1d2d-4a87-870e-0a418724fe6e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6d3d02f3-fa89-4e05-838f-41f5d54afe20"
        },
        "item": {
          "id": "c798a91e-f335-4edd-964b-1ff5441896c8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "359e2861-001a-4b5e-9b44-96c1f5369363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84efaad3-1f03-4667-adf0-5cca18d0299c",
        "cursor": {
          "ref": "a3315ce8-7eea-4a46-8617-adedee4d70ca",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9aad7ecf-3f41-4793-bab0-0ce7cbbcefaf"
        },
        "item": {
          "id": "84efaad3-1f03-4667-adf0-5cca18d0299c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3837475f-8012-4871-b1b6-43cfda4c21d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de23f9e3-a621-4ae5-ac09-a01c97393cd9",
        "cursor": {
          "ref": "230e004b-b289-4f37-a29b-baf375988ce2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dcc848ad-e810-4b05-870a-6e666376e814"
        },
        "item": {
          "id": "de23f9e3-a621-4ae5-ac09-a01c97393cd9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e266b51b-c35f-4353-aa03-775d8ec2e716",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c8b8e3dd-72d5-498f-b924-49d62046e433",
        "cursor": {
          "ref": "5cf67f0f-6c0f-40ca-9da9-74956cf084c0",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e1421fa9-43a3-4608-a407-1b57fbaf9a6f"
        },
        "item": {
          "id": "c8b8e3dd-72d5-498f-b924-49d62046e433",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8252b31a-6318-4675-998c-d4f87257c52d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "a5bef37c-7ce3-4d1e-9013-c38845947079",
        "cursor": {
          "ref": "c42db503-8b6b-4c01-913d-605cd7da3cdb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5948d82f-d299-4e6f-85e9-852087ea63e7"
        },
        "item": {
          "id": "a5bef37c-7ce3-4d1e-9013-c38845947079",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7d59da62-8f8c-46db-b876-87d8bfcd265d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f0616332-8efc-4e74-9306-8a8445339937",
        "cursor": {
          "ref": "e077740b-e583-48e1-88d1-7451eb20d6f6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "427c066e-e623-4af9-bfb0-5e427ad4104c"
        },
        "item": {
          "id": "f0616332-8efc-4e74-9306-8a8445339937",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "76ea0ac5-1b6a-41ae-968b-330302ecf719",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "edd9aa9e-bcfe-4212-87c4-20d7b658503d",
        "cursor": {
          "ref": "103face7-8123-4cd3-9ce5-e6e13bce9427",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c82e9817-cecf-447c-b27e-bc01e108a43f"
        },
        "item": {
          "id": "edd9aa9e-bcfe-4212-87c4-20d7b658503d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4cea4064-e52c-4a21-805a-4a200177267e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1de7eb10-fd5e-4860-bce2-3f6da8a128be",
        "cursor": {
          "ref": "39e94bbf-69af-4f72-92d3-93742e19c1f9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1a3431e8-012c-42eb-ba5e-515ef2fee733"
        },
        "item": {
          "id": "1de7eb10-fd5e-4860-bce2-3f6da8a128be",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "833f4b67-36a8-4a37-9232-580d4098fc27",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "170e0f7e-f3ea-4532-b111-c6998a548a46",
        "cursor": {
          "ref": "d0f8b68e-045b-404a-9895-bdb159fd5982",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0370cffa-b5a3-4dc3-9528-53bbf8594030"
        },
        "item": {
          "id": "170e0f7e-f3ea-4532-b111-c6998a548a46",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "91615ad7-f88d-4a03-9313-9befa5a7a58b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aebd41-0e3c-4135-a5d5-27cddf106b04",
        "cursor": {
          "ref": "94b53e2b-82cb-4651-8668-96d403e0a22b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4f518a6b-f1a7-4e4e-b8ad-3428f76c9c78"
        },
        "item": {
          "id": "d6aebd41-0e3c-4135-a5d5-27cddf106b04",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bad1f5a4-2f30-42b6-8560-442816e37816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531b8fc6-0bfb-4933-b47b-da127e79793b",
        "cursor": {
          "ref": "9e499ce1-0537-481d-a8f3-a08ac656269b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "51df9eae-4a39-46fa-bcad-6c9e1bc125b0"
        },
        "item": {
          "id": "531b8fc6-0bfb-4933-b47b-da127e79793b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "21f0dcb0-8cc3-4bcf-a128-979a9b18098d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495bbef3-c817-4101-9fc3-a349c5d5b0dc",
        "cursor": {
          "ref": "093d926e-4dbe-4e31-9a70-abb8e9279fed",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6e858835-84e5-443f-a9cd-c99dba23daeb"
        },
        "item": {
          "id": "495bbef3-c817-4101-9fc3-a349c5d5b0dc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3659134f-5112-4000-8985-6743297b4f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfbb312-e588-4b68-b1e9-0846e062bed0",
        "cursor": {
          "ref": "eb7157f9-5a8e-4f4b-a168-e50db6869135",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f4cdc6f0-379e-4867-81d1-75a309370976"
        },
        "item": {
          "id": "2cfbb312-e588-4b68-b1e9-0846e062bed0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ceefab85-e253-4b7c-a934-b557a11ecdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8431c00-0a8c-4795-acc8-555038ec1d27",
        "cursor": {
          "ref": "0dcbfcc5-f63e-4447-9749-39fe7f702926",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5ab0d395-a3e8-4ed9-9491-d605b63b4f4f"
        },
        "item": {
          "id": "e8431c00-0a8c-4795-acc8-555038ec1d27",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f7b9437c-53f2-44ce-ab07-568f3375e3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851ffc56-7325-421f-bf88-ac27a8a2c927",
        "cursor": {
          "ref": "8b19f223-f154-4f02-9405-f283c42b2498",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "72333f24-d3be-4fc5-afa5-eb3d6888daf3"
        },
        "item": {
          "id": "851ffc56-7325-421f-bf88-ac27a8a2c927",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2079d2c7-2d9a-4440-abb5-c01cd743503b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9c2cdf-be5c-4d53-8348-6896d91e2b4d",
        "cursor": {
          "ref": "c423178b-0529-44fa-8cc6-00b7ba150eaf",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2d798586-83a0-425e-9e6c-e68c9f77be03"
        },
        "item": {
          "id": "0e9c2cdf-be5c-4d53-8348-6896d91e2b4d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "808f7537-fb7a-4ae6-9912-9b29902ed0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f996fd6-3465-4096-82b8-61e8f47d068a",
        "cursor": {
          "ref": "6de932fe-8e72-4a73-9a2b-86d4a63ad75e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "25413bb2-be08-4a7e-96cc-f1e7ec0cea9c"
        },
        "item": {
          "id": "6f996fd6-3465-4096-82b8-61e8f47d068a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3ebf2dae-6300-42cc-a08e-8f59ed6a7420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0d3d67-5155-4f62-90ee-bc55b6aefbf2",
        "cursor": {
          "ref": "48671750-340e-431d-8486-426fb9ecd446",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4edd1f7f-5b39-47c1-8626-d1ef77b95a61"
        },
        "item": {
          "id": "8f0d3d67-5155-4f62-90ee-bc55b6aefbf2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8dbcd490-3cee-4467-9888-3e8c8c2e9b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acfe8245-c6b3-43c4-ba5b-5889139367b8",
        "cursor": {
          "ref": "9d40ba37-265d-4e20-998b-352a4075427f",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f61e610e-177c-4153-8fd3-4d660f44f323"
        },
        "item": {
          "id": "acfe8245-c6b3-43c4-ba5b-5889139367b8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6e5e9f63-27ab-45b8-97fa-2306057d2922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef11c09-56c8-4b93-a275-9c8e8e334d78",
        "cursor": {
          "ref": "095e1642-5f55-461b-8ebb-aa09a1eeceb7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b0a24438-6c85-49d2-9039-85ea73960208"
        },
        "item": {
          "id": "0ef11c09-56c8-4b93-a275-9c8e8e334d78",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a06b4b94-16fe-4e04-b09f-b700789548e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ab44b9-866d-4333-9aae-07fa6e75b8a6",
        "cursor": {
          "ref": "a45bfed7-38f4-4a31-bbd2-f7e653097436",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d8f6b335-bed1-4763-a34d-ae1ba32523b5"
        },
        "item": {
          "id": "b4ab44b9-866d-4333-9aae-07fa6e75b8a6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7913f735-d67f-45bc-9a35-8b825a260658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793f8b29-5be3-4cf0-bc5f-fd94d086abc4",
        "cursor": {
          "ref": "1391c8d2-05d9-4515-98ba-69d00327beeb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2e4333ca-ab98-48f7-b260-8c2743617c75"
        },
        "item": {
          "id": "793f8b29-5be3-4cf0-bc5f-fd94d086abc4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2fdcc35a-20cb-43f2-9928-8f99b1d57b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64620db5-ee6f-4b9f-8cbc-667cdaa5d7a1",
        "cursor": {
          "ref": "e6d43d28-3629-46ef-a8ed-233c0667b6ed",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3abcd7d6-a593-49c3-b3d9-afa4f69def45"
        },
        "item": {
          "id": "64620db5-ee6f-4b9f-8cbc-667cdaa5d7a1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "17cf566b-d956-44c3-a138-b54a2319429c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e32903e-cec8-4f13-88ca-bfdb176221a4",
        "cursor": {
          "ref": "5759b5bc-2086-4f3e-9f44-4e0b1da94bd0",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e1fc50fb-7c6f-4548-b1a7-351ead6de642"
        },
        "item": {
          "id": "3e32903e-cec8-4f13-88ca-bfdb176221a4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "af200590-0310-4fb8-9a79-c8b0136b2d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc50058f-9c3c-448d-b37a-0a07d714fd9c",
        "cursor": {
          "ref": "e3581b26-5afa-40ad-86f6-e240e39fc1e8",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1ddd1132-ae46-48ee-af50-7f71a15c4ace"
        },
        "item": {
          "id": "cc50058f-9c3c-448d-b37a-0a07d714fd9c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b2becf6a-e064-461f-91f6-ddd79647bd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db28b058-29fa-455c-81f8-b64f0daa9e46",
        "cursor": {
          "ref": "644fd4ee-41e5-4830-8070-6f456deec390",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "20ed5f45-b6f2-4261-9604-fe34ff4930dc"
        },
        "item": {
          "id": "db28b058-29fa-455c-81f8-b64f0daa9e46",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1f25f069-d9d2-4c14-b415-86a4334018f5",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a7cca09c-6f7b-44aa-916b-12c1bc8e945d",
        "cursor": {
          "ref": "41a2ccca-ceda-473e-84e4-61ee099d5c5e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "283de800-52cb-4b18-9a21-86beec2b65f3"
        },
        "item": {
          "id": "a7cca09c-6f7b-44aa-916b-12c1bc8e945d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "592ff63e-27e4-44d2-88f0-1c5b60f48c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61ea63b-a8dd-4e48-9a2b-b9f5e15d02d6",
        "cursor": {
          "ref": "3de15eea-6884-476a-a3bc-623a75ba3044",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "83c00c00-7cec-4cec-9ce5-c1cd570ff4d7"
        },
        "item": {
          "id": "a61ea63b-a8dd-4e48-9a2b-b9f5e15d02d6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "68e05132-40c5-4e41-957b-907115d76da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b96db39-e0f7-4089-9fec-cb96a4d43b1f",
        "cursor": {
          "ref": "87c27e7e-158f-477e-b58e-4ee4e3c06d28",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "35b30aa2-c389-4912-ac74-51c90da74dee"
        },
        "item": {
          "id": "9b96db39-e0f7-4089-9fec-cb96a4d43b1f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "497079ef-7235-4cb8-9585-71c504691acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371c7630-3238-4e5a-a2ea-9a99afc250cc",
        "cursor": {
          "ref": "5b7ea8f8-7b5e-449e-8415-5c7e6734895f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "84daa541-fa84-41b0-8a6b-3eedfc9b83ee"
        },
        "item": {
          "id": "371c7630-3238-4e5a-a2ea-9a99afc250cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f849daeb-1391-4ec7-b298-153a8160c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c040f2a-2879-47f0-a19e-426f3908098d",
        "cursor": {
          "ref": "da11c489-5981-4792-b2f9-377187940d00",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ad82be72-a571-46b9-88f3-12604a9fb1cf"
        },
        "item": {
          "id": "1c040f2a-2879-47f0-a19e-426f3908098d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "de224aeb-7848-4402-b235-3215e2cd7c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6363e6ed-7e34-4f43-b3cc-b6ffc7762fb2",
        "cursor": {
          "ref": "1770acb9-bacf-4808-93cc-65cb1617b4c6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "71d18d73-e07b-48ad-a0f5-fb8ccd5d77a2"
        },
        "item": {
          "id": "6363e6ed-7e34-4f43-b3cc-b6ffc7762fb2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ce1018d0-dcc7-42e2-8363-70272158ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435583d7-d911-4a38-8762-e43f824abc87",
        "cursor": {
          "ref": "195dbfc3-2153-4994-af71-af9a09fc2369",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7ba3ab1c-b96e-4fe1-8d0d-7345d3ddaaea"
        },
        "item": {
          "id": "435583d7-d911-4a38-8762-e43f824abc87",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cc4156a6-e42b-40e6-8f55-2ef546e9b6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de8790b-7ee6-4dfc-9d36-c5ed8db217c5",
        "cursor": {
          "ref": "6b6607d9-9f1c-48e2-8ba9-61cf57362aa4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0166e806-78c0-4929-9e9b-b2c21d9b3947"
        },
        "item": {
          "id": "0de8790b-7ee6-4dfc-9d36-c5ed8db217c5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ad97eb64-dfc2-49c6-a11d-717a1841a74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fe1be9-e576-4424-83cb-88c4d9b7d574",
        "cursor": {
          "ref": "f42bcf51-e8ad-4102-8589-a17d56b99d2f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "369c0cce-5d3f-4ee0-8b61-e1dadb67b596"
        },
        "item": {
          "id": "79fe1be9-e576-4424-83cb-88c4d9b7d574",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f367466b-ccb4-47e4-9f26-300c35de201f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffb45ed-fd3f-42e8-9d9e-3b8358fa1235",
        "cursor": {
          "ref": "d4b5ae9a-43bc-43d7-a671-b6792aa0f518",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b5359cc9-9fc8-48aa-b490-50928b4e749a"
        },
        "item": {
          "id": "1ffb45ed-fd3f-42e8-9d9e-3b8358fa1235",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a88d2881-a186-4822-bbe5-cf652c7fa80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92915ba8-bad2-4505-bd29-cee36e73dd4f",
        "cursor": {
          "ref": "b00fce7b-068e-4e0b-9215-14625978a757",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1be2f0b1-5bf9-4240-982a-21334718f628"
        },
        "item": {
          "id": "92915ba8-bad2-4505-bd29-cee36e73dd4f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "235ac736-e992-4cff-87b5-cf3453277d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade94552-2456-4539-a93d-fba72951a78c",
        "cursor": {
          "ref": "c278301b-425d-4817-8da4-18e9cb33d5b6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9c345d8e-13f6-472e-8855-2cb68ab1eaaf"
        },
        "item": {
          "id": "ade94552-2456-4539-a93d-fba72951a78c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3c96caa9-7e9c-4260-9899-f85b9a04b2ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe1b4cf-c3db-40af-a05e-a4998296bf03",
        "cursor": {
          "ref": "50ae8e20-6b6a-48bf-8e07-bbe518de4116",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "694e02e6-c81c-4967-80cc-7da967655872"
        },
        "item": {
          "id": "6fe1b4cf-c3db-40af-a05e-a4998296bf03",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f2005c6-6098-443a-a65c-ba3d4a2d7c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021e78a9-dfe8-4bd3-908f-fc4229d7364b",
        "cursor": {
          "ref": "a872a4b0-7389-4cf0-a880-eb0a69045af2",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2191fedc-97e8-4c9a-b031-e9f774b5dbac"
        },
        "item": {
          "id": "021e78a9-dfe8-4bd3-908f-fc4229d7364b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "381bfe43-4b75-4e5b-8fd3-b2f7ad33b3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c5d1d-bcf5-4da4-a68a-c9060d6eb114",
        "cursor": {
          "ref": "d3635e2c-750f-433c-916b-31b29bb2b6f7",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2fb77622-8628-4d00-a8c1-c4a6a06d7fd0"
        },
        "item": {
          "id": "606c5d1d-bcf5-4da4-a68a-c9060d6eb114",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "edd047a6-4a70-4905-bfd9-089576af0e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac7719-7f46-4095-be1f-7d6e883e1786",
        "cursor": {
          "ref": "6ed42439-b1eb-42f7-80ab-2c6f2c8d4887",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "26e7fdb9-3441-4a1b-b799-5d0efe02f500"
        },
        "item": {
          "id": "ecac7719-7f46-4095-be1f-7d6e883e1786",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5bbc6041-940b-4c8a-b0bd-5cae7ae02078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527ee8bf-576f-4730-8911-7fa8c0152b01",
        "cursor": {
          "ref": "a47fdb6f-8deb-4dcc-a538-8f2d50bba103",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fc1505dc-aeef-43bc-b171-ba2b5265f868"
        },
        "item": {
          "id": "527ee8bf-576f-4730-8911-7fa8c0152b01",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1f46ea23-1a47-4aaa-a88d-bb92026f3b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfedd56-5a65-49ad-9283-1afafe3b901b",
        "cursor": {
          "ref": "f2faffde-711e-4fd8-8773-b2c3d8e68012",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "37f8c7e7-782b-40ff-97b7-fd2603c67f0f"
        },
        "item": {
          "id": "2dfedd56-5a65-49ad-9283-1afafe3b901b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6a284b2b-2fab-492a-a665-62e1295625f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838d4d53-ca67-4ea0-8fca-94888ce7accc",
        "cursor": {
          "ref": "8c2377d1-6544-414b-823c-e2b545a56fee",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "15842d28-6691-4150-8b14-e5fda27b49a3"
        },
        "item": {
          "id": "838d4d53-ca67-4ea0-8fca-94888ce7accc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5ad9741e-798d-4da7-83d7-18f096ef6fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d0a81f-1a74-43ab-bf0b-2f370c09f3bf",
        "cursor": {
          "ref": "236bd463-c843-465f-b6d3-f26261a192e4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "af4258cd-0819-4e3c-9909-b4c2cae2189e"
        },
        "item": {
          "id": "30d0a81f-1a74-43ab-bf0b-2f370c09f3bf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f178dcbc-2c73-4619-8d12-9518a4b3fd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a80467-fad6-46c5-8a70-d9b8b7058917",
        "cursor": {
          "ref": "0695d131-909b-41d4-a1f7-772e2215c282",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6d0ca11e-04cd-4997-acc7-2abdbcd215e5"
        },
        "item": {
          "id": "73a80467-fad6-46c5-8a70-d9b8b7058917",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "05a0478c-1eb4-4db4-82d0-207036e0e84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ec68ab-bb1f-4d42-a2fd-9299ccaa1ad2",
        "cursor": {
          "ref": "5dfe0da6-ca11-43d4-8d52-ecfdd5f1441c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8a9a07bb-aafb-4dec-a08c-281b8d6f6a40"
        },
        "item": {
          "id": "d3ec68ab-bb1f-4d42-a2fd-9299ccaa1ad2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c455ef5d-d40b-4e34-82bf-a8796d3ab2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed0042c-ab7c-4e08-9eee-88fdefc5e9b9",
        "cursor": {
          "ref": "b4e0e362-ca44-4627-9398-4ab93fb0f022",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d4ea18c3-9b81-460f-ab7b-62e6178bb5bf"
        },
        "item": {
          "id": "7ed0042c-ab7c-4e08-9eee-88fdefc5e9b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "486c6854-2a7c-46dc-a5f1-a01701bc229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a52e486-ac34-4768-8890-61cf310a2ed3",
        "cursor": {
          "ref": "0e1d84f0-91bd-4c23-b897-be972a7dc2a3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "40c561ea-a03e-471c-b20b-9665e198edf3"
        },
        "item": {
          "id": "5a52e486-ac34-4768-8890-61cf310a2ed3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c52b5315-76c9-4fe3-a0b1-0dabab557840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dc1bf6-d094-49f8-abec-3327437463f9",
        "cursor": {
          "ref": "129cd8a2-5bcd-4427-862d-9ffb5fb20372",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0dc9668e-a4c6-4a87-9721-f38d336633c8"
        },
        "item": {
          "id": "86dc1bf6-d094-49f8-abec-3327437463f9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b9857ef3-b0a1-4b8c-8ebe-e26cf50d718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586ed957-584e-4df8-a33a-d04d4788de0e",
        "cursor": {
          "ref": "0d81e239-999e-4657-9d45-0448dd2f9515",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9d97a7c0-b5bf-49dc-90dc-3573be6972fd"
        },
        "item": {
          "id": "586ed957-584e-4df8-a33a-d04d4788de0e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1330ef1b-adbb-43f4-bdde-faf40c98989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcc7bac-84c0-459b-9784-8c53b1bb7a85",
        "cursor": {
          "ref": "97e38d06-634a-46e3-aef1-6dee8221f840",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8d6bbf72-972f-492b-b096-929c7860246c"
        },
        "item": {
          "id": "2dcc7bac-84c0-459b-9784-8c53b1bb7a85",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "449ae4b1-7c93-4853-bc5a-3745ff6f420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a52e4ad-b763-4618-a6bc-c6e35522af67",
        "cursor": {
          "ref": "65596440-4587-4beb-a679-2ef3e56ece21",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "00b3f1d2-45fd-4576-88c5-72e56371027c"
        },
        "item": {
          "id": "8a52e4ad-b763-4618-a6bc-c6e35522af67",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8547865a-ae50-4a00-adb3-c214d2708815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcaff69-d187-4912-a1fb-924db344d40c",
        "cursor": {
          "ref": "5722ed2d-2e55-4b9a-ab14-275b5e65f4b7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "11a8f54f-8e07-4f49-a0a3-ca1206138428"
        },
        "item": {
          "id": "4fcaff69-d187-4912-a1fb-924db344d40c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3ecdcf99-2e30-4b49-8110-2c52ec476888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7286453f-5da7-48fe-beaf-4fbfc5cdf429",
        "cursor": {
          "ref": "7f98b1ee-b01d-480a-974a-902930951ccd",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3f13387c-0dab-4e0f-8a0b-34fa8eb21f8a"
        },
        "item": {
          "id": "7286453f-5da7-48fe-beaf-4fbfc5cdf429",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "408ebbec-d07f-4827-adc6-0356e15ac13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46ae05d-286b-4425-85db-73ee0954fd5f",
        "cursor": {
          "ref": "07acaac4-d7de-4fe6-ace0-c6dc805a03dd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cd8a541a-a42f-4987-8c63-bef5d3c67614"
        },
        "item": {
          "id": "e46ae05d-286b-4425-85db-73ee0954fd5f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4e507a49-8263-4a1b-a7b3-b5056b411c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2aaf8d-058c-4a65-80ee-36ae3d1829cb",
        "cursor": {
          "ref": "c8eb84bb-ba39-4607-a319-2fb0463b6a23",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "08929c12-ce62-437e-b6d2-b0e748f9be70"
        },
        "item": {
          "id": "0e2aaf8d-058c-4a65-80ee-36ae3d1829cb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5f8ade5d-e49b-4a40-bcf5-039a1fc95266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3b0504-65d9-48dd-8d64-9196bd609dcf",
        "cursor": {
          "ref": "878899f0-1f19-4ab3-b254-4cc1c4bb51e3",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46ecf902-94b2-4d20-a327-1f202083cade"
        },
        "item": {
          "id": "4d3b0504-65d9-48dd-8d64-9196bd609dcf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dc07386e-7c37-413a-948d-3371706fb14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b54bce-cf81-4c80-93a9-0c64bdbb3f75",
        "cursor": {
          "ref": "17d90195-bf68-4951-bc6d-ed1f8c5b2220",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ad99573c-778f-4d01-88a3-a0deabb88476"
        },
        "item": {
          "id": "20b54bce-cf81-4c80-93a9-0c64bdbb3f75",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e0e0d272-6bcb-4e92-9d2c-0bb2b57e2e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22970eab-078b-4486-a075-822e02941eeb",
        "cursor": {
          "ref": "d576a16a-7c23-4500-8933-a038112b0e15",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39885670-3bd4-4b77-830e-c43f5ec6a127"
        },
        "item": {
          "id": "22970eab-078b-4486-a075-822e02941eeb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7002e833-af3a-415c-8066-3acb924bdeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2f4c16-37af-498f-93e2-dada06aa5908",
        "cursor": {
          "ref": "0b45c48e-c005-4bb4-8435-c80fe51adb3f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "20423682-1e86-4c76-b0e6-49144d795059"
        },
        "item": {
          "id": "5e2f4c16-37af-498f-93e2-dada06aa5908",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "687429a4-04ca-4dab-8401-2e722f10dad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b7e280-7d28-4e26-a2bc-eda3c0f9f9f6",
        "cursor": {
          "ref": "61ec1d80-feff-485d-ade1-f2b870ee7fda",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3822df59-9794-4318-86a6-5a424814e67a"
        },
        "item": {
          "id": "69b7e280-7d28-4e26-a2bc-eda3c0f9f9f6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b70c5578-1626-48db-80af-90271b74f04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7c1782-6ae4-41ee-b4a9-0b05e9651b71",
        "cursor": {
          "ref": "51c7dde6-ae00-4f40-9d18-9fedc5ddd4c1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3342921c-f611-442f-96e4-568a51a8c491"
        },
        "item": {
          "id": "5b7c1782-6ae4-41ee-b4a9-0b05e9651b71",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "65b83d93-199b-49fe-8b0e-00407aaa56c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5878bf5f-b9c4-4fc2-abfa-f8baf9a8997c",
        "cursor": {
          "ref": "8646bcd6-461f-460b-8d5f-2014b4394908",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "50e435f2-b54a-44b9-910c-f60f6fbdc182"
        },
        "item": {
          "id": "5878bf5f-b9c4-4fc2-abfa-f8baf9a8997c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "13a87d75-5e56-4dc9-a0ce-748631985554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac2a29-aab0-4dba-90e0-fe750785d7f6",
        "cursor": {
          "ref": "9d82257e-1097-41fc-8dde-7b59feec5607",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "806a7141-7d6d-4f5b-a8b8-d909419cb368"
        },
        "item": {
          "id": "5bac2a29-aab0-4dba-90e0-fe750785d7f6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3fc5aded-4242-42ef-b082-39c5e632d18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745cab7f-781c-47c1-a945-419401f4615e",
        "cursor": {
          "ref": "92c7e20c-9817-4b97-851e-7f4efb8a46ac",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c8f58512-faf3-4331-b531-7aa301cd6cc5"
        },
        "item": {
          "id": "745cab7f-781c-47c1-a945-419401f4615e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b0dccbc5-e20e-432e-86df-184da97b681c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e103bcb-9d9b-4c0c-8c10-85496d9ff477",
        "cursor": {
          "ref": "bfe35e9e-58a6-4a44-9bd7-3b96f0e1c6e7",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "23ef554e-8312-4c92-942a-ca466587be18"
        },
        "item": {
          "id": "6e103bcb-9d9b-4c0c-8c10-85496d9ff477",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f527039c-c17a-46d9-854b-07a8d380149c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f509fe34-de79-44a0-b46f-d5c81190af50",
        "cursor": {
          "ref": "851c995a-9170-4159-a20c-57f344b13dc8",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c25e2499-3903-4b6b-9a70-b5940a6c5c2d"
        },
        "item": {
          "id": "f509fe34-de79-44a0-b46f-d5c81190af50",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2600ec06-8762-4d90-a0f1-f0a9eb54b28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094c85ce-93ce-4037-85cc-d9b754a64430",
        "cursor": {
          "ref": "72b4fd39-6d0a-4cde-8cc4-60355f9c164a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b5e5de03-c2d0-4bb1-afaf-2085da7e6ebb"
        },
        "item": {
          "id": "094c85ce-93ce-4037-85cc-d9b754a64430",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6cb4f77e-c438-45cf-a486-93ceb695f8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2876a934-ca80-497e-b54d-52b491482e7a",
        "cursor": {
          "ref": "d956505a-7015-412c-b690-72749bad53aa",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bbbdb638-4052-4ca8-a1a4-ede4acb130bc"
        },
        "item": {
          "id": "2876a934-ca80-497e-b54d-52b491482e7a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "44137826-b1cb-4660-b1b3-990250f29025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b4616d-24e0-4e62-aa12-d70911cd5c68",
        "cursor": {
          "ref": "d9db97c1-d380-4ec8-be28-2511b14d9752",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "826237aa-c4a4-459c-a98d-aac7057b402f"
        },
        "item": {
          "id": "39b4616d-24e0-4e62-aa12-d70911cd5c68",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7930412b-6a1d-4528-9fcd-e664adce3d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b798c50-a903-4410-b685-b75699a4ab95",
        "cursor": {
          "ref": "89436ab1-6e58-460b-8fa4-3a18f4c352af",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "39d7538c-88d6-4d20-baf1-ec48e04ba950"
        },
        "item": {
          "id": "5b798c50-a903-4410-b685-b75699a4ab95",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "929ab6f6-b492-4078-8aaa-f20f0e00b246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a63b1e2-b06d-4ead-a7a1-a15800f84b95",
        "cursor": {
          "ref": "5b03353b-1caa-4465-9a7f-8ba827f545ee",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "be7121a0-9ac6-436e-af26-9b556adf559e"
        },
        "item": {
          "id": "6a63b1e2-b06d-4ead-a7a1-a15800f84b95",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "afd0177f-e0b7-4432-8985-f6688fb4b6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1be47d-b4dc-4d9b-812d-948a01179caa",
        "cursor": {
          "ref": "c553f65f-f6f9-4552-a39c-44c3b2f25171",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "472091b4-58da-422b-a0de-0a41a02970ff"
        },
        "item": {
          "id": "5b1be47d-b4dc-4d9b-812d-948a01179caa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "10df6c9d-4acc-48a3-b858-d9c29ab78c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89220fd-d3c2-4bb7-8d0e-13afb8b551d3",
        "cursor": {
          "ref": "14532709-b952-4dd4-be75-fd9957e1540b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5420d2b3-8920-4cd7-a775-3c5e434e0650"
        },
        "item": {
          "id": "a89220fd-d3c2-4bb7-8d0e-13afb8b551d3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f4255a7f-62e1-40bf-ba0f-182b4d718957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f01b4a8-e5ab-4b9a-b1a5-c8c2a69104d3",
        "cursor": {
          "ref": "5592a4d1-f497-4819-a3d0-3f933cf829c7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fe1fe256-3789-454a-b0e4-e7f637b1e865"
        },
        "item": {
          "id": "6f01b4a8-e5ab-4b9a-b1a5-c8c2a69104d3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3784a745-1d0e-46a2-91c5-e8dd715b236a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d439b81-cb52-4831-b72c-020f2003a25b",
        "cursor": {
          "ref": "54981035-47c2-471a-830f-d241c35930a9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c19f299c-1363-46a6-939f-2c14683908eb"
        },
        "item": {
          "id": "3d439b81-cb52-4831-b72c-020f2003a25b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "76b01d16-7c08-4841-9e79-6636ebfe06cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a8d64c-4e48-40cc-88f2-c94743f68ac7",
        "cursor": {
          "ref": "7e6238b1-23b4-4780-8e64-7b445e54681f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a750498c-e7b9-45f9-bf98-0b551d7276ad"
        },
        "item": {
          "id": "a4a8d64c-4e48-40cc-88f2-c94743f68ac7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dd5f3dee-b46f-4eb9-adde-2fef62f9f6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab193dc-738e-4b29-93fd-263c7db009a8",
        "cursor": {
          "ref": "1d103797-2121-4b2e-9c13-6d5ad8c8128f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b66bb4ef-e7a3-43ba-a7fa-72b702a07ea4"
        },
        "item": {
          "id": "5ab193dc-738e-4b29-93fd-263c7db009a8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "aea3ff1a-34e7-4963-830e-5f76d382aa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3385e4ee-8167-4793-8140-cb0a8dd9abaa",
        "cursor": {
          "ref": "ae964d63-d4a1-4911-a5dc-69985460744e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b36d24ba-3c51-4550-9e44-62828a778bca"
        },
        "item": {
          "id": "3385e4ee-8167-4793-8140-cb0a8dd9abaa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "867504f6-a1c5-4055-b902-8e5cfc82bc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec42fc18-3d5c-4450-be82-8193a70623d1",
        "cursor": {
          "ref": "5b34e4ed-56e4-4cef-a569-f2a98e72e15c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0804c2a6-239b-435b-943d-236040a6503f"
        },
        "item": {
          "id": "ec42fc18-3d5c-4450-be82-8193a70623d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8d793ed1-1b68-4adf-b4a8-9ad68fb36df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897e99b5-1c78-44d3-8eb0-cea639d31b33",
        "cursor": {
          "ref": "4b744427-3b5f-4f88-acb2-5addbcf12b04",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "949c0637-8454-46aa-bfe9-cb35d9676a6f"
        },
        "item": {
          "id": "897e99b5-1c78-44d3-8eb0-cea639d31b33",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0e7a11d0-8c35-459f-a545-edc9f216ff0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ebc17-3992-445b-b8d5-c31f33e22c5a",
        "cursor": {
          "ref": "2d7d2e29-72aa-4ff0-97c3-78019c1fe1c7",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b46ee663-cd86-4bfd-9e73-7630dbf40ee7"
        },
        "item": {
          "id": "423ebc17-3992-445b-b8d5-c31f33e22c5a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "efb5846e-9bfe-487a-b615-842df64518c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251e0633-b3fa-4196-b19d-1bfe7967ccb8",
        "cursor": {
          "ref": "aa546f13-9acb-4c05-ad36-82a1acbbe9d5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "563166ca-72e3-4d79-9d1f-ff70de2eba4a"
        },
        "item": {
          "id": "251e0633-b3fa-4196-b19d-1bfe7967ccb8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b91bb62b-b46f-4fff-865e-f19d3af76d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2905fb57-01db-4cdb-a2c8-139fec8369a3",
        "cursor": {
          "ref": "df6facea-58bd-4113-a8c5-48a3e8f3e3ee",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "efe61054-c467-48fe-9751-c189fc153e9d"
        },
        "item": {
          "id": "2905fb57-01db-4cdb-a2c8-139fec8369a3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0bcc1fd3-f650-41a0-a0db-065aa5c09a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e116ffcf-850f-4334-b152-77984c9245d3",
        "cursor": {
          "ref": "13083e08-c2fe-414a-a3d6-0866a48cbb52",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8707d999-1600-4576-a35c-77bbcac762bd"
        },
        "item": {
          "id": "e116ffcf-850f-4334-b152-77984c9245d3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b431cf9a-af6a-4457-b691-faabf82c46e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a307908-1cae-4180-bde3-6c5523900deb",
        "cursor": {
          "ref": "b2fdfb6a-7754-4357-8fa7-40af3ac7e416",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6a3f153b-f2c7-4c10-bfbe-b2c1b3b0a3a1"
        },
        "item": {
          "id": "8a307908-1cae-4180-bde3-6c5523900deb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2413ae5c-e871-41a0-9fb0-2c433e4e4f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c47840d-48d6-43dd-acea-a98b3ce72bbc",
        "cursor": {
          "ref": "87b9df24-6771-479e-b489-b3e7d9ac4cfd",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "09a93b96-43ae-47aa-99f5-8b117af5fb22"
        },
        "item": {
          "id": "5c47840d-48d6-43dd-acea-a98b3ce72bbc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "38866d05-1d9a-494b-8835-0a82752e3626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177b7e44-3c64-4f12-b7a0-d45e3d5106e3",
        "cursor": {
          "ref": "c859b138-e38c-45c9-b18a-c536f06f1716",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eb377e8a-f116-4ec1-ba76-1d54131fff7f"
        },
        "item": {
          "id": "177b7e44-3c64-4f12-b7a0-d45e3d5106e3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ce8eb96d-fe4f-4126-b65c-e50eb1d75ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac3dc8e-b3b6-47df-af8e-6c519ca71d18",
        "cursor": {
          "ref": "d314a135-d2e0-4002-9cf1-97f68d8183ec",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "19985af7-d905-4d06-9397-8704248c868d"
        },
        "item": {
          "id": "cac3dc8e-b3b6-47df-af8e-6c519ca71d18",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "635c40a1-9b4e-43db-b539-6edfd46f53fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271b15df-9541-4aa6-8aa3-3fdff6de982b",
        "cursor": {
          "ref": "9818e9ab-af16-474d-a5cb-d9c507402ff4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ec3898ec-d3a6-42bc-aabd-e705dce56bb1"
        },
        "item": {
          "id": "271b15df-9541-4aa6-8aa3-3fdff6de982b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c70206be-26b9-47fc-b426-5525d2fe6aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bdf2eb-0dae-47ff-990b-17f03c7c8e50",
        "cursor": {
          "ref": "355466cb-6de9-4fef-8f26-089ea0dc0037",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b448eebb-2da2-454c-b984-6e47429343ea"
        },
        "item": {
          "id": "d9bdf2eb-0dae-47ff-990b-17f03c7c8e50",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "630fe394-ebe7-40d0-8185-c8fd5383122c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c15dd7-69c0-447b-841b-394b5ebb0412",
        "cursor": {
          "ref": "fd9bb468-c35c-42e5-ad6b-5c29e094e76c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6b467bb2-d2d9-4663-8323-d4a6f427fd40"
        },
        "item": {
          "id": "48c15dd7-69c0-447b-841b-394b5ebb0412",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "46e49e0a-29b9-40fc-9300-301575c91ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7252e36d-0e90-4ed0-b98d-d3792eca0035",
        "cursor": {
          "ref": "9cfbcccf-c19f-4bc1-b7b7-98bcdce4a630",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2be967b2-9f82-4fc1-80dc-f04910232ea9"
        },
        "item": {
          "id": "7252e36d-0e90-4ed0-b98d-d3792eca0035",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "80b379e0-2e57-47e2-97d8-1ed4c2eb543b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d576e8f4-76c2-491b-a526-6eab5e4bd17c",
        "cursor": {
          "ref": "32a2189d-370a-4709-92dd-171a31608e0a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5b863117-dbfa-443f-93bc-bf0f199886cc"
        },
        "item": {
          "id": "d576e8f4-76c2-491b-a526-6eab5e4bd17c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "00104e66-21eb-4503-ae71-4eab10e228b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294b8cb9-7c3b-4c93-8302-9e6bc97c915a",
        "cursor": {
          "ref": "8f5415a8-d0e3-44c0-8df9-008974ef1875",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ae65cc7a-1508-432f-ad8e-5659edbaa8bb"
        },
        "item": {
          "id": "294b8cb9-7c3b-4c93-8302-9e6bc97c915a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2c3bd917-18ff-4dcc-8c3f-3b653a7deede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e40841-f2a4-4243-bc1c-7d7c78aa0f32",
        "cursor": {
          "ref": "a66b9c88-4424-49a3-a11f-1a46866a7aaa",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d8436204-6d10-4b01-8707-7d385a360368"
        },
        "item": {
          "id": "e4e40841-f2a4-4243-bc1c-7d7c78aa0f32",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "97ece2c5-c5da-464a-afdb-36301f7beeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25b6a55-ac46-4e03-ab3c-9a0a03917c7f",
        "cursor": {
          "ref": "a55217df-7c48-44e9-90de-be026b08523f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3f8f4003-f3c0-4606-96ca-c000829356a0"
        },
        "item": {
          "id": "c25b6a55-ac46-4e03-ab3c-9a0a03917c7f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "748405cf-7f3b-4b4e-9139-422ee77fcd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5100c4dc-d285-465c-9558-7d74e482f390",
        "cursor": {
          "ref": "2908e857-bddc-4a6c-88a0-f5bbf4d20f5f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "92f53f3f-6b90-4995-b91c-42ea75810755"
        },
        "item": {
          "id": "5100c4dc-d285-465c-9558-7d74e482f390",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d0579e93-d34c-4468-a820-7bfe0331ffcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2477c4f8-08ae-4805-b322-1e39af8644d8",
        "cursor": {
          "ref": "514d6291-3c5d-45e5-9cbd-55c79bcae0a5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8465e96b-1a98-4095-8a38-e4aafe28265c"
        },
        "item": {
          "id": "2477c4f8-08ae-4805-b322-1e39af8644d8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a2e3f647-a4af-42ae-92d6-e3d56d852856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe38979-71de-4c9a-8106-b7ce3ac6dfc5",
        "cursor": {
          "ref": "8adae60b-1e44-4aee-95cd-190af1d4eb6a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "567f72b4-8b26-4ded-998b-67d7a2074f93"
        },
        "item": {
          "id": "6fe38979-71de-4c9a-8106-b7ce3ac6dfc5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9ad4a64f-16f7-499b-baa0-57457cb3aa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f2af9f6-711f-45da-950a-33acd2e8517d",
        "cursor": {
          "ref": "44f74d35-6217-43e8-94ae-f8deacd62611",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9f88d44a-cbe3-400a-9287-ad74c7f34564"
        },
        "item": {
          "id": "7f2af9f6-711f-45da-950a-33acd2e8517d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "53544877-f045-44ea-95ec-8f99d1511647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56334d3b-a739-4f05-a2df-703ee6f22a9d",
        "cursor": {
          "ref": "f7f54159-bda4-465a-bdf1-424c8ac8f0b5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "69b0a4e4-d7fa-4830-a430-25534e8b5134"
        },
        "item": {
          "id": "56334d3b-a739-4f05-a2df-703ee6f22a9d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2b78c4d8-292f-44b9-9596-bf3f77ad5b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900fe5a-a19e-4a12-8b8f-ed03e099cfa4",
        "cursor": {
          "ref": "7a42cf7e-fa1b-42b8-8f8f-4cf5bd4cbeb4",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "475c4b64-9834-47c3-9eae-52e2a5f165d9"
        },
        "item": {
          "id": "7900fe5a-a19e-4a12-8b8f-ed03e099cfa4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "10c12cfe-c2ea-46bd-95f6-0c345622d05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544cbf02-0d03-4c9e-931d-4cfa461f05a5",
        "cursor": {
          "ref": "ccd5423a-c46f-4cc2-bc26-edbb61e42e14",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "49d8862f-7498-4c7d-b658-264b74092527"
        },
        "item": {
          "id": "544cbf02-0d03-4c9e-931d-4cfa461f05a5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6052ee67-9ddb-4f3e-915c-b8ab8c1fbe28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ceee39-515a-437c-809d-5689e5b13a95",
        "cursor": {
          "ref": "c0ebb2d8-8d4a-4d88-87f4-fdc501e7dc00",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "90bb9594-8722-4048-9a32-679e9a7991d3"
        },
        "item": {
          "id": "c6ceee39-515a-437c-809d-5689e5b13a95",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "db7089dd-fa9f-4914-a21c-85a1afd82f89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920d23d0-c0cf-4709-b1d8-e4af76665c34",
        "cursor": {
          "ref": "97933279-84b3-4253-ba6c-6159e16a87c0",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2c179673-18f0-463b-8f4f-5b865ab16a14"
        },
        "item": {
          "id": "920d23d0-c0cf-4709-b1d8-e4af76665c34",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dffc18fa-8c89-4a0c-b3ee-3bc7aba553d8",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "721fe8fa-8ff5-496c-b608-bf0968d84135",
        "cursor": {
          "ref": "e1b5b2a0-48d1-447a-a55f-d841027f5236",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e9251a29-2b63-4ccd-bfb3-48d5183712e0"
        },
        "item": {
          "id": "721fe8fa-8ff5-496c-b608-bf0968d84135",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2c8a8495-a94d-4880-9446-844179e8b4a1",
          "status": "OK",
          "code": 200,
          "responseTime": 2791,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa970654-cd5d-4e8d-a2b4-eba5757f6247",
        "cursor": {
          "ref": "95b323c1-73cc-4541-a0aa-0def7dbd9b5e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aa2578c7-723a-4908-a09c-f96f52345345"
        },
        "item": {
          "id": "aa970654-cd5d-4e8d-a2b4-eba5757f6247",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bccfbf3b-3673-49d0-b621-1cc8d8e4a6c8",
          "status": "OK",
          "code": 200,
          "responseTime": 2410,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d085ee-a0e6-4a24-9aa2-3fd3c65eb535",
        "cursor": {
          "ref": "db326d55-ffc5-49ff-a5a4-e028f814de5d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc5feeea-beba-4e8e-9628-44cc783e100a"
        },
        "item": {
          "id": "b8d085ee-a0e6-4a24-9aa2-3fd3c65eb535",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dc81ab98-026e-4996-b93d-6697e5796598",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d085ee-a0e6-4a24-9aa2-3fd3c65eb535",
        "cursor": {
          "ref": "db326d55-ffc5-49ff-a5a4-e028f814de5d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc5feeea-beba-4e8e-9628-44cc783e100a"
        },
        "item": {
          "id": "b8d085ee-a0e6-4a24-9aa2-3fd3c65eb535",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dc81ab98-026e-4996-b93d-6697e5796598",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba02c86-a073-4f20-8bd6-c697bf778de7",
        "cursor": {
          "ref": "3a35bff1-8672-4205-89c6-01118c00bfbd",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a9a1901d-e720-4e81-94fa-4bef7ed884b6"
        },
        "item": {
          "id": "2ba02c86-a073-4f20-8bd6-c697bf778de7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fe37a7ba-b09c-4867-9462-6a336a54af01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bf7521-a1cb-4b54-9f31-a4e7859c4c37",
        "cursor": {
          "ref": "8f0f21a6-8653-457f-bdec-d0ad00146d95",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "71f54d4a-50c8-4d37-99ce-f3a7b437c043"
        },
        "item": {
          "id": "69bf7521-a1cb-4b54-9f31-a4e7859c4c37",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9527fb97-a370-45c4-90ba-a6ee387533aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}