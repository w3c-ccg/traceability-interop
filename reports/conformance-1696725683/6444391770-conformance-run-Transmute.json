{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7bf3c489-8801-40b1-bd2b-63bb84ac100e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8ebc2fe5-5b36-42cf-adb8-7d6ef4c9e224",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc97ca91-f227-4a49-b327-bbcb280a4d0e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "52e9c9a0-353b-4876-b203-7f33e010d123"
                }
              }
            ]
          },
          {
            "id": "47f1593b-4441-4ea5-ae21-514d869625d2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53696387-658d-4918-a165-9616bc1c5556",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "279430f4-09be-4edf-a401-3d86f3da5e72"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "73a98adc-50fc-4346-9a14-f9512be9d472",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e40c7be3-d58b-4b79-829f-8bd5354dc88a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0e461ab-8230-4378-82c9-a2455a881952",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72ed4a4c-b58c-443c-959e-d6fcc90da627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad5859dc-b2bc-4886-9ebd-c488e5765507"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9afe7c56-4b04-499d-ada5-e0119e3eb591",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2996fd18-1eb0-4380-bb12-a4c411f17734"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d8ab163-aa55-4d92-8334-33620714490d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8f8c7fc-2d2a-4b19-ac6d-806b26b10a9e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8b94d37-b6bd-42a1-867a-26c3a4d4923e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d22e105e-fea2-4314-932f-3c61e5af3f27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f173ddb-219b-4ddd-84c5-2c6dc009b883",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e762cc9-a242-49ed-bc36-2c8306ee50c2"
            }
          }
        ]
      },
      {
        "id": "c5d1e057-00d5-4007-accd-bbe307e22d4f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "793c6398-daad-429d-8556-60d0c5347ed4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "723a33d9-542a-4327-818d-abf09e965b8d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77a60ed2-bae1-41aa-9ecf-a43cc393dd33",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b607765-2831-4a32-a4db-b75407f95c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d5cff20-9c98-4707-b2fb-6830309057c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83df422-ad3c-4ea5-b125-3c166b6760d5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936abbd2-20a1-42b0-a199-73d9d1a6edf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc5f10d7-ac22-467c-94ac-f09edd2f2bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c2bdcf-e62b-47bd-8066-2cfdda1b3923",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecb2322-15ff-40ce-a367-23616395f988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "887ee0a2-2975-4828-abf8-5ad1877ba871"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90cd14b7-30df-4d2b-92c6-12cfcc986601",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d578a56-58ea-460f-9c75-0057c6f54d43",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b64d88-fdb2-4034-b9fc-0d8a3f349e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6b39303-6608-4d01-a06d-c89d03d3709c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07912502-ea67-4c9a-b667-059ed013b606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76e869f-7fdf-437d-81a4-42b9e381679a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d86d1ab1-90e0-44d2-8513-bf4436f16032",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdc9a735-cc3a-41cd-a909-adfe983fe00c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35fb33c2-2c3b-4466-a925-d0a3d69f9786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "68a7d4c9-db3e-47fc-9dba-980a32ac8352"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce74bd08-7643-482d-baf9-03ef0241c84e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9e0f6ac5-b384-47ac-ba0d-9d0c7e0b7565"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e31e76a3-28c5-4289-8530-8575f67004ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "22867a16-2d5f-4c15-9610-e4531c8dafa1"
            }
          }
        ]
      },
      {
        "id": "b84a5bcb-7351-4e31-8791-d7af5319d363",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "954d0d40-84e2-4721-9d78-3e6ecda9034d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebbde65b-cf8e-457f-a4fb-6eb43d4c2804",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "08e0ea6a-5c06-45c7-8db2-c2a7e5ef0ef8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1689e7da-fcc8-4c66-87f6-f6520a9f9cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a44c06-d015-4335-b8d4-fa5f4196df4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c531715-5e2e-42da-b987-8f0b7867653b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69e4ac27-a582-4c87-bfe8-e97c0c1e3ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1155b61c-df02-49cd-8822-efc04ba67073",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd99f1b-d2ee-40fd-9473-f14a64b29301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576a4926-711e-4564-99b3-37e1cd994d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4999d101-dd23-4330-b414-aff438b4f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52dda4d-5e7d-424a-97fc-9bcb77d1ec87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0ef8e7-914c-4cf3-a269-f77cfb5ef7ea",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b6a81-909d-4f22-80a6-dcdfa0408982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db130fb-3648-45e0-a41c-b9a391af2a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef886cf-f36a-448c-9217-c01fb25ebc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85241ac0-0b49-4607-a5f1-35e107b7e9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7cf05a-9c1e-4e03-ad4a-c21a5002296a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e052d3-e136-496b-9a40-c71da8f015f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565ee3b2-f18b-4e96-bfa6-5ef591b6f023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3522b73d-e52b-4e94-a3e7-0ed959bd855e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f005e698-782f-4d20-a850-4b30353b0c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60aa0fbd-5a52-4cab-bc20-f7c3af8fa376",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fae1df-b62b-434e-b0a4-2b0e4cb3671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833787e4-ad3b-472b-821a-bb9cbc94fe97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e095aa68-ce15-4754-b63b-9d7069f76994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "211d6e52-cba5-45af-bf10-cd2e959099a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b3ea95-1e9f-43a4-ba79-83cdb6947be8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f94df11-a644-4d83-9a2f-6d4b970575b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe63f69-e548-4d95-8747-bfd2b90bca0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1345b7-fbbe-4161-ae71-4a5ceeb9f413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96059dc6-4c0d-4b85-bdcd-eb9ca47cd7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c935e3a4-0c2d-487f-b07b-1d7ba3afc0df",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29410ccf-ce2a-4b1a-8eab-8f166fcd29df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42427710-602f-4f4a-a5c5-212d784430a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47abdb9-8930-43da-90c5-074795c853e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eb39b6a-df95-4024-9cad-8a6ebdc6f475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7c9bb1-de46-4e68-9252-015c9afb6439",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e075e0-35ed-42b3-ad81-eff952af54f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4541f218-8397-44f6-ac28-213526e61d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3a8084-d2c3-4b8e-934e-f8c6dd0a27f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "048ce794-149a-495d-8ab6-4edcb64900d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99c4ca6-2481-4e58-8b91-1d101cbf4fdd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbab297-3009-4545-ab5b-6faeeeff623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a186d415-4ffc-49c3-bb4f-3b2a247a43b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2844d5-ce4d-45f6-aed4-c4438f3af991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de827b95-d376-4c23-811f-1ab758179e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2deedc0b-833e-4c79-87a0-6b4de83ecffc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e763ac77-b38e-453c-86e3-4d7d2c825c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16b8ebc-2eca-461b-9eb4-59816662ba96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a50e45-ce4d-4a7b-98a0-f5d2df955455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d54be152-eecd-4432-8e80-bc18836846ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e64cf9-4a64-47cc-8574-9ea7cfd8f6d5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9d8065-829b-41dd-951e-c12024f70fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa9a50a-1dda-4ab4-8103-502621da7e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f34a0df-b12c-4559-8d07-a0793249de86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0285ccfa-2163-4ec1-88c5-8e9db18c34cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc4306-a079-4f3c-9897-538a0551aa70",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c982dd8e-fc52-463d-9d7a-e100ef03bb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120a718a-839c-4867-aae3-0829ffb00645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff422abc-c591-4412-97ec-9a9168e95d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33c0c335-475e-4dd3-bc4e-cc183156e6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914a2264-f6e5-4c52-9830-305aaf093558",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0547fb4-db8a-495e-9242-b28e15818fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1f9be0-7bce-4d0c-994c-6f724310bf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76d404a-6435-4306-acd5-473517ae6a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6504c81-1a53-486a-a382-a74c25b72689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0661ed4-5471-4152-81cd-b51a0434071d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92901de0-b5b9-46e3-ae0c-46d6860f07f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7362856-6728-4a93-a23b-3cb63cd7f346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d525092-f902-4c07-93d3-2a65409d27bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1df6c65b-fb42-4d0d-8e2a-5b9fca38efec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f3cc83-ae38-4ce4-a4ac-9be2d4bfa1b6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a16032-a81b-4049-a31d-01d893dac233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca502fa7-d8d2-48e8-af00-a1e309028c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2b0eb5-30f8-424c-9630-2cc39149456d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4f2f48-2773-4b75-a23f-b6e0c9115e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc84651-3114-47f4-b300-e9bb482ac99d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcdc17c-1bed-40dc-8580-bc23f9fed5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24dcab4-d785-4c31-84fe-66449fe32a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66c7593-b437-4b2a-b095-21c0f9bed9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "435dd57b-cc4a-4b50-aa29-fb2f38dacd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a1c83a-ba8e-491b-add3-2f56209ceac8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0ebd5d-9522-4c39-953e-ac4e49b22194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6aafa7-3611-43c6-9eb4-124a1ca1be71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad15a3-09a1-44ed-b985-9225661cef79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb65d30f-6880-4007-9d8e-7ff412a37dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff90372a-9443-4294-9c56-95880fce3dcc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210be429-2980-4876-b028-90ee39e6727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6890459-5048-4b68-8a27-99b5d54a73c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a7315a-9aa6-4709-a850-6c2124ac5a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "368ef02a-2f73-4cdb-af6d-498f4b650629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d404ba83-fa43-4818-8ab7-a3a5c81932e9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bed5e1-0897-4ca1-9dd4-440c7e0300ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10081b4-65d8-4b03-8cfc-b3fa0ed9d098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c828f30e-cb5d-4e80-9f46-ced8efc89258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0926753-df81-450b-ab5b-bef7ae840ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac4e835-58bd-490d-b11f-cffdfeee1a71",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b1800-4915-4623-a2ba-b83f1d207b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c14023-b9bb-4f93-838b-5edd7e761419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be54266-e5ee-46e0-a851-f56032cc528b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf18e71-cf17-4bd0-a0db-f269b8e4aee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f804f4-b0ea-4f09-88e1-ef4e98708ded",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44003f4-22e3-4b77-80b7-cf563d057558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1adcf3-3183-416b-ac77-b03a41cb2c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f2e799-3201-4289-844a-18172a9e1455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c6b812-a322-463c-a1f5-1ce442866a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722514a7-ef11-4bfe-9b06-fc08883cd381",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d6166e-670d-4d26-a4c7-e603ddaa93d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144b3927-a55d-43bb-9361-5dab7b9d5a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea30a423-5ed9-44d5-afb6-161f2b512b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1745894-d56d-4ee7-affa-83d6ecd5404c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f46b3d4-56b6-4497-b606-a265c6941787",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229041b8-8e7f-409f-b49d-c629e453d705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587f87c1-a449-4bda-a303-e28df93460fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef41af6e-6a42-4161-b65a-49ee8679e744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "478a41a7-7f66-4330-8df9-690c63d8c166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b513c44-fb32-476a-bb44-35fc9d7fee1e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950989f1-a816-48c1-acad-71a429d6d165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21128cd-ac02-4811-aa5b-939d32ee598d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae37af47-de17-4fe7-884d-1b3f2495732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2aabb2-ebb6-4530-b3af-52831d419932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a5127d-bfac-4d7f-b2df-a49d5bd755a3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50820ca8-7713-4bee-9194-8f010f528fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00f0a65-9ce0-4073-af92-bf7dd3ca4f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a167fe49-059d-4463-851d-2f1523669b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56af93b8-cbb0-40ea-b9ca-a71326ae37f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c62e742-2f95-4eea-976d-68e1029e3e9a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3152d84-4f22-40f8-98aa-8413f18aa797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13ca651-fea7-42b0-b22b-7f4fe151d8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68aa98a2-d2b1-471b-aa40-a59490cfed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f6f913-f88f-405a-846f-d2793f1026fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0518fc2a-11f1-458a-a5fd-5e5e9bdfc451",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300359ee-5f3d-4192-93b4-f53c587f25b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23c2a18-25bb-4f4b-8890-71b2ee925ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016cb3bb-242e-48d3-a803-f9d420b76f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e2972e-df9d-472c-8e7b-d32e0c39e0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0f22c6-0a79-402f-b176-96541baeba7f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d320c2d-2d0d-40a3-ac65-335fe4ea40a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199e0136-51b4-487d-9918-3f12177962c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec8c923-13c8-459d-a518-321a35bbf560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3d8c5b-283c-44cd-9211-2ba7898d1672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3ed2ea-ecd5-4c8a-97a1-1ff075898b26",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf08276-47c0-4e59-b2e8-e111c19a101a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2bb29c-18c4-4282-a8a3-ff73944abedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b524685e-0be8-4c37-97b0-8efda806ce4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ee2add-9e12-400e-b13f-d0c93125c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34ad1a5-f566-4b2e-b292-6e807724adaf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb8fd1f-7338-4924-b706-26ea89634a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c660e142-0378-4a5f-9d5d-1c8360fd5d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1050d1c-fe5f-477b-bbed-2c37022c3558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e46a6a4-9d1e-4236-a96d-9a938685770e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc44ca33-5008-4a5d-8ce6-16338784bf0e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f388e96-15a3-4758-ac2e-f434b9d0be60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc8f1e1-1ab6-4597-afca-bc6d341269df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258e4b1b-6a55-4dca-bd4c-cea8fa7eb067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11dfb97-ddd7-42a3-b486-c58521520470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec17677-822c-4f1a-9377-e872deb8ffca",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cc917f-8110-46b2-aa0e-5c5d47cf2f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6503ea4-b187-42c7-ba5f-85fe1f7ff6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6e41f3-2701-483c-8410-8f841a5ff101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd08344-299b-4047-8dc7-9450d62f8bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5cc91-57b3-400c-bd9b-f6144871d259",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f4ea67-4454-4c42-8203-82cad1706039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcccb92d-1097-45b7-8963-ff19c197efae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7ab208-a309-45a2-86cd-3102e8ba9a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45e2680-9555-4041-bca4-4433be22c9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0ef699-ed9c-4c39-9b66-806af6b692b8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc45e62-940c-4813-8f66-96757eeb4eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf8a621-5d88-4602-bde5-8ef414cf948b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d915bbe-4b3e-4985-83fc-3c7a24604f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d90f9e44-32ff-4268-8a3b-17f374534472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548c26c1-2591-4a1e-a91d-73e8fdf4b4b2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653b7ad1-ea77-47b8-b707-559e78616d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccabb18f-eae7-4b67-bf00-56171f632e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7244f6cd-e26a-4950-9a05-e08aabc5e570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9940fb-c13d-4366-ba92-8d44a3f399e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34b3e1f-fab8-4831-900d-0d2ed6dcd9dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28474689-a050-467b-815a-ac18cf49edef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d859d357-350a-4f7d-9d16-4bb8605542b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f3aee4-7252-4ea7-8617-9848ad47c64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f2f688-f3b1-408d-9d80-991281135b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf42c12b-d299-4193-bc97-81c3da18b7c1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3b7336-41e0-4c91-a116-6406d2f5efa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043f0c94-9e45-4a5b-aca8-ff8ae7f54c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c695b82-4533-4144-a427-1d34d9eb7e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01519640-19d9-4674-9031-86c459b87611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5eef2c-ca97-45a5-b390-d38680a8e1c2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ed78fb-f403-4fff-97b5-14c3782b456a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd208132-f973-431f-a94e-f81d40f7f04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9473d9-ce1e-46bf-a4f6-b1a6c9150b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "12976a49-df8a-43c3-a2b9-91b739b826be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abb2045-bd0d-448d-a032-29a8639718bb",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6160d3-38fc-484a-a778-0ffb69c030ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1487a5b4-b57f-4270-b07e-eee205d64a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bcb714-96dd-4f1c-ae00-a244040d0539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ac6667-00c5-4c90-b618-d1b5f127bb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f62eb5-778f-4a06-a4a3-4bfeff706f28",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c028b9-4baf-4ad2-a1cf-77a67c236826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1479d4c3-05ea-495c-b96d-323252eef458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe58e8d-d603-4e57-9cba-dd12f80817d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b046e5e-7d4f-4f41-8731-486edc0f4d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9328f74d-a0d3-4031-9553-cf69e14fe6b5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da87d05f-690d-48f4-820f-5b5435b2a7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce05923-7b6b-4e2d-b693-500c40acf840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175bf588-1a29-471e-a398-88c623637729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd89f49d-8d1d-4693-86d4-e54ab3d8f4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac61a880-fbc8-414b-b6aa-877b7925057c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e313cd24-064c-4a7d-8023-844513067a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90b7091-f7c7-4336-8549-cf7451cd7d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f1aa4-5036-4a1a-8d83-f0ff5d1d82b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e709fba1-4348-41bb-9481-158f474d9818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f5523c-0a70-4173-872b-06a05e50ea44",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58c7aa2-aa22-4c2e-a35d-014b0d18947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26481225-ba76-4a80-9f0f-8082d885d641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee92ed36-0aab-4fa3-8a64-26dad0617024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d958d3f9-0f84-4e16-a7e3-4b2a6f877fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3154ada-2110-4a56-8543-c4ace0168aa0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9074c04b-229b-4fa8-ab3e-77d81a3d2bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b210846f-fdb5-4968-8848-7f21e4b75297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6439517c-5f4e-4336-ac9e-f13c769afcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cc72de-312c-4d1a-a13d-d9b900340c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed0e8af-0d1a-4cb4-934f-728b7cec98c4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6701aa-2206-47e8-875f-022f813bc11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0eca1ff-f904-4cb9-8769-21efaa3afbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098e5346-bbf0-4f8e-9218-5f622b546be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "043030aa-3413-447e-8232-ae1301bbeda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f93eee5-37f3-469b-934b-8b0cfe98171b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a940dd1-edc6-4613-9741-94ebce2189d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28929f9e-3aaa-4053-918d-b01d02b40823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c93dbfa-9128-43a4-bba0-07af2b973825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "434613b9-68d0-4b8d-aa52-be60266c1079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b5c6fe-b34f-47bc-8561-38bf584a5881",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4496666-8c1a-4969-a776-87e12a6c3659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acac2c3-e255-4efc-8c00-e2ce49ae6dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e7d04d-59c5-48d0-b0c6-878045d8c787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "467d02ee-c139-4cef-bf79-0a54bbec114a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb34f2da-a270-429d-b2dc-8481b4a7eabb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0eea19-946b-4ae2-92d3-e13df9646df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cda33b-cd53-4f92-8a3d-dc36fabb0fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47cac36-de58-494e-84dd-099d56c65200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44324cea-c243-49ea-855e-f3ca483d0291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5716c8-a0a4-420b-bd51-8838f5fec927",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f3849d-c92f-4554-aca7-a25389434076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83cfbde-bd7f-48ea-9d8f-14ce43f4eff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ca2eb3-8c77-4798-a018-b2f14a8d5720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14d2f8ad-c6fc-427d-8c50-09e02d4a1564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0c07fd-426f-4a11-9e87-ff8f4929d819",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6b13e4-ed8f-43d0-aa0a-8c4e9597602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97e166be-5baa-45b4-b98e-8a6f3264bc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e528f676-52a0-48d7-b43a-899f19fae0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80e378e6-4282-4a1f-b0b6-9b2ea7fcfd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa13a5e-c69f-45d1-ba00-3d25fcc330b9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4ca3ab-92d4-483f-aa1b-d7fc5ab9e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c66e5f-8ea7-4ed4-9a58-e62439f4beaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08a1bd1-be21-4bb0-b2d0-64362db2ba37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0316f202-6f82-4d79-be1b-20e39d8de235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7578c5fc-767b-4a32-a219-90cec579cbc2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82abb42-e548-412e-82f8-a86ce3b7be57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950dfe5d-5419-4a9b-8499-7a16b44198d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1413e6bc-4dbc-4c3e-a12d-3f64e6bfc40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b55bbc8b-e55f-4ea7-8a69-ba3b21ed1265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72b6f67-d6f5-420a-900b-554be30ea6a9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bf6045-d31d-4da6-a9d2-bd07832e2437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6ac9f5-7694-41b3-93a4-6d573fff2582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2ae884-1558-4c01-b9ea-f63f80d06d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4af5750d-87ab-4e97-a0d0-f47093e41f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea0ef0c-25fc-42bf-a5a0-c1293eb6b3d1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d31d42-9828-45dc-b5e1-36d0ae61243a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb5d74f-7504-458c-ab0e-c9edf255594b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c3fb68-64c6-4095-b3b3-7c61f8388a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eafcacb0-2d59-43df-abdb-149d7388b00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e773933-62ab-47ab-a1ee-54a13cc80c19",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007e93d5-a5e6-44c9-8e98-d936bc7b752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47396dca-d408-414f-b0d2-e457d2a57ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d52eff-4167-42fd-a659-bfb66be7d9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa651a9-1198-40d1-a92b-61743e586196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82cf7f0-870e-48ea-ba02-ee7d999d6642",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95c9272-0e9d-4eff-8b30-e11985d10d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efea72fb-c8ce-40cb-af6f-55abb4c045f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15db0d2-e0b7-4bbb-8241-d589f4ea3f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f93c8b-13de-4ec7-90af-f8dc8ff12594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5030a2f-3d70-4e54-80cb-3b91127f7e2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba60ba89-bdcf-411d-aac9-2297d40ca42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ea384e-159e-4ffc-92ef-efeef51b3118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aba544d-f561-4029-b06e-842d97eaac43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0304f64a-4db9-4dc7-85b0-426adb5b3997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bb05a6-1cc6-459d-85ef-fbff5983bca2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "924818bd-343e-4d84-a724-cb32ee64472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f2b68c-ac04-43d9-91d6-ce36d4307b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8cb446-ddb7-4f26-bb09-814d6d58206e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f90989df-815f-498f-a0eb-c3f0817c2af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5fa3f9-923f-47a2-914b-ffbeafe409bf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5407303-e9c4-4474-a0e4-5567f89e2354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd6a178-36df-4921-bd93-8c7c1715ac24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec43e34-9ef6-493b-a1c1-3fb1460fdfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f0a969-4595-4904-9629-3b589ff014e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88202b99-27aa-4624-ab80-24331070318c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95b2801-76d8-4bae-a31a-a43c4a28da1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ed041f-e179-447a-9bb2-ebd682a414d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5fa633-c4da-435a-b68e-6b60dfe7182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd9c8b7-d6b1-4839-9975-125cda2532e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82be43e8-0416-4883-9052-3e85f1042694",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e4743c-51f5-4166-b41c-2c114f54e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11064764-0a0c-4759-b40f-d28ac99dd905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b2e1c2-fa6a-48ae-a02d-51779cbeadc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74fd5579-d9e1-4ddd-8c24-bc9a731d3b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979b9e08-3fe2-4887-9786-8723c94fc691",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee53d7a9-187e-4721-b1f6-51ac6cc56653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87123643-a1fb-4376-a2f7-0ee016756e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eff588d-d64a-49df-84f6-2084285170c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ba0f4f-0f69-469d-a119-6b0d343ab2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f64ebd-189d-4b88-b8f9-b60e54427717",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52abb81-25ff-4a0c-9909-d4e664e958ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da63e4a-22f7-49d2-8ba4-0e875b0cb8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f7654f-b357-4c27-851e-b8cbab7e12a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d22f6872-a07e-4ab3-b2f5-70110c4fb503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84263d89-2450-4848-a1bd-2efeaa3df2d5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8a9ee4-402d-4f47-9f4d-ff2205e73175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426546f6-fa31-4034-a7e9-6eab1097a836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23b3ce1-1401-4da1-b60e-16abf80e2a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd6786c-726c-4767-b4a1-f10497db4b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c09dc-e420-476c-b645-e18c264815e7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b981dc-8221-4584-aec8-a5aa2a4e4eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19776d29-6fdd-4f42-ae25-b21a78d0ec06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d071bfd-5f36-4b63-b091-cc5349bca5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb011289-bd23-4c9b-be09-cfbbd79f1d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3928f2-e3b0-4f4a-b5ce-99283d918191",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4b0483-99bc-4ec4-a63d-5dccd8d58d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed12d212-36d6-4cac-a0d8-bf21366bce27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e1e9c6-405f-4893-998f-103e9023a9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "764b01d9-7408-4a8a-9a50-c64644f3db3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3552a837-daf8-4d3b-a76e-590381b5a35e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749104e5-5c41-4259-95f7-524a58727c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91d1143-8dc7-4b45-9f10-cf1566094fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929a14c5-c03c-4212-a303-da95ef23242c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8493b882-dad6-4284-b639-f505882ec3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e4477a-ac21-4802-8030-282b54e004c0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b604f90c-5e02-4d97-b286-19632a1d9ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4598c567-1848-4c64-9a67-60fb99a1e792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec36f02-11b8-47d0-af91-8b67ed518a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd326f7-790a-4f1c-bde2-cdaae9005fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608f98a8-2d25-4e26-8751-62d5696a69d1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648646c2-094b-4df3-9cd9-971bf5250684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57b058f-2272-451e-8b60-bed9b1ebe770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65996a0f-4f95-4f9b-a332-f474acb622f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cf151c-6c3d-4249-aba0-c35bf601f7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26471eeb-5aa4-4a5f-bf69-185ac46e62fd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9da2fcf-2664-44c5-a45f-84aa2a8b7fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cec5414-0cfb-4d2f-86b8-dbd7e04cbc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab24e3a-1dd0-406d-9b75-887d43349b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17cec3ce-0c8c-4bdc-afda-eb6af6cc32bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2644ce-45dd-4127-9d7f-207cef1a01b5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7498985f-e9f6-4e06-b643-ffb8868314b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bdcebb-09fb-4dc0-a0ec-648687f6e955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff152d19-dad0-4559-9312-4db2be6b456a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b77ae1-5166-47ea-8d8e-14e9a2d1590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec714574-b518-40a6-8b85-42a3db26e794",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302e4068-c5a6-456c-bc7f-0ed045ff9ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660d1301-d097-4b64-8ca7-ef8acf28e0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddfbee1-a9ac-405b-bd1d-a847dec71c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee3c2e4-b530-4e67-bd89-e7b19b4142fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6e89a9-60df-4f4c-a0b2-424e94af7461",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840de0a5-24e2-4bc7-bf87-b19f85bb54be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925833ec-57c7-4db5-aaf2-0f25c55e1395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901116f9-129d-4dc2-9134-858fdb5796b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ad4333-62ae-425c-b570-9d478c620401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4359bd-74a4-4202-95a6-f2b29c0073ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96410b0a-ab25-46d6-b783-e52331bc6c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d843ac-643f-4edf-9ff4-6dda33d03394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d09b4f3-3576-40c6-81fa-cd5733fd5cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d5f93a-d6ff-4c6c-b2bd-7fc3446c54ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b547d3e2-f3bd-454b-8c0e-2db1e1901686",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20948346-715d-41bd-b6d8-f6392b9c9970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44888451-67c5-4cc8-a0fb-345eb915e9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cabd157-e1a4-41bd-b84b-762798a1666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "862b04e8-1e97-4b0e-bda0-6e0f7a1538f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8f04ba-acc9-467f-ba7c-925e09d651d5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10676ec7-2249-4c88-971e-8eb4d48857ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45ebd04-acf7-4a3f-adee-38720a013fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c9a833-a7ed-4079-b561-8d9b94d26b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0323be3c-f3fd-4f3d-ab72-c2f9aebd5994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1926cdeb-2e9c-40cf-a549-3dbb7d35fbeb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bc2f29-32a4-4fda-b954-bedf6d1eb9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e9e816-3824-4f19-bd03-3198845a96bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049ce15a-e313-4807-a8e2-ed53714ab6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "554af03f-3013-48ee-ae6d-f18b0bba38f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7145db13-255a-419e-bb42-9156571005c6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77384ea-7adb-4ded-8466-0d4f828e7c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700de90c-9f22-4712-8b86-8340a0de1b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38356b34-1a88-4f33-b01f-8616324d5d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1400e9-e85b-4bd2-ab19-5d6b5cdf6d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c1dc18-004c-47cb-86cb-cfb67522adf7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60fdaf3-aab2-4582-a111-fa16042b723b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0ae8bd-de65-42cc-8ea8-492142123fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b7eb5d-3861-400b-beab-29b2edffad1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9af251e-411c-4fbf-8fad-d50deb366fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eff327-2d67-4818-bca4-c5eba361005d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f213ee-835b-4a9e-a732-df04b10f6146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fef36d-7f5b-4409-b5a2-9f5b4c8769f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0620d-e8ee-4594-92a1-a4b7302da8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7b690c-683b-4e65-86c7-4f3e2ab155e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac151cd-7a00-476e-a61f-30930e48cfa5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef80119f-188f-4cb3-8f74-9e1d37430b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22438ea4-6860-4190-9da4-21553ccc9dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd3267a-da43-4164-897e-faf06652ae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25bf055-70a1-4fb7-9691-b24996f109ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc1ae71-3226-4e3b-be3a-6f538ebd87ce",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d21af90-4e5e-45b3-879b-ce2b3319db5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e51de9-74da-4ad1-a8db-696e8bbd773a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe85f20-e108-46bd-8696-e1d5b498c188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74f848e-8a00-46dd-8a13-78eda6988aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0453add3-474a-4f0d-b2b1-7783db1b1eda",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819bb026-65b5-451c-b28d-195b6fd4a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90feb253-16c6-4735-98f8-eb13dc481cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faa0b05-7b1f-4988-a2ff-241dbc69a1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5101a0ee-e482-4c57-a6ee-2ed6dabeb3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6434612-d87a-445a-a560-b7bab0bcdcb8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c33a68-38c9-42a4-b664-7722e5973f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbb901c-73ad-41db-9639-8e4481567b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2a219a-748e-4931-8f45-3cd86d954f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f8d8a1-f1d0-4c6c-9c84-da100cb1c0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bed669-3e61-46f0-a31f-5f173bcd277f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e770048-98f1-4ee9-86f2-fa70a3126e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50430d98-3372-4b08-929e-9ae86c502102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea869430-ab9a-4bf3-b72c-b6c2511776bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f29e08-c896-4050-98ab-f75bc926f477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a94ef8-f4d8-44f2-bd08-2206364ba4bc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c22857c-7af3-40c6-9f08-64ed2df48ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234323ae-f550-47b7-abb3-291d5097d3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abc0e05-5bca-4cf3-86b5-8bc81d1c6c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eab40138-0556-44fd-a590-67530e2cbc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a851897d-df24-49c4-bcee-37415d2d2943",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3052b5a3-c7bf-4bb3-b945-949b5ffae72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa225c1-104d-459b-bf9a-d045215118dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4188ade1-5e51-4c67-8c48-b9f3cb98de54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "778973bc-9fd2-4e0d-812d-2df6b6b5fc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdeb41d-128c-49ed-9572-5967d21a3088",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b141cad4-bf71-485b-b13e-4c005b4d7c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b84983-c32d-4506-a6ea-8b728d7fef50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dc3009-802d-4303-ac35-e4902202369d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd892bc3-02ec-4185-99a0-39435938e699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f569f-910b-46e4-9f13-19c6750f6ebc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb98642-3965-4396-8f20-431480a2730a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fabe39-4e34-4df7-9404-b5ce47b81164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca18396-9441-4598-9234-7ae4ca5f7e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a000a52-34e2-4d85-bbf6-a0df0cfa10db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e8b0d7-ad58-4663-9f43-69440f192d59",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f160fc-a1ad-4c0f-b37b-1f083d653528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6367040-9a97-4ef0-8f50-120d23573394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dcb509-45b7-4553-afc6-6fc2104c7513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfe92ea-284b-409c-a347-1e46a5f4f438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4023a2-39e4-4007-a172-451a7248cbc7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1a382f-30a2-408d-8400-ffc0c75a5643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad53806-5ffe-4f55-a144-d0e2c9855c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647b6cc5-3be5-47b9-920b-892976840d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb75e94-2ead-4545-81c7-fc5cb6de6f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836005a9-fa80-43e2-a998-33e41ec1fc29",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13e80b4-0e8f-43b4-b164-7929d05f0815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "215207c0-26c8-4243-a017-b185dbadf752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e17d3b8-4307-485d-8dcd-a4f9a93637f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fcbf91d-14b4-47a2-a081-72d676ddcd77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40041fa9-dc4a-40fb-b446-070a821dd101",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01583fd9-9686-4658-9a37-575510a97a7f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703fb5a-f0f5-49f1-b49f-0ba884e98942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "561559dc-a7fb-4b3e-8751-50707a0b4c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cfd17e-1b35-4320-b720-a13c0cca9d14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2474ebb-d169-4db0-af9f-5397b427bdb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f474e51c-b691-460e-95bc-192ed8dcaeaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc230ec7-206b-4ed7-92b8-42156df876f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "018c6e5b-f1f2-48b7-8395-50888fb94f0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29ef6015-d0f3-43f8-b101-3b14cdcffa90"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc47f8e5-90c5-4dc8-82b6-2d0d4e86cae8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1fde858b-7d9a-4fc3-ab70-696018475b99"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d843c00-08ea-46d3-b485-13067b57f3f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d321a724-b548-4e7c-ab3e-ccb1a084290f"
                }
              }
            ]
          },
          {
            "id": "8b179128-714e-4218-b083-e50999b57d4c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe9eb626-60c4-4f81-a0d3-334d82495042",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d12d49a-a37c-465b-854d-004dd9540fd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c487626-1247-41b3-bee5-5102dca39514"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "462c26a0-581c-43a0-bfca-2773027b010d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2bdcc427-11ab-403b-85b0-11a192b67461"
                    }
                  }
                ]
              },
              {
                "id": "589f6554-adf2-4ce5-98c5-d8c1689aa9e7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6aace771-1ffd-4dd3-b713-f4c376f41999",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1608e247-0d80-4a98-adab-4a95910da9af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e67dc81-56a5-44c3-b1c6-7f94541b779f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ecde0a5-74a6-4e65-aca4-dbf8a7351418"
                    }
                  }
                ]
              },
              {
                "id": "c1927de5-b57b-4033-a506-e54676b27235",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddf4fef8-59c2-4b94-ab6d-ba7968f8ace2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81612fee-04ed-4782-87ae-597e5d394fa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74d51609-b9f9-4f2a-a7f7-35e2c728378d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3856e61-ae71-4b33-8aac-dcb5d2062354"
                    }
                  }
                ]
              },
              {
                "id": "8eb61296-590d-4443-87b6-18c7fa943950",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d3eb246-f20e-4bbc-a360-f856f2310e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78c4d4cf-2bae-4940-9e90-5de8ae25d5c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9f00fd6-b532-449d-a9dd-48e6ed475d89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "54a7524e-0b98-4c69-b282-b96698edb6f5"
                    }
                  }
                ]
              },
              {
                "id": "d2d8f01f-62ea-4997-8581-1488d6189d5d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9e83be0-a179-419e-8609-9b5c70e8b9e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e8dadd1-3e66-42cd-9da5-4b86699d6bb8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b52ebba-742c-4e65-a1c8-c07455d77c26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bc8140ce-68b0-4591-9754-73dda96ac5e6"
                    }
                  }
                ]
              },
              {
                "id": "9f2e4b2e-c21b-4ba2-987e-466915b50b9a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16303ed6-1ca1-4d38-a11a-2d965082d36b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e5fa23a-3eaa-41cb-b963-1750a15417fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33c8eba4-2cb0-4452-9caa-83766f2d74c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5893bb7-7239-4d94-8856-ce1ee835f0fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6dd0ed05-351e-48ea-b93a-4a2d0b34fde0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f821ab9-6cc9-438f-91ba-501739c7c657"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0f3025a5-ed00-4233-95dc-ea2d709696fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5e7f591b-90f2-4e11-a5ce-13c81845ae43"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c39ed704-c39f-4e27-a09b-aff7c35c184f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "658a95a5-ec4b-4bfa-a492-2e998c4771e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df2292de-9cf7-4ad9-82f3-721f9d5f8cd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de23f3d5-df5f-4031-99cc-702b58276d2c"
            }
          }
        ]
      },
      {
        "id": "1b821b4b-e1c2-4eae-8597-6a41cf1df612",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cefbbd51-07b9-429c-898c-6961917297de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76331568-cdc0-4302-a98d-afd659e45a57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3ea8665c-9877-43c6-8209-b3924ae4e44b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3398f8-2296-420d-8b1d-290c5f0c31a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d360be-a4a6-4e72-87c9-75087c01a344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f60e7ff-663a-4cbd-870f-9fa8d2620c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fed455d-a438-4915-9445-dc52c1a4e671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c798a4c-6f56-44d0-8d4b-3e302c7174a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c5ee25-ed80-4930-95e9-7ad68b261a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784a7f2c-2705-4678-a353-d8d154f2df78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4892750-5ea7-45a7-8e2e-6e17be935acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5723eb22-2383-40b8-9584-ef4ee351977a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7c7b64-ad47-4b6c-9986-d0e7bcf24c0c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc8ada0-cac1-469d-a935-53f812e2fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447ee2b4-d7d2-4aec-96f8-92e9cb480092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ae29ef-1138-4b48-bf6d-c7fd38f51872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c555af40-c0fa-4b6c-b752-75f6dbddee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6addd149-9619-47c9-b1fb-434cfd29c6e9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da722948-a9b6-448b-8406-4365a998139b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4eec3c4-d684-4a32-ae15-e84c6c82b9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74528b1-8d6e-46c0-95f1-3effece4a88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26d54bb-d757-4bac-a4d6-51802fe331ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b474a771-85e9-435f-ad9d-ef6c8492e6be",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26f0d82-ee57-42cc-bdd4-e5d4e1076ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad2fc51-e319-42fb-9e6c-29936c9319ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c9a832-110d-4bd6-afef-7995a621b84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4d05cb-bb60-47f8-b259-6b5d8b17531b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900d43ce-9def-4d3a-9cad-093a41ac98d0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c821cb37-6b43-4630-9981-2cf197eb22cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d38236-c494-47a6-86e4-1157f03e52ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e2a352-477b-4262-882f-aad75e069af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c95e85bd-68fa-42cc-ba05-d73245dfe1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5072f947-176d-49be-95b0-8ea137e7bf95",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0eed27b-e64f-4828-885f-f19fc6f34ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f36151d-0ea4-4a31-975e-9e3a9b6f5d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10598b8c-7e8e-4930-aed5-db6808b5b3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff54d1e-1a5d-402b-9c8a-ec37e78583f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec56641-997a-4f35-a4b1-380c957b7a78",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b67a2b-7fde-4226-8ece-38f43e8f5536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7d551b-91e8-4be1-a6ef-19575bc936c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b801ac5d-9bd5-4dd8-96f4-7bc633ef06f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "600d501d-48da-4395-8377-0cc469c4da81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b2eb73-7cdb-49d8-ad77-92d780df654a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6857f29e-7155-41ac-a7db-8a99578c1baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0aff4e-29f8-4976-8157-c2629d67901f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b38aae-cfc9-409e-a105-72d1b897c034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d01eca-83f0-47b9-931a-a98048797dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582931ac-0fce-47c3-a367-346bd8fdc4e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fa17dc-fe61-4b83-83a8-a469394f2a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc9d316-b855-4794-ac42-a00f828e463f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdb14f4-b177-466f-9c43-4af3f9a8672a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4fa334-952b-480f-8c57-fa88cacc0f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451bb14c-7450-4385-a8f8-43078c46427a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62edb7d4-a5db-431e-8510-cb93d467f86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70256ed2-ba98-423c-980d-c2e11f481d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbc341e-273e-4f25-9d08-ba651ae12589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7d46dcfe-cb0e-4ba7-b71c-12c7c296310c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1e6db8-ba41-4212-9bac-3107b738d03d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a57260-cc48-42e1-b40a-8897d38b720f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d602a110-d5da-4e01-9705-d27bc3b521bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189e9d28-81c3-46f4-b2f1-e3bd5da092cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80b943a5-1043-44a7-9c0b-dac17a83b650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92300423-fc49-4a32-97fd-8fe997b375b7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3180e7e6-a37f-4f33-a01f-14782c67e5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dfa8d8-4882-4384-8457-49afde778c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a070ac-7a7b-4849-8c8e-47af71868533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f08564-fedc-49e9-b0e9-090b5bdb7039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8726a2a8-ff43-47b4-a7e7-14ec64c03e59",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bebca5-7f14-4cfc-b790-6dadec96db22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e10c90-5cb3-4280-b8cc-22e14119a94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d6465d-c769-46b6-8b21-7dae8370450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd501a5-c137-4752-a90b-e8fb0e1c9b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9649c8-0a12-4a1d-9265-87d357597161",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e206b93-a8a3-4538-928c-c5928fbab353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17567023-9c5c-4f78-9787-6911e453a2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff5f214-e979-4ab4-8bda-4a6b7ef6eb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae784530-65ec-4b85-a746-59f17c38f19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b08c76-a9ea-4102-b862-a841720fc3c3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7576f5-e834-46d4-a318-b158d9f36153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82c40a7-1fc2-4c05-b06b-d5f16b701dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b668b80d-4ad9-4f10-b488-b6c38933099d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdbd043-dafc-48ab-91b4-2940acc55d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f92153-bc98-4ed9-81d7-c8427e500ef6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637a57bb-ed71-4d6b-a3c8-e0aef8290d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a5706a-c8c3-4a7a-8fe0-1394d9d71fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a33d57b-207e-43a9-a77a-0f79c13758b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "12df89bc-d76b-4847-bbee-95e9a4752d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f975fd-dcf6-436f-a39c-a7a76fa34a92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf428591-136b-4cd5-a1b3-53a310726a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57deda47-9110-4d2d-b7b5-d04d474a76db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d94aac-657e-4ea5-a947-181019eb093c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed5bd00-d336-47c6-8df5-6297ac5f51d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd562d3-80cc-49f7-8d30-b5509c49b21f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792a021b-bb2c-4188-8fec-2a7ae899ebbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aab8290-6372-4580-afaf-c384af9c027b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4806feed-000c-475a-876b-0fb62c6a3553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03011aa7-d5a9-42fb-8fa2-9299584ae835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a5c1e-1156-4ecb-a4da-7749b7dcde16",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5743d28-db9d-4146-b58f-fa3b1ced99b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5769dbb9-66dc-4ad0-b0a0-e8b55dc14479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afabbef-ba20-49dd-9a63-5ee69097f160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "754f0c36-597c-48a9-b027-b28192af914b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab4ff0a-8627-4c7d-a458-e00fc94b6fdc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1213c1f-2182-42be-9ce9-599e5541441c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7b815b-59ae-412a-b96b-8511b4a1f254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb24d3d-5c0c-4e51-ba87-09909d24e49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133e7c65-ac13-4fd9-95a0-3f998e9f8253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c894c7-a6a9-4b7e-8bfd-a7e9d9e204f8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0ac691-3c1e-4329-a696-742ea4571601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ab5c28-5586-449f-b23a-9ebc05737d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684d7049-71e8-4170-b805-9a2e14d81cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d413c4-f513-48a9-a98b-a46f24fc1cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e31901-1d09-4ff9-8568-ee71e1a5ca83",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cbee7a-6afa-4847-bde0-3bb0463073fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74bcaa5-fa24-4da6-8df5-a4ac6910cadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234939d9-fabc-4f0a-bcd8-9afd6e1617f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eabf632b-7923-4241-a5ef-6c29dc0074c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30153726-f24f-4746-a51a-083fbf42259f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d08be2-3019-43e6-8fcf-8c6689644e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e649b7b-a95f-4e1b-83ae-fe86467d2199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3c6b40-9066-4c39-9180-d756d966b3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c874dbb-c60c-439d-b739-39ca9aa5a444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722116a1-9090-4425-a520-b47d43b0c170",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7a01d1-fbd0-4d8d-bbe6-cf230f26ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7debd09-d5ae-4036-80d3-49f570bc5a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f301fc8-f4ba-468e-8c22-a42607870935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b76d8a-7f99-409a-94c1-6d5da7cad8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc96af9-7e61-44b9-9618-664d68c291f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85673254-405c-4c5b-b9c8-280f0c71f00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd140fa6-cd98-49a2-811b-bc3434e75919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05bb99b-84b1-4ced-8b1b-81581ecc9ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "faef5a73-9255-4f56-a216-79e9cbc993a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afe07fb-235d-4dce-9520-ca520e28f93f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5abea6-af96-4ea8-ab83-f50d65e8af5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb9050b-c6d1-46da-b320-8e5d349cc977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c9f499-e53b-4043-bad5-b3c4713165b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f847d9-b1a5-48e0-a684-66c67a3a47b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cf0acd-79f5-4ed4-8f36-768e609b3801",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39db5f2b-ad94-4023-b707-87b408653bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3343814-3269-442f-af88-bd2112cf0066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12a01ce-ea58-48e3-8bbb-307798fa9925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dae6fc63-6447-4c67-a653-cfdfe6f10d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b6c2ee-d9fd-485e-98c0-4e026810781c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab285b47-f892-47d5-921f-e4d8a29874ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2ba5b5-ae34-4ec6-a247-1ab25af6f431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49fc54b-c6e8-4651-9687-34928ba8bf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a1f394-ab2f-4548-97a1-33abcd6ccb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9ce9da-0dfa-4fce-a8c2-2d84c271921f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fc2436-b322-4f69-9425-396eeb08c75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ae7dc6-02be-45e9-9abe-04e7b166a86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810fdff1-bcd5-4248-af8a-f4988931284a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f883cfeb-f770-4c61-b6d8-0cbcd70569b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f8dfc5-de2d-4c80-9f42-dfab278ee86c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25130fc-6f34-4ba5-85de-e08cb57c25cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96860f2a-af2d-41b2-959b-1a5f2bbe5ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62abb0ea-d54d-4b4c-9771-77447f87eb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1510b0-223c-485c-b1d3-50accb09cc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740bbb49-863a-40ef-becf-c5b2281424d1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e413776-b241-4cc4-b220-801a5677e31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1bcb83-6176-4449-855f-93f792e3a3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c321600d-1b9f-4c1a-ae97-063b8d00467e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7f60c9-cd18-4b2b-8398-5262998d0390"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "533e0e1f-9752-4536-9f8a-60253e7438d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13f1389d-d096-45cf-9b0b-6f657bbb0b81",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01580b98-5aa2-48e3-8019-5029e17494b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd3fcfd-fc88-4ac7-a8f6-b1b137768968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fc9f2a-81db-4ded-9f9d-aaa1e4dfa5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b47af7d-3c89-430b-9399-d71031459272"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bcec455-6733-498e-8399-fb30d9c60a94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e149605-8f5d-4edf-b3aa-4e1d7656a889"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c4f1a84-42eb-4143-abf8-2960252dfb1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90ca2b2d-2aa3-4c7c-9806-a53b10b10bcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cf31049-a7d2-4b87-857f-19330ec7e6e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6966f89-0118-49fd-9a24-fa58d7edf0e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf1ad34a-17b1-4a39-9f59-091ba63ef884",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ffb1bd9-828d-4b2e-bdb6-e86428659816"
            }
          }
        ]
      },
      {
        "id": "89319db0-44e5-49b4-b8f0-ae1e938d6f29",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1a16fef0-aedd-445b-80cc-52e513c86393",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfa4a2d4-5859-4c47-be48-aef1e944fc86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "abae9441-c5d0-48af-bc41-4fc7046fbf5c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b64ff7-db8f-4158-82a6-a0776464d5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dba6772-16dc-4d29-8c7b-763d4237b8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b163fb7-4427-48e1-9772-18cd91277dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2a597b-53b6-4ef5-9ff0-c1be969840dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448ed1a3-ed1f-4a56-bc89-f28fd02443db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387f47c1-5ca2-4c5a-9dfc-9f8629e7aa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba5d610-4026-46f9-91b7-eda1fedf7131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce67280-66ed-4bcb-98b2-5d44fafe9bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "018dd40d-ef91-4ecb-9456-523de4745b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573c24a6-d0da-4c9e-8b29-090504aec77a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7050b5e2-7445-4e60-b235-9b5f99c40497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d384933-1eba-4138-b762-1e7a1368ae48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f513caa0-6ff8-468a-b9e4-7cf9e67bf4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91405bcb-31ae-487e-8852-a6901fe013c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0783f4ed-5ce4-400c-8a3c-f0eecc86e1af",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d639ee-676c-4507-94b1-088278d9850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95722d0f-9a6d-41d6-aea2-07b4972095d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d504bf-2d16-4e08-b95d-e008a9176b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e877ce0-dd48-4f4f-ac65-7b1d76bc8f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e1b326-7489-428f-9ecd-5aafdb07c8cf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd16590-a03e-4d70-8f62-c3611c3551ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97593bd5-bf58-4e70-85ee-b27a62507815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f99e84-0ca1-491a-8c19-af92cf0311e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bb8d2c-849a-47d5-a912-7a15f0d0b48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca98a652-2b86-4964-98cf-376f41fc03b7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad1e3ae-460f-4c95-80b5-129603320e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ab8444-4cb6-4b93-b3c9-331c2cf6cd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783e1b20-073a-42ea-8cff-92eb08bc9d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58509f31-ff68-4c97-adae-670141cefe4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc323d3-c12d-4396-97b1-38b218a2ce81",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf8f5ed-aa1c-47a0-bbdb-b34621688022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97352628-9f12-4e94-a990-d3de7d93cf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404d295f-3557-4fb2-825f-2c62851a1436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ce8cc9a-05bd-4598-a6aa-0741068bf136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12e154c-c40d-4f6a-9039-fed7e7b08b9d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9133547-cc96-43b3-b1a2-65177a81b545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379bf2bb-e8cd-48d3-9f46-b05e4896437d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27cf1b5-bfb0-42a8-b664-cf9428b16112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e9a3d03-23a2-4c85-97bf-d5e04de080b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06470fd-0477-4913-9128-e098ec960487",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d518e4e6-f52f-4053-b211-4dc2fa2a655b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f65cbd-76ec-4f31-a20f-13e142153e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9662bb6-3c25-46d5-a528-be7f5d993ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63cb3491-5528-47b1-9e98-4e766474bdeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00229f86-1dbc-44e2-840d-db35cd3e3d7e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22965a31-1223-49fd-8e73-9bb1ddacaa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaa2501-f96a-4d70-b094-0e284476e57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affc30fd-2cc4-4425-98ca-bb2ab1fb9847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ebe2481-f0f6-4391-bfdb-615dcd3d9897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c008b24-6a79-49c9-9384-16b5b5972c3a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c503024-4263-4bd6-9ebe-2df842633a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b8d6cf-b846-4b55-9b42-e26a2f8f6f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323bc315-0428-4df0-9247-4c92c6aea0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "91381f76-2860-4005-b21b-9268d787eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04495328-409d-4da2-819d-1cc0ffda6663",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31984dc-db51-4294-a076-ec53131ac66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3a6496-b060-4fce-8914-233e5462322b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6e8c5e-cfa7-4bee-acff-571053183c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20c3906d-116a-45f3-b8ff-00641fc4c2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45667e7a-4933-4f7d-836a-00172282831c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162ec750-1d97-4459-96a6-8f573955bb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2a2987-9284-445b-873f-e6b4eeff6a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848be68f-ccba-4f94-983f-07aa43942cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac9297a-3868-4596-aff2-c7165514e9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ade875-c251-4aa1-bf92-ae5a54e0aded",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70067e65-fbfa-4b20-a816-b880d4d642dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af24c939-7772-4a7d-ac8d-6610715e6206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5e4807-5ea9-4480-9e0a-323060be3b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9ee8a9-d0c4-468f-8f33-b2e961e832a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379b99fd-163f-4fb4-9adf-6a6d8ee89dfd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a572f5c8-602a-4225-864c-8c4724edba17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "895faa94-f401-4295-b8e2-596fc9b2039d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9bef83-270a-44a1-9762-4b852dce4496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8938a2f-77e9-4aaa-8b16-6a6af4ee5c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf3724b-0b84-47c9-b456-adb47c59c8b1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfa01be-4098-4409-9d47-0f42c0bec956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130f8785-07f0-4501-878b-1bc8fc2c332c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20af35b8-0431-4394-b7bf-8cdc5248cf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e62caa1-29a0-4b23-a01e-e2344b98516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f632825c-aad9-43d3-ba9d-40ce249cae13",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c8e3f0-164b-4062-aeff-8fc966e13e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c1e34d-ff25-4a53-b1d0-a6d7873712b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45537e76-a73f-4b40-9f94-b629cb868b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17870856-21af-431b-8d27-3f312d8aca56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e77887-2803-4b81-98cc-50caff735339",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b391f056-7a37-4a38-8421-536a92192b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb38edf-b6e6-49b5-bed3-472699e6965e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6e8d13-da4c-4f53-a512-39ddaaa37f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a89ad22-ac96-4a1e-9f31-2069a1e1c32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7672fed-a3a8-4013-94cb-435513ca373b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352ac8cb-48f6-450c-84c7-2ee2aba28d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d37b918-d53b-4e01-8bb6-5805024f4358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee92e62-5865-4a29-ab66-20e261f606e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0aac28-0d40-41a4-ab0f-e25bc6041ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89df9e90-6e36-40a3-b93b-4e7af024743c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1c19a9-d16c-47ae-85e0-f899e0a46e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e21b7c4-e5c7-4e4d-accf-de50acaa5cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a064f79-334e-4df2-ac70-f9e5236a60a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e74e25-a5ee-44e8-ae16-c718a385cbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfda565-79e5-4dd2-a970-3cc689022015",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ab8afa-99e1-4a46-8665-6b53163bcc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526c25f2-22b5-4837-8f3d-e7e3850a9f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89fe069-ecfc-424a-bb05-4d100ab2bde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf5bd39-f6db-411a-b655-0a040218569e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f704a3e-a529-417c-a1e6-accc793d25da",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723eea0b-01a7-4e40-bf93-2e2fda5af2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b015df6b-28d8-40cb-87cb-b1a7a63fe240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017898f2-07b0-47a6-ab47-cf814fecde68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd0130c-b935-4d82-a336-08cee76f2eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1022a9e6-5436-43a8-896d-da6b43701240",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eb64ae-e113-4768-b02f-e96abb5376e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc123131-ad22-47e7-9077-150b6bf869fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5004f0-2953-4507-ab34-5c15b2806682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ed483f-eedc-45d2-be74-8ec0792ec29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e3ee1a-e903-4b00-a9c1-2a2a8323aa7f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6934b837-25a9-4b1b-9c00-85b96ba82dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c674f903-218f-43b3-ac8d-ac61aa4b4c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bc9668-625d-48b1-a4f5-2609c4b8e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce753f4-5e10-4979-a5d4-744dc20a14b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e5ba4d-f336-4ae4-80d2-2b29bb163cbe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597a6521-7829-40d9-8d8a-c823eb827d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a358985-c281-4872-931d-8a2fe980c270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063bb84f-cbf4-456b-a1e7-a34bec19db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f9b5d1-9da1-4c81-97e8-98ad80873326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4855fd1d-1ffb-4f3a-a412-f6fa3b2d4f2b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc0c4c4-73a0-4b5a-a93c-62e0f145453e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba5db6a-f23a-471a-91e9-b0c8b0900137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c447200d-fbb0-4d1e-8275-7d927023169e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9454428a-aa66-4c39-bae9-b142b3afe834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cd22be-3a89-4d17-b27c-1bbfb42ddf5f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723892c2-ca9e-4da9-81e8-a13e6af25d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e8c159-7101-495a-947d-5a9f273fbc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e44243-ba13-4229-9d33-6ce5dd8f822b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc28fd7-ce57-4b9a-b27f-41b6000c22d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ea8e27-15a1-444e-a5f1-97dea0f5c9db",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d740f-5898-4f0d-8481-946bd5d5240f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78853549-3cb5-4f57-815d-f12cadb5151b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7573d22d-fe8d-4db4-8916-4bdf999e7827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fefee390-df95-4f55-9526-bfb9c575e7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe5409e-d73d-4c05-9173-3717374592ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca33db94-57d1-464e-a20b-d5fe12879e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983a8409-f4b7-4717-85d0-7caf7c379b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bb0d8a-6b00-46e2-b305-587465232041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "909d08ff-3fa9-4a51-a17b-7a3c407f31b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dd1f0d-e2ff-45a7-9115-656d7e157852",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e83c72-becb-472a-b912-23c266f20c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fd7328-a83c-48c8-833c-69e490564006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5eca5d-05d2-4f73-a434-5975f8d37d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e887fad-f146-4d71-8067-2c200c9b7441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1953bf6c-4d9b-48b4-a04e-a2b62391d4ec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b7b044-b629-4765-b482-dc4d8369eeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8698bd3e-16d4-49dd-98b6-c12e53a8d4da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9536f40-31d0-4c46-8338-870609fcd8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5486511f-bf35-412b-91fd-d91d71243a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c0bf94-81be-4040-867e-ecf6603cda22",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d644377c-934e-4481-bfe8-f216a90659f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb126dfe-d9ae-4177-aa93-6e634f291eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbc4147-4764-4f93-8c35-b6ce24ff49be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "384c0b09-1893-4c17-a582-0c29b6774201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b192c7-ff3a-41f1-bc46-101bd1649694",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a29fdeb-9fc8-4555-847e-1b42d5ccec2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca1bc4c-c888-4d86-a1b5-53ad4bf6ad8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab50def-1c66-4256-9d52-83e451e44bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f347c540-6b05-463f-9967-e1d1d2e88620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea9359d-7c62-40c5-ad76-7363bf3d90f5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9a5a31-f4cd-439a-b7a2-3901f4f73b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f3209e-ddac-48d8-a79b-9cb1c74dc86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839cdea8-2f3b-4192-b999-563018190217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e41af9-f94e-4c7e-8480-62fa65e57b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fb4460-7fad-4da3-a6ef-13298eed6c30",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7893430e-1620-44dd-a10b-b8bb7d218056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c884e8-6eb6-4a49-9306-73653a30f1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84dcf85-a4cb-42e6-854a-f46ea5bd5c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f52cbbe-b2af-4a41-83f6-f021d871515f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e85d8a6-992a-4d0a-9519-520f10f01fae",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880773bf-b712-4702-af91-d518f5d76ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b6544c-f602-445f-a801-d6cc4312d7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461bcca8-50eb-4725-ba62-4799fbec2b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "114a4861-82d8-4215-b63d-e4c1e2c1f62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247787bb-c818-46d6-9690-3b903026cb19",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdaf35a-6d2c-43c0-92c8-f4d383957a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4a2a9e-fcd1-4ab6-9067-097251811a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e498a96-721d-4afa-be13-2d65dca31059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d69fa9b6-ffc7-4c0b-9d25-f7b19fc73247"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90b48ba8-0be5-4ea9-959b-e3f88d43547e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "407a9df4-222f-48ec-8989-316fda5c4c1c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc486c07-f0f2-46a4-9624-0faf964ce9af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5086d1c7-c453-49f7-a3bc-00888bd40e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a353ea-1247-4ee1-96e9-207510bb8cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33c31dcf-3dea-4568-a2d5-785aae809341"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cd7569c-df4d-4b2c-8adb-cea56336d528",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ba94db1-0104-41bd-91f1-5669a65f80c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "743a67c4-ad98-4992-8af1-9247d684fb16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7862141-16a2-4994-80b3-c730963710cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed1aa0b-8e9e-4b52-9141-62e81f008f71",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d83a2cdd-70a5-403b-8886-02dd751d0a6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c80023b2-6a2c-412c-aaff-f2c6f82a9936",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "108b9749-b1f5-4c6c-ad90-2257891d2601"
            }
          }
        ]
      },
      {
        "id": "1e9d0a12-355c-4c9b-8c6e-80c310114f1a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "83ee9770-aec5-405c-ada3-d8e3a7c6da0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbfc9b18-0f9a-4c76-b1bf-7e61d468d185",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52388386-02fb-4518-abbf-b94be8177401",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508ac8b6-ccdf-43da-86dd-4ee773b938f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583c945f-26ad-4118-9184-fe67d92a0f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96384786-c573-4534-b99a-a62c76581b50",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49f46d1-192f-4399-8978-df96953bc9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d61dc8a-b627-4416-8b53-c4c5ca5e8f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6840e1-abeb-4785-a757-9926da90a2d0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a76a4b-fabf-4983-af89-bc2ad7e5165f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1d49c9-e690-4848-ba6d-7eeea9f4e96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566f707a-0b09-4395-a063-2a5a04881087",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba42d84e-38e3-40df-863f-d7726e394d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafefaad-f2bd-44ab-a1f0-880f7bff0b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a35e35-ae72-440c-a51e-bf6871618c26",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51934aeb-4f7b-41f2-97b8-de587274a5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8a91be-9759-4218-8fc5-c328f29c7549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999ff775-58b8-4a12-b9f6-b16ac777ec74",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8379560-7a3d-42db-8183-d73053e2aa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c770f7-0056-4e8b-963c-24b257bc92ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3812ff-8fae-42a6-acc6-53dc2cae0db7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b6a0fe-68b7-4b94-a6fe-e668b652c551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc509ed-8212-4fe5-b8f0-41630df47a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81bb87c-9184-497e-a0aa-c1ebe2b16965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197f2cc6-1af6-4522-9b6a-c9fdf727ba78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32443c24-4298-4dbf-bc15-6db2e9f2e596",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9f4ea7-0729-4591-bd2b-bbac075882e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04609eca-94bb-4574-a6f1-a75a758da54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6043d1ae-1678-440c-b695-e377c91d79f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4686cc2-0178-45e8-97d9-b389f6a52bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b311072-8f11-4c0c-ba3c-7635a0cc5ce7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ce722f-82dd-457b-bc1c-220196e90b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c25902-82ab-4ccb-a9b2-6d59ff8b6d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a139704-ac4c-459e-814a-53aa22b43383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c5b3c1-b36b-4ee3-9352-7235052b4742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b7a259-a594-40d2-80e2-81bb6a091e47",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de1d0cc-d93c-4a4d-ad99-3fb112ba7c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "137ea2b6-695b-472d-bd3a-e1dc0256aee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87295f5c-17be-4d87-a19a-320d69d4e0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b51ec2f-aa66-48be-b299-d3d7455a4f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c8b864-2b6a-4fa8-9d52-8dbdfcd6988c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8c8bf7-d17a-4661-a7c5-dab6a027d212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b8e386-42e0-43ad-b17b-54a113b81da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e2c400-c048-4754-aa9e-ee9f421e16df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e04cd85-e631-4c24-a363-a0fabdf37e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16afea9-961e-44bc-9b99-f94b2f3be4a5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38021d0-e896-4251-af44-5b43a97d0b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b472837-59b9-4d47-84a6-8dae5b97a76b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2f1be4-54a3-4ce3-806b-7f0730c4d084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e674690b-61b0-4b33-8270-3ae4e6fda10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62b8aef-3c1d-4731-b9fb-f89a532885b4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fb22fa-4b5d-4e93-ab59-2bce82bd5a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9c9c6b-0f83-4b03-90d6-fd59c23e946f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2c2ecd-0eed-42a1-ac2d-7056523e5bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2010ec-511e-4f3e-bc53-6af10d1a2cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d2cb0c-4b34-4fdf-a4a2-e7af2d949ed7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7cc41e-d1c2-4167-9501-72c41c888a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c2acee-b5bb-4179-bf3f-4cd507e123bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdcbbd1-bcc6-4cda-9c69-ea5d504a3194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cca3133-c110-4a2a-8694-bddc1e360072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f5d7f2-7324-409c-b4d2-60169911bcb9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4745f372-a2f0-427c-9b60-3a2af0414963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d55835e2-8a4d-4600-b7ec-e8113ff9ac00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08351d9-34df-4d69-89b4-890f40ac04c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0deae9-2780-4e17-9f09-06a5c8be51ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d0c193-57e3-47d2-8b78-cc9f3ff119e5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfdf049-a817-4297-8e75-f30a07fd2807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c6bb1f3-c560-45d0-ac12-b5b5a396ffc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945a6dcb-8c8f-40c8-a814-a734f504128e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def276bd-9a95-42cd-ad5b-c7fa51acdd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd97e58-d917-4b48-bcaf-555113c7acca",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03e2681-eec0-4253-924c-22bfb5be30f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f72eba-e272-4f71-9018-2315202f68d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6994b7fd-c7c1-4c69-96ed-ff4be3a918be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad33176c-5ead-43ec-b61e-97246ab6ef6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c564a435-49f2-40ad-accf-783f5f27bb46",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfd7dc4-d6a2-4f2a-bbe7-21b7b8ba0f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9d36cc-6672-4687-9d0c-871d66437608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03882d22-c191-4adb-91dd-8bbf292ad91d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285969b7-ee1f-4afd-8f5a-238173250dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a27b212-9d38-4bfd-a647-30845a597008",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673a29a4-6ffd-45ad-b9e9-266b6e112351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9660cca8-44f7-45c7-bc5c-73eacbec065c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c0aa57-4f81-4a18-936e-7e01aae7f639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84cfd7f-0727-4848-bbaa-c8c1a2172840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33633a43-f62b-413f-abd7-5e366a23380c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9759ceab-fdbf-4778-a9fb-07f57892d0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbc938c-16ce-4f0f-80b9-e6ef72e6a126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee4eab3-2198-4dbb-9a90-ec938abe4570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a3cd85-4860-4b43-b3cc-be36e447cf8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cbc367-7dae-41a8-8b32-709776550567",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b8e1ec-42f5-434b-8b31-9bc2b5dffc9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4030da5c-940a-423d-b8a8-74f32453438f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d3880e-bba2-4e1a-8845-4a9e9b04ec41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02deec4e-95e7-40e0-b163-eccaf1cbbc97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6577375-c1b2-4821-bcfc-87a62133242e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231e550e-5cb0-42c1-b11c-997a33f30022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdb1f41-d3ab-4551-8027-aabcf795ef7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf81d73-da1f-4ab0-b4bf-bb600f2a55fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07c0dbc-83ae-4ff9-8b32-2249017df67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbe8819-dbe5-451d-b816-11c0fbe6a9c5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b885c305-9aa6-4c5a-bc5b-d5b57f40b1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdff4ba1-8304-4507-b615-a34effd605f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da4fc98-874f-436e-9760-d7a5c05a1616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588da2f7-6ec9-44b5-a8f8-a4e2eb46a2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7ee64d-329d-4db7-b82e-c80de61994d9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026919c8-6188-4cbe-9d6c-ca330778dc86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f595753-2a2a-46e3-9937-0b555a7afa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23be5d15-b2c4-4053-be0e-f984c765b376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c2a130-1b58-439e-9383-58bd553c57f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aeeff4-c2ae-4f3d-964c-48a46d3fc0d8",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d0bac9-d6ff-49e6-b7e3-4e1fd1cb8c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06502e7e-9c66-4e44-aec8-50d99c0a72dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b1d0e9-2ac3-49e4-badc-eebe257f6f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83498c75-e406-4bb0-b4c0-a17cb3075cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c74a2c4-fbc2-4597-8695-145e802bbb0f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee7924f-deab-4e97-9fa2-3460c7fbd22c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05572a12-9310-4f7f-82b6-5a6f3daef590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79746ef-0405-4367-8f62-96f6de060e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c6ea0a-d5d8-478c-8859-79251c507ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b986787-1f92-4aa2-b8de-30c96ebeacdf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36a680f-739c-4d4a-b97b-546d48d9901e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170209bf-2002-44ab-abf8-6f04080bd9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283e0be3-d607-4127-b81f-7c8d43290caa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9a6f14-7ffa-452a-b31b-cbf5fa877d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebb4653-531d-4de0-8e11-3e9ef00e7939",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0990415a-e4ed-4d89-bfed-a826560e00f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e429d53-ca72-403b-b912-0c0fdf56f133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9b1970-68a7-4143-b121-88bc13a689ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3323f8-f4b2-422a-a39d-1be9c0e540a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8627ec20-d48c-4542-be09-00f443c61547",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1856a02-31a1-4560-b35a-035bc53ee0ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1401d769-a339-40ec-a331-2f066ba1f27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1025ad90-08f8-4f51-95fd-14f8e9a8654e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cada16-4227-45c1-9f3a-3bebbf3d386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63c6d25-1081-4903-a90d-c254a9283122",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63ef000-9ed0-4b19-8142-67871a854e85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2904501a-57a3-4298-9b2b-be81a1231227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3667e1ec-392b-4729-880e-555fd1c6e13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85742c6-b94b-46a6-8ddb-101b4ed70528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a5f9ea-c519-454c-8cf2-90ef24da7c0f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361d725e-4c24-49d2-9c2d-2a6e3b85aecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a38f3d-c973-410b-9ac9-9f91af7fc980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ea2abf-748a-4e0a-8534-777b7575da2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5939083d-82df-4f3f-ba2b-adfc2d045653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8260b39a-6e4f-4c30-af73-8c55d78de91a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4813a107-3dde-4d52-96d4-c555da66f637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f9296e-15a6-42ad-a0cc-be6f5263207e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2f712b-86fb-46ac-b5ef-1f090c69bdff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb10e7a-7cd3-4fc4-848f-1fad14467ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979b4f19-ae2f-4f8c-aa30-5e693351883e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50c36dd-d7bc-4f9a-80d7-d6c4f196b62d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c48643-0b1f-4bf5-8a81-e420a58abf54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b862bdd-55b0-4d13-8579-eb002c7f9cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc3d772-c88f-43e3-ae95-31f1b7409ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a538e6-0d6e-47b0-b79e-ef1cf50fda2f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137ffcd1-02f9-499f-ac84-1a9234de54d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a6e19c-3a59-45be-abe6-32db29e14129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8017762c-45ff-4873-a758-d349e902a9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c880ac0-f956-4b37-9e1f-61243fb71218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caeac5a-145a-439a-9cc7-c80937c1e76c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cddb012-58f3-42a8-869c-0f8a3403026e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53d6b82-e56b-436c-a140-d4a2cb443c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6956350-0fdf-4ef1-8672-4de6f195de40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666fb9e7-5b59-4134-8a9f-7c24fe7f6f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9511ac-409d-4266-a877-3ab4e14ddd45",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aedcdde-8e8f-476b-89c6-bd81ed47ae9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed5b604-028b-4fe5-afc0-bd457a7685e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fbbdd6-8164-4de0-8123-9e91593748b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd49653-b05e-4fca-828a-797d66b1f059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2318bd-93ea-4da8-b186-3fc4e381cb48",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b317b1d8-bf96-4313-a3b7-eafc41a4116c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86c4abb-7f0a-4c6d-a457-1b5781a8c600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96d179c-81c1-472f-8606-3cecd5bf7abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d130d4f6-0523-4e4a-96c3-beabb4b50198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ffc496-2b80-42cf-bbf1-b8cca4143095",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c308d0ef-a85c-4831-9eaa-150f7db51c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fecc83e7-659b-415e-9cbd-976c8f242f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318f54d6-41ef-4ecc-ba98-8c06514c650c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5bb5fe-2969-46c3-afd5-d99cd9bd430f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2ab921-6f06-4f9c-b917-59dd47962757",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eacc6c87-9c91-4db0-ba37-c854bf888eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a643c8c4-af97-44d8-bdc9-40fea2460efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360f455b-da04-477c-99bd-eb50db5b03a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71538f06-46b4-4c6a-9fab-0d0902d42c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a88b058-6e1e-4f22-9f16-6df69661b283",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55500580-8287-42c5-8e7c-067d263c8ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7098f8b-0dec-45a8-8df7-9e3cf56020bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe7b0e0-bfa7-4a3a-975f-868e06c97344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0886ee8-437e-41dc-afa6-16ebdc5d438d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d33ed6-0762-4f70-bc3b-71eb6411c4c0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca927ce-cfbd-4bee-a77a-0fff8a52bde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1b2bdd-f980-41ff-8efb-e035e0a63286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9a4f97-814d-4287-9743-983b190eb31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe763550-13f2-448f-a8e0-52102f6bafb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef11921-13ee-49b9-bc75-adc4643b13e4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e475c3e7-ea49-45a7-baeb-8defa41d69eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df02776f-cf5e-41bd-acdc-d8393d2ee755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc23ef10-0b91-4109-891d-c4160f7bb562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbee9e4-8914-4f88-9fa8-75c984e046f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb822b65-086d-4733-b12a-1e5b5ec8c255",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3b6a9f-810f-4954-84f1-8cdfcf88e305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8433190-3c34-43ae-af4a-189dab1b595f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522c395f-0b5a-4145-808d-582e65917a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff5bcd6-4bd1-472f-81b8-e2e54c384822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b14c3b-c19a-4d22-bb21-432e166074a7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b906c67c-6e90-4e01-b01f-433dbd36cf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e73e539-b180-4fb8-a936-7b2dccb939e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00624bc1-0815-4397-9a9d-78853c561460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fe9e70-7ccf-4618-ab2b-5cd970a3223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ce7d4c-d0d0-49dc-952a-c7c2822ed6d7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b04fa7-3205-486f-b2d6-ed100b83531f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de59622b-626f-4e99-b4b8-c74590ac957a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f1a671-44f8-405c-910b-db661e5ea102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5c3495-0e96-45a0-90c6-58105e04b2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a33aa0-9525-4165-96de-dc0d44d83e62",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496bb395-4ac6-4008-8889-2f38cf4fa242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599ba00c-d89a-40e1-be13-b3e537a52a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ee0e78-1853-4541-8133-06662fa65914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ac68f8-054d-4d34-af12-57176f945d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7505be-4290-49f1-9846-651fcf53a4d6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d25920-e072-4c6d-a196-25779102ccfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cc9e4d-acbd-4747-83c9-f7ad00ed16bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08e9b54-d051-4067-925b-c9afb1939dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c224697d-6885-4f0c-b6ae-5dd3091b0adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7575712-483a-4728-8684-f1dd12171e22",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1215d4f9-6d38-4d88-a6cb-81c78c181c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ce61af-c16d-4d9e-919d-f35292af675e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae59ad-a9fc-4542-a67e-0a1e33a96e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b484b5-9fdc-4eaa-8097-50470db13461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c22ec2-902b-48d0-b9bc-7d7ad199c060",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4f89c2-ab90-4473-8ac2-113820d4191a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb91082-11c1-41b2-a1f2-30414418da54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7a1185-fb1f-4fe6-9bd5-43052c48d047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee50eef3-4556-40ab-a69e-e438eb025ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03e7c6b-3801-4a8b-a2a2-e6c77a258efd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067632cc-789a-42ae-93b1-9d26520571b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae33795d-d291-4663-9a71-f812e24ba2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e526525c-a92a-482c-bd7e-9fda00b3cffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd28bb1-36ee-4ce4-a2ae-d2d70db47a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4ae753-8ccf-49f8-8d63-3211a03e325e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604c0bd5-bcb1-44ff-a97f-c83bfe809a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f5f8bc-833b-45d3-9b5d-47306e77606a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ddd75a-5969-4d2d-917e-e5e978bdc390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9cf13d-62df-4f23-a1a6-1f11a2cc1435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d583325-45cd-43e4-905e-c7b879a30c67",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b617e0-4230-4c02-8a52-34ddca4ae39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3082ac01-27cb-43a7-948a-f217ad210806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362cf346-5e41-47c9-a5d3-53866b60bd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13afb7c3-2899-4c7b-a745-3550899140a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5571843d-5a81-467e-b4dd-d09e4574fe18",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1decd143-fa30-485b-b26e-e034d0680d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bceaa1-e76c-43c8-b96e-b3e8cd46b960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce29dcd-7a0a-4e14-b523-0f424d05c9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dbe7ed-686f-424f-ae63-2012ea5aba41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a002dd-dcb0-4cb3-ae3d-65cec95fed0e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd386221-968f-4104-8e05-8dd19eedcf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a05b2ecf-ea41-49fa-a227-ae07f9878b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1074506-b263-4b35-bc93-c90116e5f6c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7efd85-547e-4a15-bf3c-dbab5a70119d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75d5294-417b-444c-943a-b722a1d86b8d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7762fa2-472c-4e67-8eb7-2d93f98f7ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e62af38-59eb-4b89-8195-2cf1f9dd5861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e56709e-6f48-4e67-b0e5-ebfdfcbad44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697a2fb-d5d4-4009-a4cc-9bc8bc80ec4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04526164-39ca-4b5e-bb7a-93956ad9201e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbf2be6-7685-4c9d-9c0b-dff523444f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9a228a-f71c-410d-a77c-a4a508aafe5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6688dac2-6d60-402d-acc0-05da472bc1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f977a928-5d4d-4ac2-bfef-3b236eebe0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1071dc43-9aed-42ca-b026-487df89b6a24",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b40d7b-e6ec-4886-8bdb-7a6c12f72966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bcec3f-60fc-450f-86d2-70736655b91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eb86b2-bf85-44f4-8771-8764f8c4ecf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fabd79d6-f0ec-4e74-9700-5d91a52a83f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ecf1d65-2047-4902-9a73-fee09087414a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598a5655-fb8e-4375-8735-3e43d90cd333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87de8764-f998-4779-92bb-df6a71d34ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49c4cd5-5605-41eb-8ca4-30b97eee9718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b929a98-888e-447f-872c-3cc94aa3bb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83f2c12-f764-4a4d-bcd6-f173e3e922ee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64a4b10-ad59-4cde-b5ff-4bcb6b1e2a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483d1791-dd80-49b2-8b77-af647c31ad77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eefd10-8add-4ae8-b1a4-13d99b5e01a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c5de14-91c9-4a76-a3f1-0cbe0ed416f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e309c995-7e98-48c5-aa6d-0ae3c75c1ac7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d791fc29-953f-413b-bdff-9318682ba381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8551f82a-356c-4524-b8ea-cd47dd60f8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae92d755-f8b5-4688-939b-58cab84afbb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5db208-03a4-4706-bc09-4b1462463f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0262139c-7d13-442e-b41f-03a3d6098cc5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98c9c4a-71ba-47be-b202-242f614456bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9a1a00-4902-42c7-a13b-207cd7a5ba46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de34a9c-eaa2-4060-bff3-9c26ea38e2da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb4b2a3-199a-47e9-a02d-956e2ef7ef37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473d8e27-392d-4110-be2d-73ac0c044fd7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e7e7b3-75d5-4077-8c6f-cd109989cd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c54f66-b59e-445f-b4aa-292e36d2fb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af16f108-826e-4d42-9a83-c872fa23f386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232a9623-db17-4795-bfab-4ea25026e424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb69ab3-c37d-46de-b38a-ee398e78fc6f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b330a3-2b0c-47db-a5b7-ca3a6c35844f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bc2c1e-9608-4235-bae3-0400fbf19a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c81032-d05c-4f23-9178-32a05bae9e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feab5350-c664-4187-83fc-6eceb7f04541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f8fc64-55e4-4b36-8d5a-b81b0aca5ab6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662fae46-16d0-4319-805a-00b44f2e05cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df22512a-e635-4743-a0e2-728d2e652c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baea7901-f50f-4746-b8a8-550ba2519b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0421b703-4046-41a1-8913-42399c5b30bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07162283-df71-45c1-8efb-a5049ed6733e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44f928d-bf65-4a27-95c9-c3bd99237a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a5f24f6-bdd0-4c43-9214-4de725b8532f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa42de4a-3626-4a79-8130-4c21e8b21ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0919eb0-9935-412e-9938-c92f258fc526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cdace5-7c2e-4d2b-801d-c835ef71734c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd9629f-a39b-4f79-9ca0-85483d7a91f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "205fa63b-3d5f-4456-9d19-99b3c7d0eb90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed35d55-71e5-4c72-8165-18c8d411d35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258e9d95-31d8-4ea4-a4b0-9569f835cded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc3290d-626f-4bc3-9998-e4131e5f22c8",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cad8779-51c1-4c2c-9ba1-65d67f853de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e901e7f-6818-4b01-bfba-877ea2e215c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f40cd0-1c46-48fc-8acc-3a45cdc04d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423d35a4-fb70-4f09-a005-1f310728b5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e7156e-edb8-4b4a-820e-6828cdd6c0a7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f475f057-7aa6-4ce2-b852-10315c0f6bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af92a8ff-7a7a-4c6d-98d0-944f653b70aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f224fc76-3593-44ba-8405-2dc6a81308df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2281123e-80b7-4454-9e8d-7a96da1fa5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50728e4-98f7-4a89-b801-65c6c8058bca",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ea305d-7bb6-4591-b25d-8f93a39bd972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96055250-6d12-47c3-bef9-a2f8d66df21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee190ea-18e5-425c-b0ea-6ce640ceda33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4315e1e6-5936-4ca4-bd4c-c0522405e2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c687dde-bfe6-488a-8bdb-db0bd970e4c4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019a5bf2-9d2f-4f7d-9101-f2e50adf5627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed88a794-eb57-4010-99b8-4248b4a5fa54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c3e29-798d-4f71-bb92-f037ad7b0b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a86b5c1-eee5-4afd-84e3-afcc6cd0bc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3877fd9-b969-4f1f-a0c4-eaf0a20435a8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3b5dd6-e396-495f-a874-5af89d6a3df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0993081c-c1be-4b95-8141-f51acfa623f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80bd8a8-a386-4837-ae69-36931ee25f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c2ed76-4d40-436f-b40e-c2de92361175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86976522-580f-45ca-b925-0899b8c3b749",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5201182-da50-4603-8d38-6289091bb4a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a0a661-13a0-49ac-bfa9-6a74e004a498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22925861-dac7-455b-8bf6-32de929ebca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28170a3-94d6-4820-9d03-0b58dc4f3aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e334d402-e662-4fe2-8d4c-7526fbd16ec5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca19527-7020-49ff-956a-21ef912bbd47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4084e9a5-5450-440b-a8a5-632094e01123"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8106e61e-21fb-4e00-82dc-0f46e3df4c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2def50f8-4cac-45d3-a174-79f6daef0513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c17bd8e-a3a5-496f-9112-102ca4bc31ea",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4c5aad-b1d3-4b22-8048-05fc2db7cb7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3dc98e-2d6c-4ea0-952e-2b5aae7255d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c74cb-fd6e-45af-ac52-be82053f85ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762e6082-e56e-410f-9d2b-12b2ed4f5056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac397d7-f702-4010-860f-5072858e746e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c84e0cb-26f2-4d33-bf86-55d4a01ba546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8561f9ba-5118-484a-acae-0b9e0414eb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c350eb-ad8d-410b-b411-61c089a5ec6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef75a5f-ccc9-4cac-ba9c-7e674d609564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8059b476-e25d-4fae-93a7-4baf9b6655eb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0002247-91df-42eb-9a8c-fa094c220a6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e4a02a-3e68-4285-b6d6-e30800073e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3d4882-a35b-4f40-aa50-ed2af7848ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76365c85-4f9e-488f-9730-64cb3c8ef68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2127fd7-e5c7-4bdb-aeaf-84aa99e1a730",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48048a8-41cf-467a-ae6b-47a7b9a180fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b31fabc3-afe1-4a61-b4a7-f087d87878ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20691d33-4aba-4ab8-9399-7600e23de07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4552a31-ad24-4a72-a998-8e19b4520aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80107d7a-fe44-43d2-8462-a5741478a581",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37aa8bd-bc10-4812-8588-5029126552cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ad6c8c-8c77-4581-b2c9-ed657f10b0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e8de93-1486-42e9-852a-e3ce75f22449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967b4d84-8221-4621-b999-3fb5045e69ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a1770b-5d83-4e10-84bf-4912aad40114",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6191a27-2c3d-4b4a-b7b6-d873333994f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ec70d3-41ce-4791-9311-9a09b0828d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3864ce8a-c424-452d-8168-cc16d6349c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595a57b5-4612-4495-a3f8-6534671f73b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13faecb-3491-4b7e-9cdb-9f5e49cdbe33",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f11379-998b-46c2-9e83-1a5d1d0511a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00432b0d-a069-4916-ad8e-798f49a4505e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae917653-fa60-4c99-9afa-632cb2a82bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d112f277-ea41-4755-81b2-b182b6ac62e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e53a44c-60b0-4ac7-a3b3-3a9315773925",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee5f392-3baf-4e17-8728-fa794abc07de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f46339c2-0947-4b87-8a3c-c56cfd3fd80a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb43eb2-bb5f-4b27-bc71-621b0775f219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f28f89-18f5-4430-80df-4f524ddb70cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6e7231-4959-41bc-ac17-0e6db3a301e3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee00024d-c493-45d4-9256-34edb55044a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee069be0-dd82-4e41-b25b-e339e274356a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea920a3-fef2-4316-a597-594fbb5e5c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a9dc8ae-5aa5-456a-b2c6-13c3c3e729f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29931886-7377-432e-a259-6f95394d53a2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48def7c2-fa31-41ef-9b54-afe937f79276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77dfd38-e5d0-4424-b01d-a73660c70e9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4df0b0f-7fb4-4289-9c7b-4d082f542877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cf31ac-7999-4a02-b1f9-9056c425f22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa86c05e-232f-4127-a91e-e805825d675d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640e04d8-c5d2-425d-b4aa-a26e363ae85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8890fc71-16d7-4687-bb1c-67940f569c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff08a743-6a2e-407c-a5ab-d82f867e72b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b5ba22-d77d-4809-b06e-4aebc31db2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b01988-f21b-442e-b048-7f3d1f5efbcc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4aac16e-31a2-4f2b-b1a0-22934338058c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5597f41d-cec5-4f9a-92b2-7f279a3e3f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db5cc90-baaa-492e-8f59-1d31a30384d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e463eb4e-099b-4902-a2f1-338da68f0e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eacf0f-34aa-4417-a491-18f46fe54e05",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0122858c-c5bb-4dab-ad70-9750e0fcfd0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a24a246e-093b-43d8-9448-bab2ffb2eb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9463d9-c97a-495b-965d-23de0d34b124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6908a18-e1a4-47b7-ad5e-bb32ad3dc325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b6016d-d32e-417e-aeb1-090ddc6a05a8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b9dbe4-df2f-4509-a6b6-2681acb40b6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19f1f033-a3c4-4a3c-b7e6-14aa0d043561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01276426-01ed-47a4-9eb2-fe34e5647533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c9acc9-c137-4908-9d0d-1a64ea6d1aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2347313e-3398-44e4-8a69-8966422dfbea",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ef94fa-9f24-42c5-b3d4-4383870d2a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf93b22-0e00-4096-92fb-cb77d1bb350f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01759d29-fc07-4295-a76d-ef6dabeb2d18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844a062e-3b56-47d0-9ab0-7980b0ce88d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db55009c-a071-45d4-ac28-43cb5cee9396",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ba4f5a-ac99-46c0-a715-59d34428a56a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da8be21-148b-4675-851a-c002c81363b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56839fa0-7bf2-4390-8251-a17b03cd9c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadc7a9b-2d52-4af1-b256-bd6f1578f55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0ed5b4-03a4-45a9-beaa-705b973b3bac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b535c80-bbd2-42d9-ac8a-98d6274f7d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5467df09-41ed-4b43-9c6b-03c284f86ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f0e433-699c-4eb3-8eb2-22600a0553dc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb52f6a7-40a6-4d0f-b5c4-494153e1a395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf94ea1-1726-42ec-b152-75e16d41be74",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68be8b9-0ccf-4f5d-bf3d-fc18fa26a3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99933198-adc9-4bc5-84b4-423281042fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19c5447-1ab1-41a7-8bcc-4d88d915167e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38119d10-656d-416d-afc0-bbc2425caead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfdfa4f-9152-427f-ba18-4ee0d54577cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d75a2b8-52b6-49aa-94bc-74bcdadf59b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebd0fb42-ccf8-4239-880c-4863913f1a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ceed8f-555a-4229-8e6e-6ff46ed20b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20627a70-c0e7-4286-9f4a-315b6d99ba61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc86bd5-5cc0-4e59-b683-feca81022863",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b0be9a-d0c2-4977-bbb0-4070ac6ace90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e2bfdf-664e-4b1e-a000-ded469872d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04fa1e11-6b7a-46e7-bdcb-7d96b3c4307b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa1a707-49f4-4c25-b8c9-8000bd37df0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab98f96-ead9-4064-b96a-cdbf2f39317a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6698a6d2-346a-4a17-b21c-9e3f9edb9888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a7b77d-7b47-478b-b455-bd144367eb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782ac880-0a69-43ce-8d3d-72176f867e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eda939b-a2bb-4b73-9653-1db7199b4f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f078aef4-6f16-4f1d-8d00-a40435b752f1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d5d1d8-5cbc-422d-8d71-69bafd298bd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23a729f0-0861-4d91-9c2f-ea601e5c9bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4dee65-1b78-43c9-bf59-b4a5fe117db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d17ff12-293e-422a-8768-bbae16532762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68f6f64-782f-46bb-80ca-8f30fd2e28bd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3f8c6f-90f8-49e6-82c3-d3fab582a483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f09712c2-6e2c-42c5-8f94-2a4e09ed77ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206e839a-2646-4497-bd49-caa56501b0bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0494d040-915e-407b-8794-cd4d91f7d830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792602e5-bc13-42a0-8f6c-0e8cf415b851",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbb5007-f8cd-4968-a0c9-d8410041e9c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05c07789-0bbc-4180-a964-d75ad610e058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad2c5a7-009c-4a65-884d-ad4b457d2415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68da1738-a2d5-41cb-8755-a0c640cc156a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1ba10f5-3785-4d30-a566-82ad91e85356",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59c8517a-71c2-414c-8a4d-ad950d0d9547"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0be4cf3d-72eb-480a-8354-5431d9b341e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "31e4b606-cec9-4e00-ac7a-e6d8f3f40559"
                    }
                  }
                ]
              },
              {
                "id": "a475cf04-0eb9-41c7-8630-4e8c89e8abec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a94c2393-fcac-4ee2-84b4-d56beb7a8e97",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b62cd4-91ba-4b47-8afe-4036ca6564dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "38cdef83-a001-4a7b-8b4d-7ef22ac07894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ea5cd1-8b07-41cd-a87a-0274ad9cd8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd05f8c0-64e7-47ee-a6e7-924057131253"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bed8405f-f4d3-4d65-b37b-ee3d4ed3e5f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92b41a1a-3201-4a6e-b906-e43af057a40b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "645ccc1b-a339-42cf-8956-763c359b9cea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "564e3192-7eff-40fc-8daf-9457ec43c959"
                    }
                  }
                ]
              },
              {
                "id": "4df019f7-31be-4ec5-89f5-c0ddbc087da7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "edf93045-6cde-409b-80a4-2c952f6bffbf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd41e2c4-5c60-4713-801d-51e61e9a5054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9293646e-1ce8-46bf-ac2c-aa3038392612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed31650a-1fcd-4afd-bb7b-fc2a04cbbf04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f51f97-c06c-4159-83dd-f271ff18305f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "618f63c4-306b-409a-acf4-6eebbd207847",
            "name": "Positive Testing",
            "item": [
              {
                "id": "489d97b7-df74-42e9-a61f-f95474a86ff4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d7ed721-2acb-4e78-9f3f-366483c1bc78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c39bf035-3f71-4574-865c-b074040a1139"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "319411b9-e074-47d5-a028-445dff004fed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50b37e12-83e2-4393-8d5e-a9d1dabf9eb3"
                    }
                  }
                ]
              },
              {
                "id": "2f1350c2-b147-49d1-a954-a5c21817bcfe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b0b0d18-5aa8-4270-b107-382ee2aa7cc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "25c5fbf7-d186-4d7a-9e10-0c07bbf9fb3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70d44dd0-66a8-4651-96a0-eed652a51609",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8616bcec-985f-4888-acc8-93955d60cf30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "000d5b6a-f84c-455f-88f1-09d4c85c3e42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0852c40b-eb48-46a3-acfc-f96fcc9661a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6145a0de-4016-46e4-b87d-b8933b6c7fe5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d62c25da-9ba0-40c6-aac5-48b68cbabe8a"
            }
          }
        ]
      },
      {
        "id": "4cc6a6e9-bfad-4222-bfec-d1edfed80f19",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0cdb4fea-bab7-42bf-92f2-40a2b3ea9eea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5752e920-c698-4945-92e0-06dd81930797",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d8855d2-4ee6-445c-9d33-fde36c746e71",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f88529-4638-438e-b817-34bb14340cb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "23105d63-7bc9-41af-81ec-32b31847c4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24325c26-99af-4def-9231-709fdd55b40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "262a8a1f-734e-438b-baab-871493698076"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cd32880-f960-493f-a74d-03ee8723985d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0589ec6-3e3c-4c72-8e6c-50c02a65bb58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c31cac3-057a-431e-b533-98a51e01a8c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd096aca-481e-448f-857a-64856dfb322c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ff8e71f-fafc-4761-ae51-c0ca1591be46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dde0f64d-a5f8-4e2a-a2cd-f7551fc877ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2794e31b-dc21-41ee-91dc-1dd4db5ee163",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "004336fb-4cb6-4e98-9b6a-be4a7812c692"
            }
          }
        ]
      },
      {
        "id": "1384dedd-5264-4d27-8560-e8049c2c54ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eaa8fde7-898b-4297-8e81-eb0f0278f428",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4315364a-0469-4b14-922f-4d38d870843d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85903a27-3ccb-46a8-b8ff-c33d33320f3e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad89ae8e-6ee1-4dfd-82a5-3acd3af26ace",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "931bbf49-e914-4e5a-b74a-4bad5f6cc314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9f23bd-e97b-4973-844b-7114ca0413bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ff4fa3-3aaa-4f2f-8480-aa6502931b6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ddaf55e-d2b1-4937-a83c-274c61ce4aa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7fc4e5b-7266-441c-bee9-e1768a9f44c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "747151fb-7975-4e75-a59e-bfbe85eba46b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7316f3d-b334-4c47-896b-d35a3216a518"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50a2b99c-6985-4b4e-a5cd-7c875d9da3d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ef91d3b-c78b-481c-b900-a9f560ec7358"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cdf5bfcf-33e9-4635-8b43-899b30f7f665",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "93afc758-d986-42a9-a359-13a520e03f8b"
            }
          }
        ]
      },
      {
        "id": "c66ab21f-9aa8-4da2-a38b-74eab3fc3683",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "edbb95da-63ef-4875-b21d-721eab527b75",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23c9a0ff-1c1e-4335-804a-397649861709",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aeecae59-8abd-443b-8e8d-2080172e7f6d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35e5e44-248d-4a7a-b573-bea7999f620e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47cdbaaa-6a68-4b92-8cef-5699999353c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06de8b45-8143-4685-b8e9-2ef6380cb9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36fed773-c30d-4865-871b-232687e09c50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02f3d31f-50a6-42e6-a26c-3d1c2a21f555",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae3b0ec6-7681-4cab-904a-29a8bb66a2a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4cf4314-cda5-4b41-90cd-a1c1957860be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88bb8a34-9279-4748-8d4c-006efa5d4078"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc142b2a-ccb5-4a5c-9603-17441a05bb8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8fbb928c-4ae5-4abc-bf6e-b89fcb475089"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f24b8b7-04a9-4d1e-a020-21c3f4370c1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15419ca0-4a57-48d1-9978-334827e858e4"
            }
          }
        ]
      },
      {
        "id": "39d4598c-79a4-4bed-9dcf-a72ea52bede6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0813443c-6ae5-4e7f-a8c4-84874e4facb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0100cb51-6c14-49ca-a730-82a05d401ab5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3d111cda-8acd-488c-aac2-6fa16faa6eba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3268e02-8841-4125-86c4-81925659bb64",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84304c1a-6e36-40e6-88ad-68264eb9201c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 350.5316901408453,
      "responseMin": 5,
      "responseMax": 9203,
      "responseSd": 1125.1267295049215,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696725377567,
      "completed": 1696725489465
    },
    "executions": [
      {
        "id": "8ebc2fe5-5b36-42cf-adb8-7d6ef4c9e224",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a8618bab-e0ea-4b6e-9e94-bbc802678ae9",
          "httpRequestId": "932934d0-d484-406e-8d7d-728438094c30"
        },
        "item": {
          "id": "8ebc2fe5-5b36-42cf-adb8-7d6ef4c9e224",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6bc7b390-9578-4858-a4bf-a959c3634aa7",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "47f1593b-4441-4ea5-ae21-514d869625d2",
        "cursor": {
          "ref": "886ad4c6-fadb-4d6c-83d4-56691f5bb679",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "eedba854-728e-44b5-84d5-0d8c78077b33"
        },
        "item": {
          "id": "47f1593b-4441-4ea5-ae21-514d869625d2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8dd9e300-76aa-48a0-9e4d-0fcadb2a38a7",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e0e461ab-8230-4378-82c9-a2455a881952",
        "cursor": {
          "ref": "8c296971-6410-43d0-bc92-0c471c49a8bb",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1fff0f87-7d45-4458-8c00-38c0b707a48a"
        },
        "item": {
          "id": "e0e461ab-8230-4378-82c9-a2455a881952",
          "name": "did_json"
        },
        "response": {
          "id": "3150ebb3-cf70-4826-9201-7bad82dd012d",
          "status": "OK",
          "code": 200,
          "responseTime": 1452,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a60ed2-bae1-41aa-9ecf-a43cc393dd33",
        "cursor": {
          "ref": "0072be11-78dc-4122-9fd3-6a765549dc12",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63827502-4f72-4a8b-83fc-c82c88e4224a"
        },
        "item": {
          "id": "77a60ed2-bae1-41aa-9ecf-a43cc393dd33",
          "name": "did:invalid"
        },
        "response": {
          "id": "e6c1f5e0-1fe9-4275-9caa-8827d5738dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a60ed2-bae1-41aa-9ecf-a43cc393dd33",
        "cursor": {
          "ref": "0072be11-78dc-4122-9fd3-6a765549dc12",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63827502-4f72-4a8b-83fc-c82c88e4224a"
        },
        "item": {
          "id": "77a60ed2-bae1-41aa-9ecf-a43cc393dd33",
          "name": "did:invalid"
        },
        "response": {
          "id": "e6c1f5e0-1fe9-4275-9caa-8827d5738dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83df422-ad3c-4ea5-b125-3c166b6760d5",
        "cursor": {
          "ref": "cf435951-b969-48df-a6b3-3e99fb773980",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d27a4a8d-24c1-408c-8487-90bbc7831ea3"
        },
        "item": {
          "id": "e83df422-ad3c-4ea5-b125-3c166b6760d5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5656e22f-f858-4ac4-8cfb-306fcf9896a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 313,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c2bdcf-e62b-47bd-8066-2cfdda1b3923",
        "cursor": {
          "ref": "7c8f1342-6fb9-429d-be19-73e868ad8ca3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "811fad08-ef9b-4235-980f-a4999299d6b3"
        },
        "item": {
          "id": "13c2bdcf-e62b-47bd-8066-2cfdda1b3923",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7c962559-aa88-495a-ac6c-2a2680323618",
          "status": "Not Found",
          "code": 404,
          "responseTime": 347,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d578a56-58ea-460f-9c75-0057c6f54d43",
        "cursor": {
          "ref": "7016f101-554f-49ff-80fc-517dc93ba1a8",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7a367479-5acc-4316-b261-41f2c831bb83"
        },
        "item": {
          "id": "9d578a56-58ea-460f-9c75-0057c6f54d43",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "827e027f-5cd2-4a28-92c7-bf44c98a0cf3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc9a735-cc3a-41cd-a909-adfe983fe00c",
        "cursor": {
          "ref": "8660ab2d-9d4d-4d8b-aaa7-e5297991b693",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a88f6d23-ce1f-442e-be1b-3110d9badd49"
        },
        "item": {
          "id": "fdc9a735-cc3a-41cd-a909-adfe983fe00c",
          "name": "identifiers"
        },
        "response": {
          "id": "cf64ce97-8726-4031-8795-3ebaa2432b96",
          "status": "OK",
          "code": 200,
          "responseTime": 1415,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e0ea6a-5c06-45c7-8db2-c2a7e5ef0ef8",
        "cursor": {
          "ref": "9b2d488c-3fc2-4e0e-ad62-9a6f7944e4fb",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "78a2513e-9064-4e73-9c9e-46379aefc41a"
        },
        "item": {
          "id": "08e0ea6a-5c06-45c7-8db2-c2a7e5ef0ef8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c5086e43-a05a-48e4-9041-1c7507a9d97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1155b61c-df02-49cd-8822-efc04ba67073",
        "cursor": {
          "ref": "6a09d07d-1869-4fee-a06c-26cd48cd5741",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a91a7060-080c-4e9a-b187-2159edfd1387"
        },
        "item": {
          "id": "1155b61c-df02-49cd-8822-efc04ba67073",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5d93b6ea-9516-4ce1-b180-a6009cc1c270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0ef8e7-914c-4cf3-a269-f77cfb5ef7ea",
        "cursor": {
          "ref": "be1a0610-4470-46b3-9fb8-2b1fcbe93070",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "61a8e03b-dadd-49b3-a2e8-a92c421f3bb0"
        },
        "item": {
          "id": "ae0ef8e7-914c-4cf3-a269-f77cfb5ef7ea",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e663d4ed-9062-45b2-884c-3d6e9249faf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7cf05a-9c1e-4e03-ad4a-c21a5002296a",
        "cursor": {
          "ref": "da90c1e2-26e3-4439-81f9-5f4eb085975e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7fde2416-2d65-4774-b891-a91cb11487b1"
        },
        "item": {
          "id": "ef7cf05a-9c1e-4e03-ad4a-c21a5002296a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "58b51d11-ab31-4fbc-bf0a-b81e5ea70a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60aa0fbd-5a52-4cab-bc20-f7c3af8fa376",
        "cursor": {
          "ref": "1b8d856e-a136-4090-a7f8-42fbf08a03bb",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cbd9f419-76b9-4503-9f4a-5eae35e4fd9c"
        },
        "item": {
          "id": "60aa0fbd-5a52-4cab-bc20-f7c3af8fa376",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "614a3e6e-b5bc-4526-a9c9-26735d5369f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b3ea95-1e9f-43a4-ba79-83cdb6947be8",
        "cursor": {
          "ref": "4299f021-7c80-49f4-b13f-d9f6c21a3a46",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb7ab20e-7fd1-49db-96c2-e06a918f70b9"
        },
        "item": {
          "id": "f2b3ea95-1e9f-43a4-ba79-83cdb6947be8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "347efad7-1693-4769-940c-ed23df88da65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c935e3a4-0c2d-487f-b07b-1d7ba3afc0df",
        "cursor": {
          "ref": "b4525e20-9890-4d29-ad97-92ba68ef6a8d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "35516564-efba-42a2-b077-1dac30d671a2"
        },
        "item": {
          "id": "c935e3a4-0c2d-487f-b07b-1d7ba3afc0df",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "993a76b5-90c2-4f6e-8e70-cdd48ca9ac24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7c9bb1-de46-4e68-9252-015c9afb6439",
        "cursor": {
          "ref": "b0ecefba-9a49-4143-92f2-af6438993026",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2c924547-5c73-4f76-b7c8-7be48aa2cce7"
        },
        "item": {
          "id": "0c7c9bb1-de46-4e68-9252-015c9afb6439",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e264d0cf-d5de-423d-8f52-d445d4c736ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99c4ca6-2481-4e58-8b91-1d101cbf4fdd",
        "cursor": {
          "ref": "f3cedd36-c13e-4b96-8408-8ae467fb1203",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0c6d9ae1-d158-4fac-af15-1a46544b3a6e"
        },
        "item": {
          "id": "f99c4ca6-2481-4e58-8b91-1d101cbf4fdd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "841e55b8-7709-4eb6-ae66-25de1a4973bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2deedc0b-833e-4c79-87a0-6b4de83ecffc",
        "cursor": {
          "ref": "fc4becca-3bdc-4c7d-9ed1-5ee523a35817",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "35b86641-dfcb-4060-933b-e1b6a40fa13e"
        },
        "item": {
          "id": "2deedc0b-833e-4c79-87a0-6b4de83ecffc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "76b393d9-2be5-499a-acb8-9d20b791ab9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e64cf9-4a64-47cc-8574-9ea7cfd8f6d5",
        "cursor": {
          "ref": "2803f88f-36dc-40a1-86a7-487dde8fdc21",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5256c0d5-ab5a-46b9-b292-3e52b2df4dc8"
        },
        "item": {
          "id": "36e64cf9-4a64-47cc-8574-9ea7cfd8f6d5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "95f0f931-8a2a-41d2-be2d-7849194c59b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc4306-a079-4f3c-9897-538a0551aa70",
        "cursor": {
          "ref": "21ade77d-6be3-4eb9-ad91-a3dbbe35de97",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6ce0ed05-dff6-4f69-94a4-255c3b67ef95"
        },
        "item": {
          "id": "ffbc4306-a079-4f3c-9897-538a0551aa70",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8f2f9a49-b6f2-47c0-b271-d70d43a7f60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914a2264-f6e5-4c52-9830-305aaf093558",
        "cursor": {
          "ref": "d7ecc6da-cdb9-4de2-8f64-f338cc599f6e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e2aaf7af-d673-4cb7-a1d9-5a9d20213c62"
        },
        "item": {
          "id": "914a2264-f6e5-4c52-9830-305aaf093558",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "17ab8c1c-e127-4236-9b5b-b07726debf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0661ed4-5471-4152-81cd-b51a0434071d",
        "cursor": {
          "ref": "62a6ba50-57a4-45ef-8a57-1eebb59621c3",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "068d1bfa-fb74-4f1f-a6ba-fb20c1b30614"
        },
        "item": {
          "id": "d0661ed4-5471-4152-81cd-b51a0434071d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b4e42ac0-beb3-4862-bbda-f977d18070c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f3cc83-ae38-4ce4-a4ac-9be2d4bfa1b6",
        "cursor": {
          "ref": "8d81f75b-8f29-4e24-b73b-9bc1e20f6dd8",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1cd3c921-90a3-4cb6-82f6-998d24e4ef12"
        },
        "item": {
          "id": "a3f3cc83-ae38-4ce4-a4ac-9be2d4bfa1b6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "35208c4f-08e3-4407-a693-8f3ccaa0f297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc84651-3114-47f4-b300-e9bb482ac99d",
        "cursor": {
          "ref": "dfaf3366-b24b-4341-870f-3d62dccd056c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f6908ba5-3ea6-4c1b-be9e-746b715ae1ed"
        },
        "item": {
          "id": "6dc84651-3114-47f4-b300-e9bb482ac99d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "114c86ad-6ac8-4603-9b54-9f817dafbf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a1c83a-ba8e-491b-add3-2f56209ceac8",
        "cursor": {
          "ref": "066c5cee-1f20-4117-a23d-17b34609371e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d68dd5e3-145b-4977-b4ae-32edcab82950"
        },
        "item": {
          "id": "82a1c83a-ba8e-491b-add3-2f56209ceac8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f2544c3e-7c3d-4bc4-a840-04802dbc0fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff90372a-9443-4294-9c56-95880fce3dcc",
        "cursor": {
          "ref": "d5065a5b-20d5-4151-86c5-d517d4df244c",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0af55dcc-fba0-47bd-9b2b-0d3026a5d4a2"
        },
        "item": {
          "id": "ff90372a-9443-4294-9c56-95880fce3dcc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e27d7819-1d18-4bca-ae14-25a817bcfae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d404ba83-fa43-4818-8ab7-a3a5c81932e9",
        "cursor": {
          "ref": "79330e2c-7119-40aa-9567-b1ba700e46c8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "94f41667-0d7c-47c4-b10d-304db9584e12"
        },
        "item": {
          "id": "d404ba83-fa43-4818-8ab7-a3a5c81932e9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "de5bccab-6642-40c0-9d3b-a2bcf83c468c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac4e835-58bd-490d-b11f-cffdfeee1a71",
        "cursor": {
          "ref": "7347bed4-f327-439a-b25d-b52f96544bad",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3a794eab-3b5c-497c-8c48-37162fcd443b"
        },
        "item": {
          "id": "5ac4e835-58bd-490d-b11f-cffdfeee1a71",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3fec4950-bf4d-42f8-b1f7-efe5408af53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f804f4-b0ea-4f09-88e1-ef4e98708ded",
        "cursor": {
          "ref": "87c59d47-c65e-4a35-a907-6dc509814c3d",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aefb42d7-f165-4d5e-a3d9-a9c7f468350c"
        },
        "item": {
          "id": "a8f804f4-b0ea-4f09-88e1-ef4e98708ded",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5fc75160-3230-4639-bd19-d1775ebd4af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722514a7-ef11-4bfe-9b06-fc08883cd381",
        "cursor": {
          "ref": "f80c56d3-3613-4064-a050-5c99e9477bb7",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f5dd6d64-863a-4cd7-bd75-7463336b4896"
        },
        "item": {
          "id": "722514a7-ef11-4bfe-9b06-fc08883cd381",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bbad9b70-2059-49d5-906c-378b2571b4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f46b3d4-56b6-4497-b606-a265c6941787",
        "cursor": {
          "ref": "c00373e6-dc99-4df1-bb12-e7aacccf246a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9e6c96af-6148-4cf1-ab39-dfc711552d55"
        },
        "item": {
          "id": "8f46b3d4-56b6-4497-b606-a265c6941787",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1bd2095-5462-49ec-85db-3a0ce8c7a454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b513c44-fb32-476a-bb44-35fc9d7fee1e",
        "cursor": {
          "ref": "a1fb416d-3b03-4b80-a601-2b3cb97d54ca",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bdf0eb41-2e0b-4c14-904d-32ed4a216a1b"
        },
        "item": {
          "id": "4b513c44-fb32-476a-bb44-35fc9d7fee1e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "945069f2-3fb7-4976-bd3b-4dcf7b2e5347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a5127d-bfac-4d7f-b2df-a49d5bd755a3",
        "cursor": {
          "ref": "7ed4aebb-590a-43f1-b4ef-fb850c4dfb49",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f057d12a-fca2-4a3e-af02-94147f6a0410"
        },
        "item": {
          "id": "64a5127d-bfac-4d7f-b2df-a49d5bd755a3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "98210932-0ab1-40c8-91ef-383264734e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c62e742-2f95-4eea-976d-68e1029e3e9a",
        "cursor": {
          "ref": "0b2a7cca-84d7-45d4-b0de-e878f7d757e8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fd23889f-a283-49ec-ba1c-01732a1b5d10"
        },
        "item": {
          "id": "6c62e742-2f95-4eea-976d-68e1029e3e9a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2682eb32-288a-470e-8082-f3a05b1da8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0518fc2a-11f1-458a-a5fd-5e5e9bdfc451",
        "cursor": {
          "ref": "32c7e518-d901-424e-bb62-4c6ba74f2c86",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "37e59c4e-a103-4b43-9503-cef814c922c6"
        },
        "item": {
          "id": "0518fc2a-11f1-458a-a5fd-5e5e9bdfc451",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a22d619d-f7b9-4cb0-8022-b261ad646cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0f22c6-0a79-402f-b176-96541baeba7f",
        "cursor": {
          "ref": "6967a324-0272-4a02-a001-0e3739815810",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1ffa7934-2ab8-49ab-88df-cc57166e9d24"
        },
        "item": {
          "id": "8c0f22c6-0a79-402f-b176-96541baeba7f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "528ccb11-7467-4736-89a5-4668b70c3edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3ed2ea-ecd5-4c8a-97a1-1ff075898b26",
        "cursor": {
          "ref": "e269f55d-ff58-4f49-853c-c9763d120c6b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "70420c75-981f-4fbf-9722-3bfab8ab7ed7"
        },
        "item": {
          "id": "aa3ed2ea-ecd5-4c8a-97a1-1ff075898b26",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a5c4d956-4f75-4c7c-807e-47bf1472c581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34ad1a5-f566-4b2e-b292-6e807724adaf",
        "cursor": {
          "ref": "379ee4f9-d66f-4030-bf8e-b303f27a08c4",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c482297d-58e1-4505-8077-1a03f76314e4"
        },
        "item": {
          "id": "f34ad1a5-f566-4b2e-b292-6e807724adaf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9090227c-59a3-4a6d-8997-14e833a9e05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc44ca33-5008-4a5d-8ce6-16338784bf0e",
        "cursor": {
          "ref": "f644abf6-2898-4102-8486-7117f64c6ca9",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d3ae8b57-d358-45c8-ba5d-dfd5010f283a"
        },
        "item": {
          "id": "cc44ca33-5008-4a5d-8ce6-16338784bf0e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a83e7218-3464-457e-ba5a-f07e6f14192c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec17677-822c-4f1a-9377-e872deb8ffca",
        "cursor": {
          "ref": "32d15a2b-8af4-40dd-8ed3-b71aefadcac7",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "69135eac-7022-4692-8654-29c22d714808"
        },
        "item": {
          "id": "3ec17677-822c-4f1a-9377-e872deb8ffca",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "632c509a-2bfb-4db4-86de-77313cdaef2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5cc91-57b3-400c-bd9b-f6144871d259",
        "cursor": {
          "ref": "154ad986-eeba-47a4-976c-ce56889968db",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "83ab9939-0c9d-422e-b56e-b27b185c39eb"
        },
        "item": {
          "id": "e2d5cc91-57b3-400c-bd9b-f6144871d259",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "40abb58c-2a54-47ef-89ac-b301c0d6eb88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0ef699-ed9c-4c39-9b66-806af6b692b8",
        "cursor": {
          "ref": "36d2173f-74bd-4fc0-864f-8ca4dac4e562",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1b807192-6f3f-46d8-9a2c-336ddb378fa4"
        },
        "item": {
          "id": "3e0ef699-ed9c-4c39-9b66-806af6b692b8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5bb81a21-3439-49cf-a410-776e8ce3e75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548c26c1-2591-4a1e-a91d-73e8fdf4b4b2",
        "cursor": {
          "ref": "784d262a-8961-486c-9f3e-f75f90667e63",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a16cecf4-9df0-49fb-a15b-f6c34da2c6a7"
        },
        "item": {
          "id": "548c26c1-2591-4a1e-a91d-73e8fdf4b4b2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f51db26d-4f17-458a-83cd-2c3762098fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34b3e1f-fab8-4831-900d-0d2ed6dcd9dc",
        "cursor": {
          "ref": "761c5288-8d27-4d5d-b093-d10364a0482f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f1416de7-f255-4b92-8fa5-82d14c68d6d4"
        },
        "item": {
          "id": "a34b3e1f-fab8-4831-900d-0d2ed6dcd9dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9fcb944c-c4b9-409b-ab8c-50560e42df23",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 617,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf42c12b-d299-4193-bc97-81c3da18b7c1",
        "cursor": {
          "ref": "f35dc2cb-dfdf-43fd-a67a-98383df711a7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9c2eab42-7510-423c-859e-8ef25b2c658d"
        },
        "item": {
          "id": "cf42c12b-d299-4193-bc97-81c3da18b7c1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ad70b43e-b053-4725-9201-087f6ca22a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5eef2c-ca97-45a5-b390-d38680a8e1c2",
        "cursor": {
          "ref": "5e147662-27b6-414e-8c74-3a7ae68995a3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fdf0aaa9-380e-40a9-9709-6629a205ef9a"
        },
        "item": {
          "id": "fd5eef2c-ca97-45a5-b390-d38680a8e1c2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "37b8c787-2e90-4fa0-86bc-e785bb7ba809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abb2045-bd0d-448d-a032-29a8639718bb",
        "cursor": {
          "ref": "489991a0-fa3f-4c17-96b1-210c4c5b451c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8d79558a-fbc4-4286-bb1b-eae83ded9205"
        },
        "item": {
          "id": "3abb2045-bd0d-448d-a032-29a8639718bb",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f75e0bf4-920f-41d7-91f0-b2f108fa1f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f62eb5-778f-4a06-a4a3-4bfeff706f28",
        "cursor": {
          "ref": "d2b3bbbc-c6e8-4503-abf1-96d595e233d0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b59854b3-7089-4c27-9e43-8cb71073382b"
        },
        "item": {
          "id": "c1f62eb5-778f-4a06-a4a3-4bfeff706f28",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cb9666d1-9be4-45d8-a184-df3e673494e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9328f74d-a0d3-4031-9553-cf69e14fe6b5",
        "cursor": {
          "ref": "2c9cf9de-60f7-431a-9ce7-60a6f39bb1b9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6638f01c-d3d2-4bfe-b542-08347e599ce3"
        },
        "item": {
          "id": "9328f74d-a0d3-4031-9553-cf69e14fe6b5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e2b89ae0-5bbd-4b1a-aecc-7c10e2c19822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac61a880-fbc8-414b-b6aa-877b7925057c",
        "cursor": {
          "ref": "eff33955-952c-4b6d-abe3-0fc597b47541",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d9251c03-a211-49cd-86b2-52b542a404a3"
        },
        "item": {
          "id": "ac61a880-fbc8-414b-b6aa-877b7925057c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d8655fad-61e9-4d49-a9fd-76206db41290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f5523c-0a70-4173-872b-06a05e50ea44",
        "cursor": {
          "ref": "459bb8b4-1ad1-49a6-9d4c-31383f0adf30",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e3fd2c93-fa91-433d-b55d-6087f65bc6b3"
        },
        "item": {
          "id": "f1f5523c-0a70-4173-872b-06a05e50ea44",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5530e48c-0997-433d-8c1e-6ecf40f0a77c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 622,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3154ada-2110-4a56-8543-c4ace0168aa0",
        "cursor": {
          "ref": "4b2129bb-c8e5-4a04-8737-0a977391c7fc",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2f6ec530-149c-4ea5-8d18-e65e85585cd2"
        },
        "item": {
          "id": "b3154ada-2110-4a56-8543-c4ace0168aa0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4bca5791-e1d8-4873-9245-5f943a811f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed0e8af-0d1a-4cb4-934f-728b7cec98c4",
        "cursor": {
          "ref": "56608f14-4138-40eb-bfc5-7b0012c6023d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bf61c244-9e01-4761-82ce-0b2f63ee7a06"
        },
        "item": {
          "id": "fed0e8af-0d1a-4cb4-934f-728b7cec98c4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "00c6bdfc-ad7a-4095-b256-c34a91895fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f93eee5-37f3-469b-934b-8b0cfe98171b",
        "cursor": {
          "ref": "b71429b5-ef32-4fb0-a164-03e23b009160",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "334860b2-0801-45bc-b4a8-aa84938a6f7a"
        },
        "item": {
          "id": "1f93eee5-37f3-469b-934b-8b0cfe98171b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c9aa909d-2d5f-4f8b-9b1f-91a0cb0f5cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b5c6fe-b34f-47bc-8561-38bf584a5881",
        "cursor": {
          "ref": "dc8ccebf-230b-453c-be12-11b387d76b1a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a53c8bc1-cddc-4b7e-8b2e-fd184a6b08d5"
        },
        "item": {
          "id": "71b5c6fe-b34f-47bc-8561-38bf584a5881",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aede4aa2-33a4-4062-818f-bcf058a1d70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb34f2da-a270-429d-b2dc-8481b4a7eabb",
        "cursor": {
          "ref": "3ca75537-2580-402a-b6cc-fd31056a456b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "abd43ef3-92d6-471b-9b58-d6fa6bd7a123"
        },
        "item": {
          "id": "eb34f2da-a270-429d-b2dc-8481b4a7eabb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "97297bce-f854-47f6-94fb-9e551705636d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5716c8-a0a4-420b-bd51-8838f5fec927",
        "cursor": {
          "ref": "e3bf5139-9277-40a7-968b-a36d4a5d7891",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "252af7dc-8942-403b-b196-e145c22c08d2"
        },
        "item": {
          "id": "ab5716c8-a0a4-420b-bd51-8838f5fec927",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ea5006e8-062a-4d5b-a261-c6371c7d4e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0c07fd-426f-4a11-9e87-ff8f4929d819",
        "cursor": {
          "ref": "2d237d5c-e2e2-471c-979d-00c8d8cdc4fb",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2c54166b-1041-4c81-a1e2-d942fbbef09f"
        },
        "item": {
          "id": "aa0c07fd-426f-4a11-9e87-ff8f4929d819",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "825ff72d-9fde-4a09-96e4-1b21c67ae626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa13a5e-c69f-45d1-ba00-3d25fcc330b9",
        "cursor": {
          "ref": "d3f2f43b-2cb1-469b-b31b-8454b5a33609",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a9b09e7e-57fb-4521-8983-eaa50c764b6a"
        },
        "item": {
          "id": "8aa13a5e-c69f-45d1-ba00-3d25fcc330b9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f187e951-a946-4d09-9565-63b934c7a968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7578c5fc-767b-4a32-a219-90cec579cbc2",
        "cursor": {
          "ref": "c124bfa8-b7ca-4f32-955d-ba10d7c5dd0d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cbe133da-5f3e-4eb8-b4d3-874866eb7e42"
        },
        "item": {
          "id": "7578c5fc-767b-4a32-a219-90cec579cbc2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ff330276-c490-4cc3-9288-3138f08449a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72b6f67-d6f5-420a-900b-554be30ea6a9",
        "cursor": {
          "ref": "2ba54584-75cb-4b06-9741-98983815ec3b",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aa642f65-f86b-4aa0-a920-8b2b314d242b"
        },
        "item": {
          "id": "c72b6f67-d6f5-420a-900b-554be30ea6a9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ea5c737c-b2f5-4c8b-a5c5-910dd9ebc535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea0ef0c-25fc-42bf-a5a0-c1293eb6b3d1",
        "cursor": {
          "ref": "673450f7-095c-41a3-809c-fe511d2066e6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3c173238-0655-4dbc-8a28-0b744428e165"
        },
        "item": {
          "id": "aea0ef0c-25fc-42bf-a5a0-c1293eb6b3d1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f2404f06-909b-44fd-bd14-72ed4aa0bc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e773933-62ab-47ab-a1ee-54a13cc80c19",
        "cursor": {
          "ref": "e8b36a7f-360c-46df-8a89-8c4de5acbba7",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "756c4832-16e2-4b1b-bfe0-9ef9fcd96a3f"
        },
        "item": {
          "id": "9e773933-62ab-47ab-a1ee-54a13cc80c19",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "30c82dda-056f-4b7f-832e-bd885724468e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82cf7f0-870e-48ea-ba02-ee7d999d6642",
        "cursor": {
          "ref": "8f774fc7-821c-4091-aa97-7b82bb185da7",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a5171793-01d1-4c3d-b81d-6b9773be4ac4"
        },
        "item": {
          "id": "a82cf7f0-870e-48ea-ba02-ee7d999d6642",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5b1708e8-6372-4ca6-95c4-e0fb8957a349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5030a2f-3d70-4e54-80cb-3b91127f7e2f",
        "cursor": {
          "ref": "836f96d4-6f5c-417a-aed8-1d9e50c62a4b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ad94f67b-f630-4f0a-9383-1d0c3e63fc0f"
        },
        "item": {
          "id": "f5030a2f-3d70-4e54-80cb-3b91127f7e2f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "61f0a6a1-6d78-4343-871b-af5fa7ae3fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bb05a6-1cc6-459d-85ef-fbff5983bca2",
        "cursor": {
          "ref": "53087c3a-c898-43c4-a0f7-161d2e336231",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2478a960-99ad-43aa-bdc4-a21698ca8932"
        },
        "item": {
          "id": "38bb05a6-1cc6-459d-85ef-fbff5983bca2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5b3e2baa-1725-4a4b-a5cf-b6108f6f7e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5fa3f9-923f-47a2-914b-ffbeafe409bf",
        "cursor": {
          "ref": "1e05f08b-a406-4824-aca2-7e66c720b0fe",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "28a1725d-4c87-4a12-9c4a-94c9aa1a2113"
        },
        "item": {
          "id": "3e5fa3f9-923f-47a2-914b-ffbeafe409bf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cbcddeec-a222-46fb-99e3-97c8b01dd9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88202b99-27aa-4624-ab80-24331070318c",
        "cursor": {
          "ref": "00f168c6-3028-4bed-9494-c8ccc53200d8",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fb9e727f-df9a-49f0-bcb7-25827e37ff90"
        },
        "item": {
          "id": "88202b99-27aa-4624-ab80-24331070318c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "19ebaa55-9554-4c88-89a7-3b5a2bd7ac5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82be43e8-0416-4883-9052-3e85f1042694",
        "cursor": {
          "ref": "eeb5086a-4439-493a-960a-87c5c0ba963f",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3feeab1d-7b99-45b5-b254-de7325572351"
        },
        "item": {
          "id": "82be43e8-0416-4883-9052-3e85f1042694",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3ae9af57-dac0-4232-881e-8c199fb75867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979b9e08-3fe2-4887-9786-8723c94fc691",
        "cursor": {
          "ref": "fdb268bd-1944-499e-b8d6-4565e8da69ad",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91cd191a-92e5-4814-a502-54acb334013d"
        },
        "item": {
          "id": "979b9e08-3fe2-4887-9786-8723c94fc691",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "28b922af-b026-45e3-b9ae-dc4c67d7c565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f64ebd-189d-4b88-b8f9-b60e54427717",
        "cursor": {
          "ref": "8748a138-ad2d-4b0c-a81d-02dc3de2e51f",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "035d27e0-3c02-4384-a73a-b81d3d046cd3"
        },
        "item": {
          "id": "56f64ebd-189d-4b88-b8f9-b60e54427717",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "329149c0-d45e-45f1-827b-36bc60fed2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84263d89-2450-4848-a1bd-2efeaa3df2d5",
        "cursor": {
          "ref": "18f65e15-55d6-4498-9025-0a19f077c0e5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2e092d33-9a1d-4f3e-80a9-1f40cb770b92"
        },
        "item": {
          "id": "84263d89-2450-4848-a1bd-2efeaa3df2d5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "dbfe5963-30d6-4042-b5ab-eb26319207cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c09dc-e420-476c-b645-e18c264815e7",
        "cursor": {
          "ref": "ac7ebe38-afcd-40d3-9910-bb2131a41dab",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7013b438-8b96-41d4-9d40-b49ba5601a78"
        },
        "item": {
          "id": "124c09dc-e420-476c-b645-e18c264815e7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "10b708fc-14b3-43e2-ba0e-cccb3dd1a591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3928f2-e3b0-4f4a-b5ce-99283d918191",
        "cursor": {
          "ref": "617ecd46-a9e2-4e44-941a-5eae5a40b825",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cf40aa06-1225-4200-b6cb-75e06f7c1bf9"
        },
        "item": {
          "id": "9f3928f2-e3b0-4f4a-b5ce-99283d918191",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "68bb8291-52a4-416e-99b2-9d57fb2896ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3552a837-daf8-4d3b-a76e-590381b5a35e",
        "cursor": {
          "ref": "e624878e-0500-4ae1-aa0a-675a39b77b28",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1750c5a8-2bff-4e3e-9795-db7d8446121a"
        },
        "item": {
          "id": "3552a837-daf8-4d3b-a76e-590381b5a35e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d0c6a85e-0f6c-4587-bc7f-bffb1af75574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e4477a-ac21-4802-8030-282b54e004c0",
        "cursor": {
          "ref": "681d17d8-7788-4733-bcfa-605c27725207",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8baa673f-f4aa-4bad-bb2a-dc8c78aa4eb4"
        },
        "item": {
          "id": "02e4477a-ac21-4802-8030-282b54e004c0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a660513f-5848-4624-867f-47ce35fa2266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608f98a8-2d25-4e26-8751-62d5696a69d1",
        "cursor": {
          "ref": "a30edbea-5798-443c-a611-4df50a0484c1",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6a68e1cf-583b-4155-af82-d64c6456f408"
        },
        "item": {
          "id": "608f98a8-2d25-4e26-8751-62d5696a69d1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b2d3db03-8983-47a1-b6b1-6959e73fed46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26471eeb-5aa4-4a5f-bf69-185ac46e62fd",
        "cursor": {
          "ref": "6561c8d6-a343-492f-83d7-b4f073726dbb",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5e503afb-bd42-4690-9e21-3e1b5eb0cccd"
        },
        "item": {
          "id": "26471eeb-5aa4-4a5f-bf69-185ac46e62fd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0e73f8a6-41cc-4f38-8693-c2abb819d602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2644ce-45dd-4127-9d7f-207cef1a01b5",
        "cursor": {
          "ref": "9d64d7cd-b2fb-433a-b141-36e4f8290dd6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4ff95884-8452-4653-a3ce-c6ee71c1a297"
        },
        "item": {
          "id": "ad2644ce-45dd-4127-9d7f-207cef1a01b5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4d7ddb52-1f4a-43f9-b090-b8915f793c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec714574-b518-40a6-8b85-42a3db26e794",
        "cursor": {
          "ref": "665512ee-fc9f-42f9-a477-01c4590ea8f4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4c230cda-a90b-4471-b057-2280994639b1"
        },
        "item": {
          "id": "ec714574-b518-40a6-8b85-42a3db26e794",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a65da8c8-c216-4d86-b56c-071ebc0fd53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6e89a9-60df-4f4c-a0b2-424e94af7461",
        "cursor": {
          "ref": "7cc8b013-581c-4239-9bda-70570c10f2f3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d69fc1f1-8fd2-43a0-8577-78d9fc35650a"
        },
        "item": {
          "id": "1d6e89a9-60df-4f4c-a0b2-424e94af7461",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "81338003-7996-417e-b808-9fc2dfa53dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4359bd-74a4-4202-95a6-f2b29c0073ef",
        "cursor": {
          "ref": "be9ec4b9-a940-4eb6-be86-2ebea6c14aab",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "298af2b1-a09e-44a2-ba80-d4005552174b"
        },
        "item": {
          "id": "da4359bd-74a4-4202-95a6-f2b29c0073ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "58e62559-678f-4906-ad83-b96d2b08b024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b547d3e2-f3bd-454b-8c0e-2db1e1901686",
        "cursor": {
          "ref": "459d61b2-c802-4b43-9ed0-c51882427405",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d856a88c-eb1c-4c4b-ba32-b689f4428624"
        },
        "item": {
          "id": "b547d3e2-f3bd-454b-8c0e-2db1e1901686",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fdef884d-dea8-45d5-8d26-0a3751f8461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8f04ba-acc9-467f-ba7c-925e09d651d5",
        "cursor": {
          "ref": "1496591f-e42c-435a-b959-72dd816d804d",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "908d7503-1641-4696-aaf0-e139722e67e8"
        },
        "item": {
          "id": "6b8f04ba-acc9-467f-ba7c-925e09d651d5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "61f7167a-cc37-4d54-af4e-42a459ca0deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1926cdeb-2e9c-40cf-a549-3dbb7d35fbeb",
        "cursor": {
          "ref": "7e027c4b-9be1-445a-af05-e7b9db35b99f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8f43c6ad-db31-4655-a498-a91628b3112a"
        },
        "item": {
          "id": "1926cdeb-2e9c-40cf-a549-3dbb7d35fbeb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a450cb78-1b59-44e8-8144-5e60fa2e8a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7145db13-255a-419e-bb42-9156571005c6",
        "cursor": {
          "ref": "4efaabaf-0461-41ff-8e2f-10dfea868f2c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b83e9b8e-ca49-446a-821e-29473a47ec97"
        },
        "item": {
          "id": "7145db13-255a-419e-bb42-9156571005c6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3ef0bbe4-2596-46e7-9fd1-13fece96b9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c1dc18-004c-47cb-86cb-cfb67522adf7",
        "cursor": {
          "ref": "58539baa-b391-4740-97ba-725f1f683d53",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "58eafc45-e483-4a81-852e-cbafc481ded7"
        },
        "item": {
          "id": "25c1dc18-004c-47cb-86cb-cfb67522adf7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "59832cff-bf29-4d1c-a191-193bbe1db856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eff327-2d67-4818-bca4-c5eba361005d",
        "cursor": {
          "ref": "e972823f-5b59-45ff-9bfb-51717eaaf9d0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "573c976a-2be6-48e3-9910-442913c92c60"
        },
        "item": {
          "id": "91eff327-2d67-4818-bca4-c5eba361005d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6d77cb9d-bef9-40ba-bc51-c77ed83da1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac151cd-7a00-476e-a61f-30930e48cfa5",
        "cursor": {
          "ref": "40a14a06-32e4-4621-8361-d46e8bd6118b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5afc45ac-0f83-4cb1-be67-c40e72a99543"
        },
        "item": {
          "id": "7ac151cd-7a00-476e-a61f-30930e48cfa5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "198ce6b5-64be-433f-95ec-83dcf3ba06cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc1ae71-3226-4e3b-be3a-6f538ebd87ce",
        "cursor": {
          "ref": "5333e9ed-49a7-49c0-8e14-a856debaa90f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8269e6e6-ed77-4822-907a-5bfebb38ee56"
        },
        "item": {
          "id": "bdc1ae71-3226-4e3b-be3a-6f538ebd87ce",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7e49cfa1-054a-478e-b9d6-cd72af1bd0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0453add3-474a-4f0d-b2b1-7783db1b1eda",
        "cursor": {
          "ref": "89b2c58a-4f11-46b9-a5f4-af10dbf75adc",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "42635e7a-8d3d-4352-8f1b-5cfd9924a3f8"
        },
        "item": {
          "id": "0453add3-474a-4f0d-b2b1-7783db1b1eda",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0a18823f-ff55-4970-843e-5be9c56a5287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6434612-d87a-445a-a560-b7bab0bcdcb8",
        "cursor": {
          "ref": "4645a976-4573-4441-a3c6-064fc2928e18",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "655c68a9-6aed-4a5c-b4f9-7d5a5685bbba"
        },
        "item": {
          "id": "f6434612-d87a-445a-a560-b7bab0bcdcb8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4087a00d-f790-448e-90aa-d8b3d8dd9d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bed669-3e61-46f0-a31f-5f173bcd277f",
        "cursor": {
          "ref": "5f66ebc8-b9ad-4c18-ad48-99a7d5b01ea2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7bc2fe0d-6403-4017-bee9-26340cc74bb1"
        },
        "item": {
          "id": "51bed669-3e61-46f0-a31f-5f173bcd277f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c4ef563c-71f1-41e5-84e9-48fe988b1de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a94ef8-f4d8-44f2-bd08-2206364ba4bc",
        "cursor": {
          "ref": "db4b51be-8e7e-49cc-b379-a071a41b4552",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eee4f167-7121-4272-93ad-685273b772d1"
        },
        "item": {
          "id": "d1a94ef8-f4d8-44f2-bd08-2206364ba4bc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f65abc1b-c727-4927-a9d4-bd6124ebf4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a851897d-df24-49c4-bcee-37415d2d2943",
        "cursor": {
          "ref": "80253caf-f0f6-471e-adb7-81752ba993bf",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f412ce36-3057-4e0f-87b8-9ae28884e21d"
        },
        "item": {
          "id": "a851897d-df24-49c4-bcee-37415d2d2943",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "db25fa7d-3915-42f1-9198-1576ebe8abe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdeb41d-128c-49ed-9572-5967d21a3088",
        "cursor": {
          "ref": "12cdf5c1-2ed5-4611-9c82-5ef6ced917a3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "46a6b180-244c-4916-88b6-ec5b0a28f14d"
        },
        "item": {
          "id": "4bdeb41d-128c-49ed-9572-5967d21a3088",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "77fa0bad-661d-44a2-a5a3-e597f69f1335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f569f-910b-46e4-9f13-19c6750f6ebc",
        "cursor": {
          "ref": "75c167b0-3437-4d25-a289-3ac8cf2ea1d0",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8b25e742-9b3e-4d01-bc45-758ce0a867ce"
        },
        "item": {
          "id": "1e8f569f-910b-46e4-9f13-19c6750f6ebc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4f4f8480-d0bf-4d90-839d-69c4e7b00e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e8b0d7-ad58-4663-9f43-69440f192d59",
        "cursor": {
          "ref": "802d804a-72e7-4f0b-81ec-7a220d32f335",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2ccfb805-ebac-465b-abd8-8a0c08f78fac"
        },
        "item": {
          "id": "25e8b0d7-ad58-4663-9f43-69440f192d59",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a07bfd6e-67f4-454c-b3eb-b0d12ad9cee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4023a2-39e4-4007-a172-451a7248cbc7",
        "cursor": {
          "ref": "b4b58d47-cb60-4ac8-a8a7-f130e2700f3b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7175485-2612-42b0-a6a2-bbd0467d93b6"
        },
        "item": {
          "id": "ab4023a2-39e4-4007-a172-451a7248cbc7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "427576af-2054-4aeb-910f-da47f95b2a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836005a9-fa80-43e2-a998-33e41ec1fc29",
        "cursor": {
          "ref": "9eb5feff-70cb-49c3-8534-59dc9cd78488",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0c88932d-5d6f-4e63-9640-e61e84b63809"
        },
        "item": {
          "id": "836005a9-fa80-43e2-a998-33e41ec1fc29",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c1ab3c81-39a4-4125-8d29-96407e741507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01583fd9-9686-4658-9a37-575510a97a7f",
        "cursor": {
          "ref": "927ba3e2-939d-42cd-9bad-9b07b4650720",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "400bab46-638e-4070-ba82-2dd0a7451c8f"
        },
        "item": {
          "id": "01583fd9-9686-4658-9a37-575510a97a7f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e3f0d12b-95fc-42e9-ab0c-f40070629788",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9eb626-60c4-4f81-a0d3-334d82495042",
        "cursor": {
          "ref": "567e9e5f-1c03-4394-bea8-f228f7f208c6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "951177ac-b715-4cc8-8e8e-e4432300bc17"
        },
        "item": {
          "id": "fe9eb626-60c4-4f81-a0d3-334d82495042",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d9a782d6-73df-404e-a4e5-1cf0c6c8e3ae",
          "status": "Created",
          "code": 201,
          "responseTime": 8565,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "589f6554-adf2-4ce5-98c5-d8c1689aa9e7",
        "cursor": {
          "ref": "2b61fbd7-bc4e-4a02-9a57-8b4a14cd709c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3e1de360-16c4-4bf0-a0e4-15f38185b049"
        },
        "item": {
          "id": "589f6554-adf2-4ce5-98c5-d8c1689aa9e7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1668fa0e-6b57-4372-9c6a-f659c369e5dc",
          "status": "Created",
          "code": 201,
          "responseTime": 8500,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1927de5-b57b-4033-a506-e54676b27235",
        "cursor": {
          "ref": "2182b3a7-50f3-4cc6-a0df-7fcc0333290f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a7717877-94f5-4717-9dae-0c034668ce66"
        },
        "item": {
          "id": "c1927de5-b57b-4033-a506-e54676b27235",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "813472df-b091-4366-b307-f3ea36b30f11",
          "status": "Created",
          "code": 201,
          "responseTime": 8555,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb61296-590d-4443-87b6-18c7fa943950",
        "cursor": {
          "ref": "41271a33-c0ca-45ca-862e-1fcf55178e42",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f26572b8-997e-46d0-a7ac-e3042a33fcf4"
        },
        "item": {
          "id": "8eb61296-590d-4443-87b6-18c7fa943950",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8548ba41-507a-409d-a71c-9c876159aec3",
          "status": "Created",
          "code": 201,
          "responseTime": 9203,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d8f01f-62ea-4997-8581-1488d6189d5d",
        "cursor": {
          "ref": "888faee6-cd9a-4567-a420-95ce002dbc26",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "03041fc0-7e67-425a-82d3-51b9147618e6"
        },
        "item": {
          "id": "d2d8f01f-62ea-4997-8581-1488d6189d5d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3246ce10-9de6-4c62-97fb-6f4e293d99ec",
          "status": "Created",
          "code": 201,
          "responseTime": 8295,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2e4b2e-c21b-4ba2-987e-466915b50b9a",
        "cursor": {
          "ref": "2e7d35f0-968f-47a4-bb6c-8d5ce3ad2277",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec6a2801-f021-4e53-8043-ef55ae150cbe"
        },
        "item": {
          "id": "9f2e4b2e-c21b-4ba2-987e-466915b50b9a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "81bfc162-c827-469b-9d8c-82d7247d723a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3ea8665c-9877-43c6-8209-b3924ae4e44b",
        "cursor": {
          "ref": "7ad24ade-b386-4648-968d-0f51d6955c7d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "abf47043-f62c-440a-99e4-b1d1e00d357f"
        },
        "item": {
          "id": "3ea8665c-9877-43c6-8209-b3924ae4e44b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ac305689-5516-42ab-a7c1-8ed6863b8651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c798a4c-6f56-44d0-8d4b-3e302c7174a8",
        "cursor": {
          "ref": "b6199d14-507f-4380-b514-538a9ad0c2ab",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c5f808bd-9a6e-40e6-84bf-5cbf99521bb7"
        },
        "item": {
          "id": "1c798a4c-6f56-44d0-8d4b-3e302c7174a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a3d703d2-36a1-4975-a337-3f7a8f061d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7c7b64-ad47-4b6c-9986-d0e7bcf24c0c",
        "cursor": {
          "ref": "e8a835b2-9051-4dee-aea3-7ab62425abe6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a9be0540-043a-40ea-ab65-8aaca19abb33"
        },
        "item": {
          "id": "5e7c7b64-ad47-4b6c-9986-d0e7bcf24c0c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0024dfe8-7a8e-49a1-9ebb-6a82bac663e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6addd149-9619-47c9-b1fb-434cfd29c6e9",
        "cursor": {
          "ref": "8456a159-ef16-4ac2-b138-fc1b4223cb17",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f8d59518-0bcb-42c4-b432-2cffcafe2ac7"
        },
        "item": {
          "id": "6addd149-9619-47c9-b1fb-434cfd29c6e9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b836da2f-d362-49ba-9413-4a5cf6a4d970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b474a771-85e9-435f-ad9d-ef6c8492e6be",
        "cursor": {
          "ref": "2c84bab7-7659-4e07-8bf5-0bb49902aa23",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "15cbebb9-45ca-4a7c-be56-149d7242c26f"
        },
        "item": {
          "id": "b474a771-85e9-435f-ad9d-ef6c8492e6be",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "027554c0-d528-4edb-a163-0fcca5a7c70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900d43ce-9def-4d3a-9cad-093a41ac98d0",
        "cursor": {
          "ref": "ec68a0b5-1c24-47be-8271-b4f5c1c3d3fb",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c22cecc1-c420-49d0-95aa-9452a4628bc4"
        },
        "item": {
          "id": "900d43ce-9def-4d3a-9cad-093a41ac98d0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "73a6d51a-cd23-47af-9495-5062bf426ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5072f947-176d-49be-95b0-8ea137e7bf95",
        "cursor": {
          "ref": "a061f8a6-4e90-46e1-ab9c-ff10328312eb",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3fc9e581-55f6-4cf2-99a4-577b9b9ef8ee"
        },
        "item": {
          "id": "5072f947-176d-49be-95b0-8ea137e7bf95",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6153f832-4641-4a02-bdf8-eb2d575a8410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec56641-997a-4f35-a4b1-380c957b7a78",
        "cursor": {
          "ref": "526449a8-4fe9-49fa-9fcd-1921416fc412",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "68dccb69-a5f8-4229-8999-50bbcb042356"
        },
        "item": {
          "id": "dec56641-997a-4f35-a4b1-380c957b7a78",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7dca484b-2727-48e1-aaa9-423042308341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b2eb73-7cdb-49d8-ad77-92d780df654a",
        "cursor": {
          "ref": "64a6830e-1a7d-415d-84d0-4aeeac0364ab",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bc496c7a-eb5f-412e-be48-d537aeb185e8"
        },
        "item": {
          "id": "e4b2eb73-7cdb-49d8-ad77-92d780df654a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5e94ce0b-18f8-4c2d-880b-65a2e765f2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582931ac-0fce-47c3-a367-346bd8fdc4e9",
        "cursor": {
          "ref": "81e488d7-89f9-4c69-9a82-f1697b546a58",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a3107c72-d252-41c6-8384-1aec611de29b"
        },
        "item": {
          "id": "582931ac-0fce-47c3-a367-346bd8fdc4e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2abcb2ba-09d1-4db9-b9ae-a5115f03b2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451bb14c-7450-4385-a8f8-43078c46427a",
        "cursor": {
          "ref": "75cca7e9-8fd7-4f24-8605-c3adc3967454",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6e5ed665-6943-4891-b824-8df6ec69f070"
        },
        "item": {
          "id": "451bb14c-7450-4385-a8f8-43078c46427a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "725144c6-b033-4541-9ead-0023829a6f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1e6db8-ba41-4212-9bac-3107b738d03d",
        "cursor": {
          "ref": "35cb2e5e-8829-465e-85ab-94553c4dabd3",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "108a066b-5cfc-41da-acd2-ef1452ed18d9"
        },
        "item": {
          "id": "6d1e6db8-ba41-4212-9bac-3107b738d03d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0bba0812-c201-4d0c-a4e8-340ab4141fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92300423-fc49-4a32-97fd-8fe997b375b7",
        "cursor": {
          "ref": "6d445b40-674d-41b4-b9c8-baf40b4d077d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f63e84e0-e84a-41ea-b7af-88cd75654859"
        },
        "item": {
          "id": "92300423-fc49-4a32-97fd-8fe997b375b7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f3227c74-e0ee-4f2e-947a-d8e0ec3b66e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8726a2a8-ff43-47b4-a7e7-14ec64c03e59",
        "cursor": {
          "ref": "ff037fe2-a200-47cd-9751-61f94f5ff526",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b974e447-1018-4437-8bc2-c8668bb13fb7"
        },
        "item": {
          "id": "8726a2a8-ff43-47b4-a7e7-14ec64c03e59",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f208db2e-a535-448b-ba7f-3a0ca436a10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9649c8-0a12-4a1d-9265-87d357597161",
        "cursor": {
          "ref": "b3ee5e87-2609-470c-928d-15d1278bb791",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "430e93f4-513f-4aab-956f-3ad23a63d04c"
        },
        "item": {
          "id": "fe9649c8-0a12-4a1d-9265-87d357597161",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c2dea93b-ade2-46a4-a06c-74fa50a9b4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b08c76-a9ea-4102-b862-a841720fc3c3",
        "cursor": {
          "ref": "64789017-9854-40c3-b431-b20c1eb583c4",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "69e53100-f0aa-4e29-a97e-3d25a494610a"
        },
        "item": {
          "id": "f0b08c76-a9ea-4102-b862-a841720fc3c3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4ffb73af-bf57-433b-bf50-f8b8576b4556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f92153-bc98-4ed9-81d7-c8427e500ef6",
        "cursor": {
          "ref": "607e0c04-4c2a-4b4d-9e3c-8dd601b65fab",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "54ca28a0-b7b9-4be5-b68b-2b6409d8c061"
        },
        "item": {
          "id": "b1f92153-bc98-4ed9-81d7-c8427e500ef6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d3315982-8455-46fd-a4a7-ca3b4768071e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f975fd-dcf6-436f-a39c-a7a76fa34a92",
        "cursor": {
          "ref": "ae7253a4-8b14-486e-a098-314408973208",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "76adffbf-28e2-4637-b5be-fc41e462f3d1"
        },
        "item": {
          "id": "30f975fd-dcf6-436f-a39c-a7a76fa34a92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d56bf1f1-ad05-4c8b-96b0-04061ead792c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd562d3-80cc-49f7-8d30-b5509c49b21f",
        "cursor": {
          "ref": "ed2498a8-e2ab-4475-81c5-96d74f935923",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fed6885c-b88f-45b2-8753-ca0dfdd6e32c"
        },
        "item": {
          "id": "bcd562d3-80cc-49f7-8d30-b5509c49b21f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "055a4ae8-2c38-4039-ad5d-60e399e34783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a5c1e-1156-4ecb-a4da-7749b7dcde16",
        "cursor": {
          "ref": "15890fa6-d847-4747-b90f-3e691397f8cf",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "89c63726-3ef5-4507-aa9b-1ef9b7877a88"
        },
        "item": {
          "id": "8c8a5c1e-1156-4ecb-a4da-7749b7dcde16",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1facb264-6d68-41a8-837f-300c550a8f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab4ff0a-8627-4c7d-a458-e00fc94b6fdc",
        "cursor": {
          "ref": "c7c69f70-ab07-42d8-a277-d4554a9e6fde",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ca879a83-9004-4c47-b139-1ed6e2a0598a"
        },
        "item": {
          "id": "1ab4ff0a-8627-4c7d-a458-e00fc94b6fdc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3ffa9d79-c010-46ed-bef9-9fb7148c2745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c894c7-a6a9-4b7e-8bfd-a7e9d9e204f8",
        "cursor": {
          "ref": "8f66def8-68f1-4b9c-a9de-2791fb09cccb",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9ce908b6-24dc-4301-bda1-d7da74163750"
        },
        "item": {
          "id": "c8c894c7-a6a9-4b7e-8bfd-a7e9d9e204f8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3351f4a-8bf8-407c-804e-be98aa2defc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e31901-1d09-4ff9-8568-ee71e1a5ca83",
        "cursor": {
          "ref": "9aeb2967-366c-4628-8984-fa04455ed7c1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9878c223-594f-42eb-8651-1e29f4bc6f6a"
        },
        "item": {
          "id": "88e31901-1d09-4ff9-8568-ee71e1a5ca83",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2d7c8376-55fa-4c73-add8-50457e93b7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30153726-f24f-4746-a51a-083fbf42259f",
        "cursor": {
          "ref": "4c935315-8f12-4420-8c28-fb2c372e4ebd",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7e4498b9-b627-4c65-9177-0e93f4268242"
        },
        "item": {
          "id": "30153726-f24f-4746-a51a-083fbf42259f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "73f3f389-5685-408b-8da9-71ee979a5562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722116a1-9090-4425-a520-b47d43b0c170",
        "cursor": {
          "ref": "af397576-11dc-4a27-b59b-39755aed09b0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6f3de9ae-098d-466c-816e-fceefcf00acc"
        },
        "item": {
          "id": "722116a1-9090-4425-a520-b47d43b0c170",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d683af95-69d6-4161-b317-f0aa6fac8cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc96af9-7e61-44b9-9618-664d68c291f0",
        "cursor": {
          "ref": "97f2b0fb-7ab9-4aa3-9cee-ee1a6e2bb8ec",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "01fb0e3d-e3de-4e7c-b08e-c58cecc9d172"
        },
        "item": {
          "id": "5dc96af9-7e61-44b9-9618-664d68c291f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37ec5c91-92de-4f90-b0c6-43dbb15f3cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afe07fb-235d-4dce-9520-ca520e28f93f",
        "cursor": {
          "ref": "d18967b5-b4d3-472b-8593-5a5f19cb7eba",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ae3a5d05-d2c1-4a8e-b433-30f839d2bbd2"
        },
        "item": {
          "id": "5afe07fb-235d-4dce-9520-ca520e28f93f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ff49116b-3fd3-4609-aee5-760f20beb15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cf0acd-79f5-4ed4-8f36-768e609b3801",
        "cursor": {
          "ref": "9ae2eaad-9e55-4591-9303-db9604c9df74",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "62ea5a9d-09bb-428f-a4c2-d9c55ed23a24"
        },
        "item": {
          "id": "f1cf0acd-79f5-4ed4-8f36-768e609b3801",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b4dbeec2-73b3-42ca-913b-ea0284bc66bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b6c2ee-d9fd-485e-98c0-4e026810781c",
        "cursor": {
          "ref": "01b1787e-fe07-4517-a871-0f2867ddfdf0",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "db84e0a6-c635-420f-b4ab-3ca30bc872a9"
        },
        "item": {
          "id": "45b6c2ee-d9fd-485e-98c0-4e026810781c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "928697ad-72e7-4e2b-820d-c1b8e42b2d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9ce9da-0dfa-4fce-a8c2-2d84c271921f",
        "cursor": {
          "ref": "be6c7fd9-b096-46fb-af7b-0aa14e89900c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "66ec3991-9536-45e5-a830-e1130190c74e"
        },
        "item": {
          "id": "ec9ce9da-0dfa-4fce-a8c2-2d84c271921f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4cee0956-26eb-4ddf-984e-3e2697bc97c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f8dfc5-de2d-4c80-9f42-dfab278ee86c",
        "cursor": {
          "ref": "fe92d6fe-81d4-4905-b8b5-b9267a8a412a",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dc6c676a-0057-45b9-bdf0-8785342429b2"
        },
        "item": {
          "id": "56f8dfc5-de2d-4c80-9f42-dfab278ee86c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c07c2015-7f3c-4d72-9b9c-58f1f1f4d605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740bbb49-863a-40ef-becf-c5b2281424d1",
        "cursor": {
          "ref": "090432be-965b-458b-afca-8df1b980189e",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b14cf47d-2e98-4a1a-a21b-80cbf280c6fa"
        },
        "item": {
          "id": "740bbb49-863a-40ef-becf-c5b2281424d1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0b5cd9ee-ae07-44bb-8d96-9c7643c7f4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f1389d-d096-45cf-9b0b-6f657bbb0b81",
        "cursor": {
          "ref": "d03fe91d-e074-41b5-a705-f8950b852b52",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "55d59dab-5f9a-4dc9-af85-ad9584e89e5a"
        },
        "item": {
          "id": "13f1389d-d096-45cf-9b0b-6f657bbb0b81",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "597ed12d-7575-4c25-a50e-a64e12ace8ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abae9441-c5d0-48af-bc41-4fc7046fbf5c",
        "cursor": {
          "ref": "d55fb157-503a-46b9-8d6c-4e22879ac5b3",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "19e0071e-47cd-44e1-99ab-aa33b947f0fb"
        },
        "item": {
          "id": "abae9441-c5d0-48af-bc41-4fc7046fbf5c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "469f540a-e8c0-4a97-a936-81e262ad2aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448ed1a3-ed1f-4a56-bc89-f28fd02443db",
        "cursor": {
          "ref": "96812e14-67a5-4382-bbaa-5a311cc0e758",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b6746f8b-5783-4a6d-b1a7-2bbb24e342f7"
        },
        "item": {
          "id": "448ed1a3-ed1f-4a56-bc89-f28fd02443db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a06bd75d-3e1f-496a-ab2d-168605728ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573c24a6-d0da-4c9e-8b29-090504aec77a",
        "cursor": {
          "ref": "5519c8c3-8ce1-4b86-837b-2ad4ae537970",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e6ed5237-f367-4766-a45b-2c836eb4d4f5"
        },
        "item": {
          "id": "573c24a6-d0da-4c9e-8b29-090504aec77a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "caf350ff-3199-4b53-aae1-853b177d22b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0783f4ed-5ce4-400c-8a3c-f0eecc86e1af",
        "cursor": {
          "ref": "2bc811e1-0fa2-46eb-8cbe-d499c1148371",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2f667f2a-1171-4995-9ef1-64b9f0ee5029"
        },
        "item": {
          "id": "0783f4ed-5ce4-400c-8a3c-f0eecc86e1af",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b72d9a14-0ddb-4e62-897c-9b0f80f67298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e1b326-7489-428f-9ecd-5aafdb07c8cf",
        "cursor": {
          "ref": "3a30ebf6-2c2d-4896-aa26-3e1500d215f8",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "109fa76d-0a83-4827-9f2f-31086e897297"
        },
        "item": {
          "id": "15e1b326-7489-428f-9ecd-5aafdb07c8cf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e5739ab6-1dd4-4f15-a84e-326f9fe30a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca98a652-2b86-4964-98cf-376f41fc03b7",
        "cursor": {
          "ref": "6bb4f5fa-b887-457a-aae9-605efc108ac1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5910aefe-a36f-40ab-be7d-b32c3d984d6b"
        },
        "item": {
          "id": "ca98a652-2b86-4964-98cf-376f41fc03b7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "851aa804-04e2-4d8c-8c0b-8e7c357c0933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc323d3-c12d-4396-97b1-38b218a2ce81",
        "cursor": {
          "ref": "f04c0369-c630-477a-994a-6dba2447af03",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6a762f87-76e2-4b1a-8ec1-8155141f29fd"
        },
        "item": {
          "id": "ccc323d3-c12d-4396-97b1-38b218a2ce81",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4453c964-47fa-4486-8c2f-51d392872898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12e154c-c40d-4f6a-9039-fed7e7b08b9d",
        "cursor": {
          "ref": "f51ff3d9-9e7d-4c4e-a0f8-e1a4433859a0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd571ffd-a833-4cb3-8c1c-a83865e614e6"
        },
        "item": {
          "id": "d12e154c-c40d-4f6a-9039-fed7e7b08b9d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4cc77ffe-7425-4fdb-a79d-87d5b6466d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06470fd-0477-4913-9128-e098ec960487",
        "cursor": {
          "ref": "4b018e21-e5e1-4047-ad0d-d81d40d4034e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5d93cac8-0d43-4b2a-ad79-b7a5693b8e49"
        },
        "item": {
          "id": "c06470fd-0477-4913-9128-e098ec960487",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "78e88024-8491-4015-9c1c-eeddf1871467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00229f86-1dbc-44e2-840d-db35cd3e3d7e",
        "cursor": {
          "ref": "89ee3b63-0a2d-4272-b792-d0bf0f29590c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "33c23de0-4f9f-4f8a-b65b-04aca7dff7b6"
        },
        "item": {
          "id": "00229f86-1dbc-44e2-840d-db35cd3e3d7e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "423561c7-64b4-4ed8-858b-b4230b6d7f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c008b24-6a79-49c9-9384-16b5b5972c3a",
        "cursor": {
          "ref": "cf9efaf7-7f1b-4e07-844b-83e7b5287f64",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d0332d8f-82c0-4b87-b647-0b6f179e080c"
        },
        "item": {
          "id": "6c008b24-6a79-49c9-9384-16b5b5972c3a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bc4fe947-f0e6-42be-9a21-2d9f8b95b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04495328-409d-4da2-819d-1cc0ffda6663",
        "cursor": {
          "ref": "bd24f0ce-0f54-47a7-afb1-d8b52723907e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e79e621f-64ef-4699-88a4-e841a57e9158"
        },
        "item": {
          "id": "04495328-409d-4da2-819d-1cc0ffda6663",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5b55d695-400d-413b-8fc0-0b887d1d1885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45667e7a-4933-4f7d-836a-00172282831c",
        "cursor": {
          "ref": "89fa1c7b-d570-4da0-b638-2e3093b0338c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "22a6c9e8-9eb0-4354-8172-decd87c096bb"
        },
        "item": {
          "id": "45667e7a-4933-4f7d-836a-00172282831c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "afdcbba4-f08b-4400-ba58-a63385458be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ade875-c251-4aa1-bf92-ae5a54e0aded",
        "cursor": {
          "ref": "68dc15dd-c8fe-4c93-bd0e-379508361d7d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "af0dfb54-f682-4551-8c3c-3a06dbe24185"
        },
        "item": {
          "id": "d4ade875-c251-4aa1-bf92-ae5a54e0aded",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1aaef436-ebc4-4f5e-99c0-b45a1ba8973e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379b99fd-163f-4fb4-9adf-6a6d8ee89dfd",
        "cursor": {
          "ref": "cce69306-ecc2-451c-ada6-def910412653",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "66492946-f390-4ecb-af40-1af286516ef2"
        },
        "item": {
          "id": "379b99fd-163f-4fb4-9adf-6a6d8ee89dfd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "42ecbf49-c5ae-4e88-ba1e-5efcee837702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf3724b-0b84-47c9-b456-adb47c59c8b1",
        "cursor": {
          "ref": "d1c8913d-b262-41f8-a579-31a678f95be7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "05762a1a-fde3-4d7c-ae04-e2c29434a9de"
        },
        "item": {
          "id": "caf3724b-0b84-47c9-b456-adb47c59c8b1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "23a04c6f-84d0-4d03-b575-91b36428f6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f632825c-aad9-43d3-ba9d-40ce249cae13",
        "cursor": {
          "ref": "17be3a78-8b85-4bc8-84a3-eea146d0d190",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "abcda1c4-24ff-4f89-9c04-8037291c20ed"
        },
        "item": {
          "id": "f632825c-aad9-43d3-ba9d-40ce249cae13",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1eabfa23-bd5a-412a-8260-f43b5c64f074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e77887-2803-4b81-98cc-50caff735339",
        "cursor": {
          "ref": "beaba49c-12ca-4d3a-8c76-03df83a6ae71",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2d4fdfce-de09-48af-9b6e-3c89b77a63fe"
        },
        "item": {
          "id": "86e77887-2803-4b81-98cc-50caff735339",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "07f8a42b-792a-4e7b-ae9e-868f7cf434cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7672fed-a3a8-4013-94cb-435513ca373b",
        "cursor": {
          "ref": "acac1298-5499-4913-bd6b-5a679ef4d59c",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "df718b12-50ed-465f-b2df-823e66eed43a"
        },
        "item": {
          "id": "a7672fed-a3a8-4013-94cb-435513ca373b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6a2b3004-ebf3-4676-adf6-5b72d36fa167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89df9e90-6e36-40a3-b93b-4e7af024743c",
        "cursor": {
          "ref": "6e0d0493-b71a-49d0-ac2d-2fa6d61f4687",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6c85796f-072a-4215-a39c-54009c1a4302"
        },
        "item": {
          "id": "89df9e90-6e36-40a3-b93b-4e7af024743c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e25a5b82-a956-46fa-a6ff-77090be5144b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfda565-79e5-4dd2-a970-3cc689022015",
        "cursor": {
          "ref": "c2e8b9fe-f764-4c68-b6c5-327ec162de6b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7b2bf614-3600-42e4-a8c4-3c660856f390"
        },
        "item": {
          "id": "abfda565-79e5-4dd2-a970-3cc689022015",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d9870836-a144-413a-956f-e99f5012c75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f704a3e-a529-417c-a1e6-accc793d25da",
        "cursor": {
          "ref": "e91f2f06-0f48-45d8-9f79-2b551f3c09ef",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b1f7074c-8aca-48d1-99da-723ec82c468f"
        },
        "item": {
          "id": "8f704a3e-a529-417c-a1e6-accc793d25da",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f1be2323-a6e9-412c-bd5e-3b6808d5d37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1022a9e6-5436-43a8-896d-da6b43701240",
        "cursor": {
          "ref": "e8309f10-5de4-4586-9d8d-1c5ba52dc008",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2bf9e803-75ef-447b-b113-64b410d5e350"
        },
        "item": {
          "id": "1022a9e6-5436-43a8-896d-da6b43701240",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c7d8acd8-3ec5-45bf-aac7-66a8ec7a140d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e3ee1a-e903-4b00-a9c1-2a2a8323aa7f",
        "cursor": {
          "ref": "727dbf79-c273-4a8d-8f7e-a76462650b24",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8acd2ee7-a8b5-4250-b204-898b222d12fc"
        },
        "item": {
          "id": "d5e3ee1a-e903-4b00-a9c1-2a2a8323aa7f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1aa868aa-ebc6-4c00-8dc3-41eb0a2fe442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e5ba4d-f336-4ae4-80d2-2b29bb163cbe",
        "cursor": {
          "ref": "f9fab926-08be-45a9-97e7-40253f25c129",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7f8cbca1-524b-44ae-ade1-75b65311c8c2"
        },
        "item": {
          "id": "15e5ba4d-f336-4ae4-80d2-2b29bb163cbe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31c0a24a-eb8d-4070-801d-3c04b5024ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4855fd1d-1ffb-4f3a-a412-f6fa3b2d4f2b",
        "cursor": {
          "ref": "16d86e9b-cddf-453d-82d6-5e128696ae5e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "736503ab-66bc-4366-a1a1-4d5b5b77aa84"
        },
        "item": {
          "id": "4855fd1d-1ffb-4f3a-a412-f6fa3b2d4f2b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "60662df0-8ad6-4d6c-807b-026c849c2b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cd22be-3a89-4d17-b27c-1bbfb42ddf5f",
        "cursor": {
          "ref": "8c2fe61c-4e64-4ba1-97a9-6db596baeb93",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "efe6fa1d-415f-4693-8711-e5dd0823250b"
        },
        "item": {
          "id": "78cd22be-3a89-4d17-b27c-1bbfb42ddf5f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1a2f420f-3531-4a57-bc5b-cfcfbcccfe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea8e27-15a1-444e-a5f1-97dea0f5c9db",
        "cursor": {
          "ref": "98258c50-06d7-451d-be8d-dd0accb3075c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "810e741e-723c-4c5b-bcf8-c8c685f1509d"
        },
        "item": {
          "id": "82ea8e27-15a1-444e-a5f1-97dea0f5c9db",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f873b4cb-17f2-4032-82b9-2c90dab34c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe5409e-d73d-4c05-9173-3717374592ba",
        "cursor": {
          "ref": "3763dbe8-40a0-481e-96c4-d4f5c360b152",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8284fdee-d3e4-4917-97b8-412a278e574d"
        },
        "item": {
          "id": "4fe5409e-d73d-4c05-9173-3717374592ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d2eb0357-2f5b-4510-82b1-cc4eda87e94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dd1f0d-e2ff-45a7-9115-656d7e157852",
        "cursor": {
          "ref": "9c38b6ad-9b16-48d5-89c4-88ee02a9f2ae",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "762bb68e-022c-48e6-8be8-909c1bb185b3"
        },
        "item": {
          "id": "33dd1f0d-e2ff-45a7-9115-656d7e157852",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad2d6a7d-c668-4a79-a80d-2ea239a188d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1953bf6c-4d9b-48b4-a04e-a2b62391d4ec",
        "cursor": {
          "ref": "dcd5a4ac-8812-45bb-9e45-d1cb990a9db4",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "17f66033-9854-4a86-aef3-4638a5a033d1"
        },
        "item": {
          "id": "1953bf6c-4d9b-48b4-a04e-a2b62391d4ec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "114b6a08-32a8-46ea-9521-9d00914e12c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c0bf94-81be-4040-867e-ecf6603cda22",
        "cursor": {
          "ref": "ae3bec9c-b09f-40af-bd88-39fc17b1456c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3334086e-d3e0-4ff9-bc55-26af2298404c"
        },
        "item": {
          "id": "05c0bf94-81be-4040-867e-ecf6603cda22",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8bc81a64-01d6-4615-83ea-ac2b7fbfc9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b192c7-ff3a-41f1-bc46-101bd1649694",
        "cursor": {
          "ref": "3bf03a44-e68b-4f76-91b6-d1a310d1be2b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ea7cdd83-3fa7-4c24-beed-276bda0d85e0"
        },
        "item": {
          "id": "74b192c7-ff3a-41f1-bc46-101bd1649694",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56316e19-a738-445c-a98f-21c5fbd93233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea9359d-7c62-40c5-ad76-7363bf3d90f5",
        "cursor": {
          "ref": "9a950d5d-cdba-44cc-b183-65b50ce0387f",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1eee5025-378d-4770-a5fe-1853f7be04e0"
        },
        "item": {
          "id": "fea9359d-7c62-40c5-ad76-7363bf3d90f5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "33d04728-6638-4396-961d-f00034c6ad54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fb4460-7fad-4da3-a6ef-13298eed6c30",
        "cursor": {
          "ref": "a7a5dd8e-a84c-4526-93aa-e6d511125283",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6faea5f9-c5fc-4425-9fd4-151bcb628ff4"
        },
        "item": {
          "id": "00fb4460-7fad-4da3-a6ef-13298eed6c30",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "577d5fc2-16d5-4098-ade6-ca5c4c1910cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e85d8a6-992a-4d0a-9519-520f10f01fae",
        "cursor": {
          "ref": "053ae434-caba-45e2-8c54-1f0ca9a12f4b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e457b762-2406-4474-93b9-4c25fd851b33"
        },
        "item": {
          "id": "7e85d8a6-992a-4d0a-9519-520f10f01fae",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6ee29c93-3c71-4be4-b449-1057b4671c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247787bb-c818-46d6-9690-3b903026cb19",
        "cursor": {
          "ref": "29d1e170-80ba-4af6-9a90-328a3c7d10e4",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "58d472a7-d36d-434d-8f73-31ab5688110c"
        },
        "item": {
          "id": "247787bb-c818-46d6-9690-3b903026cb19",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "109fc065-0ba6-4ae9-b135-7ed31a3921c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407a9df4-222f-48ec-8989-316fda5c4c1c",
        "cursor": {
          "ref": "3d61b9c1-c3fa-4aec-ab32-a7521916845f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "253b18f8-2d3d-4581-87d9-abed2ee03267"
        },
        "item": {
          "id": "407a9df4-222f-48ec-8989-316fda5c4c1c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e81d24bc-6f13-4fda-b092-0adc2cf0037d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52388386-02fb-4518-abbf-b94be8177401",
        "cursor": {
          "ref": "22fb27a7-3a50-4c56-b911-9fd0ddde484e",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06c62ebe-eed6-41be-a4c6-548199e61dbf"
        },
        "item": {
          "id": "52388386-02fb-4518-abbf-b94be8177401",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "be666df4-1b9b-4956-9b86-2f051ee79202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96384786-c573-4534-b99a-a62c76581b50",
        "cursor": {
          "ref": "f4f71561-5198-4b8c-828f-86710d71c6ad",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "225356d6-c756-45f1-b5b4-04c200bc252b"
        },
        "item": {
          "id": "96384786-c573-4534-b99a-a62c76581b50",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "39b2037b-728d-4cd1-a8d5-932f9fe1ab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6840e1-abeb-4785-a757-9926da90a2d0",
        "cursor": {
          "ref": "0f6604a7-93c4-4ec9-9339-0a21d21fadb0",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e493f904-c138-4fa1-a383-fb0759e00fce"
        },
        "item": {
          "id": "5c6840e1-abeb-4785-a757-9926da90a2d0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a67b30b-b0e3-489b-ade8-a030b1812112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566f707a-0b09-4395-a063-2a5a04881087",
        "cursor": {
          "ref": "e7eb63a9-f358-425f-81c2-bb78d5ac1edc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7428532e-e577-46e6-8c95-c235f72d05b4"
        },
        "item": {
          "id": "566f707a-0b09-4395-a063-2a5a04881087",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "00f7f29a-0808-4a45-9b6e-561357e2a858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a35e35-ae72-440c-a51e-bf6871618c26",
        "cursor": {
          "ref": "f8b8d00e-f050-42fc-a624-ec0846f4e5ff",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "82cbf31b-b4f3-438a-80f8-c2aa042fbf14"
        },
        "item": {
          "id": "96a35e35-ae72-440c-a51e-bf6871618c26",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8b341a6c-6c1e-40bc-ae66-796a0eeb8082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999ff775-58b8-4a12-b9f6-b16ac777ec74",
        "cursor": {
          "ref": "cfab5b99-d999-499f-8816-f81d7be33792",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "59a012e5-f38f-4962-b8b8-7bcbed66b86d"
        },
        "item": {
          "id": "999ff775-58b8-4a12-b9f6-b16ac777ec74",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c36ab7ca-9c14-4c19-bc2d-c82f02ed65dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3812ff-8fae-42a6-acc6-53dc2cae0db7",
        "cursor": {
          "ref": "654674e9-6034-4985-8c26-a1366c54de0a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e6526d79-646d-46ad-ba36-698ef522f1c7"
        },
        "item": {
          "id": "9c3812ff-8fae-42a6-acc6-53dc2cae0db7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "87689b21-c1aa-47f6-98ed-3ef80fcde0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32443c24-4298-4dbf-bc15-6db2e9f2e596",
        "cursor": {
          "ref": "52f63501-de62-417f-a30d-6e0382d30d86",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "37a335a7-4c3e-4134-ab35-83680ba85100"
        },
        "item": {
          "id": "32443c24-4298-4dbf-bc15-6db2e9f2e596",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "72885ee8-743b-45a7-a768-4618b2be377b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b311072-8f11-4c0c-ba3c-7635a0cc5ce7",
        "cursor": {
          "ref": "5019b75a-2a86-44c1-ae02-b223fcf6927a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f53e7054-e1d9-4eae-a3ee-eac59f4b2ae5"
        },
        "item": {
          "id": "8b311072-8f11-4c0c-ba3c-7635a0cc5ce7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ec364733-97a1-4db7-ac0c-64d5d23545c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b7a259-a594-40d2-80e2-81bb6a091e47",
        "cursor": {
          "ref": "a4d85770-60bc-4f3e-b877-cabe31258b66",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "de5fa134-ea46-4e27-b9c4-d373b594f901"
        },
        "item": {
          "id": "d9b7a259-a594-40d2-80e2-81bb6a091e47",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dfb6ad03-35af-4b3b-b10c-48cfca1cdf5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c8b864-2b6a-4fa8-9d52-8dbdfcd6988c",
        "cursor": {
          "ref": "a99f84dd-8d8e-4095-9d19-abbad241f4f2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2037439a-e8e7-4404-be3f-5c683cdc27f5"
        },
        "item": {
          "id": "68c8b864-2b6a-4fa8-9d52-8dbdfcd6988c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a15704bf-7720-44ae-929e-db175c74173a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16afea9-961e-44bc-9b99-f94b2f3be4a5",
        "cursor": {
          "ref": "a0473681-db1e-45ae-91b0-a51cf79df0ad",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2ffb19ce-3680-43fb-8c70-03099b166d27"
        },
        "item": {
          "id": "a16afea9-961e-44bc-9b99-f94b2f3be4a5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "20f5a832-99de-46be-b164-8549dfddafa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62b8aef-3c1d-4731-b9fb-f89a532885b4",
        "cursor": {
          "ref": "2fca9bbc-90d9-4a36-a43f-955b699faa24",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1db5ecae-9343-40e4-a5b1-4aab8097c0b7"
        },
        "item": {
          "id": "c62b8aef-3c1d-4731-b9fb-f89a532885b4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2dc1dc47-77fb-49eb-8198-b2d53b08daeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d2cb0c-4b34-4fdf-a4a2-e7af2d949ed7",
        "cursor": {
          "ref": "1c3f6a00-f8fe-497b-ac88-761033f44e1d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9b050111-be5e-4b56-ac4d-1f7dbb8007a9"
        },
        "item": {
          "id": "14d2cb0c-4b34-4fdf-a4a2-e7af2d949ed7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0f56aba5-71c1-41cc-b5d1-882ee9273a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f5d7f2-7324-409c-b4d2-60169911bcb9",
        "cursor": {
          "ref": "681c270a-55da-44ce-9265-e3f5cb497ba8",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1db95884-ffb3-4e23-8a91-141433d46890"
        },
        "item": {
          "id": "d8f5d7f2-7324-409c-b4d2-60169911bcb9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d2f1072c-943a-4b36-8a90-c106a32386a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d0c193-57e3-47d2-8b78-cc9f3ff119e5",
        "cursor": {
          "ref": "5702ab4c-cdee-46fc-8d74-1d37094deed1",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2a66a355-99c3-4f18-af34-0b12e8cdb8f7"
        },
        "item": {
          "id": "32d0c193-57e3-47d2-8b78-cc9f3ff119e5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "97938d4e-92c8-4b9c-a9a4-9c07d77b2667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd97e58-d917-4b48-bcaf-555113c7acca",
        "cursor": {
          "ref": "963eaf3f-98bb-4da9-8bde-548e54bfcb50",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "81c957a4-132c-408a-a866-560ee90b2ef9"
        },
        "item": {
          "id": "3dd97e58-d917-4b48-bcaf-555113c7acca",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4bccbc2d-e113-4a46-89cd-cf9f18c4eca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c564a435-49f2-40ad-accf-783f5f27bb46",
        "cursor": {
          "ref": "773b3646-e52d-492f-981e-447dec0a7209",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "18429379-6262-4139-821a-9909a67ff52a"
        },
        "item": {
          "id": "c564a435-49f2-40ad-accf-783f5f27bb46",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cfee39e2-d8a4-4050-9710-e122c9c9e302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a27b212-9d38-4bfd-a647-30845a597008",
        "cursor": {
          "ref": "673c751e-ff2f-4523-a6bd-ed555f5568c4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7c6ee1b1-c952-4780-95b4-de82a18ef52d"
        },
        "item": {
          "id": "0a27b212-9d38-4bfd-a647-30845a597008",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d3b550e6-c6b6-4a72-9d43-b0070b2a8c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33633a43-f62b-413f-abd7-5e366a23380c",
        "cursor": {
          "ref": "ef5e2b83-152d-43e3-b289-f8953279cbd9",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "95f4d177-07c5-4f16-9aa7-8d105d9e2ed6"
        },
        "item": {
          "id": "33633a43-f62b-413f-abd7-5e366a23380c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "07b5b6c6-9ee2-485a-b336-d1ac10d81af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cbc367-7dae-41a8-8b32-709776550567",
        "cursor": {
          "ref": "5b60e065-1521-436e-8475-725486284f9f",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "97d9ee0b-94ef-43da-803a-7bd406f96a42"
        },
        "item": {
          "id": "53cbc367-7dae-41a8-8b32-709776550567",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cdf1674d-18e8-4aa5-ba47-dd5b88e09099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6577375-c1b2-4821-bcfc-87a62133242e",
        "cursor": {
          "ref": "fe2cdf9e-4daf-4022-b728-21afe541d66f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0f307565-d9a9-4ed1-9afa-7fca81188291"
        },
        "item": {
          "id": "b6577375-c1b2-4821-bcfc-87a62133242e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "50b1f294-b120-4cc0-ae5e-bb5c231a28f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbe8819-dbe5-451d-b816-11c0fbe6a9c5",
        "cursor": {
          "ref": "4b3ee4fa-6d2e-48ab-86f0-3b720233fe57",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6e33de96-9bd7-4144-92fd-1f8a3788b211"
        },
        "item": {
          "id": "6fbe8819-dbe5-451d-b816-11c0fbe6a9c5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c021baae-6c8c-4022-a002-523959cbc552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7ee64d-329d-4db7-b82e-c80de61994d9",
        "cursor": {
          "ref": "3f5581b6-b03b-426b-837a-41263e151491",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d595c5f2-02b5-4c24-8d58-474eb51a5aec"
        },
        "item": {
          "id": "1b7ee64d-329d-4db7-b82e-c80de61994d9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7f15e680-c55b-44f6-917b-07b1505735b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aeeff4-c2ae-4f3d-964c-48a46d3fc0d8",
        "cursor": {
          "ref": "f2f22f26-bcb3-49a6-88fb-ddced01e860c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8718980c-067c-4f8b-ae32-828d061b6559"
        },
        "item": {
          "id": "90aeeff4-c2ae-4f3d-964c-48a46d3fc0d8",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6caf9af4-7d3e-4398-83dc-4855c425090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c74a2c4-fbc2-4597-8695-145e802bbb0f",
        "cursor": {
          "ref": "6a250e9d-389b-47df-b909-7e27a0fb2989",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2d1012dd-37c0-41b2-9f25-244389e090e2"
        },
        "item": {
          "id": "9c74a2c4-fbc2-4597-8695-145e802bbb0f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2c8a5e92-8d60-4e39-a396-b6fc86ce8f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b986787-1f92-4aa2-b8de-30c96ebeacdf",
        "cursor": {
          "ref": "a89a8c8b-5d82-454c-b057-2bc882908d30",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0d7c897c-3c06-4250-8670-157468bdc376"
        },
        "item": {
          "id": "2b986787-1f92-4aa2-b8de-30c96ebeacdf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "144c6373-1329-4445-9ea9-a6dfeb086e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebb4653-531d-4de0-8e11-3e9ef00e7939",
        "cursor": {
          "ref": "023c4f69-57c8-4b7b-a306-2412e1367ce3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0211a78c-0272-46e8-b67f-fb30030504fc"
        },
        "item": {
          "id": "9ebb4653-531d-4de0-8e11-3e9ef00e7939",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "79885fe0-9f77-4984-84d3-41b739a7e954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8627ec20-d48c-4542-be09-00f443c61547",
        "cursor": {
          "ref": "5454bea8-393e-45f5-a850-cb54e70f0b51",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8f505137-a757-4115-b5a0-05bc454eaa69"
        },
        "item": {
          "id": "8627ec20-d48c-4542-be09-00f443c61547",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d3cf63a7-f12e-40ce-979e-ae733846d680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63c6d25-1081-4903-a90d-c254a9283122",
        "cursor": {
          "ref": "2ac517f7-9c9c-4c63-b47e-6a494f35c07e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f213a858-047f-4d9b-9ac1-4fd50cf8a967"
        },
        "item": {
          "id": "d63c6d25-1081-4903-a90d-c254a9283122",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f0a7e494-3927-477d-b1c4-b492441edb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a5f9ea-c519-454c-8cf2-90ef24da7c0f",
        "cursor": {
          "ref": "f22ff45c-50fd-43b4-a602-4e85fb5402a2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2242ef09-36f4-4da4-bb12-cc6c10058cc3"
        },
        "item": {
          "id": "32a5f9ea-c519-454c-8cf2-90ef24da7c0f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "51af93ed-ee10-4f83-8748-c5d24fdaabf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8260b39a-6e4f-4c30-af73-8c55d78de91a",
        "cursor": {
          "ref": "55a6f4c0-1304-41ee-b908-431eeec30e09",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5b376a6d-481e-4acd-9a7a-cd55098d1b44"
        },
        "item": {
          "id": "8260b39a-6e4f-4c30-af73-8c55d78de91a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6625de4c-cc9e-4fae-acd7-c5050e65563b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979b4f19-ae2f-4f8c-aa30-5e693351883e",
        "cursor": {
          "ref": "0eacd56f-cf6c-4cb8-a2f2-de4d85766688",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "53fd937f-97e7-4d61-91a9-e8570b96af0e"
        },
        "item": {
          "id": "979b4f19-ae2f-4f8c-aa30-5e693351883e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "45e03667-56bf-47d5-93fc-3be49f088315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a538e6-0d6e-47b0-b79e-ef1cf50fda2f",
        "cursor": {
          "ref": "7535b791-340f-418e-854e-27d8dc88a695",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1d468e57-5102-4a09-a24e-4383a4a757b6"
        },
        "item": {
          "id": "f4a538e6-0d6e-47b0-b79e-ef1cf50fda2f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da21561b-5236-4848-b611-39b5fb596279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caeac5a-145a-439a-9cc7-c80937c1e76c",
        "cursor": {
          "ref": "b20e9e75-404a-424a-aa4a-ffaf602a96dc",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "33ded245-4d48-4636-b589-a7a85af3986a"
        },
        "item": {
          "id": "7caeac5a-145a-439a-9cc7-c80937c1e76c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd65c2df-d3c5-43db-859b-573b70cfe720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9511ac-409d-4266-a877-3ab4e14ddd45",
        "cursor": {
          "ref": "8b36f12a-7deb-443d-ad29-90be1b0615e1",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0ab69422-8a7d-4a45-87c7-6a4866dff3d4"
        },
        "item": {
          "id": "9a9511ac-409d-4266-a877-3ab4e14ddd45",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d6c987b7-8a91-4240-86b9-77c15cd3a935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2318bd-93ea-4da8-b186-3fc4e381cb48",
        "cursor": {
          "ref": "76c2cef1-7707-4170-bb00-7ded57608b3b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "66d1ddde-4a75-4601-b1a4-2815be10fb66"
        },
        "item": {
          "id": "6c2318bd-93ea-4da8-b186-3fc4e381cb48",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bd9b39c8-1fb6-4497-b07a-5c00207d2ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ffc496-2b80-42cf-bbf1-b8cca4143095",
        "cursor": {
          "ref": "490ad6c3-f690-43bf-9542-6a10ae2af385",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fedfcc23-1456-4f10-bb28-666d686d9ab3"
        },
        "item": {
          "id": "78ffc496-2b80-42cf-bbf1-b8cca4143095",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f94d562f-3f97-495c-b097-bae0e4fab9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2ab921-6f06-4f9c-b917-59dd47962757",
        "cursor": {
          "ref": "a880638c-1db5-4e30-bedf-ba3f616cf03f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "00bc9b9f-6168-4883-a80a-8c75463bab01"
        },
        "item": {
          "id": "dc2ab921-6f06-4f9c-b917-59dd47962757",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "84beb8ff-3036-4589-a386-8552916d1cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a88b058-6e1e-4f22-9f16-6df69661b283",
        "cursor": {
          "ref": "385c6cf9-1b24-4fdc-9d24-d856d34b0076",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bba6f7d8-ae66-4b24-bf20-ba3dd821216c"
        },
        "item": {
          "id": "4a88b058-6e1e-4f22-9f16-6df69661b283",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e441cd32-251a-4c07-955c-224b0e750a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d33ed6-0762-4f70-bc3b-71eb6411c4c0",
        "cursor": {
          "ref": "2fc6dc33-1847-4b54-90a6-719605da7ed9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6f157e61-d169-4ed6-b1af-4808b6fd2ce9"
        },
        "item": {
          "id": "36d33ed6-0762-4f70-bc3b-71eb6411c4c0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "75e43cba-87b6-4ad5-8026-6d5b683f4720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef11921-13ee-49b9-bc75-adc4643b13e4",
        "cursor": {
          "ref": "b1d7a712-d23b-4f4b-8fe4-ad3c3be346a8",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8e5519ca-5833-4095-aab4-e15cd9a381dc"
        },
        "item": {
          "id": "3ef11921-13ee-49b9-bc75-adc4643b13e4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4350e420-327f-4574-b276-9fa5c75d79cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb822b65-086d-4733-b12a-1e5b5ec8c255",
        "cursor": {
          "ref": "0d612889-cf30-4dd0-ab60-a66fd1abac4a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "99be7395-d7b6-4ceb-8f8e-7da54467b35f"
        },
        "item": {
          "id": "cb822b65-086d-4733-b12a-1e5b5ec8c255",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f843df01-3b6f-42a0-9c18-1412a107a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b14c3b-c19a-4d22-bb21-432e166074a7",
        "cursor": {
          "ref": "00ee70ff-9dfe-4a7a-b773-c20b5620a31e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d492a0c5-004b-4ff7-895d-a4a9107741b8"
        },
        "item": {
          "id": "45b14c3b-c19a-4d22-bb21-432e166074a7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8605a5fa-13a2-4bc9-9e2a-561b0670703d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ce7d4c-d0d0-49dc-952a-c7c2822ed6d7",
        "cursor": {
          "ref": "c01fe91b-eb9d-4da3-b11c-54fe801b43ec",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d35ead5e-c16d-41f4-a628-dce8ecf29235"
        },
        "item": {
          "id": "76ce7d4c-d0d0-49dc-952a-c7c2822ed6d7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1752cc00-8ced-42ed-b45c-be480c4b34ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a33aa0-9525-4165-96de-dc0d44d83e62",
        "cursor": {
          "ref": "852e63f0-a63d-4040-90b4-9b721e8c8e65",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8935d161-b488-4732-989b-3dbe652f9843"
        },
        "item": {
          "id": "22a33aa0-9525-4165-96de-dc0d44d83e62",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ff9a58e8-d4ac-4a61-a9ee-53dff4697339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7505be-4290-49f1-9846-651fcf53a4d6",
        "cursor": {
          "ref": "494089cd-e98f-4d9f-bbcf-25df36d4c384",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5b6eb845-e913-429f-97bb-5b9b37df93ff"
        },
        "item": {
          "id": "8b7505be-4290-49f1-9846-651fcf53a4d6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "23a84cf0-5260-4540-a410-fd3ed44ccb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7575712-483a-4728-8684-f1dd12171e22",
        "cursor": {
          "ref": "f9ff19e2-c36a-443a-a623-c7a08ea433f3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "94fc6adc-04e5-4043-b51c-8a4448cec501"
        },
        "item": {
          "id": "e7575712-483a-4728-8684-f1dd12171e22",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4c3f31c8-de6a-4de2-9dd0-885f84fcfee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c22ec2-902b-48d0-b9bc-7d7ad199c060",
        "cursor": {
          "ref": "a92f1592-6357-4993-adb5-83c3ec4f510c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7beffcf9-6957-4fdf-9ff5-c5d953043175"
        },
        "item": {
          "id": "97c22ec2-902b-48d0-b9bc-7d7ad199c060",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dafb97af-4963-4f63-a5cd-ac660c7ce7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03e7c6b-3801-4a8b-a2a2-e6c77a258efd",
        "cursor": {
          "ref": "5c966cc3-71cd-4407-9a5b-c3a0b8edb3ca",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "72cde022-eaeb-48c2-9d05-ec8c96c53c35"
        },
        "item": {
          "id": "c03e7c6b-3801-4a8b-a2a2-e6c77a258efd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "40cbe770-e0eb-47db-a6bc-b0c941493f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4ae753-8ccf-49f8-8d63-3211a03e325e",
        "cursor": {
          "ref": "67c9031a-223d-40c3-b611-214abce4a1e8",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7fa73b12-3891-4413-b5a7-c0afbc7d3d0f"
        },
        "item": {
          "id": "6f4ae753-8ccf-49f8-8d63-3211a03e325e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1ca7893d-3f64-4550-9e33-75a560004433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d583325-45cd-43e4-905e-c7b879a30c67",
        "cursor": {
          "ref": "e5f40ba1-0b7c-4546-82f2-cef6acf1b541",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "27001610-2cbc-4cff-9e1d-9984c117af14"
        },
        "item": {
          "id": "1d583325-45cd-43e4-905e-c7b879a30c67",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1fdae697-ac43-4c3e-99b4-ca536cf6be3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5571843d-5a81-467e-b4dd-d09e4574fe18",
        "cursor": {
          "ref": "617272e7-004e-4aa6-a763-210b77c1f369",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e356be55-0636-4189-b741-4cdfd94a81d5"
        },
        "item": {
          "id": "5571843d-5a81-467e-b4dd-d09e4574fe18",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2df3a399-8976-4477-a4da-1d968649b5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a002dd-dcb0-4cb3-ae3d-65cec95fed0e",
        "cursor": {
          "ref": "d90e773c-55de-47f1-8ed5-63cb1b48c0a2",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e3ea7753-3213-4413-a9e9-81635a73b7b2"
        },
        "item": {
          "id": "b5a002dd-dcb0-4cb3-ae3d-65cec95fed0e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a69cf34c-4df4-4b5b-954b-8176140c9b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75d5294-417b-444c-943a-b722a1d86b8d",
        "cursor": {
          "ref": "ac044846-5784-412a-8a6d-aae388fcbbeb",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6e31a950-f3ae-4f1a-a194-f95cc708167b"
        },
        "item": {
          "id": "a75d5294-417b-444c-943a-b722a1d86b8d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2f90406f-c075-4df3-9a2b-a2ab090fba07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04526164-39ca-4b5e-bb7a-93956ad9201e",
        "cursor": {
          "ref": "603b85f8-d8e7-4137-af53-cf2257df0eb4",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1d2632de-ad35-425d-8b2e-01c0d6654b34"
        },
        "item": {
          "id": "04526164-39ca-4b5e-bb7a-93956ad9201e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3d4d2574-bd7e-4e02-9bb0-52cd2ee716fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1071dc43-9aed-42ca-b026-487df89b6a24",
        "cursor": {
          "ref": "7976d17d-f8ca-4b9c-a17a-45bda8fd3be8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8f55318f-08a9-4276-a7db-0d9e942c509e"
        },
        "item": {
          "id": "1071dc43-9aed-42ca-b026-487df89b6a24",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0f6c3c23-e2dd-40fb-b670-7eb4a64d6658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ecf1d65-2047-4902-9a73-fee09087414a",
        "cursor": {
          "ref": "3051da05-3a7e-437d-b1af-ce932a753650",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "54e7c72b-cc33-47b4-84f8-e9cd9f4b85fb"
        },
        "item": {
          "id": "8ecf1d65-2047-4902-9a73-fee09087414a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "75b6fddd-e33f-4146-a3ee-0f57423b3186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83f2c12-f764-4a4d-bcd6-f173e3e922ee",
        "cursor": {
          "ref": "96b37ffd-62f6-49cd-a53b-2bb5fbbbda94",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "523402e9-20bf-452b-b88b-312472077fdb"
        },
        "item": {
          "id": "c83f2c12-f764-4a4d-bcd6-f173e3e922ee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "35220f62-5d82-4364-a3e8-a150311bdf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e309c995-7e98-48c5-aa6d-0ae3c75c1ac7",
        "cursor": {
          "ref": "be2e9b06-8c9c-44d3-bfd5-5475fb9ee7e1",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "72524b4f-1c21-453a-b11d-fe582538813b"
        },
        "item": {
          "id": "e309c995-7e98-48c5-aa6d-0ae3c75c1ac7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ffbb7080-91ab-46ad-86b9-ee729d3c6ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0262139c-7d13-442e-b41f-03a3d6098cc5",
        "cursor": {
          "ref": "efc07b2b-ca6e-4a57-8e2f-aa5171daf33b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a62dd347-3a5d-410d-8b8d-7b5cfd0f85c8"
        },
        "item": {
          "id": "0262139c-7d13-442e-b41f-03a3d6098cc5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "49d41fd3-0ded-4457-bb66-be35ddb27977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473d8e27-392d-4110-be2d-73ac0c044fd7",
        "cursor": {
          "ref": "01fe3b3a-d57d-40fc-bd67-b53ec487e96f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fb7cccc0-1297-4065-b51a-f658d7314ba0"
        },
        "item": {
          "id": "473d8e27-392d-4110-be2d-73ac0c044fd7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9adca8fa-450d-483d-9ab1-f831ccc17303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb69ab3-c37d-46de-b38a-ee398e78fc6f",
        "cursor": {
          "ref": "1aef5d01-3cbb-494e-93dd-1e2844ab34fd",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7c15ee31-7c0e-4352-8432-10afdb7df60a"
        },
        "item": {
          "id": "7eb69ab3-c37d-46de-b38a-ee398e78fc6f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cf590ba5-f63f-4583-854a-60485e7ba288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f8fc64-55e4-4b36-8d5a-b81b0aca5ab6",
        "cursor": {
          "ref": "79bde9ab-ccf2-455a-8f35-172794ae6c73",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d4015154-5ed5-41ec-9895-674430de0e1e"
        },
        "item": {
          "id": "c1f8fc64-55e4-4b36-8d5a-b81b0aca5ab6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "191a9364-deb8-42b2-80a6-05e3970b86ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07162283-df71-45c1-8efb-a5049ed6733e",
        "cursor": {
          "ref": "6d172bcd-99be-42ef-8821-ee80e33d5152",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "64a28f5a-788e-475d-8131-1c8bfe7537fc"
        },
        "item": {
          "id": "07162283-df71-45c1-8efb-a5049ed6733e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c54516de-a759-4e84-869d-12eae4e0cceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cdace5-7c2e-4d2b-801d-c835ef71734c",
        "cursor": {
          "ref": "36c9a9f0-3337-476b-9614-17d56636a59f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "22016f80-2219-49d3-8c67-55da4c34551d"
        },
        "item": {
          "id": "f1cdace5-7c2e-4d2b-801d-c835ef71734c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8d3d3f2b-64c0-4d9a-b457-67e4ff3e7ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc3290d-626f-4bc3-9998-e4131e5f22c8",
        "cursor": {
          "ref": "899bbea7-ef3b-4a15-b889-4084b49bfa83",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a80e5726-5e54-4d1b-a8aa-281147981b60"
        },
        "item": {
          "id": "5cc3290d-626f-4bc3-9998-e4131e5f22c8",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0670f030-6940-47b8-bb43-2aa2718fe70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e7156e-edb8-4b4a-820e-6828cdd6c0a7",
        "cursor": {
          "ref": "3c6466a3-6a31-48ef-abe7-f8b81cd8795f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "da3c1afc-a3c7-4978-b153-255e4fb215e2"
        },
        "item": {
          "id": "c6e7156e-edb8-4b4a-820e-6828cdd6c0a7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a8f2abce-5725-4900-b05a-73aaff21fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50728e4-98f7-4a89-b801-65c6c8058bca",
        "cursor": {
          "ref": "f6229409-0d16-4705-bf11-32495e125821",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7d2c9274-34cc-4ebd-8caf-a265221b3737"
        },
        "item": {
          "id": "b50728e4-98f7-4a89-b801-65c6c8058bca",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "38687ea0-c6e4-4a64-ac22-3b41880699d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c687dde-bfe6-488a-8bdb-db0bd970e4c4",
        "cursor": {
          "ref": "9ceafbc3-88eb-4938-9907-bc9bd1e796ba",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f637e567-df15-44d4-9f02-15342fac2794"
        },
        "item": {
          "id": "7c687dde-bfe6-488a-8bdb-db0bd970e4c4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e772d746-a9d1-4a67-b525-1d2dbe69e7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3877fd9-b969-4f1f-a0c4-eaf0a20435a8",
        "cursor": {
          "ref": "4882e07c-0fa3-482f-8377-d52063260e2f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b350439d-4fb4-4cf5-bb38-c18a0ae377e6"
        },
        "item": {
          "id": "d3877fd9-b969-4f1f-a0c4-eaf0a20435a8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "153a6768-ebd7-4b8a-9bc8-acf8295be8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86976522-580f-45ca-b925-0899b8c3b749",
        "cursor": {
          "ref": "cf002841-f9c5-4d94-8ba6-ddd1389d8d27",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4c93872d-b675-4924-93bb-257ca6866ce8"
        },
        "item": {
          "id": "86976522-580f-45ca-b925-0899b8c3b749",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "82dd0e7e-9b5e-4470-9c4c-e3d4933c0dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e334d402-e662-4fe2-8d4c-7526fbd16ec5",
        "cursor": {
          "ref": "edab8c7e-1127-48d8-b80e-d264689c7d30",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9f7b56a1-13d8-40b7-82b6-6b6a912e3947"
        },
        "item": {
          "id": "e334d402-e662-4fe2-8d4c-7526fbd16ec5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f9956bb7-da1d-4dca-80b5-fa14cc49b65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c17bd8e-a3a5-496f-9112-102ca4bc31ea",
        "cursor": {
          "ref": "b79d1515-00f3-4383-a426-9aebb0cf4104",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "912a579c-7bdb-4ae8-a7c9-33a5d1978fc9"
        },
        "item": {
          "id": "8c17bd8e-a3a5-496f-9112-102ca4bc31ea",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2f249df8-23c3-46ef-b2c4-05a60c741559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac397d7-f702-4010-860f-5072858e746e",
        "cursor": {
          "ref": "f2703720-9f7a-438e-9a76-aa01fce719eb",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1d77944e-a193-4e4a-ac4f-71dfabaf3f47"
        },
        "item": {
          "id": "cac397d7-f702-4010-860f-5072858e746e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b9608050-d7a0-4c35-8c43-8fb17de086d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8059b476-e25d-4fae-93a7-4baf9b6655eb",
        "cursor": {
          "ref": "a703ec50-b056-44ca-ba57-46fee6022c90",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "baf41e1e-1fe0-4ea5-8ac8-86723e7723d6"
        },
        "item": {
          "id": "8059b476-e25d-4fae-93a7-4baf9b6655eb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fef4f20c-7995-4bbe-84f0-d3e57efeb389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2127fd7-e5c7-4bdb-aeaf-84aa99e1a730",
        "cursor": {
          "ref": "0f128d0e-1460-4ab2-9df4-42a0deda9d0c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5f8e932d-460c-4850-a14f-91f79608031f"
        },
        "item": {
          "id": "b2127fd7-e5c7-4bdb-aeaf-84aa99e1a730",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "137d49cd-8033-43a9-aad9-8a67c5381b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80107d7a-fe44-43d2-8462-a5741478a581",
        "cursor": {
          "ref": "4b042c50-4df6-4ac5-b540-92c699857f16",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "77a5d410-ccec-4d63-a294-6aa01ec1d1ea"
        },
        "item": {
          "id": "80107d7a-fe44-43d2-8462-a5741478a581",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9f7609eb-1737-43ea-89c6-ace647956858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a1770b-5d83-4e10-84bf-4912aad40114",
        "cursor": {
          "ref": "1a2ee85d-177b-45b5-8b8c-bbccb80d02c4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "19ed2898-77dd-42b3-909f-fd17e1d54eba"
        },
        "item": {
          "id": "49a1770b-5d83-4e10-84bf-4912aad40114",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "03aa5544-7af1-436f-bed4-25891be17ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13faecb-3491-4b7e-9cdb-9f5e49cdbe33",
        "cursor": {
          "ref": "d3346e88-3d25-4300-bfe4-45e48cdf70bc",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "20ae08b8-e839-4088-a8bc-82b73a3a2772"
        },
        "item": {
          "id": "b13faecb-3491-4b7e-9cdb-9f5e49cdbe33",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2bc4c7e4-ecae-40e2-9477-f50a47172372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e53a44c-60b0-4ac7-a3b3-3a9315773925",
        "cursor": {
          "ref": "559c39ac-bfba-4f8d-9390-c2bd5d1ca704",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9d5fdfff-8582-4276-8a72-6abd82e50d8c"
        },
        "item": {
          "id": "7e53a44c-60b0-4ac7-a3b3-3a9315773925",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "228cd63d-f272-49fa-b355-9b76f1b529ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6e7231-4959-41bc-ac17-0e6db3a301e3",
        "cursor": {
          "ref": "3b189496-fd75-42d9-96b0-c7b9d652521e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "76af9212-e0ca-427d-a095-20956d31366f"
        },
        "item": {
          "id": "8b6e7231-4959-41bc-ac17-0e6db3a301e3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b8b92456-3285-4356-ba1b-4c48ff0647e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29931886-7377-432e-a259-6f95394d53a2",
        "cursor": {
          "ref": "726e18b4-8d0c-4dce-977d-376c391e3204",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c54916c7-9836-4549-bea3-38f0fe0f0171"
        },
        "item": {
          "id": "29931886-7377-432e-a259-6f95394d53a2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "30918ffe-4a98-4bf4-80f4-e514210675cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa86c05e-232f-4127-a91e-e805825d675d",
        "cursor": {
          "ref": "d9d838dd-1214-4907-8b4c-92ea7d02eea4",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2a3d4139-85ee-489b-af27-266ab7de9ccc"
        },
        "item": {
          "id": "fa86c05e-232f-4127-a91e-e805825d675d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fc40164a-89fd-49a7-b208-c5941398e97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b01988-f21b-442e-b048-7f3d1f5efbcc",
        "cursor": {
          "ref": "acaf9041-6f34-48ad-91f7-6572ba51001d",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3af1388f-69fe-4794-9ea3-565e46d307a7"
        },
        "item": {
          "id": "88b01988-f21b-442e-b048-7f3d1f5efbcc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "18b67779-20ac-4f96-ae5e-b2a17157365b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eacf0f-34aa-4417-a491-18f46fe54e05",
        "cursor": {
          "ref": "e5d1f99e-c85f-4c04-9118-4502dc297cdc",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8809fa73-d03d-40d0-8a23-7006b90603cb"
        },
        "item": {
          "id": "f9eacf0f-34aa-4417-a491-18f46fe54e05",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cbfe3a1f-a145-4ac0-b647-3e6acb00e2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b6016d-d32e-417e-aeb1-090ddc6a05a8",
        "cursor": {
          "ref": "21a2c73e-ef59-4764-8ee8-f485db4ed0c3",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "043da85e-f7d2-47b0-89f2-2b2d851dac73"
        },
        "item": {
          "id": "79b6016d-d32e-417e-aeb1-090ddc6a05a8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "531ea1e0-0807-4cda-ae9a-7ace0af0b421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2347313e-3398-44e4-8a69-8966422dfbea",
        "cursor": {
          "ref": "686fb8fb-c6e8-49ea-a549-1a23afa3fde7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0a2eae8b-1135-49c6-9056-116186360a45"
        },
        "item": {
          "id": "2347313e-3398-44e4-8a69-8966422dfbea",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dcf16081-bd52-4e1c-9a5f-7510d4461135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db55009c-a071-45d4-ac28-43cb5cee9396",
        "cursor": {
          "ref": "38b58677-d248-4772-abf4-6788867728e7",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2c2bb8fb-1538-4b43-9389-73fe44988abf"
        },
        "item": {
          "id": "db55009c-a071-45d4-ac28-43cb5cee9396",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "573ae1ba-0010-4d46-b8be-0956482c0f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0ed5b4-03a4-45a9-beaa-705b973b3bac",
        "cursor": {
          "ref": "6116b4c8-4440-4ab2-b3e4-1a7a85cc3787",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "677789f4-a0a7-4d13-a691-5f9956770881"
        },
        "item": {
          "id": "bd0ed5b4-03a4-45a9-beaa-705b973b3bac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "482f7116-2026-4caf-99a7-6c32c9e69484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf94ea1-1726-42ec-b152-75e16d41be74",
        "cursor": {
          "ref": "a8adf65f-4ef4-4bdb-8dd7-f97a7fdff651",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4ff4035a-c233-4f64-b8ad-6bde0ea11e03"
        },
        "item": {
          "id": "fbf94ea1-1726-42ec-b152-75e16d41be74",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d0389f9e-9a02-4b16-918d-dbc458118af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfdfa4f-9152-427f-ba18-4ee0d54577cd",
        "cursor": {
          "ref": "08dbf4f4-fa1f-4de7-afd7-5edc9bba0c64",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5d26be55-8356-4970-80d1-e5968b18fdb7"
        },
        "item": {
          "id": "bcfdfa4f-9152-427f-ba18-4ee0d54577cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "912aa065-946b-4f91-82c1-ab61dbd33bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc86bd5-5cc0-4e59-b683-feca81022863",
        "cursor": {
          "ref": "f667222b-4694-427d-86e0-8c12358c8d32",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "da955e3c-bc22-4083-b0eb-7a76f5ebf592"
        },
        "item": {
          "id": "3cc86bd5-5cc0-4e59-b683-feca81022863",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "febdae10-08e2-42a8-99cc-8f8f67545fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab98f96-ead9-4064-b96a-cdbf2f39317a",
        "cursor": {
          "ref": "bca7da8b-f617-4b2a-b790-cc5675929ba9",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5b77a6c1-34f3-4c5a-8d98-49c70d92630c"
        },
        "item": {
          "id": "9ab98f96-ead9-4064-b96a-cdbf2f39317a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f0320eb9-a718-48b1-9529-9bc903308dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f078aef4-6f16-4f1d-8d00-a40435b752f1",
        "cursor": {
          "ref": "b07f9499-699d-4917-a9e3-2fa417596f8c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c17c1a70-1ae4-4eb6-869f-f9cf8928a955"
        },
        "item": {
          "id": "f078aef4-6f16-4f1d-8d00-a40435b752f1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ccd686e5-6964-4646-ba61-96970da178ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68f6f64-782f-46bb-80ca-8f30fd2e28bd",
        "cursor": {
          "ref": "21572535-c0d1-4a71-b18d-9acfd7284956",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4ab6b780-2e42-463a-8658-01a5f9567c31"
        },
        "item": {
          "id": "e68f6f64-782f-46bb-80ca-8f30fd2e28bd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8d3f3633-2c5a-4db8-89b8-90797b8698ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792602e5-bc13-42a0-8f6c-0e8cf415b851",
        "cursor": {
          "ref": "22b279c3-2eef-4766-9234-973105f97876",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f5330425-330f-423c-9238-695800105beb"
        },
        "item": {
          "id": "792602e5-bc13-42a0-8f6c-0e8cf415b851",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5b2377e-2c35-4a7d-9c37-fe8ca6740cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94c2393-fcac-4ee2-84b4-d56beb7a8e97",
        "cursor": {
          "ref": "63760754-8f9b-4a5f-b7e5-eb8c175ef663",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "8ca51bb2-9e9e-4bf9-be9e-4b7749d7f337"
        },
        "item": {
          "id": "a94c2393-fcac-4ee2-84b4-d56beb7a8e97",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5d373c0b-6a32-480a-9703-ee88ded43802",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf93045-6cde-409b-80a4-2c952f6bffbf",
        "cursor": {
          "ref": "cc0d8d75-29f5-4d48-9ef1-9e2852528b60",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8593261f-e278-44a1-833b-28e4a6e67834"
        },
        "item": {
          "id": "edf93045-6cde-409b-80a4-2c952f6bffbf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "47db14ed-cf02-4292-ac7e-f4c836a0fd6e",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "489d97b7-df74-42e9-a61f-f95474a86ff4",
        "cursor": {
          "ref": "9951ccc0-7b5d-46f6-a91f-9af65671be06",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "3b4ab90e-b64e-475e-b8b7-2d6752651bbc"
        },
        "item": {
          "id": "489d97b7-df74-42e9-a61f-f95474a86ff4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "9c327922-2a08-4f70-8255-15f6cfb5c666",
          "status": "OK",
          "code": 200,
          "responseTime": 1580,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1350c2-b147-49d1-a954-a5c21817bcfe",
        "cursor": {
          "ref": "3ceb71c6-a976-417a-b60b-347c93acf7ef",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "3e3d42b9-21d1-4c33-bc67-7f2bdd86f5ba"
        },
        "item": {
          "id": "2f1350c2-b147-49d1-a954-a5c21817bcfe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "26d40f6d-67bf-4148-88d6-ecd92e90ebce",
          "status": "OK",
          "code": 200,
          "responseTime": 1465,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8855d2-4ee6-445c-9d33-fde36c746e71",
        "cursor": {
          "ref": "a5b48a5c-69c1-4200-a5e4-5b0342f9814e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d8d3be38-3726-483b-9300-42dd56c2001e"
        },
        "item": {
          "id": "9d8855d2-4ee6-445c-9d33-fde36c746e71",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e723775-bd00-45bb-b8d2-f9b98e2f2ac5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8855d2-4ee6-445c-9d33-fde36c746e71",
        "cursor": {
          "ref": "a5b48a5c-69c1-4200-a5e4-5b0342f9814e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d8d3be38-3726-483b-9300-42dd56c2001e"
        },
        "item": {
          "id": "9d8855d2-4ee6-445c-9d33-fde36c746e71",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e723775-bd00-45bb-b8d2-f9b98e2f2ac5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85903a27-3ccb-46a8-b8ff-c33d33320f3e",
        "cursor": {
          "ref": "fe0d9eae-1302-4414-8586-7f877b89cac1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "dbb2bab8-4d5f-4322-bef1-d8e3a6a98a4e"
        },
        "item": {
          "id": "85903a27-3ccb-46a8-b8ff-c33d33320f3e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f722045-f48d-4bd8-b173-83f13d6c822a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeecae59-8abd-443b-8e8d-2080172e7f6d",
        "cursor": {
          "ref": "b66e7fce-6c38-4a23-8db3-c61a15ebac4e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "18bb851f-853f-4422-bd1a-26233c505576"
        },
        "item": {
          "id": "aeecae59-8abd-443b-8e8d-2080172e7f6d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7e163a03-e0b0-42a7-97ee-063cb0758120",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}