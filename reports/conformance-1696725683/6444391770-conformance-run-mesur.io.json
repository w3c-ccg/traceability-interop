{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7c426de6-0751-4916-a280-923dd284b716",
        "name": "Clear Cache",
        "item": [
          {
            "id": "860284d9-2093-4c81-aeb4-2773467a15df",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9a28f49-4cff-410e-9ee5-d3ff83e02ac4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d6ceee2-025e-4cbe-bd09-a75bdf229ab2"
                }
              }
            ]
          },
          {
            "id": "c6849860-8e37-4848-9d46-f246b578fd72",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe29a402-2972-4eed-a0b7-d0c57b9eb37e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cdc286b6-61cb-4a38-8af8-afc5db21db3a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "84112d85-7c93-444b-a556-e4bfac331ddb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e9ee0e0f-2130-454f-b8d7-db3e00187c78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3159cf8-b577-4494-84e6-9f9010fefe5a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1d8ea70-8d3d-4bea-9d9d-364b71dca1cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d74ca2df-7161-4442-b8c4-3758ed997d6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c2285d9-eadc-450e-a318-81326b797a5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d41193ba-a5b5-4954-96e8-a1a7f83e5642"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "40a8e125-e954-4329-ae3f-2a1becd69fd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c6ba285-8dbd-485e-8e2f-80d44ed7c761"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2996d021-0962-40f3-9415-e9669b0b9dcf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f24d9f22-16c8-4bad-8455-30f0a1fe52e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e867f79-fa04-49f9-9ecc-744782529aa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76bcf83a-3123-4756-801c-f65c49d7aa60"
            }
          }
        ]
      },
      {
        "id": "ba95b784-0aed-42b7-bab4-5ae34432a92e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b3d90d1b-3404-4aa7-800e-2c03ca74503e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb3a480b-221d-4995-a298-af6dc4f158b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3843c68c-7326-4803-8d59-46bcf9b24503",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89a354a-5e59-4b0a-af1c-44e46e83706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66cf20eb-8a38-4750-9f9d-8e7f5b06a743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f620207-784b-46cf-a7ff-5a556e575348",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1881fcd9-ac0d-4fc0-a040-803c70ee6db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a652fd7c-b239-400a-b6ba-f9361c42331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43638fc4-d9f2-4dd2-801e-a5cbc0e637ff",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da95f13e-8772-4a79-acb8-6de77adbbca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6419aa74-84dd-4897-ab67-2cbcb6fe0e11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb47fbdc-2a1d-4161-9f13-dcf097f95741",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea323cd6-9c14-4cfb-b4ed-f9a4cf72c628",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dc75ed-84f4-4f49-b72a-0b7e347d5700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b608cbf8-7c72-4acc-bbbf-76dd3175083d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263e711f-5c34-4939-b2ee-5aa8e9a869be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73504ff8-0c2b-42f6-b2f9-382110355654"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "64013131-08e3-4bc8-b576-490efc811086",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4c89acb-e642-4b1b-a18b-0a26001171f3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1c7a7c8-c030-42cb-97f9-9b22f9b027a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ea14a797-2e61-4d1a-b49d-787957bc1200"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "783fa9b9-dd50-40f5-b3d7-7dfc076dcd8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "20220e06-bb3d-48b7-9e4f-b0944ea93a70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed0a1fd3-aa63-4767-9a53-4d1cb65499e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7950977f-18d6-4742-b90d-d99cda0bf961"
            }
          }
        ]
      },
      {
        "id": "70a59d95-0e85-4e68-9dda-ae07b1a9fdb4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "15e65351-a2cf-47aa-8c9f-0dc4c952507d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2b68858-9367-472b-ac08-2caf6985c833",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b0e4ef92-5a24-4c30-a891-e3983c8d60dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8787c3-9b35-4eb4-825e-c483a8d11024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bb4aa8-f165-41f6-9ab5-0f6ff5d86970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a17d024-dfca-495f-886a-22632aa098ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ad51f3-e7f1-4bca-ba8c-1976333b3043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5d9991-9574-42e5-a3cd-a1bc52f3e636",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdca01f-e5dd-4dae-8d8a-fb610be62b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402e7740-c714-491c-974b-e49fd69ab758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8319f4e8-a6c8-4862-a20d-298126fe3ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01b6083f-52ed-4849-9a70-f70107504a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad5ccdd-c15c-4202-b255-c60f0d1b8836",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eeec8f-2ac5-4a05-af6f-da19f6a4877c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aef99b8-5776-4070-a47b-a4e6eb7c0777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8c4586-23ee-4229-8099-92a2169c8de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc21807a-d5a5-4e09-bcba-827859bf0382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8ab313-811c-4679-89b7-dd1d4164885b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76939478-3ed4-4b79-be75-4e5036100881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9163d2db-f4c2-4f93-9a91-6b8fa44ed350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea6d12b-5177-4497-86ea-dde758477ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e171ac1-164e-4336-9d4a-b00049dcf25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8ee41e-1a3c-4992-9a86-35e76781da8b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5a1109-f8c2-4a34-8544-642eedf2d16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09210c0d-2b58-4714-9fed-58431865f4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce615055-4999-4bcf-adb2-afa0a42d92da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b57c7f0-68ac-4e6d-b2a5-7b824870420e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05a0082-ca6e-4234-a903-9d205fc6ba82",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3a71a3-ff25-49ff-bce7-dfc2da246849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37805d5c-40a0-47d6-83f1-1a22a0082dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d39ecd-ef8d-4f41-a141-21c62c7fc679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f7e88a4-fdbb-4063-a7e4-2d2f3ee21a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf943797-17d0-4512-b177-623e554ae4f6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f53aa1-a81c-4e9a-907c-ac89d32abd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5fdcde-130f-4b19-bd72-ccef6643a8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e16eaf-cc7b-4a06-9938-4df15587215a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16f709cc-aa56-496b-897b-f0b4d852bc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b9e94e-1317-4051-b81c-677b99398ca4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a19a07-1793-459c-87d1-32f560be806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f72be9-784f-4981-ae20-ddc367bb6994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb761c7-01c4-45ee-8390-c07ae134ba75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "863914f8-38cf-4014-853e-bad5aed7c5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228bacd5-a5c9-4b9a-8173-3991e0fd3ecf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccc5086-6f34-4c86-a5d3-69c3e01f2321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991d9d36-53c8-4ff8-b524-3ddbc7f57b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313a165f-ff43-4188-be0e-fb6a681c9ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "293913e6-266d-40ee-961d-edcea9c0f06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbec3b7-7960-46b1-9793-c7f18b569076",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9865eb-1e2a-4d7c-9055-927efbea7ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2370e4db-bf59-4b34-8b53-753c418fc34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c38c019-8b4e-49f4-aa91-a53e5e743452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a6af3b6-965e-4327-8586-46f19234a0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c252da6-e1c4-47b5-9043-f4c61c3f737f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caf6404-9d75-4122-a4aa-1c3a0101e525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b388c77-299f-4672-a7a4-cf2fa0c49d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b434e7-9de3-4a5d-b8ae-00febcd7f106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2532a6f-a16c-4d45-8375-36caceb462c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c344a1-cd67-4a11-a1ef-b285abd3f559",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8a9cff-c168-4930-b0a8-dcf64ac3c965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa036201-0ff0-4a93-8ea8-13a709697652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e92d6b-22b5-410a-a0d5-cd46ffe8bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "036c6441-4c76-49c1-8fae-c83e0893b639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffd6f69-cbd4-4db2-92ff-96f6a6e14aa6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf1fef8-09ec-48bf-bf7a-2f53a1ec96c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a9a2b4-51f3-40a8-998a-252cedc9b496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ced0149-6ad3-432c-8870-bc1237556192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51f64e44-5466-48a7-8156-745b6bb0293e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820613bc-a01d-4117-a895-4d495ac51b60",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6842d341-b86e-4e9e-a669-15bf45e7f002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3048c820-a72a-494d-bdef-700a552736c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e6f925-695e-4ca2-892f-f86626ccbac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728b55e0-34be-41a3-9cb3-37f46f6edc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49198121-02c4-4dd5-b1cb-40cb39bbb825",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13c5ef6-6c44-4cf3-827f-a1f6f86919e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab926eb-de75-4026-a57f-250db3f15487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d9a124-d38a-4019-859d-59eae647f532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac0efa27-b306-4303-8dc7-e264998075d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fc4bca-2237-4b04-8c3e-cd7913ed652a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e3ddad-8c08-4872-81e2-9aff28f59d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791046aa-46da-4757-a8b4-f76fa8cbaa56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fd0de6-9954-48ad-a23d-85a0637cb3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a002a174-95bd-43c9-8911-bdd9fbb36e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e01a81-33e6-4b99-b235-7f722a138240",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6256b96e-1dc3-42a2-91a9-a8b04d2a0ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71a21cd-81ae-441c-b4ee-848495e3b23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183aee3d-981c-47ca-9ae2-08425e38e717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "203576a5-db51-439d-a2b2-360c5f7edb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d82e59-35d1-4e87-88fb-0920139acf9e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ee4a23-4690-43f6-94ad-2b60bc3f52b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b32016e-8486-47b5-abe5-1e2e50369dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cf4230-113f-4eff-9f75-eb98ad6dfee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b494d2f-caaf-4232-b09d-4c72c611c388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195d94b1-5406-461f-bad3-802645044e19",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d419353-2dae-44f8-bb99-fb356695af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f23228b-ae56-47c9-bf5f-5c04447ca5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73648680-d6e3-467a-9ad5-ae7915abf10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff71b3f3-3de8-456e-b94c-58d8843025ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ef874d-8c7f-4387-adb6-6f9b3a4bb487",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0089563-5a5d-48a0-b9d7-853c46241d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dec24c-8087-43f1-9b36-c4dc97540c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f77ee5-9dda-42d9-a134-3e575e4e29e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "774aa4e0-077a-4402-9e42-a560a03a1abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94670303-1722-4c43-a65d-726180a8bfd7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee001f2-4c70-4a57-84c8-9d812127669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e647f04-1555-482a-a431-5237d102ee75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdf83f9-3d73-43b5-b656-bbe43e9312fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c61cb95-c4cb-4539-8204-0879060b3187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dc744f-13dd-4f34-afb7-063c1838b770",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a51e7f1-fc53-4346-b84f-c86025fb1319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557b1e7b-3f5e-464d-9705-56ea757acde2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723353c1-167d-4b2d-9852-b01e3a886e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "78e9b2ef-8a96-4187-9468-8ae375fefcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fb799a-7121-409d-9e8b-615843be4541",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32728b3b-00f7-4284-9445-9f760923a19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0320f303-8a91-48ec-a9f0-21c6f205f501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fa335b-2deb-4ab6-b0cd-19f512700987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcc0c96-995d-4f7f-9474-b1618e52fee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2439038-697e-4c53-ae74-bfc29601144b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87a175d-20d3-4884-ad2c-319c18bb82ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dbb832-8d2c-4456-a23e-e5a52c2ab2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79f9782-f014-40f9-a00f-012ca3012fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10acb603-a28d-4527-b189-52e81b6c4652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e36387f-1aab-4d64-8fc4-afaa9f54c05e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3132b16b-1d20-4500-917b-dc9e442cbd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8e3e06-6b07-414d-bbd1-1ef3c0e86b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c35546-7353-472d-b4f5-dc0b499c5848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "104c9881-ad42-433b-950c-be4e3caae116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd382c5-5963-42ee-b186-14bdc766a0cd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ee8f09-0838-4c97-a9c2-0b3f2efa2925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884ce7e1-d064-4968-a095-1562d6bb94c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dfd453-fe1b-462a-bbe4-a75e34708034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1da68ef4-1c7b-4003-9feb-184653627b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d81d02-fea1-4f49-8243-2e29fb36d010",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50e0463-20f1-4250-af58-712cc07671f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0855b24-d522-4ce5-80f4-f0d31df03501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc603c2-0241-4a02-8d62-7217063b9d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97716ef7-96b6-47d9-baa6-64e333d7ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c4699d-4670-44b1-b475-f5e76393345a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf21caa-55d8-449b-b8aa-9fc69a26e098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcebad9-b1aa-477c-bdfd-f8f06a72aa8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e872f53-3b95-497e-8e39-054a2fa1ca69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "927cbe7f-3767-4c62-8081-fb51be2c2e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee91b34-f019-4602-b6f9-4c936abeb714",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b0cc57-c033-44d6-b1b5-a3cc144407f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1b5f69-23fa-4152-a1c6-25942cc60199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfa1bb5-2200-446c-a053-4c44d25c2bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33628f17-a654-4476-b26f-1858b6f47d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504c1c7c-de0e-4508-a358-745f5709e079",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69125ef-d17b-4451-857b-b91a939b37b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57338da-e853-4fe0-9300-b0e4e07b6ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed0115b-5fb2-415e-836d-85a1c0ca2566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac36b581-668e-4147-88f7-b733b74ba62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8059674-4944-42b0-895a-aa127820de3f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7434e0f-1501-4297-b823-6211c41aa36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed7969a-2298-455c-986e-1fd65c7e36f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd096f9-56dc-49a9-a5ff-dd4b9194fff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67976bcd-7b79-48d7-89b7-74489d85ad56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be198dce-673f-4e94-8b4e-3e0fdb03cc92",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c728297d-ab46-4444-8cbd-0d79b46f55c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14b7674-bcbb-428d-8ce7-c06b72b587e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23e1522-c84e-4103-a83f-3578231768b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4cf8857-6040-4f82-a5b1-d6a7bb4d3f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0429a6-3924-4893-a0e1-cdcebc625169",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c48b4c-e773-4c6c-ba4b-321d3bbb050c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8626d1dc-5922-47cd-b572-9444a8c85e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6160c050-3275-4a30-beca-db9955a589a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0daba122-b1c6-434a-8c0e-ed966a86d795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7905df01-b17b-4131-858d-74ce42ab38b8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c181b403-f622-4b53-9da2-fba0d8d3a52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65acfc4e-36ba-4e4e-bd5d-8d0d7641e19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc0811b-d74c-46de-abcd-3be1816a6168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bed9ec7-a892-4117-a101-109bd384a029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9062be61-c78d-4e44-9870-f6404dfc0458",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00921cf9-0375-49cd-a471-827106bbbc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96246f97-4b2a-4a5f-9dd5-2620810535c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ff5831-b098-4532-9cce-85da8c2f9221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "324bed16-8e07-4ec1-a7ac-6ba651f96316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46065cd4-ba19-4db4-88b5-a5ef5de7b5a5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70051886-98d7-47e6-90b5-5914735871ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d043fb3c-bfd4-4e08-9374-ba45c6c5a879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277c9ba9-0664-43f0-866d-99b3d130c54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17e37619-418c-401e-9c7e-0a794b1b6953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed56a0eb-6a1b-488e-aaa4-4d2fa43fb47a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fee137-f072-4d6f-95b3-ecb926f9f953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de6db97-862e-4c71-b45d-318a4f147bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de35601-9ac5-4d6b-9e60-51d64182912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0c462b-3c94-419f-aee3-e4f92b9498e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a2b4cb-0b50-4a7c-9697-9072879e6dfa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5481d0-f17e-4e1c-b62a-6faaaca72c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40176f1a-adf0-40c8-818f-189eae8e115c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8feb90-16bc-4572-b55d-918eb634e40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "228e8a4f-7c33-4f37-a8f7-d5da0b2a3269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd405e2-ee61-46f4-85ef-7fe3f9f16eaa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca9e80f-df22-4fd2-9faf-b579c69e6554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b830ec-a9dd-4e3b-aee8-c715ad9423a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0de697-4ce3-4107-8b7a-bc510ee9a827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe100cbb-0a8f-44cc-a593-e5f609ce6053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e497004b-8b75-4727-b701-3f56734f6889",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25be0967-a9d2-4b33-a137-f65dbb3c109d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ba8606-c07b-418b-9b19-7541c7bb12a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326e25a5-f89c-4210-bcf6-f068cc1c2139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b548a2-1f7d-4112-bd26-d8ae7d31d844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474def6e-27ea-46b8-813d-5d43665bde47",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dae7ea-511f-4edd-b06b-1a0cf4b0f9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedb9800-d4a4-45a5-87e4-d54985746f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd4882d-0348-40f8-b60b-03e96da15419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a362085-6969-4838-8c3d-7ef32c19d336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9b9ff4-ce5d-4886-b556-434d2246af22",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5a6c08-6480-40db-aea8-7362a03e99f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1bf7f0-0679-4539-ada5-22ef3918c125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b660e6e0-6a0e-445c-a15b-3bf4090f55f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "58e9cf89-6bf0-437a-b19c-75a71cbd3c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84ed699-124c-4254-aeb1-dd6ef58aab71",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1df5c3-fe87-4174-bc19-79700db78d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9914cdcc-1df1-40f1-a357-e05657a367d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243f2e77-64b0-4219-afe3-b7e9e9a853dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4cc41f-20aa-4576-960b-5f4902a89105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb89d26-d704-4d18-9619-8e726eb026aa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7356cbd8-f0f7-488d-8dee-322ac359ba33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ade7028-35c6-4c37-a9fd-caf66287cba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fc43ad-dca4-4456-b256-a618929ef9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af16d7d-88db-444b-ad66-2f29e2ddefbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5c68dd-2a45-47b8-aaa2-a9fe12e03111",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fc0816-3009-4ad3-a33b-62daccb787d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69615b8d-5a6f-4fa0-8f98-7bcc7478f980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448d4fd9-f77b-4939-a395-eb5c0ed14bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "097b7f1d-2615-47f6-bc69-3bff7fd75917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa1ee78-6005-485b-bba1-7cfdda4b07a4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01f2363-7b11-45b5-9989-53087ce6757b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88e666c-03d6-49c3-890c-ce3044021d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7777aa83-44f6-4338-910e-9c37e9fd5752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "843ccdbf-3681-4cf9-974a-70483a21b81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ead083-6089-400b-8239-a5e99fef8f0d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69690f50-d5d6-46cc-86eb-4bfe75b0b944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d663e9f-4414-4676-80d5-163167bd5df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1284efbe-7bf6-42ce-b3ee-e18ec44a4821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af0b706b-4c3e-4070-8813-be2d144e71d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d99eaa-1ade-402a-be7c-09ff44279cf0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76ca2b8-5368-4024-8a6d-bb7879a8819e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aacf38c-5c8e-4896-bc2a-a97637645517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cd4cf8-2b22-4838-ba66-8a5050792198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "302537b5-826d-4e2e-af4f-0df4c3e6e6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdd676e-ffa6-42d8-88af-0c1b2d90d180",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0643f472-a0fc-451f-bbc7-8d74662c8bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e71cb8-4a76-44e2-8a4e-bc8921f292f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0019c74a-eecb-4697-abd2-7f2ee41dc3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e330e4f7-ea16-4ed5-868a-f1c489ddda2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cd9f77-bb34-4736-a84d-5f7d5e228b5d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf663c93-1678-4a7a-807a-24ab9ff924fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c34245d-3859-4ba3-b9a6-417a7c76c3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b03f401-b9d2-4869-8f0d-425c1a932b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "380b3b8f-499a-49ee-9490-6d65f132ba5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555b405b-11ad-45dd-9869-edfee01dec4a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08aadb14-5514-47b4-bbf2-87f6d58d733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fde2db4-ae52-4161-a635-9626bb23145d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24de6a90-fc0d-4ccb-b831-911c2d29fb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9599596d-6556-4c1c-b38d-2eeb30871886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b0b992-f306-4fef-ab9e-1e6e1b9c3b51",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a4da02-9031-4a19-abc8-0b08aace4478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b380444-f199-4f55-b46c-17f1d4695efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2dc094-b83d-4879-ae7d-c75f60215f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e825259-ad14-4caa-876f-1ca6ec001898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570ec9ec-d492-4b04-8900-ed03fdfb3657",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d3c73f-08a4-4496-ad8e-a9a43492c47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c007fd-cd07-4669-b143-e9adc9f331b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c240b221-2460-4328-a679-08a1b3a144c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac96fee5-25a0-4708-b0ac-ca6f15e6cab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49207cee-e09b-49e3-b740-6b95e1fe20c5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8654db06-059e-4f43-a921-e00d1f7ef261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22ac15c-51f1-4eb2-b6f5-edfbd0731588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f98687-dd05-4def-8621-80248774ace4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2283d082-756f-42ba-b598-6faf253cdb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c654ca74-59f7-44bb-8b35-91541cc75a94",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f315600-0caf-4293-90cd-c977294efa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54542bd-ea92-4957-aaad-a2c705c6f237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa403a4-b7d3-45e8-b264-78d7cc0f2d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b90324-ae70-490a-a424-16b532d93d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d271beed-515d-4c71-9713-e381e9e59cc8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c06897-0789-4ee4-846c-037f86e3677b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0bb535-c44f-45f7-8455-c6c0d5a84f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b538ef5f-006c-4151-970a-e8fee296fc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5d546ff9-a4eb-43bb-b47d-fe018a4638d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f5e5e1-055f-45e2-a86e-a26a70567e60",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2a449f-c80f-4cf1-bf33-aed3e2bd9cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b152178d-41a2-49c3-9f5c-035d9af03044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7ac510-539d-4765-b224-2bef751db8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c00d2d2-996e-4171-bee7-d6d2e1a6a017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719fe74e-f604-4d3e-a8ac-23c96efb6f57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc81d08f-ba01-4eee-8580-0d66fe00e73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9957d4ac-39bb-476d-8513-5ffd2e6afddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b224ca6-35cc-4bee-bd89-2a07586a91e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5406c0a4-50f0-4c36-bf8e-c89b9132ca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fbb2bd-87dc-41d4-b99f-25c49d3bd0b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32fb89d-d3e6-48b5-9621-aa3006674361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a662204b-4757-46c1-9888-71079174726f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f97b012-a463-44d9-9372-f9ce58ca5929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e87306f-f43a-4881-9b15-d1cc2f5a3ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a0b349-00c8-44d4-afe9-7735c101d36e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853fb468-3221-45d7-a9bf-0535c1fe4bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6109c707-8c2d-4d2e-9a9f-780e91e7c328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c494051f-637a-49de-b572-a87643914d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1536ba80-b57a-493d-959d-9e096373f8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e991a772-752f-4bc5-a518-dc9da6e1bfa4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296023d8-900b-4ed0-a513-fd87059f53c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62259b0c-fcc1-4939-bc4f-68399ae616a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c48935-4f73-4ec7-b1d0-af49c29fbdee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c8828c-f754-4870-87a0-c8219964348a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ccc0d0-123e-4ee4-8ea9-36965585719d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d087c3-19dd-488d-a36b-1ae41a475cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933fbb6c-e2cd-49ed-b143-078579ff292d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf0ccff-6c8c-43c7-8d66-c24e083ec971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "02263bef-a619-42fd-8c1e-6d55d6927f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fd1117-4dbc-45be-b80f-359441a57d00",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55d0e1c-b630-4b5c-9db2-96c7c2d0b253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcf2979-7a97-4334-94eb-f3f0693cfe17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcc980c-c29a-460c-a485-3431d1905008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b901622d-87b3-4d49-a9c9-0778e9e296ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4b2505-09b8-4357-ba26-d2593f17f0cd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae793dc5-46c0-44dd-8e7c-144632d0eac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32f09ed-0244-4325-a3e7-39b093555165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21eb82fd-2892-4514-beaf-badcfc2d17d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4235b8f2-dd9c-47da-a892-80c67b6a1a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289a673f-cd62-40cb-829d-fc1c0624c565",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1d0cfc-9299-4774-8f80-d16dc2afbab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a79304b-3c21-4e59-8342-28adb2ad40bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c435122f-3d92-4118-95cb-ee02d957a045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf875271-bc58-4aaa-95c0-78a9a8c5a20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b978cff-9136-4955-bd6d-585d07d83d9b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842eea84-c52d-494f-b3bc-6461d286f8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9706d1-e9bd-41d1-aa93-6681f1f52d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43ca1ef-5470-45a0-9dce-e4cf0174bed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a069e11e-be58-4116-937b-b02e9cfa6770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53843c35-669d-4dba-a9cf-f484bc019b23",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3431fa4e-5f4b-488d-9cc0-936ebdc4dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1273e478-c0c3-425c-bf27-f61d9d9fe9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17902ee7-be1f-4f84-b897-7b9445909cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31f278d4-9c46-495b-a8a1-fc39e1d249b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2313970-a1e6-4594-8bf4-05128bf74bbc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2410a9-a920-43d5-b15a-82e94daa78b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1db89af-e2aa-43ea-bad3-9b899c56a86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca0e66f-6a62-47b2-aa6b-aaf25842905e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "de213f44-d676-4068-b7b1-da19eabd9f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e79fef-5329-4c63-b544-5961ae3bbb09",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127dceb4-1c14-453e-bf31-31a91a22d286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6ee79b-4f10-4fe4-b880-547445e31b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34d1857-04cf-476b-9528-10a7ef912aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a66c07d0-8aed-440d-bf95-cb16a0cd5119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b98859-5d06-41f2-b29d-dec67f34aa1f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc63de5-5129-4510-80f7-86557c3be4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6100c36b-cd03-4ac8-84c9-e8611906fb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee23fce-e645-4dac-be57-1f1167985eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ffcec4-6ff8-403e-9637-7ffb5261e521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290dfddf-6c33-42fd-8c2d-4e2486592816",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a289c9-f438-49d6-97ba-488e9bee9334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb19e491-8c1b-4392-9841-efee75ff752f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5395506a-383d-4a6f-8d9a-5552b49ca4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "569dee04-d1e6-40d3-b646-a5893b6eee93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4099a90c-a89f-4747-9c8f-5ef8e875d99f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6151ff7-a000-4ba3-ab32-dcc52e322a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac9484e-4574-4941-a1f5-919fd0b1c15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dfc500-8d28-40d7-96c7-fef497d560a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a1fdf6-0320-4c16-9037-44cf5125e06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89bf130-a9fd-4793-a074-ba68bbbecf18",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b44687-d8d3-40af-a99e-e83819ba7d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf063dd2-acab-4274-9dc8-00aa84a062d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1d2cac-0ac7-42cc-9fa2-bbda3a3cbcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d05163-defe-4d74-9b4c-977d28bc408e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ce81ef-9cfa-45b6-8e0a-fcd128f243fb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b656a33d-e3d9-480e-9744-dd53c083933f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9cea38-bd7e-4d74-83e3-5b5f5d9c8915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a0d44e-4ab0-4905-8b3c-05e122e0b0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "478b4f37-d364-4ab3-a28d-ffad06056e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3800f94-a4f5-4f38-9398-a456a00ff2dd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383875f2-8a44-43fd-9b44-6cab8d1fd158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74462b8c-89bc-4b41-b9c0-1a5c903620a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80776329-7bf1-4cd2-bb20-4551358ce614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9460259-cdec-4a5d-b09d-af84db905665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de6d94-2918-4053-9805-8d36e6e7733f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c412f8b-19eb-49fa-b81f-a35d1ce2b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f384d52-00df-4099-9fb9-a42f4cddf6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4ac70e-550e-455e-a0d3-9a58ef3ad114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca48c328-00db-4dd7-8bf2-ac67240e842a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44d6064-3f7a-4020-9946-1e2e88d64d42",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0790d1d8-72dc-4f5d-9ad8-bc54fa2cf4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9907dd-ccfa-41b0-a9f3-e69ff1afcaaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07efc0de-e223-4a41-ae0d-ef52523da07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a1058c-7b4d-4836-bf39-9d25c5ad4c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b16f34-cfa8-4a54-b980-633b8c2a6b01",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c6cf88-10ca-486d-8d5b-e7ff426be272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8373e514-f852-4986-8f45-f35ae6e601ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9615e356-57cb-47c0-9f65-748edbaf181f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69377777-eaf8-4603-94d3-b056f0202c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46971ab1-1b45-4048-9fda-dbccab8e17ec",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b54da91-d536-430b-ad1a-f1f0c228c610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7e08cc-c0db-463a-92f0-069e102a8988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f401c992-47a1-4e40-b6aa-4f1ae68ff966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22904ddb-9c17-4f04-b5e2-18db70551b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "019a89a4-05ed-4631-ad9e-5eac2c5969ae",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395673c1-e70f-455f-9950-16fabfce00cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7af6e3d-762a-46de-9fd5-a8f8f28ec2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e18d38-e740-408f-8ce5-5e0b559e4c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c834873-f5fb-4754-959f-7cb329de539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5a454f-a65a-4e81-b844-72dbf0847dba",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3355bf58-bc1f-4a64-b809-8666d6a04ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68fd82e-c4c3-4a1c-87f3-db36d1c0800b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2235d24d-3ece-47a4-8675-b10882b72060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90598ef2-6f3e-4f46-b7c3-9f309bbd7211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601944e6-5a30-42f8-839f-b2725d60e2c6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b8107d-0fca-4e59-9090-c7a487d7ae5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ad17b5-4c7a-4f2d-a930-f96bc647386e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2a9284-b012-40d0-a5db-e606d9b43c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4e5604-fc03-4f55-9269-c649ddd34622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74de5a9a-d4f8-4f9d-ad1e-501855800fa8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a5301f-7ca0-42a3-9098-2deea697a544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9313b6-0971-4b5c-856b-5c6f5facf423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0be759-ea94-4ce3-83de-b3952fb18785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a5b84a-f746-4c78-bf9d-69f10352fb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731692aa-286e-4d0e-b1d0-3c2355d0df62",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9372b3-93d9-45d6-8bbf-33548e011c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e63b17-9bd9-4a83-9e83-36c0ef7622cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778c7095-2e14-4658-a184-97cc6da74981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d678383a-dde9-4eb8-9733-30c986e7695a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6ed615-1775-4525-81b4-761d6b594d5d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4491c3da-5f4a-4a0e-bde6-5dde2366acea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0044c31d-ebc0-4f31-b9f9-c418547e81ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efb2f06-317a-4a8e-a0b1-633aef507b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58313120-b837-4f6f-b290-b878f63187ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878de4b1-850e-4a87-a24d-c50d2c015c18",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba08ed10-58d8-40ca-b235-9ca4d668e6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7e240a-4c12-4a0e-8a72-3e7a389ac968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49376423-1988-42c4-b670-21acbbc3cfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c07039-3222-49eb-841d-1a4570203e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d237ac-2325-4287-8bc0-f2f31d41b776",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3de9f8a-ea85-4de8-b6eb-e8ea85dece05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea42de73-e43e-46f4-b99f-2a10d162ac37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e93aa8-7eab-4d69-806c-17409e2dece0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "853a27c3-1aa0-42e1-b603-0f7f8ffc1645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335400a4-6986-4890-8314-e8646bb5f5d0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802a00e1-05d6-4109-9058-570d3ad489df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fbecfc-6663-4869-ad6c-60cc44536dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073d6acd-36c2-46bb-b602-2faee955110b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa69cb41-fe72-4475-ab0a-edb2c7ac3f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055ceb08-765c-4e1d-ae29-9bf9e76a75d6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57d8646-37db-4527-b99f-1bd100f00f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f8bbee-9111-468c-bf98-d9d1cb457488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421c2c9e-cb8a-4f25-863d-1fbfdc284d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c4f8dc-46b6-496b-ab87-d8805d178cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d603e2-362e-44a6-9c6a-c93720034e34",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c79a186-6d3a-4881-a663-07f70715e094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00824eb-7ecb-4b1d-826d-f5ad011d1676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092662c6-4969-498b-9f72-5ca3e8924a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2aecd2d-1f4c-4518-a75e-62ce0088a0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2f4ad6-df9c-4b59-a744-f610c8445d05",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2881e2a2-d865-4d87-98b2-8499c591b234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b2f75f-8099-40b8-af84-2f9a4af61432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a314f4-3740-4a28-827f-0a46afff6f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c115da2-5c30-40b0-80a5-38fe279b8329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871d6118-66fc-4490-b324-40ac70411210",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa93e59-ea15-4b30-9094-1851fe7e49cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e9a4d46f-f9e5-467f-8df9-a928918f82e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adde2860-5e86-4dc1-8186-a26f29f95381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f52c12-2645-407c-bb42-ca07e5aad608"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fac1437-27bb-49a2-9253-944bbf10037f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a5fbf7c-78e2-4951-8814-ee0e5f840a12",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd81ca28-01d2-4f37-9f65-cab039348b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30f95edf-af7b-4ea3-8f0c-c3222c340f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d348f18f-5ef0-4488-a652-74e8e85e8f00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4625b80a-7b1c-44ae-90cd-bff2f20cb04c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "160253d4-cee9-4964-9ce6-5ba316f256d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8039f01d-ed63-4a35-b5f5-0269b5f14ae3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a1c6baa-7859-4da4-8575-5a9ea635840c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1960c3b-a843-477c-aacb-dfb0a14f85a1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c381d701-449a-4493-9e67-694f0c1f4dae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "012bbee8-c650-4991-898d-f26bdccdc5c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1067eac5-0289-4810-bd2a-1d63f5098230",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19e112ca-0bac-4a84-a1d6-c61b63f22870"
                }
              }
            ]
          },
          {
            "id": "7c0ab03a-6c33-4dbc-8772-778b3b3d705c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67e86f6b-1ad2-4931-b152-121a987b899e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39f5ceb8-d8e1-40d5-8f14-2d2027034303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa70294f-98f0-43fd-afae-a18c4899a645"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab6a47e-2470-4b2e-91d6-0f9afb68c8c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa1158d3-3325-4ae4-8fe2-f5d7fade1f82"
                    }
                  }
                ]
              },
              {
                "id": "70268dd0-97fb-4b74-a699-067b280437c0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde87301-aa97-4d51-b679-fc513f5e4cfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "980234f8-eecb-4752-9523-25e8a07fa819"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a30e6f11-80f0-4fce-80db-9c44f6065f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "db1496cf-aa61-4b5d-9065-b06ba73435b5"
                    }
                  }
                ]
              },
              {
                "id": "4ff2d7c1-b8a4-4c04-a24c-0cd4c6714c1d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14eb4ec4-e094-455a-aad3-b03e45c2d2cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dca163d2-b432-474f-a132-86fd13fef7cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22473a84-4ae6-478d-8021-ee905d15b4e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "efa58d9a-cd61-4d8c-9745-d3d03429495c"
                    }
                  }
                ]
              },
              {
                "id": "289c8b83-5b85-4d75-b769-0d9a6aeecc9e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a8f297a-06aa-45a2-a223-74c23c46bd27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cc9b230-63d6-4e81-a9c6-820bb17477f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07fa3b38-f2bb-4e10-a696-45bc9f032722",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3c24253d-d1f9-44a6-a474-106bdf437f17"
                    }
                  }
                ]
              },
              {
                "id": "f98f22fd-57fd-4c2f-b75b-f99ae49ecf7e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "682e797a-03df-46dc-a6b7-a4bc0ad59c69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8e07a8c-c157-43f3-91b5-4f06ca0bb768"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7ad98f7-a813-4d6b-b0ac-240a8014940c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2fb31fb5-8ab2-4c25-b2ab-f49b39fce290"
                    }
                  }
                ]
              },
              {
                "id": "f3bbc71e-f67d-472c-a80e-4d78b843026e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd2946ae-48cc-4ab4-93e6-98a1b9324973",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74e786a5-2e55-4af0-9996-a4dc8a47ab39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c784eed-126b-488b-a830-de3496324091",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ecc136c-9689-4a73-ba31-bde8fd26723b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9985908c-f6ec-46d6-b2de-085ce89ff67f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd44ebc9-118e-4ca6-b8e0-313a35d5189b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79db6aec-8b20-4601-aa9c-ccb378234709",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8edd41c-ed7b-4d0d-b98c-49a2981cbf81"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0130432e-9293-464b-8d5b-8488ecbc6ca1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "63032aba-629d-430c-959e-1c0fb459b690"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d183b12-81d6-4994-baa2-b9d12d654c2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "194609c1-4fa1-456e-bc5f-49ed3c41909e"
            }
          }
        ]
      },
      {
        "id": "4873c44c-27b7-44cd-9093-ae9ffb55845c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6622b4e9-ccaf-4052-8c3f-98778c80a625",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f44f0c2-47b4-4142-b862-80bc7bedc803",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "24bc3253-3db4-4a8d-bd6c-806f52525123",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07311234-739f-4112-b37c-a47a1355603c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9991bbd3-81f3-4630-8ca8-213c01156af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ceed98-dc9e-43ab-a83b-1a708099b7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac983f1f-84c5-4ae6-b9b5-87c21b54ddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f46034d-fad6-4569-a5d5-894d476b5bcd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d5cc48-a072-4bd4-8f68-f3914cfc875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c6f23e-58fd-4475-8495-c637b32580a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc68fef-61f7-4ff9-a0ea-5ffce2e4d16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "67cd08e0-589c-444c-9e94-141ca8c72ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfda2ae-e2a6-4558-abb4-0027ff258a8a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bb02b0-a77e-46fb-8dc4-c0caa09f7f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589866fd-2339-4d2c-95de-f34b8aaa2c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595e6809-f869-441c-9d8f-8746b6de4742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f54879bc-b2a4-4240-8878-4177f82fae25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f36c37-0bf3-4b60-9ff7-4c2449cb4731",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebaf4f7-f753-4a50-99d4-0fb77efb1aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8ed436-762d-48ef-bee6-172ff4b336e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b094cee7-a9cd-45f7-852f-18abfe276fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85d3567d-18fe-4f5f-906e-46570193b790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1229ffc9-0ff0-4062-aff4-a90296d002b4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee084ea5-b4c4-4bde-b729-b9127c874f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d863bab-8e64-4ee9-bbc5-c8f3ca57a823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beecb78-da4c-4b0b-9c04-debc44f61470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f99fb44c-3bb2-4c22-bd1d-8a55e4d613cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5fbecb-95f4-42ff-b527-bdd7050ef2a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c45de3-e7ce-4094-a027-161442524982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03495037-5a9f-4f4c-acef-0ff1ece39863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8397c754-e3da-4a89-8162-6f46a44c678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "84c9e28d-aff2-422b-953a-cb51c4c413a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0035b0-65a8-4990-9bc3-9e7f7e22c824",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7265b975-aae3-41d8-9cee-b13e7ba12c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfded728-48af-47f4-8bf7-c1ae57b1ca46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce738381-cdd1-4f78-b7e6-e7d2e4f53184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a76752-8d2b-47ad-9372-3dd04c443651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3952142-6ff5-46b9-98f0-aa99ce35e651",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ea4fa7-7998-42d5-9e7f-2a584a444a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf1940e-63fc-4d19-8957-a6a4b6067a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34da8dff-b5f5-4aff-aff8-0660073335ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe4a9e7-e18c-4739-9727-b387667c2f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f62b37-ba4e-44e5-9975-60517fd8ab23",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c41938b-9737-432d-85f1-1f4743081f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90ff120-bd82-44c0-9d66-7b6108e6ba89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6c08f1-1fa6-4842-aa17-07803cf21d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "600cee14-18a4-4156-825f-3382b8014a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2089882c-ceff-4606-8803-d0bbe6ce2374",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1259afd-ad2f-4461-839c-5d96e779963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26927b70-b84d-49f3-a72d-8056d107e060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15071a62-27e7-4286-955e-d8bb245c1189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0756051-7fc2-4dc4-944d-191b1dc17298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b3771-e557-4f82-8aeb-018fa7589458",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133bc23c-95a6-45e7-8360-1e719866cffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71098721-341a-4d31-b5e2-e7fdb2a58fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d30c357-e90c-4984-80d7-245ee278e7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "24efc9a8-c1cd-4eb8-a7ab-ae1a0a07fbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1807c22c-59b6-4122-bace-4dd5b690df8b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9b29d6-5b2e-4d53-b212-bc9f3d79c617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e71491b-e865-43cb-ae94-38ed06b80a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d656c77-c977-4096-92c7-af5fccd65716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c87b6618-30b1-4681-a124-4ee60eb4c338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3858e8ed-3860-4732-bdfd-3ea84a3124d2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ccd0e7-1787-4684-a107-b602bd7e9e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e6131a-4aeb-4924-bece-a7272076d5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b746c76b-66f6-4b50-9192-bbdaab554d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "125c68a8-6d96-473d-82c1-887b2e0616a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d527b15-e3fe-4c7d-a0a1-61f58cad55da",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2df3ad-3e2c-438d-8f44-7e23b971dc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e607e1-1dda-4431-a5b7-ac559b4655da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd9e508-a721-4ca9-b61b-0281cae74f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b5c977-30f9-466d-826f-c556a4dda575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37af2a6e-8566-4021-8fa6-854c4ffe2cba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d408f94-e6c8-4951-b2bf-80dbeb3897e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80488934-6081-4aa7-9a09-2504c4dde9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c322e0-34ef-4c9c-a39a-cc97733f9af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c193ad8-1404-4459-ab47-1e78815ab73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94515fbe-398c-4d7e-957b-08e905cef6a1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0eeb1b-b428-435c-b6d1-0f8c2360c680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cdc29b-7ed9-4bbf-b7b9-9b064d4d3cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfecd4a-0949-4d20-b5d3-bc43983334f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "303a7c79-4e32-4eed-984b-3b0351f048cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07ccddd-3498-4564-9edf-9079c7fa9951",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90e5d97-1dc6-4918-b0b9-2a68a8b18a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9057ffc8-a96f-436a-8c27-5b983503b858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b0fad8-3933-4f8c-9117-0c01058429f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "87661d9c-cd8e-42e5-99fd-750a43e4ff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28113aa1-52c9-440f-a2c7-0df3f9577908",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc3425e-d14c-47b2-982c-09781bac6a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91356873-894e-4825-9d9e-f2ec313a1664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8cc2ee-5615-4795-8af2-fda71f9615b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a28ddd-9c74-4388-b328-247fcfaa9a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8e2383-a27f-4f28-90d9-13fcdd4efc02",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a843fb1-2943-4685-92b7-d6a5917b3d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030ab20a-5c69-4609-a1c2-86e3f796dbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd8bd9a-a125-4df7-8446-232f5afb4a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f295f79d-94b8-4504-89e3-a02ec8e2ebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b897fea-139a-4700-8dcc-2ec51619c80c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9202e14-16c4-4d49-8029-af4fa161a09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ef5764-5e7f-404b-92d0-c752c106ba66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c9c28a-55d2-4a42-b773-0e608480d63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc3d96b-7043-4b7a-838e-dde0120e3fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ffecfc-0f4d-44a1-a4da-f846b1b41ff1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7339deb1-5ec2-4e01-8a06-5e06e485593b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2510e62e-2444-4add-b24e-07f546ac54bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f470a4b4-0d17-45b3-b5af-ed53558f5e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea70d6a-f5a3-48c6-8173-e61603c01000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8329d11e-3bd5-4008-8d16-010558af1d8c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1f2bd1-c760-4aba-9991-13e0d501a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7f53d3-a311-450c-9bfe-6bf6c3bbed3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eea461-0ea0-4b35-bdc1-404a12a91876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df4b9ae-3b0f-427c-89ce-bf6ac4d179af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e545fc36-a7d8-4a53-ab82-61f47487255b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22bd0457-0ee0-4780-9982-4a73ca277e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d2eb24-7fe2-4185-9248-83e43e2817f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc0a2ef-4d09-444e-bf2c-aee686dc1914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9960625-c829-41a3-89bf-b00c44f04147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb520d66-407f-4024-9f46-2004f0278242",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417b6c4a-9d6c-41a4-9d6d-ff7891b66b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ed4b20-e760-4fbe-9837-70a5c46f0490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ecb3db-81aa-47e0-bcaf-75c9a3931b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe2e318-df8f-4be3-8cb1-67f01feca56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16029ed-f139-4cc5-b736-b8a801c70295",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4418ca-a546-4c81-8ed8-d5ec37e41a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33747f48-bf42-4b23-a3c8-c47283bcabc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce979449-54ee-4be9-a729-5ab555a0c0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fdc053-bd92-4a6e-a508-6d0d8a75646a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dcdf67-35fe-4236-8620-6c55a9d3c845",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd771560-7e27-49f8-bd73-be5b839673b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad154b3-edcf-4113-bac1-b23c0f6e8742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b097900a-9027-40a1-bd14-6d5c893f7cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21692781-776b-4d18-b570-d6cd70d65fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f91ef83-c697-4b30-ad57-eb19e532ed65",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3a5ee6-fad8-4649-9dac-9a57e6ea6bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb22288e-6cf5-4cbc-9df1-b7727f7b0d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a33ddf-3864-46b3-8983-d22f61fcc73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91508921-f6ef-43ef-a1f2-107a02ae8178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696f7835-3f49-4bbc-a6fe-5555df10e6ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a5b309-a336-4474-af5a-137447f1aeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb136c78-eb96-4c17-a0df-08f70a4212a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31338194-9799-4d03-9d95-23ad3732b83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0109149e-5808-442a-82e2-9a568633b875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82a2f3e-ce3a-48c5-890b-4b93de83ae8a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca6d8c1-b79d-4214-98b7-64c6b53086a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee45f761-7510-44c0-b330-2b62a0da038b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e61347-a06d-45a3-b147-fd3082dfde67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9377d6d0-91de-48ae-b45e-20daf24d926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a60dc6b-0612-4488-9bd9-fe762a01e667",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bbeedf-c09a-43d3-bdd5-141b7e45cd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa6f33e-608e-4358-b25e-52b5c28070e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30331491-3531-4a29-9dd2-6b4b6ad31f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9c351f-d3fd-4bcb-99ca-8708418a80cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f80fe5c-5b55-4313-b811-9eb266ef5f73",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ae6e16-d3f2-4f6b-9427-bac7e4b53cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9870d6-4ce8-4951-846c-fcb446fcdd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbfcf7d-4be7-4ae2-9237-c9b046026ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdd0a34-c0f7-467a-adea-2623a87f8f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349ad7e6-ec2b-4cb3-9dbc-ccd46397f13e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5727727-c9ff-4299-9474-abfe3bc0151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5798e2fc-1d7c-41c7-936e-df6609d6defc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb31721-88a5-455d-baa2-703428fa13f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df96b891-ce95-4791-94e1-9f459bb19b59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "48792dae-80d2-4630-98f7-d76ccada211a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6aeb3b2-1982-428f-8c44-70b85cf2b01e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dbbaab-c889-4e87-a29b-9251222aa6d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecb5d7b-ebcb-46c2-b015-9b57cbff1fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57e9925-ea8d-4c35-b681-26ff7c00930f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f3aec29-94c5-479c-8681-3632d73cd812"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "223c6a34-0ab1-4144-bd6d-949fd19122f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "583add4b-bb8e-4298-80ae-403cc2bee2ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20fd3585-5c8b-4d35-b0cf-683ba35fabb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a10458f-6269-4aef-91db-29f66f92184f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd9b52f0-9d90-4e48-8ac5-710a180f5019",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "23f092b5-280f-4742-b864-2f1d5434728f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b49980d-5bd7-4921-9d36-67176f3e1e99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6acb1e18-bfb8-42d0-bae0-d223089023b6"
            }
          }
        ]
      },
      {
        "id": "5e4b4742-8013-48ac-9dd5-cb2b1b908568",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e6595034-99fc-4e2b-b8f8-35862149716b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d31ce35-be7f-4b4f-b497-434e751f8646",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2bf422e8-d5da-4f51-8eb4-aa8c681a68dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0a2036-da76-4ee9-a26d-65e4ef55bd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e322d20f-660a-45e6-a73e-c6f261165bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa57e95-f31a-4c91-b4d3-02004258cb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "864a8f55-47de-4abd-b6e9-f92ac8d83bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11479bf-66f5-414f-a0ea-c4f98681e3a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93ef485-037f-4057-b87c-c02bb63b3a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e611b8c-e522-410a-91b3-212143ca45dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a278c2-4e8a-44be-8b97-2d829e279484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e14f2fe7-ad12-4bfa-8cca-33c533cde89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297718c3-279e-497b-ac5b-9284032507e7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67b31aa-59f7-4ef1-b163-c7d7896a795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da45d9aa-e8c5-41a1-9af4-9e189fcec31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb82a61-2cb8-407c-8a24-44dd0e1ac499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a232c70-26d8-4a67-91a6-332f5b140026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111bb814-a4a0-4804-87ea-45fb41d661aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5178d12b-d09f-4f8c-8ac8-d54a45140ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c3325d-e87f-4a2a-a67f-f2e02ccd4b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52032e5-84d2-4326-8542-111d09ee61a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f71c850-1c13-4ed4-8a82-2e2a14e718f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d5361b-b685-43fd-b6b5-1366f7bdcc8a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bac5f3e-9c73-43a5-9832-5fd676577808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ff064b-075c-41ac-9856-48ff9fcbc0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60011512-6639-4faa-8418-0c618afa8692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b01aca00-4476-46d1-8d0c-b5031f48bf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b111bd6e-1c55-4ae3-84ab-69486704f2a0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee0f6f-3671-48c9-b643-58fa64379dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae57be27-7f11-4e2e-83ac-d79044da0ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b73064-18e4-48f7-8866-991478458f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2609d663-1519-4dbd-b37d-d3a9320184a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb00822-7ce1-4faa-abd7-543a28df5af6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7e22ca-dba1-4c6a-9146-2fac0b7ea1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf9bed4-e055-4e53-8e66-76562a9ffa26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa4067d-46a5-4631-b0c1-c4b8539e5b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34ac540-da48-4064-b57a-a0e64d06dd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb644fc-4449-4667-ab92-7cba20c534ee",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a1632c-d1af-4eb6-b0e0-b26b8ced295d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6297bf47-8c9b-4792-8624-df96146cdb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9720db31-32ba-450c-8162-d1cf83507c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c65b6fa-1248-48a9-8fbd-822a17c77b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4c377c-c92e-4057-b124-8b184a17ca9e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a6c183-5a73-47c6-aaad-ecf5981e8027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c92f0616-3454-4e00-97c2-837c61db45b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cb0119-c1cd-42e8-8af9-e98c1c799fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "618d124b-4e8e-4efe-9e0c-108a66cfe87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f6af65-9102-4f90-9ad9-c838bd680bc1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955ae36f-1e40-4988-aa48-1df158659213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c9a7e2-dd94-457c-97e3-83d38ee0c6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8118d7fa-8ced-469e-80d0-b8ae667dd18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb977392-77fb-4b92-b781-01c23a10bd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbd65c0-5536-407d-bbbc-2ec050416d85",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8d09f1-a7b4-4550-afa8-edcb9da438d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b68a6b-9b36-4092-b492-ae95b2204c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff2c1c4-be0a-48aa-8728-f524386910f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cffe478c-7b35-4b05-b01b-37ecce1d3e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b88d71c-a376-4770-9693-fe42b33d7c15",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aab0e46-00ec-4d49-aa2e-0d0f8bb3ddef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feae4663-a8fd-459d-94f7-0d280029ccf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8359676e-3ee8-438a-b474-ba06becedd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fe33f1-db3f-4738-8c11-687d425c2f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0214cfa-aa38-4534-91d4-d5911e3128ac",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d1619a-d4c9-4aed-bf36-edfbca58979e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf347de-a1ff-42b7-9f77-9b6889ccebc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d425cc9-9ce8-4ec5-884a-aafd9c597a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5a0002-9eb0-48d7-8ad1-690ab6a04ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5ec972-9095-4763-a677-abc081c9e79c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de799152-5199-42f1-b60f-5a7b9be20923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e23bd3-5cdf-49bf-9988-bf62e3f85197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdc76c3-dd6d-41a9-9f82-70e412a6d47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9614d8f2-e5f3-4b29-bde4-84ca3cf68415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99725c0e-a5fe-4c66-a453-a7dfbf54168c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af65f28-3d31-4981-bd6a-3a7424915d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9843de8b-69c0-40cd-bb85-cbe72312941b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be67d5c-4181-4852-b396-d215ac29d89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5c3dea-1169-4c5a-adab-fda1eb78e6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8aa7e3-19ac-4851-a56f-f014c68583d8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1175862-b20b-4c2b-93c7-52551e10c406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fec1276-144a-4478-a15e-3aab1e3917aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29edfbf1-4e3c-4d69-bfb8-23c5e87085c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "085830f1-2d2c-488e-869e-579b3192acff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370acc4c-dc13-4de9-8ccb-5bf3da930c39",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edab318d-b3d2-4776-a002-8489d6a2ca65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca75ab63-b3cb-46d7-a1b4-a20dca4e78b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3efe4b0-7051-4867-bb52-42f9c6ee0018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4feb824b-57c0-416e-90d8-967f80b4e1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b00cd0-d8df-4e2d-bda5-a4debdf09479",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e93d1a-b7da-46c5-a1b3-461fd46cb6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52883ed-a20d-4721-99c5-bdb1fd670b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a619dc36-fee1-4c24-9c85-95948639f761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc858231-da88-4fa5-9d99-0f06c7366598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b8963d-123f-47c4-947d-4778ee00114b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77bef2b-b54a-4a17-8756-a079489f34cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a85fd1-8599-474c-b2cc-01fce975d88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1f62ea-ad65-49bb-b681-39730f37cd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d12d3e9-daa8-4329-99e4-7d78ee7fc6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bacafd2-3e5f-4c70-8664-194160bd5ada",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d69ac8-bc3d-4c77-bac9-3e03c9121428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc2abe1-2d6c-4f95-9a68-f92a4d3d0591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b746eb-555b-4033-83e0-1e1951395bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adea9899-7689-45a9-a8e7-cbc9bcfebf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39848ac8-ac53-4d43-8d06-deaa2f234735",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f5bc7d-ad4b-44a5-ab62-5c3b18340a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5360f74-bac8-4fbf-af20-9f4629fb83ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51213db0-a2c9-4bf6-b10d-2dd5e8f33582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9455f582-c3a4-44c2-acd1-a03db21e987a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531ffb0f-caa8-4f91-ace0-fb905a461c5a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c641b37-ddcd-490f-9d60-26bcfeb935b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5577308f-040a-46e9-a31c-d703b0c734ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c12af3-1c03-4513-8299-4bfbb190411e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74eacb2e-b2b6-4925-8451-97c846b55914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840646ed-74e6-45ef-81c6-668db721965f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e172b2c-8641-4fc1-a7a8-9b4f5eb46bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d74484f-7240-46c0-b77c-ba111d136395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f2b904-2d8b-4ad8-b63a-58b9f911313d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c488e6-eb9b-4291-8419-169c5ab810a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ae3cd4-0eb0-4ad5-a824-11af8f285631",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef15da43-373b-4836-aaeb-62a7f32b06a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1cbba1-daca-48a8-9ccf-a3e4144c3f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1666df-616d-45e1-b8ae-58d6ad2b609e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3593157e-70b7-4901-bb83-d86f67463967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18eee29-a8cf-41ad-addd-671166d67e77",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f9a263-1a57-41b3-9af6-be09f34911ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d8a7b9-c103-4c54-8eb8-e7edbe17d231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683cf156-47d3-4d85-8117-8b02c281a027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44c5493-a192-48cb-b24a-87d099d4fe32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d8d0a2-4100-42db-b0da-1c985f3d97d3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e850c2-c56d-4f23-9960-81fd85ec3287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed7e901-e40c-49c9-8f47-af0f0976d7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e3b34b-e66c-42b4-93f6-52753659194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd787ca-e8db-4178-a4ad-2fab24ea6a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4d22f3-a685-44d0-ad6b-780d8d4dac59",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b8128c-2c59-41f9-9a0e-ac71a6f2476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abedf96b-e07e-4748-accb-ed064bc10d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a5614a-cd7e-47a4-95d6-c079d3d5923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a17cc36-8e43-4d5c-aa55-b646e1cb19ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ff69e6-144e-404e-8979-3780b33087a2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7fc8e0-4768-4f84-bc45-b3d6c4163c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef1030c-46b8-460e-927c-092179850b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784e3a66-3982-4905-863e-0803d2463388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22e175b-64d1-44d4-8c6d-8358cad83dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ce86c-8cca-45d7-bd28-4cc9553bcf16",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ec487f-5329-4b9e-84fa-378df2fb4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc901797-4324-4ed0-bb45-ee266b86e1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972b5f66-72d9-4163-aa33-f78c67e639bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "114ad67c-3e8d-467d-8b91-650c60e63c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cce249-86e2-45ad-a00f-fefed39e6850",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2637fb27-3646-45a6-a582-e6bac931d236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5240698-6482-4ad1-a4f4-a8119e51d39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dcfd43-09cf-4c82-9da3-3741a7a755bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "145cf1b6-a8f0-4ced-b91c-f1c4d8442c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bf6d66-541c-4a98-83c8-65d178d173b6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670b04c7-58e7-43a7-918e-a175a758ed84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de4ef55-1ed4-47d0-a47b-3a9a53e5ebb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3d608e-1114-4b75-8b1d-ca210e6584c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcdef18-3477-4d5a-b9df-3b0fa4735eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812080fd-cf1e-43b5-9393-7dac59bc76a0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa4c87c-55c1-4f2d-8cff-876b6089cfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de50c65-b5ed-4deb-be9d-039aae277b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533de934-82eb-4402-beca-822f7ed5af78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c36f1c38-59d3-4b95-ae4e-2ebebbe48a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c59cd3c-bdad-447e-b4c8-6f4d18e64ec6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423e3156-c020-4eca-90ba-a1a3cf147754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "443a1f02-0b94-4d8d-a4e0-10884515a9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb93ce26-9f96-475f-a199-1fb9a7a10be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c0c2c08-af1f-4b4e-9b8d-466769a49afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aeecd2e-7adf-485e-bca1-280a9f0f0255",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e119a15-fdc4-4434-bf93-248bc6f35d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491f0837-0eef-4b39-b25f-e48a2bbc6efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830a99b1-005f-44bd-b9cf-74465b550384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c8d0bd-7ffa-4576-a0fe-58953ce929d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0669ac-3a31-431f-9bbf-ba5427886670",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca451f2-aee9-49ed-afa4-b843c49af9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d180e22-36d8-49f8-9a3e-7f76e9556741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bcb00f-4b3d-4772-b822-ac8326cf8e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e57c25e-b3e9-42d8-94b0-31df5324c629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d559ca4b-8521-425f-8fc8-8902d807c5bd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9549362e-263f-40f3-93b7-cd67760d61a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbd310d-b390-45ec-9557-c6b5c2d3d4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91003249-6826-40e3-b895-2b1445b8288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f304fc5-6632-4370-91b0-ee40dea98500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4dd736-acff-42c6-b46a-1a372a783058",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1660ea05-ab0a-4b04-a8fa-3a04d33f2c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3485b9-e482-4ffa-be8e-73814b05eb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e62993-c5ee-4081-9b69-3ac8bbaf623c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c73fb9-d82f-4396-aa20-d5ff1311053a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3603dc4-29b9-44e2-b1b2-003197ff3715",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23a5a77c-916c-48ef-89a8-94a8ca5a7767",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ebe32d-c3f3-48c5-9d7c-0390fc5ca82f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "735b1cf6-2ef1-439c-8a5e-d42c3f5b6a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b31ef15-3e22-4f07-8dab-a58aeb054f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7b8dc9c-17b5-44af-8eaf-1db383b23573"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61436c56-2492-4f23-b772-a49aa36853c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0880e0ac-82ef-49ff-95f9-2d7434234727"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44339a33-8ae0-4e25-9d92-e4d3ef40a777",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06cd419b-4dbd-405b-9b7e-13440c3fe8c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7933fcdb-270d-4659-a7b8-d8c734e5edad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "369486cf-bed0-49e7-89ee-804a7e8dd1e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24dc1f40-f989-4440-9a00-e13da85adc6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bea452fb-7a51-4105-926a-7ce75a34b30a"
            }
          }
        ]
      },
      {
        "id": "ead0aede-bae4-496e-af36-52a10530d1dc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "43e31153-24b8-496d-94c7-c228260b0d6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cde71cb0-2a67-4fda-9668-c9e4cbe42180",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2042d6d-87d6-4a06-94a8-15c17f6b5af4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08529450-d32a-4fdf-8a9a-96ac4b35bd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e011ad4-3a5e-4c80-9f02-de6593f8df6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61193fe-93c3-403d-ad43-220c85ee3ff4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d722348-6a59-432e-be89-d0f23c92886c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058dfad5-6c6f-420e-aba0-59b34bfb853e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71a0350-0bf6-4294-889d-2e516324f516",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b087b33a-bd5e-4fb3-8d30-1525756435bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70eab33b-1319-4938-94a7-efa83109df77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144b0846-19c6-4410-886d-d1ad91fdbd84",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0125641d-9ffb-4dd4-af0d-ead0268b8d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b52c93-78bf-47c5-b9bb-aa36f57c23dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f8a173-6484-49b7-abae-e87866f20239",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f531736-836f-43a1-be64-53f65ef11faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553f67fe-192c-4665-a421-ee854ea5c70a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39294a4e-1fbf-49d7-a54f-d7def075301c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c468b05-2f50-42fb-97ce-e672a14ec54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50be98a9-bd7d-48f6-b431-bfc3f2b09813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64e8aa3-f08c-4f91-843b-aaecd73ccb9f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79008130-2d43-4594-8982-83f6140551e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14493942-a63d-4c84-a941-96763b1f3b6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30036103-c946-4299-85b2-4ef97ca6a24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d309b92-7127-44c1-a7d0-697d1463c0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30e1a80-0542-466f-9909-a09aed2c00a8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7360cc15-d605-47d7-ac87-fcbd423cd333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cfefeaf-2848-40da-94d6-1b9dafd9bb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1d054a-50ec-40a9-9385-faa03e707cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898041f5-11b4-48ca-80cc-a1fe289718b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29086323-a90d-4109-ac4f-b273c11e776f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e1b16f-567a-4f5f-8a63-d2ad5b028e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2453eed-0989-4255-b51b-d3e756c5521e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e55d8b-b377-4a6d-956c-b20548ad7d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72fdae0-de7a-4ff2-bde2-d2b564ece55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764b97eb-2cfe-47b0-a934-d61edf1fc599",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca034c5c-3b0a-4337-8006-4cbfddedef55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4776570f-84e4-4dad-94a1-1b24055d51b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4067c0-d71c-4b55-bc23-8bb43386baba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadecfe4-dac6-4d0e-86e7-33230c0f9c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16e0978-5e29-4b4e-bc6d-8c6b6f40872d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dfc9d4-0b78-483b-9649-49c2f4dbf7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2b4a67-625e-4304-a844-5453bd7ea040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3871382-6a77-4989-a494-c4ea6171aa25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a73470-08fb-4237-871f-facd8b704a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9f6c82-2d37-413d-9489-6581048fb3d3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cffe0e-f8bb-4fe7-9b94-d08afd5cc78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b489f082-e134-46d0-8223-29b7ece69215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a797af-e22b-45db-a3fc-bdb4b11d66b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7925a662-cead-4e25-a6bc-e92ef04afe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a99f99-6483-4a93-a2ad-4eca4da8e4b7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a9d32d-8fd0-457a-aace-6966840a4fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe09b0f-a7a7-4ad8-87d5-146e6b0a31be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c445b626-8438-4086-ad59-450c9251ed1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1e918b-b9fe-4739-b210-eac36b7a7772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635807e9-e131-41d5-8d1d-2f303438ae6c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf68916-4b17-4adf-a581-c364024eb667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce32cb99-2656-49c4-af95-fd97954c4bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f53e03-6ce4-4207-99d5-3cf19f1c1430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3534e7ae-9edd-467c-ac6b-e8095ff0159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7120f6a3-3467-4a0b-bf19-a8b44db7b37c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfaa0ef-9ec7-49b5-96dd-951d7cb3cc85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd476044-565f-4ba1-a513-d7398e27d644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29539ce6-4096-4ec2-b881-e857a182effe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cc9d1d-cf0e-40b7-aceb-369ca87f5ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2102d9-bf82-45c9-a2e7-c68af9dbc0d2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8b9d2f-d8d7-47cd-8ab0-689de695edd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d203ad-68a9-4454-8240-af96252eb9cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b2a1cb-1014-483e-9ca6-f4707e760713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3f8107-354c-4e3b-8245-81cccc768e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387ca62e-488c-472b-a348-93328dee01e1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6113a5fb-e586-464f-90b1-41acff7493e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4836df-a558-4663-8ebe-a0c5901d2692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0eee2a-1729-4520-a5c8-5587cf78bf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0b74b5-763a-4e17-89ed-c068ea8d401f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d49151f-2abc-488c-8ac4-2ffb8326ca64",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955da770-b532-4a13-91e0-8f050c19d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7157ba-c707-49a5-ac15-44cbb718afdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d44e5e-0cf2-4d1d-a8a0-fbe0f7a164b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9a5af5-d5c4-4f59-a2c5-d6e2b663561a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b3490a-2ebf-4a6f-83f8-9160a62e335d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2f7df8-fe2b-4328-8fec-3adf59560ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd6f2fa-e666-4739-8033-540de7db1d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bc6847-d53d-4852-8c3f-c002498edafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26423407-987a-478f-9125-ec9a007b6080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ff6a46-3ec4-42be-9f60-73b9f62f34bd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335751c7-f034-4f81-a89e-9ecfc73fe586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d7ff75-8c6c-4f41-a24c-352e715fc166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318d658a-43c4-4c32-a1be-0d234a23477e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcd8e44-c884-4760-b6b9-f2ffcc20e93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ad1be5-944d-46b8-bdda-8e512f720286",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcaf911-f1b8-439c-ba1b-285cf03435da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8111f4e4-7650-43fb-b876-053dd57c61e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e020581c-edd6-451d-97d7-3206ef6cdfce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707419ce-b951-4c92-99d5-2433e28154df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7845aad1-251a-4d04-91c5-9743eaf13312",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5659ea3-eb56-46f1-9971-254fbfc1273c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5abd5d-2112-4447-adf4-973247e96c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734d8522-86db-42a4-be9d-09f92f6f715b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fa81e9-085c-4011-8030-e92e384d491d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fd04e6-409b-41f4-99e0-d6cebb8d6a51",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a29ee90-d54e-4b35-8bb2-20554dfff020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f591fa19-e957-45af-9018-c3df45037696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749223b2-0496-45b3-81ff-7661dbd5e8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0222eb5e-322a-4f80-ab9a-eb21a0c20a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdb81a2-527a-496d-830b-5433121a8cc8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e66c33-b6c9-4bc6-b746-7ef0bc4bf46e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f787a22-c404-4735-a888-ceb5f64c1497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ca4b9d-725a-4908-a404-8742daaa315a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6e5d9c-75ab-4814-a128-fc145c4aa15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceecb0e2-f032-4f48-abc4-c070d8cc8431",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ea63bf-1ea7-4e45-8964-6fa845bafa91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82518ea-c23c-4cee-baa0-a698445e8fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a94306-542d-433d-90ca-60dd619c0fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d332884-b257-483d-ae8c-eafeed443fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8b719f-8102-4e02-9a86-18f05a4e0c77",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639559c2-9485-4d82-a058-7c5c19a97961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b974b92f-c474-4131-b535-cc001097718f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2802cba-5413-420f-9862-1fcf7c3b0941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87a18af-16f4-4309-93d5-39d56a760583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44760f6-db0c-415c-af71-f4043af879f9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5e8b2d-c211-4cc1-9a58-6fddaa4585d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ce5254-50f2-4aef-9860-1b2505950e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e6b392-f70c-4af5-8db6-3845eb1d73b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77d6085-8b28-4fa5-b841-47f9cdceb1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7018a7-82c4-43c4-b10c-ecbc49b8085f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2883ba-2d32-4df6-9d5e-bf92d2651da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdda0632-794d-43eb-9670-6fce444ee5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f494f715-101f-4638-b8a2-64b8007926ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b115cc72-c1db-449f-9e36-ade23fec76f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ec5a8f-f5c1-4525-8d2c-b66f70297c4f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c0535d-70e4-4a33-8be6-b9a6b0e0e564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2fa5e32-13f1-4a60-beed-d0c8ded37381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d5ede4-0db5-4153-8f7d-f1a4d8698284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf7c07c-ce32-4658-a667-53b208bfdf20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20af1e72-02a3-43a3-80f4-5f402636c7f6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae4f7f4-f667-4aea-ba10-9e09be6cd60d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ab15b2-c895-4791-bfd2-483a520e9706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74b56d4-01f7-4540-b5e8-9c3974517df3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280db88c-936d-4a5c-a3d5-b2f1c01c8b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e319df5-477d-46ca-8c14-367999fd18a5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4169dfc4-a57b-4d1f-b36c-c08840f03bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68330a96-ee7e-4881-b397-b3f949a10ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29156b5d-4dbf-4347-a97d-149248a0de9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e342719b-4a1f-4682-b309-5da5c13d83bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1bcb59-5083-4ddc-a34b-b83bbb148c56",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1376b036-1b41-4100-9e6d-82b827456ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ead5ac9-584a-4f5c-8db8-aa19cd9a975b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f237eb4-d0d6-4cb7-b411-fa843196860b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b268e9bb-2a51-4729-9cbf-c22a817dd171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0638ef09-3165-4bdf-b2b5-4e08de4a1a86",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe801f90-cafb-4c9f-b8d9-17f09199be79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4232c1a-4d43-4df5-80c4-8c9aaaa821a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23dd1eb-e0fc-4247-98e4-a5846bdefef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9510ab-eaf2-4cc3-b739-3651dbcf3cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612e3aab-5bc1-4658-83a4-6cc51034f185",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec59af7-e50f-4f78-af99-055d5788882d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2703ec2f-623e-441b-8aa8-8e594f77f87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194a805b-f31f-4a15-8eb5-2778ffa69fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5adef0-ef0f-4771-99da-c4126d4c549b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e60668f-493b-43c9-882a-6b6de1296bc6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2227a9e6-3fc1-4afc-b119-fd4d1887d279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb72a61-22d1-4371-afe9-b84b24352636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3630b966-051c-4348-81d8-2dabfe78301a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7507656-c142-496f-a877-b7a3da4c33bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf81d68-779a-4ff2-853c-99bad8354b1b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b46ec69-fd0c-4fda-99ce-49c1de2c9cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48470da9-804f-48e9-aba3-4f6fed8c3fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afb86df-6a76-42b9-86c7-2688b8c7b642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee895cea-63b7-44d5-ae6b-5de0c6d2fefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338aea31-05a2-4ced-a149-77e5e9c9d4d6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63eca7b-038f-4a62-9122-63500e457a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7449fffd-b701-4939-bb31-22f7885b3681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3109eb-19cc-4bdc-9e2d-b2ff72bcee55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311ab074-5020-4ea7-a8bc-b28a38fcf95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5edb26-de27-4283-932f-56ad64b524cf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdb51ff-1cd8-4637-92d9-db208a066868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06591d2-cd55-4e71-ace0-769e5e998ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ead88f2-7a21-4572-b223-d4adf70b1c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bb8430-dea3-4905-9ab4-791be5393691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddee6937-7142-43f4-9957-8c90898b73e1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3c3f50-8c72-4ffd-afb8-538162180e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca1a6f1-b2e5-4e45-a4d0-817877a896bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb879a4b-5419-400b-b19d-5dcd6880638a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b13584d-b131-4b7a-b215-7e63bc5acac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb705c6-28ed-4f1a-b825-b41b617ab590",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00026692-2f28-42a9-89b8-28a10e1b7ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73083368-7020-4d33-86b5-bbe0d80b08b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eabf5d2-ffc9-4844-856b-9a8c9ae6a267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e26fd0-5380-48cf-a1d9-2442403bd532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f2322d-5246-468f-af1c-27bdd0e2fdec",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b851af-f8ad-4dbe-9a6e-7572409d4e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6302a78b-db40-4677-9906-a6fc4e7121ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfa6dba-8964-4292-841c-d8b0b77de33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74169755-8394-4647-9780-d23a483362c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bbd8f7-f9fb-4bd2-a6a8-d4e765ed70a2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687b4771-fc6b-4c83-a627-769dbf7e9c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fec413-83eb-4a89-bf6b-9ec65db83d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4351141-ca5f-46d2-bb42-721ced8024b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255154b7-46d6-4496-b4d6-1ef012909e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ff3972-d9c5-402a-ba0a-3337e1fea24b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a538ce-e715-426c-9474-c77ffb70eca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8950cb1e-09b5-460b-9dd3-7e3a6023c0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d85f160-eb33-4a42-a740-5478ab39ff64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597b8017-ec35-4c57-923f-d8f420a1cdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bc9839-623f-4943-981d-c8274f36c507",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e604e97a-dbd2-4463-8997-f236612245f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c48811-931e-453b-a383-b0dcde54b1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df6ee15-5177-44b5-b9bf-5d7fa56f3ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2aca6c8-240e-44a3-8c68-77907dbd9d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4371b413-2736-452e-bc62-8206fcd26380",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc953527-1d5e-406c-8f0a-df711da69283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32400704-ffb4-494b-a39c-0ee8c614a0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76096b04-746d-4a48-a0df-6d5fc86fc24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79c3168-d3e3-4cdc-85db-ba97d82b9601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3807c152-2086-4d42-b102-f1fc6886d8b1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b398ff5-63dc-4a44-82f5-5206fb00f111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2735b6-7089-4643-9a9b-482eac7fcf05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c23d91-b313-47c5-a15d-4d53f4a09087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18aa993-7e82-4a04-be1c-0721fc84ca35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45647ace-4e3a-4b4a-9eb0-6f9554cbf3e1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb5101a-f1b7-451d-af78-141a16fdd5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ff4dc9-d9c3-4b02-bce6-f91fdfa21b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d94b4ae-ca3d-4f90-ba8e-800e5a7466ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77acef9d-49a1-459d-84b9-b2768443c615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5242d541-d211-48ec-92f0-19f09c77eff3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105525b9-9deb-49c0-9b2f-190c6367bccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2caf829-40ab-4855-9c14-ad2ee71d3f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8eeb8c-3dcf-45d0-97a4-8b32486e3760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2056476a-a0f8-4418-8b3b-4ef38b043a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52765fc8-155c-4090-878d-9e58935045cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9996e77-b167-44f6-8b88-cb3298fcc307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5974dd5b-6be8-40e2-84d3-83170ba6f8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f9a022-c83a-41f3-a159-13f355c90f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cefb48-7c76-4ced-8309-f7ba2bcb37c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39af68ab-9fe5-41b1-a7f7-1e0c9a8cbf5e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140d932b-10aa-439f-abff-1f50146fc96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dddbdc7-e43f-4c5d-bc69-00969cab38d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ac6734-13f9-42ec-8fd9-2ac31453c25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0140076c-c655-44ef-9633-6a1dc7323815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa62ea0f-6cfc-40c5-9bba-de6516403168",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc8cf8a-0445-4178-aeda-19525e8e60b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9481dbc0-b0c8-48b9-bbf0-ad40693bb250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdded2b-f548-4048-81aa-28d9839e0b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15563ca5-99b9-496f-bc8f-214637c667a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de7fbe-9120-43a6-bd5f-72173665ac8b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ec0a76-b0e1-49ae-a166-ede2d076c0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c06db4f-8391-47bf-a9f4-c368d2fee3af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff3ce19-2e1d-45b4-b674-fe0c2d216dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b95b3eb-22bd-4b6b-965d-0d1adbe60210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de6325e-6174-4daf-ba27-f63c419e4149",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01048a0-2f85-4f79-8fc3-034cc7d4909f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baec2479-2873-4695-b6f3-789502b4bf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c59982-df91-4325-b431-08ae00fe1592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a1b19d-4346-4c06-a03b-ec2c8e50f860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b6eeed-664a-44fd-a647-ba481bcf426a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60848bfe-e037-4fa2-a3d6-8274e92021df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1540bb4-aac4-483f-baff-00cbc4e522e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6efab8a-2f3b-41ac-97e9-7aa1dd2c3d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7415af-e369-436d-b37b-072f9d7760ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30429e9a-244a-415e-86e0-e51c1fac28ad",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f704d80-92a1-4445-8e2b-7ba26e2621c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c97fb84-5e76-414f-b064-a54654ab702f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40f94de-e2fa-4e01-b902-a6d290c225b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12141d12-4443-45ff-a86c-d7d328523df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d6b131-ed1d-425a-a321-743f6c037522",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3fb096-6050-474d-b6e9-f7001a72a482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565bc575-ce63-42ac-8d6b-4857a6a83d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dcf3a5-dfb4-485b-ba56-1a8331c935a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c368ee01-8bd5-4285-9f66-d333c59191d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8ef30d-737d-41c0-b25b-80779363027d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07810541-5d01-4a33-87f7-89149f4c6924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a2e475-c134-4ff3-aad1-c46dc726154b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab20eab-8e65-44ae-898a-85be615ba2b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0626e941-2f28-4557-9f70-a75376dbe1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a41fee1-2e1f-49ff-bc18-12e2ba2d9246",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a858f002-0c8e-411a-b21e-0741f8b29cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25143337-f2d0-409e-aefe-06cf14edc91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63958e7-2e38-4f60-8fc3-02faa3392a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c31d06-bc35-4b7a-bdac-c1b2554bdb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea57876-be73-4b1b-9bf6-968a3f1219f9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f830aa-56b4-4568-9474-1fb8a3cac677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe256c05-0771-414d-a35d-c6450ded4f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b94a5-eb0d-486c-be34-71b2a119ecfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8f3682-31a1-4f05-a06f-b1a481d8b0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9418c258-d3c0-4d2c-8f66-6da87536810d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af73aa24-8257-46df-98ba-3e0dd20ad117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d84f37-a9ef-460c-a119-cb28ec62add4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0e6945-3576-4c67-9608-f8dbad70416a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd5f903-17df-4c4c-babd-273c436b7fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805342b9-6a85-4bd6-9e55-e27ecff0fe26",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741cf465-0fcb-4c37-bed9-2cf9c6e30d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44888293-725c-4b10-aafe-acb836445184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69360ad7-e846-442c-b34a-020640684e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36de55ce-01f1-4a04-8b7a-ceeb3d9da85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b592cb94-83cc-4935-8831-fdeec8d94d39",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e3a0d6-537b-4508-ad1a-3aa1dc76c72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0278a03c-91de-4ace-8508-09a2826b04dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb39bf8-54fb-4fa9-b6da-82fe4348ee2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fbc637-950c-4dc2-9624-9bccc305b40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c05c0ba-e7a8-43f3-be0e-cdef1703b51f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b07bdf-395d-48cc-86a9-7ea683c5862c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af56d55-80c3-4f92-8a2e-e31b72e3cc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8528337-9b7a-4341-8507-1009b2b9ddb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a2c9509-f463-4354-8354-ef2b8014c121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e921927d-858a-494b-98eb-3d8cc3899696",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e9dc57-db93-4469-b5cb-493aec7f74ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0aa186-cc8d-425c-a5ca-58f03da356e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ee8352-0f7a-4996-82f6-9fd882065de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42954c8-66f6-49ed-91e8-36dac5ff2620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025c218f-12b9-4f8b-8b90-23aecbf6d4d2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b374bb6a-9d55-4547-bd58-1387f8bc2678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c84e76a-98b6-4ea9-b806-40e0be3eb770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaa23fb-87af-41ba-9302-93d4f2454296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacea562-ba5b-4329-b564-8e5beaec2064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f94669b-4025-4918-a7d2-42065b40e5cb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d72fbd3-3a6e-48f3-8647-87025dad6d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36478b0e-b5a9-4d48-a241-b0c841850917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2202d903-9eb6-43b1-85c6-4839117750ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79bb1cc-da0c-4a2b-9527-27bf44832b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae114bd3-ab2e-4ee3-80fe-0853f2f6ae98",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec3f7bb-3d35-41ff-8f4c-1e33aeca0f3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3c3a93-ae84-4e46-bb5e-a1766017d6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f7419c-415a-489e-9a4f-d9b28a5cf134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7906816-2bb1-41d5-b461-6b0c5e8ef8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee52680-28d9-4a78-99a8-3c287ee67a4e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40d5ad9-854a-4421-8d6a-45a13baf9cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c12e5d7-c41d-49f9-a040-9807674b12ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260a9abf-2ffc-416c-b2d4-a9373b0f7ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f09baf-998c-4e9a-a688-a13936db2901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222cd886-5584-4ab1-a465-bc1201fb4054",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d75c96-dfe9-4247-afce-082aa860ea77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd8239d-2e63-4e76-a308-2341bfbe68ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9380b9-271a-44be-91de-cde75bda626d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967042c1-bb65-4df8-a359-926cd13eb517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa66528c-19cb-4130-b175-abbf6ffe9ec3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6a1683-aaab-434d-b607-d1172a9ffa60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59af84cf-ec98-4077-b627-a234db2fd0c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dff295-6113-4c29-b626-6fb5120ef87c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff570715-80ca-402f-b871-58e4d14b95df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46d9e34-f0ed-4023-9314-80af1d4a1a18",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b166de8-64d5-441d-a39d-1e6c0e0b1856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ee3064-c1af-40de-bb7f-b3964871804d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f686e97-865d-4aa7-b208-8c4cf4cab352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61d9a67-1b92-42cf-96dd-8e7ac0c12777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567d946e-6578-48e2-ac02-f8930d1ae74c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d983917-4fdc-4f85-8e0c-e00564880c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf373d2-4c57-43a2-a427-43b48f7f36e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de52f96-38dd-472c-9b95-07dd11b21b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071cfc44-98f1-40de-a674-bbffe108182e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac30e2d5-62b5-450d-9711-6ec1f0afc915",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c505c6-ee9b-449a-91fb-afe9e655e515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c845c2f-5cf3-473a-9662-c42c37d34bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cd77c9-3d0d-493a-8c34-78d6099d3597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fe9c70-1a4e-4991-9b75-ca4f7fcd7e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e02bd0-b1bd-4cec-ba76-f77a1e926541",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fab04b-5c6d-43b8-9529-3e2000fd0c29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71725451-1218-4559-89f6-cc4f68830425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca4fb7-b2b3-43ca-82c3-cb8bc4b0397e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b412a0e-2a1f-445f-9b83-c70934a3e429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1ab466-a86f-41fd-9cb8-547d71534f8b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c810400-aeff-4298-99bd-6842cefa62c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc01a15-901e-4a2a-ba83-8ce5aea47699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80d42a7-0639-4979-8ce0-ff8f061ee855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0517b2-be72-43b9-90de-97db477557c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab77859-297c-45c5-abb4-1be31456a833",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69ed276-21ba-40ba-9721-930bd8b7d0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d96f43-c064-4db8-8370-8277626a7a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8304e397-7f05-48f5-aa4c-7a33d5a05047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba8c127-0508-499c-bf0c-5f5266094784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e0e063-c08c-4ff9-86d3-6a41eff9166a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853e567d-39f4-46e6-bf5c-2146c70c3533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f99d4ff4-8c07-4e36-86b5-d0d2d47fee7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8da0a7b-cfb5-47a6-bbad-82d47169ad32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66aafada-7392-4d2d-ab4f-17f448fb65b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba710f4-29bd-4d5f-94d7-0166ad224cd0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9435c1-3506-4aa6-bc07-ab4a43c15cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519b98d2-d80b-460b-b85f-925a1201bf30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae037038-11e3-4917-a4d4-f48f3bbc007c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9509d7-dedc-4879-94e9-e9cbd0c19f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e84ee50-d375-4678-bbaa-57f8759bf7b1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d78944-8880-4382-a885-fae55773e79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed048c6d-ea44-4385-8518-54f3d6e0040e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0c5684-65d0-44de-80c4-f174426f5315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4f546d-93aa-4f1b-95df-335cd53e6693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bca6eab-85cc-4b8d-8437-a85072ec6bb9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0d52e1-00ec-4fba-a747-177dbe9c1e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ca7437-65b3-4c17-bda2-81f4d1769b67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdca304-323d-4cd5-bdb9-afc872386ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b84a1f4-f657-4cfe-94ec-b4eab2b64c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3d1260-c544-416e-b544-eaee4bfd834f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeba08ad-86cb-479f-9511-e57a4abacc1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb88d55-23aa-45f9-a870-1f2dec2bb23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e77ab2c-6776-45b3-addf-465455a95195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1182d372-8443-419b-8ca8-953fa1914f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8316b91e-969f-4816-ba49-2bff929065d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07012b0-f082-4624-99ae-972d93da9142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "471e9cdc-1ac2-4c94-8776-ba5ce081c6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d01236-2500-46bd-9939-2750510afb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66aa0de5-0fe1-455b-bcd5-49bafe619fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800f2cf7-6d6b-4102-b396-96c11510207d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18389aa0-5e14-4657-bb9c-63659e4d7dba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29c5031b-b661-48bd-95f5-5db76fe93960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984444fa-c5f1-4084-bc95-47faab8d40d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242267f1-b6dd-40fb-af01-d7766e2f7f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d897fa7-04fd-4aa3-a01b-7a9ffce37278",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a70211f-3ed3-47ec-b115-29d19f39a623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a487e1-56b5-4050-8783-ffb05e8d5ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fccfeeb-c743-420f-a3ba-cb9f63cd8e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613c6afd-d183-4880-8dc1-7751dc49a9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c03da4-f3a2-4da0-9828-851e1dc14af6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f796f831-0cbe-4cc2-88bf-7125cf47d565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0bdc584-f7ae-430e-979b-12d833671554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d72263-11c6-4400-b031-03186c63bd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1d988b-9736-4a1d-be4e-f3fd98908b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af00db80-d34e-4855-8cd9-87a96bd9e0bb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af51b18b-004c-40cd-ae12-8f336ffc63a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1faf83c5-426d-40cb-80b2-83f6e5de1963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f661c74-da08-4122-9b95-eac29b701df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "151ef5f9-45c8-4ba1-bf5c-2c81f37e5e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9087a774-6263-4a58-adb1-9f17fc8824a6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b5243f-5695-418b-9081-cf106087cf56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bfe4063-7f33-492b-a23e-c34817584361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768a1c24-ef11-4aa0-8a37-39d583127428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28debda4-30bc-447f-ae4d-e3f00c8acc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b550a8e5-9071-4884-89f7-46d0951ead4e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b705244-c719-44ff-b3de-b2e56d54c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf13c05b-052d-41f5-97c3-c4fb0a1507f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd17d33-5032-4e4a-912b-bd5924090e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eba77cc-9b31-4f70-af91-629f3d8fabcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccabf7e4-f61a-4c66-a934-5f7732914547",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c360870-4740-4887-8f02-1962619c2aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "126cc100-2b29-4a3f-aef9-107523207bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a666c7-dd85-41aa-b89c-fa1f9b106e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21e2837-d18a-4993-8cb0-5b2efcf101b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4618a296-6ac5-4341-bdb4-6e6f49ef8751",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c9c3e7-f39b-4802-bbb3-db75d2416845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c55a2db-3c6c-4c5f-86a4-222db5bf4780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32583ee5-04d6-4cc0-a45d-178dbca2384b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adbfc21-7716-4d8c-8174-d695cc133a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d7709f-da15-407a-a774-0dbc421d43e4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f934fcdc-c45f-4d05-b9e1-acb36fcf6f04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1329f60-6e6e-4f0f-9008-98a99237e733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c591ce0-1c16-4d00-a98f-6e7f7f7ff3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54048cc-711c-43db-ad9b-b1e7a4e4c2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f949abb-99ef-44fe-850b-091f9286b01a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e291e5d3-ba18-4881-b008-b6646bcbcfff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299c0836-46d7-4b16-96e7-04a1b25005b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa314754-3a11-4b0a-9230-d20326443e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a468859-758c-4e22-89d2-e1950ff0f9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0a3895-567e-4c50-ba67-ebd91f2afdb8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9780bc6e-cbba-486b-89f8-1a31089deed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8b2baa1-3577-4d6a-a2e4-ff05844117d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72acb6e-c344-4b11-a93f-32993749a837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95b10c3-fa45-4236-8865-cfe0398a3121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9752da2c-d374-4d86-a76e-d5d09f1dbcde",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c83d71-3211-4761-918e-a654da62ae7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972a81a3-c25e-4b71-a921-31e5edfb0490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f949ec6-bbbe-4020-9a53-cd78acb4db06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a426830c-2e5b-41b6-a26e-c7508d15812d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf19c29-779b-44f7-a160-85f7f196f390",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961e2925-a24b-4e4a-836c-91e72d958cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a959d96d-bd38-4cda-be66-ff84c7058007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2ffb2d-719b-4e7d-99e5-9c741b8fec74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b74f3e-9b5c-43ea-95bb-ab66b011e0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2af8b1c-e9de-452f-a0fb-eb0790a748b2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcb0434-38d5-4d0d-a08f-0876100bbbc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a173caa-272a-4e33-90c1-09b0d3d5cafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b73f53-7324-463c-b629-9bf74f3a7379",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b80068-8fab-4cb9-8b65-c4ea4be93492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a584cd-20f0-4c6a-a36a-58b147424acb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba14a79f-7d95-4db2-b392-30f9e6eb8775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6b822a-42be-48be-8182-0de63392e280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d112c45e-9ff2-47ec-9673-d957bd43fb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87b6550-6b49-4639-a876-5e3bd6b1ab3f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14ee28bb-2289-4446-936c-32dbbcea2b57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b953d4a2-f1d8-432e-b7b1-a67ff0d2d05e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10d943ce-adf6-4a0e-9b8b-eb195fcf1554",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0e7da73-d15c-4525-a50f-d2adc8d1ef73"
                    }
                  }
                ]
              },
              {
                "id": "c45f11c5-1855-4900-b7e8-3f46e8048c87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d07c80d1-560a-45bd-bf90-6dfcee844a90",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27ac18e-c5e8-4b9a-99ee-bade05f6fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4881c4cb-4a2c-4334-a490-13718d2c88b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b236f6-cdf2-4535-8d79-444058f9e42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44d92ad4-5454-48a8-9f7d-a9520c0dc7c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3b25906-5bc3-48f3-a797-6ff389bcf296",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b4ccb04-47b7-477c-a4da-2b630876246b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed95c73c-135e-4cc2-8369-8594d784268e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4997a42-2b71-4021-a777-c1fb26015473"
                    }
                  }
                ]
              },
              {
                "id": "b50e6c5e-f60e-4d7a-ba39-41a915d0ab60",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "08421bdf-d01d-4be8-8bbd-dffda811ddb5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d36f4a9-85bd-413c-84af-b71abbe49b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3da1e9ac-491e-423a-9570-e8e801a07ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4d8735-2e94-4172-a69e-31adf02a7a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05603fa4-b847-4502-9264-dc2d296dd83b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e60027b5-e256-4bb4-afcd-6412f825e666",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f40ed74-e6a6-4aba-8571-6c6470267aaa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "865c22fb-4520-442b-b632-a0fdf5e39989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a6afad2d-8fd1-4983-bc88-1d90665e1b03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e09f5e43-a282-4207-beee-a490939e0c6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48438da1-5535-4e10-872e-de31a21e5da5"
                    }
                  }
                ]
              },
              {
                "id": "81468c54-7234-42f9-a325-9d2f98d8f706",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d02f280-2f30-4b06-80fe-12e8354140bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "071e56b4-b6ad-4336-9216-6b414abf2ebb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c6f0ac-6d84-4e63-a92d-7fbd2cffda57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a3d0263-e12b-483d-85be-0354d60cd702"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1af80ea5-7ae8-465c-93ad-5833189b3793",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "54335b46-f61d-41fc-8250-853df9dda4ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b252bae-dc7c-40f2-93b2-0834a572c1ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98fbef1d-a2e7-4315-acd7-1d1985351954"
            }
          }
        ]
      },
      {
        "id": "0bf48ca7-cb00-438c-bc11-8fa27776dd7d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "24054833-cc14-4d7a-a30c-b44febcd7792",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca247050-8241-4377-a74c-f35cd0914b9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffb2e6ac-64b8-4c4f-bd0f-82b6e34455f1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934564af-af8e-43c4-8c37-59df3505f7da",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3dd82c71-3f26-4113-9e58-58e810893a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5651fa20-72fd-4127-84ef-66810e659449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0e3662d-65b6-4f02-9015-e6f1d5a87c24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c96eb96-9ce7-434c-b987-09219e407c40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92eac6e8-5354-48e5-ba0e-4e5272cd5a12"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85763fb9-ce3e-4eae-98dc-cd4780f83d1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b2b3fe9-d6a8-419a-95ea-70786393ac13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51128d01-2be6-4b05-a460-085fe2e32f35",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e082e487-a4c4-464c-ac07-92245ed6f952"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0447b240-84ad-4975-b8ee-f562b35dbd33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed7e5281-c9ec-4933-88d1-eb4e986910dc"
            }
          }
        ]
      },
      {
        "id": "460f6968-d876-4a23-90d4-7cd1bb5186eb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "17f0c8a9-0a24-4ff6-bd0a-929a900f01d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "00804864-d4fb-4dd2-87e8-71d76f3924da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc8c4345-4eeb-4ebd-9468-b3a852fade07",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609f7cd4-3cac-46f2-9909-a6d5ad4fca6b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ee6ce27-70d0-4711-9e05-e7c8310d1bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "851bc386-c004-4032-aae8-fb2f97c0a7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ea469ac-73ab-4775-b6f1-b1e4056d7fef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1112039c-37ea-4340-a4f0-4f01f256738b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a32c9374-fd8e-4d5c-ab44-6dde10614256"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc7e4628-c1af-40a5-bb00-23a5c3343456",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb7795d9-bb56-4d2f-bb89-466c73ee9166"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74ef8ce5-28bb-43df-9d04-5d85b77d9821",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59fe2ae8-3e6f-4c98-a019-8b5ee33e9055"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17a6da44-fe6d-494f-a8f9-4439f8133aae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78afbc05-0596-4834-a58c-de21d18e7c2e"
            }
          }
        ]
      },
      {
        "id": "1ad8e2d7-4535-4d6e-b453-be99f433d86c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "adc43e23-8377-46ea-a6b4-d016f7f02082",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bb67a3e-4141-4c55-9c03-f5f514bd920c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ce3b991-9125-44f9-957a-354397f5d86f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6aeab60-9ac6-4e6f-952e-4030f16a5036",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33147d13-48a9-427c-93ed-8c55284ed729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0676c5c-f96c-4d69-ba98-43b02e998b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d3b9bab-4b6e-431c-9409-fecc978340ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cf86fdc-31dc-4f25-ad39-01ffc07a87da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "316cd953-950c-4504-adc3-90b0f12d2e1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0e91466-4462-4bb2-b32b-c0bbfbd64ddc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eb7136e-958b-4614-8735-ea7fff43b48e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "928cc415-a314-4945-ae03-4230f1b6118d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25bea315-ece1-49f3-b467-ba81eb7234a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bde3ddf5-8908-4329-ac81-6979bcf896c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f14fe370-d59b-423c-b8e6-4a234cae59aa"
            }
          }
        ]
      },
      {
        "id": "4aa9816c-af36-4c25-ae32-99e8c48ccbe9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34cb1726-4eb6-4204-86d7-a0858dc9cf34",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c276d313-9327-4589-9341-c10c28aa7ee4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7fdbf9bf-7a65-445b-b578-6239f2847c91",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e387553-a5fa-499b-98b1-42f7622b61c4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "268462c2-a9f6-4015-b621-115bb1a4e603",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 12.190140845070426,
      "responseMin": 5,
      "responseMax": 278,
      "responseSd": 18.41766340587954,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696725379156,
      "completed": 1696725394152
    },
    "executions": [
      {
        "id": "860284d9-2093-4c81-aeb4-2773467a15df",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1e18e533-d46f-48b8-8b30-90802d0341f3",
          "httpRequestId": "28a0172e-6f25-47cb-b6a2-aaea47e084ec"
        },
        "item": {
          "id": "860284d9-2093-4c81-aeb4-2773467a15df",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4d0441ad-4218-431c-ae10-781eefc22649",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "c6849860-8e37-4848-9d46-f246b578fd72",
        "cursor": {
          "ref": "e640c72a-2c40-4fff-9062-56878df3d196",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b135253f-64a9-4443-b7d0-d60b99005d71"
        },
        "item": {
          "id": "c6849860-8e37-4848-9d46-f246b578fd72",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "81cea513-4f8b-4f76-8892-53935cc5365d",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "b3159cf8-b577-4494-84e6-9f9010fefe5a",
        "cursor": {
          "ref": "791f6eeb-b15d-40a0-84a2-b5de3602f8ae",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c80b51b1-fb3b-4c11-a33c-2f0a5c33c3d2"
        },
        "item": {
          "id": "b3159cf8-b577-4494-84e6-9f9010fefe5a",
          "name": "did_json"
        },
        "response": {
          "id": "83692906-adc3-4461-b08e-391dadbff023",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843c68c-7326-4803-8d59-46bcf9b24503",
        "cursor": {
          "ref": "7d8f694b-a40d-44ff-af35-a53b1ef67c96",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bbb71dd-0921-4b76-9f64-a1f8bd150bab"
        },
        "item": {
          "id": "3843c68c-7326-4803-8d59-46bcf9b24503",
          "name": "did:invalid"
        },
        "response": {
          "id": "0888059d-9915-4b33-9677-a24f8b1de1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3843c68c-7326-4803-8d59-46bcf9b24503",
        "cursor": {
          "ref": "7d8f694b-a40d-44ff-af35-a53b1ef67c96",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2bbb71dd-0921-4b76-9f64-a1f8bd150bab"
        },
        "item": {
          "id": "3843c68c-7326-4803-8d59-46bcf9b24503",
          "name": "did:invalid"
        },
        "response": {
          "id": "0888059d-9915-4b33-9677-a24f8b1de1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f620207-784b-46cf-a7ff-5a556e575348",
        "cursor": {
          "ref": "af2d886f-e778-4ff2-8108-9d76b81ef371",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "205910a8-f888-4550-9ed0-987f507db610"
        },
        "item": {
          "id": "0f620207-784b-46cf-a7ff-5a556e575348",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "140e6748-cddf-4f83-a438-cb24d2d9bdea",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43638fc4-d9f2-4dd2-801e-a5cbc0e637ff",
        "cursor": {
          "ref": "4c276315-51ac-45dd-b71c-5e47dd6123bb",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c50533da-2b69-4060-aa08-af74d8e1caba"
        },
        "item": {
          "id": "43638fc4-d9f2-4dd2-801e-a5cbc0e637ff",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "79ff3973-3a63-4043-8902-1cfdc941fa3d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea323cd6-9c14-4cfb-b4ed-f9a4cf72c628",
        "cursor": {
          "ref": "0aa8a4b0-3f3d-4a90-b692-3ceb1732ceea",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f6b044d1-ef52-414c-9d95-5a59dcfd7657"
        },
        "item": {
          "id": "ea323cd6-9c14-4cfb-b4ed-f9a4cf72c628",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "983e14e7-8b7b-447b-a0a3-45eae0a2df6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c89acb-e642-4b1b-a18b-0a26001171f3",
        "cursor": {
          "ref": "d94625a3-062c-4a6d-bb90-866055a9485b",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6ac39a5d-9f87-4bf4-89e4-b1711846bbca"
        },
        "item": {
          "id": "d4c89acb-e642-4b1b-a18b-0a26001171f3",
          "name": "identifiers"
        },
        "response": {
          "id": "4a9d631e-6c78-455c-be58-846e7925cbd0",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e4ef92-5a24-4c30-a891-e3983c8d60dd",
        "cursor": {
          "ref": "65ed8885-e27c-4695-a69b-1cb649ffd1a2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88931a7c-4fe1-45ec-a843-c708882e15ee"
        },
        "item": {
          "id": "b0e4ef92-5a24-4c30-a891-e3983c8d60dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fac4241a-eb89-4641-9722-215c798579b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5d9991-9574-42e5-a3cd-a1bc52f3e636",
        "cursor": {
          "ref": "b1bf2fa6-c8ca-4629-b928-373c7d60f21f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "62b44cca-7b3c-4b27-b87d-27f50521428d"
        },
        "item": {
          "id": "1b5d9991-9574-42e5-a3cd-a1bc52f3e636",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "644ad66a-37a4-45c8-b2ce-c15539d2f8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad5ccdd-c15c-4202-b255-c60f0d1b8836",
        "cursor": {
          "ref": "57d99542-fd4f-4d73-8190-3f6a246477e0",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "461a7ebf-fe53-4436-b53a-23a547dd4316"
        },
        "item": {
          "id": "1ad5ccdd-c15c-4202-b255-c60f0d1b8836",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c71159ab-e897-4f8b-8fa7-e003d75d922e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8ab313-811c-4679-89b7-dd1d4164885b",
        "cursor": {
          "ref": "132d25bb-bd3b-46ea-bfda-fb0b6d7f7f33",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a9be5e3-9c2e-4e23-8891-4bf55e5a4b42"
        },
        "item": {
          "id": "dd8ab313-811c-4679-89b7-dd1d4164885b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cf83d048-5cdd-439f-86e1-2d5726449b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8ee41e-1a3c-4992-9a86-35e76781da8b",
        "cursor": {
          "ref": "6446bc5b-b138-43dc-9c22-38a64520f4a3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0f4e2dbf-5603-4144-9e40-d6f8c89ef7ec"
        },
        "item": {
          "id": "4e8ee41e-1a3c-4992-9a86-35e76781da8b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "896d8549-f0ec-44d4-b399-f08bab6ca69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05a0082-ca6e-4234-a903-9d205fc6ba82",
        "cursor": {
          "ref": "b634f5cb-9b78-4b98-a279-b55caa4538b0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b9842107-e6b7-44ad-83a8-7593781dcc16"
        },
        "item": {
          "id": "d05a0082-ca6e-4234-a903-9d205fc6ba82",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f251af8b-095c-42f6-9020-04c8cd82410b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf943797-17d0-4512-b177-623e554ae4f6",
        "cursor": {
          "ref": "04a85fe9-1443-400c-84a9-96dcf0a77cf4",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8c61bdef-0ff8-4028-9ff1-669760daa59b"
        },
        "item": {
          "id": "bf943797-17d0-4512-b177-623e554ae4f6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "14aa3c2b-29e3-4941-9503-06cfc105720f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b9e94e-1317-4051-b81c-677b99398ca4",
        "cursor": {
          "ref": "52123763-6396-4969-b0ed-5a93d9dbdb41",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3e1c8787-1c2a-4339-a6fc-f82f7fc19251"
        },
        "item": {
          "id": "34b9e94e-1317-4051-b81c-677b99398ca4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a9e89e30-5f07-4574-a102-541b60dfad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228bacd5-a5c9-4b9a-8173-3991e0fd3ecf",
        "cursor": {
          "ref": "d09af19c-30d6-4194-a6bc-3c46ee6b9584",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fae4ca68-594d-46bc-8c6a-2d0db04eca69"
        },
        "item": {
          "id": "228bacd5-a5c9-4b9a-8173-3991e0fd3ecf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ed431df7-b49b-4328-90f3-36334308ba16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbec3b7-7960-46b1-9793-c7f18b569076",
        "cursor": {
          "ref": "1bc11a77-3de4-4573-90c5-9f00959cd669",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f14574be-4e9b-4578-9f66-1b5c9cf9da7f"
        },
        "item": {
          "id": "2bbec3b7-7960-46b1-9793-c7f18b569076",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "07f8ea5e-1a7b-428e-993b-706b4c6d93ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c252da6-e1c4-47b5-9043-f4c61c3f737f",
        "cursor": {
          "ref": "d454ccb0-0546-4f31-a461-bbd82fb855b1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "67276e38-6aa7-48ba-9a36-e4785fd17acc"
        },
        "item": {
          "id": "6c252da6-e1c4-47b5-9043-f4c61c3f737f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2b5ee2ea-50af-41f6-909f-f2a6e098c17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c344a1-cd67-4a11-a1ef-b285abd3f559",
        "cursor": {
          "ref": "5f6aa019-ddf3-4b24-a74c-127661a2ad19",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "80bbb58a-bfb3-4040-8230-b3cc577529d2"
        },
        "item": {
          "id": "59c344a1-cd67-4a11-a1ef-b285abd3f559",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1faa5184-7c6c-4212-bc2c-6e2e70c8a485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffd6f69-cbd4-4db2-92ff-96f6a6e14aa6",
        "cursor": {
          "ref": "4f99a004-317c-407a-bb45-8a7f1ec0a502",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "053276e7-e73b-455a-ba29-f8268d3b94b5"
        },
        "item": {
          "id": "7ffd6f69-cbd4-4db2-92ff-96f6a6e14aa6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2e8b9fb8-9635-4a49-980c-c8ab9e392510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820613bc-a01d-4117-a895-4d495ac51b60",
        "cursor": {
          "ref": "aec439d0-136f-4424-b366-5332f0592d9c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c4462aa4-a040-4fdb-a1e7-ad83e08d6fbe"
        },
        "item": {
          "id": "820613bc-a01d-4117-a895-4d495ac51b60",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6173ecba-76c9-465f-b03d-792f17270b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49198121-02c4-4dd5-b1cb-40cb39bbb825",
        "cursor": {
          "ref": "42136042-3be4-4fe8-93da-1b75e042f3be",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f4c24433-1613-4f48-aade-1fd5d7ccabd1"
        },
        "item": {
          "id": "49198121-02c4-4dd5-b1cb-40cb39bbb825",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b74f7d78-446f-442f-b64a-ddb36aa831ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fc4bca-2237-4b04-8c3e-cd7913ed652a",
        "cursor": {
          "ref": "34af389f-0569-4a5c-9a72-bd55563c9eb2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ba44d556-ff25-4f32-ab9a-ff8ab9fd9085"
        },
        "item": {
          "id": "f9fc4bca-2237-4b04-8c3e-cd7913ed652a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e2acca68-3913-4e1a-9288-ad2ea0dc4123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e01a81-33e6-4b99-b235-7f722a138240",
        "cursor": {
          "ref": "32b30078-2e45-4985-992f-8636555dcd88",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ff955683-4bba-41d1-b567-d1f26d0abfdf"
        },
        "item": {
          "id": "67e01a81-33e6-4b99-b235-7f722a138240",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8fd74438-76dd-4fec-aa62-551e3d7c72e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d82e59-35d1-4e87-88fb-0920139acf9e",
        "cursor": {
          "ref": "fcde4a89-e938-4bd6-b65b-c68360848ac1",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "16934fae-1b1c-4d78-b4e2-492bd30a2db2"
        },
        "item": {
          "id": "f9d82e59-35d1-4e87-88fb-0920139acf9e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "42de6a41-41d1-4c31-8b55-3944fc6f2a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195d94b1-5406-461f-bad3-802645044e19",
        "cursor": {
          "ref": "836b4fb3-bdc1-49eb-af4a-87e719a329e4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6c6ef4a4-b050-4182-9baa-64d1fa5e81a3"
        },
        "item": {
          "id": "195d94b1-5406-461f-bad3-802645044e19",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "71712103-08c5-49af-9937-9582fbfcecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ef874d-8c7f-4387-adb6-6f9b3a4bb487",
        "cursor": {
          "ref": "65ce3ce2-9a08-45a5-9599-6896b9b8e542",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "24dea729-86d9-489b-b8f7-1bb200f45605"
        },
        "item": {
          "id": "36ef874d-8c7f-4387-adb6-6f9b3a4bb487",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b23e280b-e274-467c-8b43-49df2b6a17be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94670303-1722-4c43-a65d-726180a8bfd7",
        "cursor": {
          "ref": "d932d665-fabf-4483-b3a1-305d4c5c0961",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3d2f4a75-e324-49f3-9f88-59011923fd85"
        },
        "item": {
          "id": "94670303-1722-4c43-a65d-726180a8bfd7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "612866ea-89da-4e44-9db9-a251c536b0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dc744f-13dd-4f34-afb7-063c1838b770",
        "cursor": {
          "ref": "47ecb3a0-4fee-4c5d-a538-fa70addb9e3f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1fbe386e-ef3a-40ef-875d-1d13ebdef277"
        },
        "item": {
          "id": "e1dc744f-13dd-4f34-afb7-063c1838b770",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9599d77e-b64e-4842-99cc-d26622740307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fb799a-7121-409d-9e8b-615843be4541",
        "cursor": {
          "ref": "4795780a-a581-408f-a5db-f8a55adc189a",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2a3bdd25-d9be-47c3-abd4-db54507421d9"
        },
        "item": {
          "id": "64fb799a-7121-409d-9e8b-615843be4541",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0435bc8f-8be8-42ff-817e-ca68c077ee30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2439038-697e-4c53-ae74-bfc29601144b",
        "cursor": {
          "ref": "4022be2a-5f12-4ce1-84d3-37c4dab29754",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ef296fe6-9c71-4cd2-8fdc-93e50e576812"
        },
        "item": {
          "id": "d2439038-697e-4c53-ae74-bfc29601144b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "526e3885-cb8e-40cb-8746-325ee756ce57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e36387f-1aab-4d64-8fc4-afaa9f54c05e",
        "cursor": {
          "ref": "3589a473-c40e-483b-96c2-71f2d30c10c9",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "675e769a-e573-42e3-9197-0e1b31a10a4a"
        },
        "item": {
          "id": "5e36387f-1aab-4d64-8fc4-afaa9f54c05e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9e4635e7-baaf-4b08-9d6e-c8d018201566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd382c5-5963-42ee-b186-14bdc766a0cd",
        "cursor": {
          "ref": "91418937-9b84-49ad-aaa9-25c60b854942",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a0af4361-fc34-411d-895a-23ab7f966959"
        },
        "item": {
          "id": "7bd382c5-5963-42ee-b186-14bdc766a0cd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cdfd0019-dbc7-47fa-98ab-c0ddfaed3cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d81d02-fea1-4f49-8243-2e29fb36d010",
        "cursor": {
          "ref": "5d43178c-e13a-49ea-afea-5f29211519eb",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c1335e2b-4571-41cf-9a35-a1fcc2942038"
        },
        "item": {
          "id": "c9d81d02-fea1-4f49-8243-2e29fb36d010",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e9f6a035-3f80-4642-b63b-d3749008c249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c4699d-4670-44b1-b475-f5e76393345a",
        "cursor": {
          "ref": "881494cf-97d8-474a-938d-f3d6e0f61750",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "664d81e7-bb04-4f20-9853-bae3ea6906d4"
        },
        "item": {
          "id": "c7c4699d-4670-44b1-b475-f5e76393345a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "25d58e00-10dd-421c-9b1d-744081b41135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee91b34-f019-4602-b6f9-4c936abeb714",
        "cursor": {
          "ref": "45762da9-88fe-461b-b8b9-76b71113b386",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "37a5f589-69f8-424c-9eed-e1a04179b03d"
        },
        "item": {
          "id": "8ee91b34-f019-4602-b6f9-4c936abeb714",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "71fd7bb1-36a9-4837-ad77-a90242dd6356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504c1c7c-de0e-4508-a358-745f5709e079",
        "cursor": {
          "ref": "c71c48e5-6278-4b15-a97a-e7186a6fde75",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3d0aadc6-8132-435b-a6f1-ccae8521595c"
        },
        "item": {
          "id": "504c1c7c-de0e-4508-a358-745f5709e079",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e40a2ec1-f705-4651-a620-6630d6478243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8059674-4944-42b0-895a-aa127820de3f",
        "cursor": {
          "ref": "bb2da9b0-7458-4661-81d3-62e1802c9519",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "662177af-59a2-4490-a29d-99e0a6057e9e"
        },
        "item": {
          "id": "c8059674-4944-42b0-895a-aa127820de3f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1094d857-74d7-4d6a-8b97-bbca98c6793e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be198dce-673f-4e94-8b4e-3e0fdb03cc92",
        "cursor": {
          "ref": "edbb2103-eac3-4ea2-b4dc-02908fdedeea",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "97cebddd-76fa-4195-9740-f47305cef1e5"
        },
        "item": {
          "id": "be198dce-673f-4e94-8b4e-3e0fdb03cc92",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ab2fd12c-d572-4b92-894c-7a355b890c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0429a6-3924-4893-a0e1-cdcebc625169",
        "cursor": {
          "ref": "3b76dcce-f308-4d8c-9149-824de1293aa7",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "63a718da-6e48-4b2a-9061-733631136ba3"
        },
        "item": {
          "id": "bf0429a6-3924-4893-a0e1-cdcebc625169",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ebcf7d28-d5dd-4101-beab-d9287a0f9d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7905df01-b17b-4131-858d-74ce42ab38b8",
        "cursor": {
          "ref": "42a4fc26-f53c-444f-aa29-d07a64f527d0",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c89a1a12-9c7e-4063-b956-1bce48c40cf6"
        },
        "item": {
          "id": "7905df01-b17b-4131-858d-74ce42ab38b8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f0634b46-119f-4538-975b-29fd2e2afbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9062be61-c78d-4e44-9870-f6404dfc0458",
        "cursor": {
          "ref": "c17b1609-bc39-4d72-9156-e0ca2e762e1d",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c90b3f79-1b53-4ab4-be0b-ab24bb5b6f91"
        },
        "item": {
          "id": "9062be61-c78d-4e44-9870-f6404dfc0458",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5daf273c-d222-4e77-9caa-6bc6f890d6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46065cd4-ba19-4db4-88b5-a5ef5de7b5a5",
        "cursor": {
          "ref": "ae6c8bd6-0ba9-400b-90ad-843d9af1d836",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "377c85f9-ff3a-4af5-864c-2952b03f501b"
        },
        "item": {
          "id": "46065cd4-ba19-4db4-88b5-a5ef5de7b5a5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d27e352b-3b86-4c63-96d5-b078d317fe72",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed56a0eb-6a1b-488e-aaa4-4d2fa43fb47a",
        "cursor": {
          "ref": "a3ef8112-0d52-4df2-9f62-69d3e319e873",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0d6e1dba-7d41-486a-9f07-3feac1ede5ad"
        },
        "item": {
          "id": "ed56a0eb-6a1b-488e-aaa4-4d2fa43fb47a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5fbea019-b0a3-4773-85a2-89b262bb3504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a2b4cb-0b50-4a7c-9697-9072879e6dfa",
        "cursor": {
          "ref": "58ec6847-6f98-4d61-9254-ae0628c77a4b",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1c8881c1-305e-4e7e-8c10-eb95d714b876"
        },
        "item": {
          "id": "15a2b4cb-0b50-4a7c-9697-9072879e6dfa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0d9ebbb9-727b-43ff-828f-e1f045982d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd405e2-ee61-46f4-85ef-7fe3f9f16eaa",
        "cursor": {
          "ref": "6c80213f-16cf-4e37-81a0-529cbaafaa5c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "80245742-de54-4f36-8b17-a34bcbdb722f"
        },
        "item": {
          "id": "8bd405e2-ee61-46f4-85ef-7fe3f9f16eaa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b93b10d7-9f6d-4f51-bced-68d0bcf96651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e497004b-8b75-4727-b701-3f56734f6889",
        "cursor": {
          "ref": "59efc595-2481-4bc6-9469-365c71fff392",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "81afab53-520e-4b0b-857b-2865cf2f5a00"
        },
        "item": {
          "id": "e497004b-8b75-4727-b701-3f56734f6889",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "314fd483-054c-4db4-8daa-563d95c10871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474def6e-27ea-46b8-813d-5d43665bde47",
        "cursor": {
          "ref": "1166df20-e138-4d12-b232-86ead20d7d0f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5373d3c9-e70b-456e-b192-df78d048d4c0"
        },
        "item": {
          "id": "474def6e-27ea-46b8-813d-5d43665bde47",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "76dad6a0-0da7-4449-a1d4-fa036bf42410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9b9ff4-ce5d-4886-b556-434d2246af22",
        "cursor": {
          "ref": "ef4c4ecc-2cd7-44e9-b107-a9ceadf15f12",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "adef4e05-dcf4-4678-9d99-9d5d9320eac3"
        },
        "item": {
          "id": "be9b9ff4-ce5d-4886-b556-434d2246af22",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8a38ba74-07f6-4511-91f8-d2f58d383e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84ed699-124c-4254-aeb1-dd6ef58aab71",
        "cursor": {
          "ref": "a49bd024-3a9b-474b-b91f-fc04452c0884",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9ea0c446-b362-4f43-ada3-f164156ff509"
        },
        "item": {
          "id": "e84ed699-124c-4254-aeb1-dd6ef58aab71",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c0c51a05-ada3-4a9c-8127-60cf5bf71e9d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb89d26-d704-4d18-9619-8e726eb026aa",
        "cursor": {
          "ref": "d70e383a-3d2f-4289-bc10-c2e508835d9d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "519416aa-cfc8-4fe6-ab38-583819edf062"
        },
        "item": {
          "id": "5fb89d26-d704-4d18-9619-8e726eb026aa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b63dbce8-11db-4e49-a6cb-a98eaf36dc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5c68dd-2a45-47b8-aaa2-a9fe12e03111",
        "cursor": {
          "ref": "acfdffa4-ca87-4e88-ba72-44607b744219",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1b7b39a8-6536-4417-bb45-b60a51d8a5c6"
        },
        "item": {
          "id": "ef5c68dd-2a45-47b8-aaa2-a9fe12e03111",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "850bb6b1-599a-4a6c-a01a-c1b72a92efd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa1ee78-6005-485b-bba1-7cfdda4b07a4",
        "cursor": {
          "ref": "4d941375-abfb-45fe-b48c-a98c44194766",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9079d4ce-4686-44eb-85e6-c12101c55cd1"
        },
        "item": {
          "id": "6aa1ee78-6005-485b-bba1-7cfdda4b07a4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d217c572-a988-425b-8a94-33793d8cdb20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ead083-6089-400b-8239-a5e99fef8f0d",
        "cursor": {
          "ref": "29c2d758-c653-4e54-881c-0d0517e473e6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b8332210-b0db-4173-af44-f50e521d17f2"
        },
        "item": {
          "id": "96ead083-6089-400b-8239-a5e99fef8f0d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "afc65c7d-aed1-4cba-89a8-238bf8bf4e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d99eaa-1ade-402a-be7c-09ff44279cf0",
        "cursor": {
          "ref": "d1253828-bead-4854-8b20-45698a8bf6e3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8405bdec-2321-4862-81a2-b9c033aa0d20"
        },
        "item": {
          "id": "f6d99eaa-1ade-402a-be7c-09ff44279cf0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "30cef255-d334-4684-b2d1-e5d4ca469903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdd676e-ffa6-42d8-88af-0c1b2d90d180",
        "cursor": {
          "ref": "171a55fc-01c6-462d-b44f-22a717162d15",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "20703ec8-1775-4c82-a401-fcc4a82a38db"
        },
        "item": {
          "id": "bfdd676e-ffa6-42d8-88af-0c1b2d90d180",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "46f1e6e0-2b0f-42fd-92b8-338ad9d1362a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cd9f77-bb34-4736-a84d-5f7d5e228b5d",
        "cursor": {
          "ref": "6deeb8c9-54b0-4e8f-98ce-de19c86de6b7",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fd88ddc8-7b80-49d2-9841-7ce5ecca574b"
        },
        "item": {
          "id": "b4cd9f77-bb34-4736-a84d-5f7d5e228b5d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7545ba4a-9b87-4c98-9279-ecb61e1fc983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555b405b-11ad-45dd-9869-edfee01dec4a",
        "cursor": {
          "ref": "c16f6656-d470-4e62-8c79-93d345eadb6e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c0216b82-e366-43b2-8b06-03f4307ef76d"
        },
        "item": {
          "id": "555b405b-11ad-45dd-9869-edfee01dec4a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "712b3bc2-25ff-4c40-8293-08102c271609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b0b992-f306-4fef-ab9e-1e6e1b9c3b51",
        "cursor": {
          "ref": "a24deddc-19f7-45e7-ba07-6dfffe49522a",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "44aae595-ad8a-48dc-bfdf-ead42f65fb8c"
        },
        "item": {
          "id": "21b0b992-f306-4fef-ab9e-1e6e1b9c3b51",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "80cc99fb-d42f-48d1-9b91-70351ba20e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570ec9ec-d492-4b04-8900-ed03fdfb3657",
        "cursor": {
          "ref": "2254d5fc-95fa-4249-acf8-79a7a4efdd5f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "316329c5-8c53-487c-8bf4-03edac934ed2"
        },
        "item": {
          "id": "570ec9ec-d492-4b04-8900-ed03fdfb3657",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "70c3c49d-b54c-4788-a7f5-87c7df1df8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49207cee-e09b-49e3-b740-6b95e1fe20c5",
        "cursor": {
          "ref": "f60274c5-e3b1-4214-99b0-2f63e72cb6ff",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c4560f03-e04b-4d05-87be-86e2b9b72c0d"
        },
        "item": {
          "id": "49207cee-e09b-49e3-b740-6b95e1fe20c5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d394d4f3-beae-4d99-8c6d-621cd33483cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c654ca74-59f7-44bb-8b35-91541cc75a94",
        "cursor": {
          "ref": "3b405f2b-196d-48c0-87bf-5a77a300b889",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "647fc270-c938-4c06-b7ce-186408fefbc4"
        },
        "item": {
          "id": "c654ca74-59f7-44bb-8b35-91541cc75a94",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cde23159-7fd2-4799-b5fb-b805d8d26428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d271beed-515d-4c71-9713-e381e9e59cc8",
        "cursor": {
          "ref": "853c7605-fbf9-4406-aff8-cd866a5a7268",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cbd153e8-af50-4564-9302-0401fe435a3d"
        },
        "item": {
          "id": "d271beed-515d-4c71-9713-e381e9e59cc8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "040632f2-1c0f-46e0-9844-696472e5f093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f5e5e1-055f-45e2-a86e-a26a70567e60",
        "cursor": {
          "ref": "97474574-1f0b-42b1-98f0-cf6233b74748",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e3fd3f2f-ca38-4dba-9ded-f8e4c9bd1298"
        },
        "item": {
          "id": "92f5e5e1-055f-45e2-a86e-a26a70567e60",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d12a91ac-b818-4cc6-bbd8-5b51a7629f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719fe74e-f604-4d3e-a8ac-23c96efb6f57",
        "cursor": {
          "ref": "2d422080-1053-4cd5-9437-bdabee641942",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "06ecab66-4a99-427c-8278-78e03b096f7f"
        },
        "item": {
          "id": "719fe74e-f604-4d3e-a8ac-23c96efb6f57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0135dd99-dc19-4731-b4bb-86d4d6030399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fbb2bd-87dc-41d4-b99f-25c49d3bd0b8",
        "cursor": {
          "ref": "778a74f5-3437-48da-957d-e815dd596807",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ffa7bd90-eeda-4ed4-b7b1-7a695cef8895"
        },
        "item": {
          "id": "59fbb2bd-87dc-41d4-b99f-25c49d3bd0b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "371511b5-8c2a-4b0c-88a6-f0684fb76013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a0b349-00c8-44d4-afe9-7735c101d36e",
        "cursor": {
          "ref": "0be0cd67-459d-4cf8-a214-8996e877231d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "488b01ab-259b-40b0-8544-f9d0bf4bb35a"
        },
        "item": {
          "id": "55a0b349-00c8-44d4-afe9-7735c101d36e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dfda03ba-d07f-4946-9df8-d6e1edde7ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e991a772-752f-4bc5-a518-dc9da6e1bfa4",
        "cursor": {
          "ref": "856fadc7-80fe-4209-a34a-9a8dccab1920",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "53d257f9-e2d2-4b42-9fba-d5d193f59d13"
        },
        "item": {
          "id": "e991a772-752f-4bc5-a518-dc9da6e1bfa4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7e5cee2e-388e-4cbf-8da5-c4905bc12781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ccc0d0-123e-4ee4-8ea9-36965585719d",
        "cursor": {
          "ref": "a0960632-3448-4eb3-bfe6-7d10b19443a0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b07305fd-b162-48a3-864a-4d32832868c3"
        },
        "item": {
          "id": "c3ccc0d0-123e-4ee4-8ea9-36965585719d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6888d586-5a3e-4829-9512-0b69447ffc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fd1117-4dbc-45be-b80f-359441a57d00",
        "cursor": {
          "ref": "4db6a66f-4d2d-4061-83fe-74e5b33c605c",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9e9c816a-7e80-452b-b4bc-25ad79ebb524"
        },
        "item": {
          "id": "06fd1117-4dbc-45be-b80f-359441a57d00",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f3d640a8-32c3-4e94-9055-17a42e885c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4b2505-09b8-4357-ba26-d2593f17f0cd",
        "cursor": {
          "ref": "5a0a3b96-d626-4628-870e-0dc7a968968e",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "de59c74d-0920-4b3e-8a4e-349e359852ab"
        },
        "item": {
          "id": "3c4b2505-09b8-4357-ba26-d2593f17f0cd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "88dbfbac-f32d-466d-96d6-773ed97d307f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289a673f-cd62-40cb-829d-fc1c0624c565",
        "cursor": {
          "ref": "98e24264-972f-434a-a9a8-3a90ed885905",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2677a32c-44c9-4b0e-b876-b05b9a856ec3"
        },
        "item": {
          "id": "289a673f-cd62-40cb-829d-fc1c0624c565",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d9dcf844-3564-4250-8d87-36b5e2697822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b978cff-9136-4955-bd6d-585d07d83d9b",
        "cursor": {
          "ref": "ec4fa3c7-889f-4a3d-aca1-1a5791a8502a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "66bf5fed-be76-44d1-8e07-da7d27dd9f44"
        },
        "item": {
          "id": "1b978cff-9136-4955-bd6d-585d07d83d9b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eca90497-67e5-4958-a84a-811016c3e7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53843c35-669d-4dba-a9cf-f484bc019b23",
        "cursor": {
          "ref": "be638bdb-6b44-40c9-8ede-bb917777af40",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "70e81abb-68bd-429a-b6a5-6a657fb02377"
        },
        "item": {
          "id": "53843c35-669d-4dba-a9cf-f484bc019b23",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f6fc3025-43f0-470f-9542-39f3cae1edbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2313970-a1e6-4594-8bf4-05128bf74bbc",
        "cursor": {
          "ref": "c418c0ad-05f2-40ae-b9d9-b4996111cb58",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fa72099a-37c5-47c2-b37b-bd026f6f0e75"
        },
        "item": {
          "id": "f2313970-a1e6-4594-8bf4-05128bf74bbc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "623db37c-e560-4818-906d-a21bef854d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e79fef-5329-4c63-b544-5961ae3bbb09",
        "cursor": {
          "ref": "1d984c55-fc4a-475c-a4df-bf7940f682b4",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f2479670-2efa-48b1-8bee-56fcdc366c6c"
        },
        "item": {
          "id": "00e79fef-5329-4c63-b544-5961ae3bbb09",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "47dda464-293b-4a96-9074-da8a308645a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b98859-5d06-41f2-b29d-dec67f34aa1f",
        "cursor": {
          "ref": "fddf3c79-a026-4f42-8632-efd15ec4a458",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "088e89b2-603e-41b2-b2d8-c91c5b6e2fd1"
        },
        "item": {
          "id": "f3b98859-5d06-41f2-b29d-dec67f34aa1f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bc382a77-cb8c-461b-96c9-6a1e47981fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290dfddf-6c33-42fd-8c2d-4e2486592816",
        "cursor": {
          "ref": "c5aa955a-f5b7-43fe-a665-55debc967c66",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a3bddcfb-21cc-4e32-a4bc-b7d4e6768dd1"
        },
        "item": {
          "id": "290dfddf-6c33-42fd-8c2d-4e2486592816",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0bd13d85-8092-4883-9e9e-5e5e0ea7215c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4099a90c-a89f-4747-9c8f-5ef8e875d99f",
        "cursor": {
          "ref": "14279e65-f30e-414f-a502-f3d718d58549",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "23579647-bebf-46e7-8892-21b8aefc6b4a"
        },
        "item": {
          "id": "4099a90c-a89f-4747-9c8f-5ef8e875d99f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "855b2cd7-4dd9-4f9f-99a6-6df56ab79f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89bf130-a9fd-4793-a074-ba68bbbecf18",
        "cursor": {
          "ref": "2757d2df-3bcc-4853-9a99-2dd5564892c8",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c2efa94e-f2cc-464f-aa84-e1658a323491"
        },
        "item": {
          "id": "b89bf130-a9fd-4793-a074-ba68bbbecf18",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8625c67f-d07a-4b0e-b9b7-64da8987ed3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ce81ef-9cfa-45b6-8e0a-fcd128f243fb",
        "cursor": {
          "ref": "61c5e1a3-d559-4dd9-899f-1ca07bda4941",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a2e8fa60-38a3-4d23-9474-750da2ab9084"
        },
        "item": {
          "id": "63ce81ef-9cfa-45b6-8e0a-fcd128f243fb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "11d702ad-6f60-485c-b52b-d44d8f29c2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3800f94-a4f5-4f38-9398-a456a00ff2dd",
        "cursor": {
          "ref": "735e5dac-a519-4953-a4bc-9d694ad7562b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cf30dd30-0012-4069-9e55-e9c1131ed7f5"
        },
        "item": {
          "id": "b3800f94-a4f5-4f38-9398-a456a00ff2dd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b3a3f526-efe5-4118-9c14-6cac10e0ab58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de6d94-2918-4053-9805-8d36e6e7733f",
        "cursor": {
          "ref": "fa85faad-eedb-4620-8a5c-1ffed8c196d8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7a45f20b-6bba-43a2-aa8d-bca421780cf6"
        },
        "item": {
          "id": "c9de6d94-2918-4053-9805-8d36e6e7733f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3acaddad-6d22-4d20-b464-9dd50458044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44d6064-3f7a-4020-9946-1e2e88d64d42",
        "cursor": {
          "ref": "c94d7706-7c25-4041-96d7-72eadf446da4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e4977952-d008-44cf-8409-d08bf3d89ca8"
        },
        "item": {
          "id": "b44d6064-3f7a-4020-9946-1e2e88d64d42",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2b86cf97-c94b-41b4-9dc4-fed9db4c2436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b16f34-cfa8-4a54-b980-633b8c2a6b01",
        "cursor": {
          "ref": "521aa263-a37f-4f6d-92af-d497759cce1e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c419643e-08c4-430f-bd27-19efd45d623a"
        },
        "item": {
          "id": "52b16f34-cfa8-4a54-b980-633b8c2a6b01",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a2ca33e0-5be7-4dcf-a1ef-d1568c32cd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46971ab1-1b45-4048-9fda-dbccab8e17ec",
        "cursor": {
          "ref": "cb19ca3b-9b06-47f1-8817-79327e8bd12d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c20a067f-0e2f-4d60-a49e-027b77c81fec"
        },
        "item": {
          "id": "46971ab1-1b45-4048-9fda-dbccab8e17ec",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7379c9e9-77a7-4da0-89d2-f35c2c5a8772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019a89a4-05ed-4631-ad9e-5eac2c5969ae",
        "cursor": {
          "ref": "9a67a760-c69b-43ba-b65a-0a1528fcb5bc",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "31b42676-027e-469d-ac90-494c31944deb"
        },
        "item": {
          "id": "019a89a4-05ed-4631-ad9e-5eac2c5969ae",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "53a53553-467b-4ced-a213-19b784f31ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5a454f-a65a-4e81-b844-72dbf0847dba",
        "cursor": {
          "ref": "4e3e6cf4-1e29-4c14-b65e-da8668a6d032",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2e32dd2f-d9be-4e2a-a598-b902a6728565"
        },
        "item": {
          "id": "fa5a454f-a65a-4e81-b844-72dbf0847dba",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5f783e09-037d-4c04-941c-83b9d5812a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601944e6-5a30-42f8-839f-b2725d60e2c6",
        "cursor": {
          "ref": "41788886-6ad1-4a8e-891e-86c27491619e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9409af93-e3d7-4a5a-850d-a9daa0c52101"
        },
        "item": {
          "id": "601944e6-5a30-42f8-839f-b2725d60e2c6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5cb23c00-192e-424e-be27-fba2e88fade7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74de5a9a-d4f8-4f9d-ad1e-501855800fa8",
        "cursor": {
          "ref": "1a2bcfbb-973d-4771-9f8d-c93a4df06af0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd87ecaf-84c4-4057-83e5-f9405d41cab9"
        },
        "item": {
          "id": "74de5a9a-d4f8-4f9d-ad1e-501855800fa8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b5b67785-0c9f-4fe5-a461-5e697d08de48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731692aa-286e-4d0e-b1d0-3c2355d0df62",
        "cursor": {
          "ref": "e2e3e41b-5805-478d-8bc7-8a8c51094b6a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "adda3498-0069-4644-891e-379019f4ce07"
        },
        "item": {
          "id": "731692aa-286e-4d0e-b1d0-3c2355d0df62",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3151dc5e-f93a-4c92-8729-c6ae08c0d863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6ed615-1775-4525-81b4-761d6b594d5d",
        "cursor": {
          "ref": "09f9eb5c-43c6-47c5-a2b3-154522ba418e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3afbc229-360c-4c6f-8a2d-4c39608cc689"
        },
        "item": {
          "id": "2d6ed615-1775-4525-81b4-761d6b594d5d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "609166ef-f0d8-4e98-9215-32b0fde3f62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878de4b1-850e-4a87-a24d-c50d2c015c18",
        "cursor": {
          "ref": "424f675d-8cd1-40a3-ad92-37ad98a6cec4",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a947b664-2b83-4523-a144-37337cf528c2"
        },
        "item": {
          "id": "878de4b1-850e-4a87-a24d-c50d2c015c18",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b1a1826d-bd6b-445d-924e-594a29c79d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d237ac-2325-4287-8bc0-f2f31d41b776",
        "cursor": {
          "ref": "89f0bcbc-da1f-4c4b-9581-881882a9a8d3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c10578fe-1339-48cd-8593-0d660292b923"
        },
        "item": {
          "id": "48d237ac-2325-4287-8bc0-f2f31d41b776",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "72c9ba62-5b97-40b6-ba0f-f3204d2e495a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335400a4-6986-4890-8314-e8646bb5f5d0",
        "cursor": {
          "ref": "55edd3dc-73e3-444a-b182-cb5b2188a467",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "32223743-11cf-4916-ad09-f436d2908fcb"
        },
        "item": {
          "id": "335400a4-6986-4890-8314-e8646bb5f5d0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c8c24f2e-1025-4314-9c0c-06a31fdb6bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055ceb08-765c-4e1d-ae29-9bf9e76a75d6",
        "cursor": {
          "ref": "48f8c2f8-f74f-478a-8e1f-7974755f3f9e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f44c0bce-a48e-4993-a3e1-6c7ffc232eda"
        },
        "item": {
          "id": "055ceb08-765c-4e1d-ae29-9bf9e76a75d6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f4d16850-8d28-4f18-b71c-4ed1f578929c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d603e2-362e-44a6-9c6a-c93720034e34",
        "cursor": {
          "ref": "781c694e-e28d-4a9c-b807-c7601c1fffdf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8cb9db2a-e2e1-49fd-83ff-36c8966936d6"
        },
        "item": {
          "id": "51d603e2-362e-44a6-9c6a-c93720034e34",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3f8828a2-597f-47ae-9b77-ef84a27961d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2f4ad6-df9c-4b59-a744-f610c8445d05",
        "cursor": {
          "ref": "f0b4b16d-3e07-4a5e-a5e9-8c77f702a82b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "871a7d6f-231f-4c5b-a9eb-f41726d2a8a7"
        },
        "item": {
          "id": "dc2f4ad6-df9c-4b59-a744-f610c8445d05",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d35824fe-42c2-44d4-b906-18e35a5fba6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871d6118-66fc-4490-b324-40ac70411210",
        "cursor": {
          "ref": "94aa0aa0-a454-4dfb-9401-9c9ad33657a6",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a0d86fcb-68ce-4646-aa7d-f3e4bc4e1b07"
        },
        "item": {
          "id": "871d6118-66fc-4490-b324-40ac70411210",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fb796b3f-d81a-48e8-bfc9-6fb5cb647da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5fbf7c-78e2-4951-8814-ee0e5f840a12",
        "cursor": {
          "ref": "49a77d2c-b736-4f73-b030-31f1693f0d0a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1d9f55b1-1c8a-4594-b89a-7fe1514e8dfa"
        },
        "item": {
          "id": "8a5fbf7c-78e2-4951-8814-ee0e5f840a12",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5db2292b-d4b7-4d58-a646-7bf2fae20f95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e86f6b-1ad2-4931-b152-121a987b899e",
        "cursor": {
          "ref": "f74a4a43-7792-4ca1-8a86-ef52427439d5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "435bd13d-5ff3-4266-be45-494c070657e0"
        },
        "item": {
          "id": "67e86f6b-1ad2-4931-b152-121a987b899e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fae3ec16-1aaf-471e-9511-ba445005d0ac",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "70268dd0-97fb-4b74-a699-067b280437c0",
        "cursor": {
          "ref": "3d9ece84-0230-4aa9-8a6b-28f7d1809715",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e7052393-78c7-4fb5-bcfa-4bd27be61404"
        },
        "item": {
          "id": "70268dd0-97fb-4b74-a699-067b280437c0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "73b9b6e0-1432-4e4f-b454-f120c6f532cd",
          "status": "Created",
          "code": 201,
          "responseTime": 109,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff2d7c1-b8a4-4c04-a24c-0cd4c6714c1d",
        "cursor": {
          "ref": "45d5a46d-6b2e-4e90-b638-477a8628858e",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b432f627-2f24-4c50-9579-5463df383e54"
        },
        "item": {
          "id": "4ff2d7c1-b8a4-4c04-a24c-0cd4c6714c1d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6de38fcc-2d7d-487f-8b46-f2c8cbe6d861",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "289c8b83-5b85-4d75-b769-0d9a6aeecc9e",
        "cursor": {
          "ref": "cd412a49-1e52-4bf1-89c4-68b12fc6c122",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d6f7ca6a-49d8-4a12-85b6-48215e13bc63"
        },
        "item": {
          "id": "289c8b83-5b85-4d75-b769-0d9a6aeecc9e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e4e5521a-b544-42b4-bc1c-4dc777496ed7",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98f22fd-57fd-4c2f-b75b-f99ae49ecf7e",
        "cursor": {
          "ref": "fc4bd531-b16f-4de5-94e8-8134ce73d072",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "17a3bd3f-8c45-4e7b-a564-a4dc22600fbe"
        },
        "item": {
          "id": "f98f22fd-57fd-4c2f-b75b-f99ae49ecf7e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "87d09378-da40-4189-8642-5e1a3a1429a4",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3bbc71e-f67d-472c-a80e-4d78b843026e",
        "cursor": {
          "ref": "0c50b198-7478-48b5-82e2-7c1efb51c3be",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7b7b6644-323a-4ad0-9e48-bf2bcd2466dd"
        },
        "item": {
          "id": "f3bbc71e-f67d-472c-a80e-4d78b843026e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1e16b8e6-94b3-471a-9b30-f8ad361bedfc",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc3253-3db4-4a8d-bd6c-806f52525123",
        "cursor": {
          "ref": "49bd78ab-e446-439f-831a-d4cb1cfea0ce",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7daf5a4d-1ee5-4315-a935-f4d92d913795"
        },
        "item": {
          "id": "24bc3253-3db4-4a8d-bd6c-806f52525123",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0e22d600-a164-4f86-940d-9cb45088d0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f46034d-fad6-4569-a5d5-894d476b5bcd",
        "cursor": {
          "ref": "06ecde5a-1ec6-47da-b3f3-54ee0898835a",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "45aa12fd-7b8a-45b5-b75a-49238967a2e1"
        },
        "item": {
          "id": "8f46034d-fad6-4569-a5d5-894d476b5bcd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cfc406ab-b166-4c88-9f03-65d21c79107c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfda2ae-e2a6-4558-abb4-0027ff258a8a",
        "cursor": {
          "ref": "9f9a76a1-6626-43f3-b326-daf5a6117198",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2699f749-6c82-49ab-ad79-87174bf7116c"
        },
        "item": {
          "id": "0dfda2ae-e2a6-4558-abb4-0027ff258a8a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "97cc1403-971d-44f7-9170-66d8ef91ecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f36c37-0bf3-4b60-9ff7-4c2449cb4731",
        "cursor": {
          "ref": "5e651485-91fa-45c4-9c87-07f108216353",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e046dcfc-1c3f-4a9b-a384-5f8ad9e3a18a"
        },
        "item": {
          "id": "87f36c37-0bf3-4b60-9ff7-4c2449cb4731",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cf2df308-7914-4b55-9ba0-e3f725c838af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1229ffc9-0ff0-4062-aff4-a90296d002b4",
        "cursor": {
          "ref": "0ec1814a-c888-4342-b640-448871c14db4",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "650492c2-06fd-4b06-8a88-f15074ee2e85"
        },
        "item": {
          "id": "1229ffc9-0ff0-4062-aff4-a90296d002b4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1d15bb89-b307-483e-b2a0-3770bca51382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5fbecb-95f4-42ff-b527-bdd7050ef2a8",
        "cursor": {
          "ref": "2186d985-73c5-4d21-9619-defc92ef4330",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "416080f7-7c5f-413b-a6ce-dcc8939105b6"
        },
        "item": {
          "id": "ac5fbecb-95f4-42ff-b527-bdd7050ef2a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c7e792db-babf-47c0-9f4c-915af67541bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0035b0-65a8-4990-9bc3-9e7f7e22c824",
        "cursor": {
          "ref": "2283bccd-6367-4178-bccb-e44ad9591d0f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "31ccbc1a-9c70-413f-aa6c-9721c9b64840"
        },
        "item": {
          "id": "1a0035b0-65a8-4990-9bc3-9e7f7e22c824",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7b62dadc-b6d9-4c34-8abe-7398bb0ff5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3952142-6ff5-46b9-98f0-aa99ce35e651",
        "cursor": {
          "ref": "6e0ebcf9-8d23-4807-a285-7f2d74032473",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "33520498-85a5-4f1d-849a-36d9484afd02"
        },
        "item": {
          "id": "d3952142-6ff5-46b9-98f0-aa99ce35e651",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6dd08c2d-903a-46f4-af3f-edb97648a61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f62b37-ba4e-44e5-9975-60517fd8ab23",
        "cursor": {
          "ref": "dfae11bf-bd06-4abf-9bef-dcf1e140aac5",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "589858a7-321d-4506-aa5f-a68606d1f83b"
        },
        "item": {
          "id": "91f62b37-ba4e-44e5-9975-60517fd8ab23",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b7547fe6-9f44-4b5d-9059-5469ba81a96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2089882c-ceff-4606-8803-d0bbe6ce2374",
        "cursor": {
          "ref": "3d1ceae9-8ec7-4ac6-a051-75a7323cd8ee",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "46d699cf-958e-43b6-9cb0-da69fff16673"
        },
        "item": {
          "id": "2089882c-ceff-4606-8803-d0bbe6ce2374",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6dd796b7-7a77-4c0b-88de-252111705671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b3771-e557-4f82-8aeb-018fa7589458",
        "cursor": {
          "ref": "7e20490f-faf3-4944-bc9e-9b68e8e873b7",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3d520713-5ff9-4993-ac48-3955d863e738"
        },
        "item": {
          "id": "385b3771-e557-4f82-8aeb-018fa7589458",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4a87741c-ad00-4fd6-8fec-7a4411806831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1807c22c-59b6-4122-bace-4dd5b690df8b",
        "cursor": {
          "ref": "7474b58c-cfb8-466f-9871-fe7a1fc9a600",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e3d5fc9c-38cf-44ef-8fab-3e28e9aca66a"
        },
        "item": {
          "id": "1807c22c-59b6-4122-bace-4dd5b690df8b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dcd5eb36-8b3f-4392-a5ec-de0e76fb12fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3858e8ed-3860-4732-bdfd-3ea84a3124d2",
        "cursor": {
          "ref": "9dbdc0e4-bd7b-48d4-b6c1-9360276db24c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94efac6a-5115-4b03-b96d-af5a73550f2d"
        },
        "item": {
          "id": "3858e8ed-3860-4732-bdfd-3ea84a3124d2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b224b7cf-9527-404b-b468-e6ccfefbdf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d527b15-e3fe-4c7d-a0a1-61f58cad55da",
        "cursor": {
          "ref": "d3409a24-8960-4950-b4d3-d0e504eec7bf",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5aa0d538-ce9c-4764-9515-888b2471534b"
        },
        "item": {
          "id": "4d527b15-e3fe-4c7d-a0a1-61f58cad55da",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "57f0f4b8-0ced-4ebf-8e3e-c4b6742d6c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37af2a6e-8566-4021-8fa6-854c4ffe2cba",
        "cursor": {
          "ref": "7745fc01-16cb-4dd4-8b7c-4d4f53e32098",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b8bf7966-4a21-40f9-ae34-ca95366072a4"
        },
        "item": {
          "id": "37af2a6e-8566-4021-8fa6-854c4ffe2cba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4489aae1-bed2-48ab-a873-67b6278c4daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94515fbe-398c-4d7e-957b-08e905cef6a1",
        "cursor": {
          "ref": "fa185561-26d6-48a5-a650-796e86042740",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3b04a53e-9c4f-4475-b7e7-8ab14dcb32f0"
        },
        "item": {
          "id": "94515fbe-398c-4d7e-957b-08e905cef6a1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "89d1a33c-4d36-4801-acfc-15c6e7b66c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07ccddd-3498-4564-9edf-9079c7fa9951",
        "cursor": {
          "ref": "a0b629f9-49b0-4625-b5d5-3babb162d0fc",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2d1faec4-9e0a-4a52-9a2b-3e0c9fe06015"
        },
        "item": {
          "id": "f07ccddd-3498-4564-9edf-9079c7fa9951",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4abc5d63-9a03-4317-8c4f-03f9bed1c594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28113aa1-52c9-440f-a2c7-0df3f9577908",
        "cursor": {
          "ref": "62e70983-b272-4395-bd39-e00f70769180",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3b2a9537-0971-41f3-b59b-73c0fd7be9a0"
        },
        "item": {
          "id": "28113aa1-52c9-440f-a2c7-0df3f9577908",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8e65c9b8-4ed7-4965-8778-be1cb6cff2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8e2383-a27f-4f28-90d9-13fcdd4efc02",
        "cursor": {
          "ref": "2ce68b2c-44f9-4ef1-a6a1-e799c33c18de",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fad5546d-f453-495c-9123-4d7563ff7647"
        },
        "item": {
          "id": "ee8e2383-a27f-4f28-90d9-13fcdd4efc02",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "104a2389-1d82-4af3-b2f9-aae841aaa261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b897fea-139a-4700-8dcc-2ec51619c80c",
        "cursor": {
          "ref": "561dcb32-1307-4f69-9f10-a6569a136a82",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a8ffb6d7-2ab9-40e4-9b25-5fa7278bd8e3"
        },
        "item": {
          "id": "3b897fea-139a-4700-8dcc-2ec51619c80c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3458a1d0-4d02-4076-a3ca-07498414b463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ffecfc-0f4d-44a1-a4da-f846b1b41ff1",
        "cursor": {
          "ref": "e638385a-81b4-4be8-ad7b-36604f5ca630",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "58fa5795-38c9-4a1e-938d-27fd4e1174bf"
        },
        "item": {
          "id": "59ffecfc-0f4d-44a1-a4da-f846b1b41ff1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b0a67c89-484d-498a-94ed-ef002bf4babb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8329d11e-3bd5-4008-8d16-010558af1d8c",
        "cursor": {
          "ref": "3792180f-3b32-44a5-8ad5-9da77418d67c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9003a494-28bb-4d1a-84ce-dd08e52426b0"
        },
        "item": {
          "id": "8329d11e-3bd5-4008-8d16-010558af1d8c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c94082d7-f32b-42e4-be5d-fa30c063fa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e545fc36-a7d8-4a53-ab82-61f47487255b",
        "cursor": {
          "ref": "29d8a173-da51-4c74-a968-9ceab906f21d",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c083fd15-b3c0-4f0f-a660-655025c51755"
        },
        "item": {
          "id": "e545fc36-a7d8-4a53-ab82-61f47487255b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8f0eb88b-10a7-49bc-9297-58832f949bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb520d66-407f-4024-9f46-2004f0278242",
        "cursor": {
          "ref": "ff53c3f9-fcf7-412a-9c90-cac63d0b2c3e",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cb64bb28-636e-47b7-8737-8adea32b7859"
        },
        "item": {
          "id": "cb520d66-407f-4024-9f46-2004f0278242",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6d735804-7f29-46c9-b9d9-c7b7b67356d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16029ed-f139-4cc5-b736-b8a801c70295",
        "cursor": {
          "ref": "38dcdc4a-f836-44c5-a53b-dc6721748b1d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7a72b93-e2e1-400e-b0fd-a8947d47f5ac"
        },
        "item": {
          "id": "c16029ed-f139-4cc5-b736-b8a801c70295",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41b9e6a8-bb4d-400c-8907-cd204adcf2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dcdf67-35fe-4236-8620-6c55a9d3c845",
        "cursor": {
          "ref": "fb791a9d-c5bb-4bf3-8e17-7f9ddeb9bc98",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "538b6ffa-23cd-4f67-895d-d75afb643fa3"
        },
        "item": {
          "id": "40dcdf67-35fe-4236-8620-6c55a9d3c845",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "951176c5-7642-4588-b69c-bbf2591d893e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f91ef83-c697-4b30-ad57-eb19e532ed65",
        "cursor": {
          "ref": "1f5386b0-aabc-4630-bb6f-243087584d7c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bf6c0359-4fca-4af4-9cbc-b23a3d568a80"
        },
        "item": {
          "id": "2f91ef83-c697-4b30-ad57-eb19e532ed65",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e59c6849-b65e-49bc-90ef-d5c6c626b7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696f7835-3f49-4bbc-a6fe-5555df10e6ea",
        "cursor": {
          "ref": "2e9898be-5630-4077-9708-6c91f59c6d7c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c7119b15-5ec2-40a7-b002-f69ed8fa8e85"
        },
        "item": {
          "id": "696f7835-3f49-4bbc-a6fe-5555df10e6ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c1612274-f324-4794-b8a4-35cec147ff26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82a2f3e-ce3a-48c5-890b-4b93de83ae8a",
        "cursor": {
          "ref": "daad1432-53e4-47d6-be69-102c87d4ad12",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "70ac8aa3-23f0-4e59-9d2f-a94d11dace51"
        },
        "item": {
          "id": "f82a2f3e-ce3a-48c5-890b-4b93de83ae8a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "df79941b-6f5b-460e-a351-882e3ba96a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a60dc6b-0612-4488-9bd9-fe762a01e667",
        "cursor": {
          "ref": "11fabcc5-c3a2-4844-9b96-324dd2ee3594",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "481ea513-35e2-4c31-a0fb-f3a19c72c29e"
        },
        "item": {
          "id": "9a60dc6b-0612-4488-9bd9-fe762a01e667",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "61bfa922-876f-4419-93fb-859a99e05a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f80fe5c-5b55-4313-b811-9eb266ef5f73",
        "cursor": {
          "ref": "2d585d79-fb99-48bb-9ca6-e35dbc0e7c3c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "524654b6-1134-4bbe-8145-844598d24ecd"
        },
        "item": {
          "id": "0f80fe5c-5b55-4313-b811-9eb266ef5f73",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "add43601-65cf-417e-bbeb-9a951feb61c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349ad7e6-ec2b-4cb3-9dbc-ccd46397f13e",
        "cursor": {
          "ref": "88378cac-7320-4cc3-9532-596225eaca50",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5d821561-8fe9-440a-bea4-7c5c212c0394"
        },
        "item": {
          "id": "349ad7e6-ec2b-4cb3-9dbc-ccd46397f13e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f21a3225-fa8b-4c27-bd16-6ae4493c6316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6aeb3b2-1982-428f-8c44-70b85cf2b01e",
        "cursor": {
          "ref": "69639a00-e318-41f3-a98e-f26c4195f9d1",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fef139ae-7dcf-4851-a536-2e9b2d77757f"
        },
        "item": {
          "id": "e6aeb3b2-1982-428f-8c44-70b85cf2b01e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b0333a89-3bdd-49e9-af1e-edb77eeedcb1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf422e8-d5da-4f51-8eb4-aa8c681a68dd",
        "cursor": {
          "ref": "b972777c-66f0-4b86-a1da-408c9a1a4c59",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e1d1397c-7e0a-4ce4-b77e-aca395bf859e"
        },
        "item": {
          "id": "2bf422e8-d5da-4f51-8eb4-aa8c681a68dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "71986f6e-7de3-4aee-b758-59fece796961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11479bf-66f5-414f-a0ea-c4f98681e3a8",
        "cursor": {
          "ref": "dc510524-8555-4336-b341-9a5e196e0eee",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "96023107-01f5-4321-9adc-55166b310a35"
        },
        "item": {
          "id": "f11479bf-66f5-414f-a0ea-c4f98681e3a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "247dda20-8a2e-493d-b59f-3b16d82dc899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297718c3-279e-497b-ac5b-9284032507e7",
        "cursor": {
          "ref": "1bb09901-c614-43ad-aa89-8694cb1e686b",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5ec29db3-591f-45b6-9ac4-b86cfc0a6fba"
        },
        "item": {
          "id": "297718c3-279e-497b-ac5b-9284032507e7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f4e18c90-4da3-473a-b45f-cd32620c6d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111bb814-a4a0-4804-87ea-45fb41d661aa",
        "cursor": {
          "ref": "ea819cac-2f79-4b54-a878-b509d1d550f0",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "02827b7f-3df0-48e8-b13e-7904f1824b81"
        },
        "item": {
          "id": "111bb814-a4a0-4804-87ea-45fb41d661aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b5e140e8-5eb8-4c68-b8c2-ce7327ebdf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d5361b-b685-43fd-b6b5-1366f7bdcc8a",
        "cursor": {
          "ref": "2076e396-c230-4ce2-bf07-a973c2ffbaf3",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2a16d456-03da-4186-a40c-003b04aecfb8"
        },
        "item": {
          "id": "66d5361b-b685-43fd-b6b5-1366f7bdcc8a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "90b27acc-5fed-4ee5-87c6-fd125a7ded5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b111bd6e-1c55-4ae3-84ab-69486704f2a0",
        "cursor": {
          "ref": "1a563d2a-130b-4a53-8124-793b1d301584",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3880c4d2-d364-4063-a252-ee06419b3f3f"
        },
        "item": {
          "id": "b111bd6e-1c55-4ae3-84ab-69486704f2a0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a44b1cc3-d218-402c-8a74-95dc44bb2626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb00822-7ce1-4faa-abd7-543a28df5af6",
        "cursor": {
          "ref": "69262dd0-e423-4865-ab5c-f177162afebe",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8e0eec8a-93db-4d36-ad6d-1b360e8cb5b6"
        },
        "item": {
          "id": "1eb00822-7ce1-4faa-abd7-543a28df5af6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3fbd8adb-d7ff-4cea-a431-d5d27004738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb644fc-4449-4667-ab92-7cba20c534ee",
        "cursor": {
          "ref": "d75bf952-3d50-4682-b552-8bd681edb859",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0c395ebd-c51f-4cee-b517-91919d387ae0"
        },
        "item": {
          "id": "dfb644fc-4449-4667-ab92-7cba20c534ee",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "284534d4-322e-4b62-927e-d080ee0a2a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4c377c-c92e-4057-b124-8b184a17ca9e",
        "cursor": {
          "ref": "c5751548-e590-4539-b051-6e2b436794d6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9543ee47-342c-4d4b-80f8-221815a317c1"
        },
        "item": {
          "id": "7c4c377c-c92e-4057-b124-8b184a17ca9e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d5e8d741-d462-4770-be4f-e62c2a320258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f6af65-9102-4f90-9ad9-c838bd680bc1",
        "cursor": {
          "ref": "b9f3a26d-98b7-4c1e-8bb9-46f30295a857",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9c91e457-321f-44e1-b88f-3677125b6754"
        },
        "item": {
          "id": "a6f6af65-9102-4f90-9ad9-c838bd680bc1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53cd7bb9-b4cb-4482-8013-90b0b9556973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbd65c0-5536-407d-bbbc-2ec050416d85",
        "cursor": {
          "ref": "62a1dc31-b926-493d-8aba-279f43989a28",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3de92866-7aad-47bf-8993-8d78afc115a7"
        },
        "item": {
          "id": "abbd65c0-5536-407d-bbbc-2ec050416d85",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "26cd497a-ef9f-46b5-aed2-9df13a400db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b88d71c-a376-4770-9693-fe42b33d7c15",
        "cursor": {
          "ref": "dcf73099-1d70-4771-a065-fab81a5e2214",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e61a044c-37f8-4e71-a2b3-321eacb0650b"
        },
        "item": {
          "id": "6b88d71c-a376-4770-9693-fe42b33d7c15",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "04ca5297-69b2-4ede-9ab6-7dea246c3a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0214cfa-aa38-4534-91d4-d5911e3128ac",
        "cursor": {
          "ref": "f86a0d55-fff9-4f2e-b3a6-71ee861b5290",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "676a189f-e88a-4f17-a9c8-901127d4abfc"
        },
        "item": {
          "id": "c0214cfa-aa38-4534-91d4-d5911e3128ac",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "572ee323-a07b-42a3-9cff-63099a4cbb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5ec972-9095-4763-a677-abc081c9e79c",
        "cursor": {
          "ref": "64069198-d03d-49e4-bfd7-6497528f8e1f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a312d580-2544-44f0-a3cd-2a5f49bb0d4a"
        },
        "item": {
          "id": "0b5ec972-9095-4763-a677-abc081c9e79c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f45b4b73-2f31-472f-8662-2a6680454740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99725c0e-a5fe-4c66-a453-a7dfbf54168c",
        "cursor": {
          "ref": "fad6512d-65d2-45e9-89e2-ee0264479bd0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b7ac39f7-5d53-4f1c-958d-4c59ba2f1064"
        },
        "item": {
          "id": "99725c0e-a5fe-4c66-a453-a7dfbf54168c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dcb2b0f8-73ce-485d-9f01-de14bbdc0095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8aa7e3-19ac-4851-a56f-f014c68583d8",
        "cursor": {
          "ref": "f29fd503-abf5-4710-981f-a268827eead0",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "04c41525-5bd7-4fd7-8d3a-19108c9c4a58"
        },
        "item": {
          "id": "4e8aa7e3-19ac-4851-a56f-f014c68583d8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9374582-492b-45d0-b80f-507802501f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370acc4c-dc13-4de9-8ccb-5bf3da930c39",
        "cursor": {
          "ref": "c1e8594c-b99c-4076-9ff7-7c9fac866a01",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "42a85f63-dd21-4ed0-8120-e1e1b2c6f376"
        },
        "item": {
          "id": "370acc4c-dc13-4de9-8ccb-5bf3da930c39",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5915b9aa-5ed4-4599-bb9e-eeba6555102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b00cd0-d8df-4e2d-bda5-a4debdf09479",
        "cursor": {
          "ref": "f1af523a-f56e-46f3-88f9-a5510d5a8574",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "eb5961e6-4010-41a4-826f-ef07f2cd90c3"
        },
        "item": {
          "id": "71b00cd0-d8df-4e2d-bda5-a4debdf09479",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aa0224b7-3862-4697-be0a-d10062b46c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b8963d-123f-47c4-947d-4778ee00114b",
        "cursor": {
          "ref": "f4aded70-3686-4462-b0d1-1dfd7226683e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6fa73671-2c50-4c69-9048-3d29406dda4c"
        },
        "item": {
          "id": "03b8963d-123f-47c4-947d-4778ee00114b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c4fde069-08e0-4113-8b86-d001dd045a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bacafd2-3e5f-4c70-8664-194160bd5ada",
        "cursor": {
          "ref": "195e740e-043b-4291-91a6-a71d49497486",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eebe94a1-8266-4ad9-bc4a-d90eaca8eec9"
        },
        "item": {
          "id": "9bacafd2-3e5f-4c70-8664-194160bd5ada",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7f26ac7b-3023-4a40-b5e2-a0d0f2553185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39848ac8-ac53-4d43-8d06-deaa2f234735",
        "cursor": {
          "ref": "78a74f71-c4c4-4131-abf1-fc168c382096",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a7346ae2-6559-4212-8cd1-61c4ae7c6b6e"
        },
        "item": {
          "id": "39848ac8-ac53-4d43-8d06-deaa2f234735",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f8071483-4d9b-4a4a-8e2c-59649d603bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531ffb0f-caa8-4f91-ace0-fb905a461c5a",
        "cursor": {
          "ref": "3d3aad9c-4d37-48ab-9ecf-3f77f97fe347",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7531aed1-e0dd-4d0d-b0a3-e35322e3f072"
        },
        "item": {
          "id": "531ffb0f-caa8-4f91-ace0-fb905a461c5a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f1074159-5261-4221-b1dc-731eab46bccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840646ed-74e6-45ef-81c6-668db721965f",
        "cursor": {
          "ref": "9c0ac0a3-1d86-46b8-8f8b-69efd5dfd430",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0458025f-a851-4d59-a900-247e2bd047c9"
        },
        "item": {
          "id": "840646ed-74e6-45ef-81c6-668db721965f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7eff31ea-29ad-4830-90dc-4420b3bd31e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ae3cd4-0eb0-4ad5-a824-11af8f285631",
        "cursor": {
          "ref": "8119c0d2-92a1-4d61-af47-99dee3c27ec1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3986385f-d34e-4be7-b35b-c1cdd2f3f628"
        },
        "item": {
          "id": "41ae3cd4-0eb0-4ad5-a824-11af8f285631",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f60edba3-aff7-42f8-825a-c50b0a71490a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18eee29-a8cf-41ad-addd-671166d67e77",
        "cursor": {
          "ref": "2d9e9045-a1b5-4a6e-b6e4-8fa1b01bf3b1",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a14a247e-d018-4687-95f3-8eca399d2db2"
        },
        "item": {
          "id": "b18eee29-a8cf-41ad-addd-671166d67e77",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a655350f-122c-48da-b3a2-1c7ba1c098e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d8d0a2-4100-42db-b0da-1c985f3d97d3",
        "cursor": {
          "ref": "e5c69850-06b2-46fd-86a7-bf4c10351879",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "133f9031-3145-4baa-acb6-95461a8c5174"
        },
        "item": {
          "id": "28d8d0a2-4100-42db-b0da-1c985f3d97d3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "446b969b-28c8-4300-a9c0-5a8d6d65e674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4d22f3-a685-44d0-ad6b-780d8d4dac59",
        "cursor": {
          "ref": "d9a46e51-8a16-400e-b7d5-afb194bec16b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c18a89be-db6d-4733-98d5-d2c16312295e"
        },
        "item": {
          "id": "ce4d22f3-a685-44d0-ad6b-780d8d4dac59",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5e2608fb-d0fa-4dae-9d0e-78989ae288b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ff69e6-144e-404e-8979-3780b33087a2",
        "cursor": {
          "ref": "a97eccfc-1933-4b33-8004-e6eb72921686",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e8e0a48a-a00e-42c8-86f8-36aa6a4787de"
        },
        "item": {
          "id": "37ff69e6-144e-404e-8979-3780b33087a2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "85fad10b-deaa-4496-9f2a-278f6c5f103a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ce86c-8cca-45d7-bd28-4cc9553bcf16",
        "cursor": {
          "ref": "dfeb1131-23b7-48e6-81bf-0a3662023218",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "67898fce-c17f-4aa5-96d6-bdaa98b7047c"
        },
        "item": {
          "id": "d59ce86c-8cca-45d7-bd28-4cc9553bcf16",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de9ad3b0-3a58-431e-a0b2-38135e739bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cce249-86e2-45ad-a00f-fefed39e6850",
        "cursor": {
          "ref": "291584ae-c1bd-47a1-a2ea-dca396774547",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "95178947-d8fd-446e-90d9-d9a9058dc671"
        },
        "item": {
          "id": "61cce249-86e2-45ad-a00f-fefed39e6850",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6df5b056-cb1c-451c-bb88-2e604b86a2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bf6d66-541c-4a98-83c8-65d178d173b6",
        "cursor": {
          "ref": "f9b884a4-15bc-416d-87e4-51a2d70debae",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3ed45e9c-395b-44cb-925b-34521d4173ba"
        },
        "item": {
          "id": "f7bf6d66-541c-4a98-83c8-65d178d173b6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "00b68dc7-8e79-4b36-977d-5507a52ba63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812080fd-cf1e-43b5-9393-7dac59bc76a0",
        "cursor": {
          "ref": "3d528b40-cf37-4839-bc46-9219a62f2941",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c602efb4-53aa-4d80-8f2b-187ffe52d31c"
        },
        "item": {
          "id": "812080fd-cf1e-43b5-9393-7dac59bc76a0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dab215a7-ecb9-4ca8-bb6f-59e3b76203eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c59cd3c-bdad-447e-b4c8-6f4d18e64ec6",
        "cursor": {
          "ref": "3e6ab6d9-64bb-4bbc-acbe-880833129994",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fec15834-8e9c-46da-82d0-533759aa2cba"
        },
        "item": {
          "id": "5c59cd3c-bdad-447e-b4c8-6f4d18e64ec6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "acc3f4c2-0fc8-44a6-9439-4860d1b34d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aeecd2e-7adf-485e-bca1-280a9f0f0255",
        "cursor": {
          "ref": "5d2aac50-0f46-466b-9b12-76bd987fe05a",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3419cd9e-d41f-49b5-9129-7168946ca7b4"
        },
        "item": {
          "id": "3aeecd2e-7adf-485e-bca1-280a9f0f0255",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "595b6044-242e-48f6-aacf-972436e6e225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0669ac-3a31-431f-9bbf-ba5427886670",
        "cursor": {
          "ref": "60151f40-bad7-41e7-ab78-37b9448d14bc",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "89b0633a-b7b4-4c1c-b5a2-8716bba3dc7d"
        },
        "item": {
          "id": "ba0669ac-3a31-431f-9bbf-ba5427886670",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "487ae385-f561-4741-9353-f60ca92438a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d559ca4b-8521-425f-8fc8-8902d807c5bd",
        "cursor": {
          "ref": "ce5225ea-4f06-474e-9b23-1a549d34a41c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b9266931-b42f-43e2-b672-6ca7f441eefd"
        },
        "item": {
          "id": "d559ca4b-8521-425f-8fc8-8902d807c5bd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0edc70ef-fbe6-4a39-ba13-30e3dbd04cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4dd736-acff-42c6-b46a-1a372a783058",
        "cursor": {
          "ref": "700e03fc-2be8-49ee-86c0-3b4d6187128c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "04e87e6e-5661-498d-b758-74a85a8a145a"
        },
        "item": {
          "id": "1f4dd736-acff-42c6-b46a-1a372a783058",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dd47504e-1343-4824-aba4-f05c16f5943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a5a77c-916c-48ef-89a8-94a8ca5a7767",
        "cursor": {
          "ref": "7ab2f978-2b96-4b5b-b530-a92d2c797909",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ce96631a-1e05-40ad-b339-f197644b59fd"
        },
        "item": {
          "id": "23a5a77c-916c-48ef-89a8-94a8ca5a7767",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5ee543a6-f13b-46e0-8f17-edd3bbdb36c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2042d6d-87d6-4a06-94a8-15c17f6b5af4",
        "cursor": {
          "ref": "2bff42d9-d25b-4691-b66f-548788475593",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dd799c3e-7442-424f-b776-3fb13aced896"
        },
        "item": {
          "id": "c2042d6d-87d6-4a06-94a8-15c17f6b5af4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "84383953-4650-4d39-b4bf-2a9c5dfe67c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61193fe-93c3-403d-ad43-220c85ee3ff4",
        "cursor": {
          "ref": "8e76a003-ec52-413d-8a28-41055a6f777e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e6ceda32-aa95-4313-9d10-c130d81f5610"
        },
        "item": {
          "id": "e61193fe-93c3-403d-ad43-220c85ee3ff4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "99912f9d-9412-4d07-8a4d-69cf7a4ca15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71a0350-0bf6-4294-889d-2e516324f516",
        "cursor": {
          "ref": "89d2c779-15e0-43d3-80b0-df08305345b4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "80b9d637-c2b7-457c-8866-d1deb9718fc0"
        },
        "item": {
          "id": "e71a0350-0bf6-4294-889d-2e516324f516",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "246de6b1-c771-4339-81e1-280de1c3151b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144b0846-19c6-4410-886d-d1ad91fdbd84",
        "cursor": {
          "ref": "54ccf312-c70d-46e2-92f3-0c481c9cd3ba",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "01033d59-2822-4ef9-b838-72b1fd837579"
        },
        "item": {
          "id": "144b0846-19c6-4410-886d-d1ad91fdbd84",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e5708091-11b7-4d40-b25c-f688c2a729d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f8a173-6484-49b7-abae-e87866f20239",
        "cursor": {
          "ref": "82e339a0-f31b-42fc-9bdb-dae972f56d19",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3bf75b33-768f-4f35-8b47-51a09f0a17d3"
        },
        "item": {
          "id": "b9f8a173-6484-49b7-abae-e87866f20239",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f3763a5e-9d86-43bb-80b4-95323ae5ccfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39294a4e-1fbf-49d7-a54f-d7def075301c",
        "cursor": {
          "ref": "84992518-71df-4129-9fa3-97e3575a2f28",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "867b1eff-e06e-4dc9-bf93-5d2288edcc88"
        },
        "item": {
          "id": "39294a4e-1fbf-49d7-a54f-d7def075301c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0babb10b-5fea-4b6a-8a27-4b00ccde3eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64e8aa3-f08c-4f91-843b-aaecd73ccb9f",
        "cursor": {
          "ref": "2dd742fb-3f45-4895-840f-79177ce5c164",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "54986810-5110-4b06-a872-e40b14f56884"
        },
        "item": {
          "id": "f64e8aa3-f08c-4f91-843b-aaecd73ccb9f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0fbb46cf-7848-4c9f-8a08-3b8319b1739c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30e1a80-0542-466f-9909-a09aed2c00a8",
        "cursor": {
          "ref": "84c20436-937d-4181-bb3c-d89823e24014",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9deeeb8d-8caa-4b1b-b4be-dc2c5407f13a"
        },
        "item": {
          "id": "c30e1a80-0542-466f-9909-a09aed2c00a8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2f68d16e-018e-4c7f-9d06-421ea17f2b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29086323-a90d-4109-ac4f-b273c11e776f",
        "cursor": {
          "ref": "54aad3a8-9630-4a7e-906a-a0c9adf28ede",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3b36d7ff-52bb-4d5c-b653-a2189c2f5de0"
        },
        "item": {
          "id": "29086323-a90d-4109-ac4f-b273c11e776f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3e55787f-57cb-4007-85fd-32602cde70c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764b97eb-2cfe-47b0-a934-d61edf1fc599",
        "cursor": {
          "ref": "ce5f7776-4eb0-4950-bace-badd112fdf03",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d1900692-8694-4ea6-a5d7-0bc41c4bce3f"
        },
        "item": {
          "id": "764b97eb-2cfe-47b0-a934-d61edf1fc599",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2dc49c45-73c6-4f89-83bd-018c2c4a7547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16e0978-5e29-4b4e-bc6d-8c6b6f40872d",
        "cursor": {
          "ref": "68c87b39-ad03-45d6-9bf9-b736f1a46191",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "625f00e8-f330-46cb-8f9a-106355e1a2e5"
        },
        "item": {
          "id": "d16e0978-5e29-4b4e-bc6d-8c6b6f40872d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "03572c41-caa7-43a3-8c3a-f058dbac2f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9f6c82-2d37-413d-9489-6581048fb3d3",
        "cursor": {
          "ref": "2c19e6cd-7807-4e6b-b3bf-289ea8d583ed",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c228ff93-86e3-470c-b641-ddb04157c6e6"
        },
        "item": {
          "id": "0e9f6c82-2d37-413d-9489-6581048fb3d3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7ea5ef37-5ba8-4ccb-b620-0d62cb7aa7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a99f99-6483-4a93-a2ad-4eca4da8e4b7",
        "cursor": {
          "ref": "b2bcde63-1307-4edd-81a8-0afb9ee9b0a3",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "63a6eddc-890c-49a1-9cab-f0f773e65cd9"
        },
        "item": {
          "id": "14a99f99-6483-4a93-a2ad-4eca4da8e4b7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c17c2944-45dc-42b3-a7af-a1ecc4732477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635807e9-e131-41d5-8d1d-2f303438ae6c",
        "cursor": {
          "ref": "f6be8e3e-4fae-40b0-bbe2-ea4e122d674a",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2447bd72-ed2b-4dee-99dd-0e6c5112298a"
        },
        "item": {
          "id": "635807e9-e131-41d5-8d1d-2f303438ae6c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7e2a9eb4-ae18-428c-90f9-0758359b2464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7120f6a3-3467-4a0b-bf19-a8b44db7b37c",
        "cursor": {
          "ref": "07534ce2-a709-471a-b1e5-8ad36bb9b9d6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d1883c2e-645a-4a3e-8cac-2711b8685127"
        },
        "item": {
          "id": "7120f6a3-3467-4a0b-bf19-a8b44db7b37c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6805a2b-be19-484a-8128-52c985052ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2102d9-bf82-45c9-a2e7-c68af9dbc0d2",
        "cursor": {
          "ref": "6286c7b5-5fba-4f4d-8436-e21fd5a54652",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7fa06616-d6d6-47c0-9176-5df129f8427c"
        },
        "item": {
          "id": "6a2102d9-bf82-45c9-a2e7-c68af9dbc0d2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a26628a8-47c9-47cc-bbee-3e0e22012744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387ca62e-488c-472b-a348-93328dee01e1",
        "cursor": {
          "ref": "0a868a3c-6f58-4384-9263-e20731367a7d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bb43c501-216e-48b6-84d3-a8388c7d2d97"
        },
        "item": {
          "id": "387ca62e-488c-472b-a348-93328dee01e1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "60ed24bd-d713-46ad-a602-503e1c312e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d49151f-2abc-488c-8ac4-2ffb8326ca64",
        "cursor": {
          "ref": "bf51d021-bae4-441a-80d7-57a0a7062e1e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2856099d-367d-4024-bd33-dfe14977eda4"
        },
        "item": {
          "id": "0d49151f-2abc-488c-8ac4-2ffb8326ca64",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dd434355-a51e-4ea3-ab9c-68cec824565f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b3490a-2ebf-4a6f-83f8-9160a62e335d",
        "cursor": {
          "ref": "3d7589ad-162f-4c09-a6c5-05b5df288768",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "75472958-02c4-465f-b4d7-e0f0010ad2b1"
        },
        "item": {
          "id": "35b3490a-2ebf-4a6f-83f8-9160a62e335d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "aab4c562-2488-4af8-8e69-43ea21ebf1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ff6a46-3ec4-42be-9f60-73b9f62f34bd",
        "cursor": {
          "ref": "793090f0-b205-4c22-8f46-cf3dc797531f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "40836813-f120-4cc3-b76e-30451c8b72b9"
        },
        "item": {
          "id": "42ff6a46-3ec4-42be-9f60-73b9f62f34bd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2715c89a-ade6-4338-883c-69a49c0962a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ad1be5-944d-46b8-bdda-8e512f720286",
        "cursor": {
          "ref": "98fbc453-0a73-43f7-a486-47b75d10fcce",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a37d1585-a6b6-49ab-af69-8ced6b15618d"
        },
        "item": {
          "id": "e5ad1be5-944d-46b8-bdda-8e512f720286",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7d04469b-4647-466e-871f-23b2b6f7b353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7845aad1-251a-4d04-91c5-9743eaf13312",
        "cursor": {
          "ref": "c206be3e-0a58-4770-8b84-4374e6a5b4b3",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c5ba662d-e2b4-4568-9003-c2bc00bfe0fd"
        },
        "item": {
          "id": "7845aad1-251a-4d04-91c5-9743eaf13312",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f9c6b6ea-d54b-4884-a484-7ddd4b0aa3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fd04e6-409b-41f4-99e0-d6cebb8d6a51",
        "cursor": {
          "ref": "ff7ecc92-6855-4bc6-8d47-75632801a9cd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d1fec472-1c1a-4b3e-9411-592c0674b9f5"
        },
        "item": {
          "id": "c3fd04e6-409b-41f4-99e0-d6cebb8d6a51",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b165213a-954c-4cc8-81ca-cf6d8d0b8ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdb81a2-527a-496d-830b-5433121a8cc8",
        "cursor": {
          "ref": "15cb4eb4-6494-42c2-9b3f-5f413d72e317",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "028a0f59-32f4-4d05-baee-3347ca083c86"
        },
        "item": {
          "id": "9bdb81a2-527a-496d-830b-5433121a8cc8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "768c2455-99c0-4f5b-9e27-4e938a5f6fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceecb0e2-f032-4f48-abc4-c070d8cc8431",
        "cursor": {
          "ref": "47f30513-70cf-4b8b-b00d-f82faa5ee1db",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1a014a65-68c4-45bf-a2b4-fb1a3b798514"
        },
        "item": {
          "id": "ceecb0e2-f032-4f48-abc4-c070d8cc8431",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "46d519e5-59cd-41ab-9212-47ff69d24dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8b719f-8102-4e02-9a86-18f05a4e0c77",
        "cursor": {
          "ref": "caabf0c5-e017-4a93-9b6c-244e18f38ef0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3d82d7d8-4f3e-404b-ae93-af80115c1ba6"
        },
        "item": {
          "id": "6b8b719f-8102-4e02-9a86-18f05a4e0c77",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f45cb7ab-a0b1-4638-b84c-aea3f9d5f53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44760f6-db0c-415c-af71-f4043af879f9",
        "cursor": {
          "ref": "0e66ba0c-59d5-4266-af51-37ddc11cbcc2",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "125e68ed-71ec-42cc-a163-897c5b84bf68"
        },
        "item": {
          "id": "e44760f6-db0c-415c-af71-f4043af879f9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0a5b82b6-2e27-4253-b134-b47cc7f01d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7018a7-82c4-43c4-b10c-ecbc49b8085f",
        "cursor": {
          "ref": "8b84f4f0-58c8-479a-b25d-192262c5f877",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5d577335-4500-46c8-812c-aa599b1099d2"
        },
        "item": {
          "id": "cf7018a7-82c4-43c4-b10c-ecbc49b8085f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "208a8e0e-87dd-420f-809c-5e333f9d96c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ec5a8f-f5c1-4525-8d2c-b66f70297c4f",
        "cursor": {
          "ref": "6506297c-fad0-4849-8076-215b2d52ef01",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8d6f26dd-b9e9-4656-a22f-6c163da7ac17"
        },
        "item": {
          "id": "63ec5a8f-f5c1-4525-8d2c-b66f70297c4f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8d2496c8-6ade-4bbd-9375-067add802dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20af1e72-02a3-43a3-80f4-5f402636c7f6",
        "cursor": {
          "ref": "2ab103a7-7be9-4499-859f-ba224e404f82",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "232fd515-8e38-4e13-8dfb-9e3741500355"
        },
        "item": {
          "id": "20af1e72-02a3-43a3-80f4-5f402636c7f6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "034709d3-a761-439b-befd-ffcc3a924ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e319df5-477d-46ca-8c14-367999fd18a5",
        "cursor": {
          "ref": "62b39ec3-202b-4084-b3c5-e46d7f1d49b6",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1834677e-0b94-4a52-bde7-64b7a4828002"
        },
        "item": {
          "id": "0e319df5-477d-46ca-8c14-367999fd18a5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a115b9a8-f535-4474-833d-8901792aa50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1bcb59-5083-4ddc-a34b-b83bbb148c56",
        "cursor": {
          "ref": "0d620a6a-fc4e-4262-845c-01dda5605b31",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "34605c11-7ccf-4926-b6a8-1a6b8244ca0c"
        },
        "item": {
          "id": "db1bcb59-5083-4ddc-a34b-b83bbb148c56",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7b86cb5f-e5c1-49f6-b5e7-e66f886fb653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0638ef09-3165-4bdf-b2b5-4e08de4a1a86",
        "cursor": {
          "ref": "2abd9e2e-fec9-4d20-9db3-5f861779438d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "459c1dc2-44f1-4f23-ac1b-379e4f27346e"
        },
        "item": {
          "id": "0638ef09-3165-4bdf-b2b5-4e08de4a1a86",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4bc046df-958e-4333-9cc8-72d09da7aa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612e3aab-5bc1-4658-83a4-6cc51034f185",
        "cursor": {
          "ref": "52c974f2-c765-4730-bc15-a044a230cbbe",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3620c60a-142d-41be-88c0-1b6e0b812ee0"
        },
        "item": {
          "id": "612e3aab-5bc1-4658-83a4-6cc51034f185",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e4bcdedc-fe53-4468-ba0e-4f83ab556103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e60668f-493b-43c9-882a-6b6de1296bc6",
        "cursor": {
          "ref": "818b08a7-efb0-4cb8-b71f-9e2db7ebeab8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d3fc3674-342a-4e2d-bc9a-98cc8a039f46"
        },
        "item": {
          "id": "4e60668f-493b-43c9-882a-6b6de1296bc6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bd4e2c8b-9603-40f6-a30d-8f043e72010d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf81d68-779a-4ff2-853c-99bad8354b1b",
        "cursor": {
          "ref": "4e250104-c5d7-4858-b2bb-606f815f4597",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "af42a53a-cb85-471f-a765-06db0dfcd260"
        },
        "item": {
          "id": "faf81d68-779a-4ff2-853c-99bad8354b1b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "65693772-d7c0-4962-8259-c40feac28cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338aea31-05a2-4ced-a149-77e5e9c9d4d6",
        "cursor": {
          "ref": "112782db-4225-416d-abea-929d1643e11c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "de904d5d-c3e4-4924-967b-9395ee40ce15"
        },
        "item": {
          "id": "338aea31-05a2-4ced-a149-77e5e9c9d4d6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5044807b-ac26-4ca2-8dc8-c3f7cf75fbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5edb26-de27-4283-932f-56ad64b524cf",
        "cursor": {
          "ref": "410417f7-e35c-4718-9304-489a7fc01519",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9153be45-43ac-4030-882c-7ba5e453e1f6"
        },
        "item": {
          "id": "7c5edb26-de27-4283-932f-56ad64b524cf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "639833dc-3a8f-427f-b431-26cc37c55fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddee6937-7142-43f4-9957-8c90898b73e1",
        "cursor": {
          "ref": "376a60fc-0244-45ec-808e-e78116184d7e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7df3368e-00dd-4ae2-a75f-4f06086f034e"
        },
        "item": {
          "id": "ddee6937-7142-43f4-9957-8c90898b73e1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "67604c8c-c0ba-4420-8e9a-83229b0c1833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb705c6-28ed-4f1a-b825-b41b617ab590",
        "cursor": {
          "ref": "3c224b8f-5489-4cbd-8666-93a34b21bda9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "31304880-975e-431a-87e3-2564b00169cc"
        },
        "item": {
          "id": "abb705c6-28ed-4f1a-b825-b41b617ab590",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aebfbd5e-6c99-4e20-96fb-2f5a5c5a1d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f2322d-5246-468f-af1c-27bdd0e2fdec",
        "cursor": {
          "ref": "465082f1-a990-45e5-8a01-c869fb825403",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a95fbc0e-08f5-45d5-a5ff-3af7e1d83995"
        },
        "item": {
          "id": "c5f2322d-5246-468f-af1c-27bdd0e2fdec",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e8a507b6-1b63-44b8-93c9-3ba29954c3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bbd8f7-f9fb-4bd2-a6a8-d4e765ed70a2",
        "cursor": {
          "ref": "bfea21c8-472b-456a-b126-62fd00cca4e9",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "191f3667-2ba9-46c8-ad39-a5e0d8a2ff29"
        },
        "item": {
          "id": "b6bbd8f7-f9fb-4bd2-a6a8-d4e765ed70a2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b9561811-7107-4ee4-a960-470fcc918bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ff3972-d9c5-402a-ba0a-3337e1fea24b",
        "cursor": {
          "ref": "c1aeb3e1-e4b0-4f74-9208-f4434c2c52a2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7c7512b7-15e2-433c-ba0f-2646f7b94271"
        },
        "item": {
          "id": "25ff3972-d9c5-402a-ba0a-3337e1fea24b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a00faeef-6c1f-44e5-b37e-f1735caa4adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bc9839-623f-4943-981d-c8274f36c507",
        "cursor": {
          "ref": "c7b6335c-76f9-4ab5-92fd-2eaeacb721eb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "65b98c9e-fafd-48e8-bcba-4871d1bcae2b"
        },
        "item": {
          "id": "32bc9839-623f-4943-981d-c8274f36c507",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8b400e16-2f2c-4894-a7ee-661382f9daa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4371b413-2736-452e-bc62-8206fcd26380",
        "cursor": {
          "ref": "859504d8-4b3d-41ae-9e6b-4565dc72b21c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7e62049b-d6fd-485c-b8a1-2a42bfa8e69b"
        },
        "item": {
          "id": "4371b413-2736-452e-bc62-8206fcd26380",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8cf46795-48ab-4a4e-aad2-8566d6d7e046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3807c152-2086-4d42-b102-f1fc6886d8b1",
        "cursor": {
          "ref": "6afb4c9e-43cf-432c-8be8-03683bb05fa2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "40997a34-01b0-45d7-aa34-1a0ceffa34fa"
        },
        "item": {
          "id": "3807c152-2086-4d42-b102-f1fc6886d8b1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bfdf4767-2d2e-4826-b9dd-bfcbbfb8eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45647ace-4e3a-4b4a-9eb0-6f9554cbf3e1",
        "cursor": {
          "ref": "a839483d-58e3-4856-a712-6b135d4bc92d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fbc9be67-cf00-4cc3-bc8a-4dd0433a4b0c"
        },
        "item": {
          "id": "45647ace-4e3a-4b4a-9eb0-6f9554cbf3e1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "deae6d86-e31d-4849-8e43-fd5244767bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5242d541-d211-48ec-92f0-19f09c77eff3",
        "cursor": {
          "ref": "d3594f99-f6a3-4dac-9ae2-ffc32cff402f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cf38c814-741b-405e-aa19-ec887ca38241"
        },
        "item": {
          "id": "5242d541-d211-48ec-92f0-19f09c77eff3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c8ab5abf-6d72-4721-9f12-b13181ae9916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52765fc8-155c-4090-878d-9e58935045cf",
        "cursor": {
          "ref": "67fd5a68-a7e8-49b5-95ed-bd3591ba1645",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "62c33361-f900-4747-8e54-807ccf70054b"
        },
        "item": {
          "id": "52765fc8-155c-4090-878d-9e58935045cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f4604ebb-f878-4e56-9985-1716c581205f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39af68ab-9fe5-41b1-a7f7-1e0c9a8cbf5e",
        "cursor": {
          "ref": "05e99992-51e4-410c-8ace-41e731e42732",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9fe1a44e-1ba4-4af9-a0ff-f9f629b63ab0"
        },
        "item": {
          "id": "39af68ab-9fe5-41b1-a7f7-1e0c9a8cbf5e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0c40dea6-03f3-4051-bd90-0785ee088fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa62ea0f-6cfc-40c5-9bba-de6516403168",
        "cursor": {
          "ref": "ecbc7655-dedb-48ce-bcc0-ae659d4aeafc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bce89b1-9ca6-4cd7-858e-69f7550a6a78"
        },
        "item": {
          "id": "fa62ea0f-6cfc-40c5-9bba-de6516403168",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0edfe8ba-617a-462d-a846-9fc69f40457d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de7fbe-9120-43a6-bd5f-72173665ac8b",
        "cursor": {
          "ref": "54ce2a32-a544-4d11-a8de-5027628559cc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e6865476-f5e6-4a90-aabc-ccd2691533bf"
        },
        "item": {
          "id": "39de7fbe-9120-43a6-bd5f-72173665ac8b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "15359117-b235-4a3a-8d9c-3874f1a61c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de6325e-6174-4daf-ba27-f63c419e4149",
        "cursor": {
          "ref": "be1f056e-7f60-429d-b545-750a59ee0deb",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "34d54381-8f81-4cbe-bb32-8f74532fe68b"
        },
        "item": {
          "id": "8de6325e-6174-4daf-ba27-f63c419e4149",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f3ac2ca1-9216-47e3-a0a9-1649436fa2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b6eeed-664a-44fd-a647-ba481bcf426a",
        "cursor": {
          "ref": "e8cdde72-29f0-4ed8-aac2-6b650b107779",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "18352c1f-da14-4235-aa27-fcc2c353668b"
        },
        "item": {
          "id": "b6b6eeed-664a-44fd-a647-ba481bcf426a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d5b233cb-d72d-4905-bff1-1e8b6d683506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30429e9a-244a-415e-86e0-e51c1fac28ad",
        "cursor": {
          "ref": "76cee494-8d87-43f0-8871-16348991bbd4",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "83549d2a-795a-4cc6-ac41-292a70fccbb3"
        },
        "item": {
          "id": "30429e9a-244a-415e-86e0-e51c1fac28ad",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1bd2fffb-3896-4e7c-a070-0d254053abb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d6b131-ed1d-425a-a321-743f6c037522",
        "cursor": {
          "ref": "1e72dde1-7e4c-415c-a123-d5b522a35b20",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c5a707f5-7c59-4417-9fbd-26a60e2d83f1"
        },
        "item": {
          "id": "95d6b131-ed1d-425a-a321-743f6c037522",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "118b439e-80a8-4c28-9c0c-b48104a160d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8ef30d-737d-41c0-b25b-80779363027d",
        "cursor": {
          "ref": "d167e354-338e-4fe0-b0fa-5e92363882ad",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "065a4de7-c83c-4830-b973-fd382b40ed1d"
        },
        "item": {
          "id": "ea8ef30d-737d-41c0-b25b-80779363027d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "12f89875-218c-4f4e-8d0f-600e4b37f79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a41fee1-2e1f-49ff-bc18-12e2ba2d9246",
        "cursor": {
          "ref": "4b324253-512b-4eb4-bb2f-a5c6afe894ba",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fa159a33-bbff-47e6-8e25-2743ab3b74a6"
        },
        "item": {
          "id": "8a41fee1-2e1f-49ff-bc18-12e2ba2d9246",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2127dc96-c56d-4e57-88a3-404c9e48c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea57876-be73-4b1b-9bf6-968a3f1219f9",
        "cursor": {
          "ref": "df6992d9-566a-4f32-aa16-be2912cfee6d",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e5aac445-74b0-4ad3-9e10-630a996f3c44"
        },
        "item": {
          "id": "4ea57876-be73-4b1b-9bf6-968a3f1219f9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "99d28edd-816b-4be4-8cf0-cedfbc39dd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9418c258-d3c0-4d2c-8f66-6da87536810d",
        "cursor": {
          "ref": "5e5869dd-7a55-4f9a-ba27-b4caee0b7944",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f7321285-c1fa-4077-b0b9-20e9c84a4b11"
        },
        "item": {
          "id": "9418c258-d3c0-4d2c-8f66-6da87536810d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2a10dc35-1791-4536-b522-406605ccd9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805342b9-6a85-4bd6-9e55-e27ecff0fe26",
        "cursor": {
          "ref": "0ee9ccc4-8472-47e3-b201-e929a32b4c05",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "631c259c-c564-4f06-89b3-9bb028e6e24b"
        },
        "item": {
          "id": "805342b9-6a85-4bd6-9e55-e27ecff0fe26",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "419e7bf6-4202-47ee-b655-e7e1f03aa2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b592cb94-83cc-4935-8831-fdeec8d94d39",
        "cursor": {
          "ref": "af8e44ba-b128-4cf9-9957-4a942767f0f4",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "92623e69-7000-44a6-869b-6b6e75d489ff"
        },
        "item": {
          "id": "b592cb94-83cc-4935-8831-fdeec8d94d39",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "282969aa-34cb-4020-90f2-011d177f6e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c05c0ba-e7a8-43f3-be0e-cdef1703b51f",
        "cursor": {
          "ref": "2f4c6bfe-4161-40c0-b1f0-917d8cc2a4ec",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "39be0321-3038-4519-a878-ada4a218d2a5"
        },
        "item": {
          "id": "1c05c0ba-e7a8-43f3-be0e-cdef1703b51f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "679be5a2-5e4d-41e5-aa3b-daeda5cc7e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e921927d-858a-494b-98eb-3d8cc3899696",
        "cursor": {
          "ref": "afc9d2c6-911a-4f11-af9f-4bba62f41f99",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f7158707-734b-460b-9fc6-a63bd05623df"
        },
        "item": {
          "id": "e921927d-858a-494b-98eb-3d8cc3899696",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0ed0b33e-c634-4feb-b09f-009f0715170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025c218f-12b9-4f8b-8b90-23aecbf6d4d2",
        "cursor": {
          "ref": "89b684be-551e-4f7a-9854-c0c3029236aa",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3fab5be7-14b8-473a-a724-8ba8077c29ab"
        },
        "item": {
          "id": "025c218f-12b9-4f8b-8b90-23aecbf6d4d2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ac0ef2c9-469a-4151-9255-83a2d777d726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f94669b-4025-4918-a7d2-42065b40e5cb",
        "cursor": {
          "ref": "77d303c2-b889-4e17-97d0-5063f3a1ac8a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cb7f6edd-59f9-4e83-aa55-fcd094752c81"
        },
        "item": {
          "id": "7f94669b-4025-4918-a7d2-42065b40e5cb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ff83b94c-9f35-4cfb-ad7e-a854596f221b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae114bd3-ab2e-4ee3-80fe-0853f2f6ae98",
        "cursor": {
          "ref": "a554a9cc-0d88-4e4d-b281-b1113c93bc67",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "356dde34-a14b-46ac-a0bf-f43a4172d482"
        },
        "item": {
          "id": "ae114bd3-ab2e-4ee3-80fe-0853f2f6ae98",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "490752b0-a829-4948-a1d4-07244e15877b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee52680-28d9-4a78-99a8-3c287ee67a4e",
        "cursor": {
          "ref": "d4290773-5cb3-4c3b-b732-cfc27593efa1",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3636b6fe-9095-475e-8314-267b528bf893"
        },
        "item": {
          "id": "dee52680-28d9-4a78-99a8-3c287ee67a4e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "58a77325-2cc9-4bd5-a026-9248fc3ec646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222cd886-5584-4ab1-a465-bc1201fb4054",
        "cursor": {
          "ref": "ec8f1a79-24c1-4253-8feb-4df8d1bab37d",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fd7fc4c3-d0ac-40e9-a134-80dc1501fd1e"
        },
        "item": {
          "id": "222cd886-5584-4ab1-a465-bc1201fb4054",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "88f7566b-b108-45eb-a9cb-883286357779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa66528c-19cb-4130-b175-abbf6ffe9ec3",
        "cursor": {
          "ref": "6fb71340-4748-4224-a102-cd2e4ae00f76",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30e85dab-920a-4b14-83d3-110658157c67"
        },
        "item": {
          "id": "fa66528c-19cb-4130-b175-abbf6ffe9ec3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "05989676-1b97-4dcc-8d6c-7ea6d45ed74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46d9e34-f0ed-4023-9314-80af1d4a1a18",
        "cursor": {
          "ref": "2abd54cb-9414-4ccc-9746-8e78d5e89054",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "58b13763-40f8-419c-97ae-20efa9f628d1"
        },
        "item": {
          "id": "e46d9e34-f0ed-4023-9314-80af1d4a1a18",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7b3a9401-a6b1-4689-9a12-5a509d23a938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567d946e-6578-48e2-ac02-f8930d1ae74c",
        "cursor": {
          "ref": "89e46c65-4a5a-4c7b-a62d-721ca50b2919",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f6c84ef6-c1b7-484f-a1fd-40cbc4ece6ff"
        },
        "item": {
          "id": "567d946e-6578-48e2-ac02-f8930d1ae74c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "045f23cd-1927-4ec0-aaca-503682406333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac30e2d5-62b5-450d-9711-6ec1f0afc915",
        "cursor": {
          "ref": "8ae89c2f-fe28-4f6b-9752-21fe0ea7f75f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b1e3c8b4-ea16-46ae-b5ba-a5f7ddd329b5"
        },
        "item": {
          "id": "ac30e2d5-62b5-450d-9711-6ec1f0afc915",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4cd1f040-263e-4e6d-906c-003195589340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e02bd0-b1bd-4cec-ba76-f77a1e926541",
        "cursor": {
          "ref": "ae577ca5-1c23-4499-aef4-ead5e5c20ed7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a2273056-64d6-49c3-bcaa-9fbaa9542c46"
        },
        "item": {
          "id": "49e02bd0-b1bd-4cec-ba76-f77a1e926541",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d755e696-e4fa-46f6-870d-6d5c0aea23ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1ab466-a86f-41fd-9cb8-547d71534f8b",
        "cursor": {
          "ref": "da4fa4ab-bcf1-4ada-b965-42023be1f6c8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4dd46081-3b0d-443a-b4b6-c91d58173aae"
        },
        "item": {
          "id": "fa1ab466-a86f-41fd-9cb8-547d71534f8b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e6492a3b-e00e-469f-a263-7f169e6bc024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab77859-297c-45c5-abb4-1be31456a833",
        "cursor": {
          "ref": "b73b8618-61c4-4d9d-a79a-c242f2ba91d4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "808c378f-03f3-42be-ae2b-41ecbf284df1"
        },
        "item": {
          "id": "fab77859-297c-45c5-abb4-1be31456a833",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4e183d52-638a-4ff8-85f9-37fcc539b134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e0e063-c08c-4ff9-86d3-6a41eff9166a",
        "cursor": {
          "ref": "5e41fe6e-b979-457b-95fe-3c3d5fc3bc0e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "aacb293c-c1ce-4067-826e-1354500040b8"
        },
        "item": {
          "id": "c1e0e063-c08c-4ff9-86d3-6a41eff9166a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "014e3b44-ff4a-47fd-8777-aa854f40e124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba710f4-29bd-4d5f-94d7-0166ad224cd0",
        "cursor": {
          "ref": "319c2e94-454c-404d-bb72-d32ce7909a23",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "64366deb-ee4b-46ab-9f90-af9f1ea05919"
        },
        "item": {
          "id": "0ba710f4-29bd-4d5f-94d7-0166ad224cd0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "20c75bb2-7c11-48c2-aea4-156ecab1be41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e84ee50-d375-4678-bbaa-57f8759bf7b1",
        "cursor": {
          "ref": "a86143e5-d4a8-4826-b825-224d6c868b42",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4c3b0eed-707f-4d39-bb90-8c02bb8b52b1"
        },
        "item": {
          "id": "7e84ee50-d375-4678-bbaa-57f8759bf7b1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c4048659-a17a-4f16-b47f-00ed224feb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bca6eab-85cc-4b8d-8437-a85072ec6bb9",
        "cursor": {
          "ref": "62471833-5943-4675-8a0d-8651a8aaf39a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "67e5268c-a196-40c5-bc1c-ef8d14e61ef3"
        },
        "item": {
          "id": "8bca6eab-85cc-4b8d-8437-a85072ec6bb9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1715f0da-62be-46ad-95ae-c660da7a60e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3d1260-c544-416e-b544-eaee4bfd834f",
        "cursor": {
          "ref": "9e8ae0b5-bf36-4c56-a4a8-eddee1161212",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "36cbfb78-32c6-429a-bb19-13d7fb9a1e3b"
        },
        "item": {
          "id": "8f3d1260-c544-416e-b544-eaee4bfd834f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4695ece6-10c9-4b79-b38a-31e16f7436a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8316b91e-969f-4816-ba49-2bff929065d4",
        "cursor": {
          "ref": "6720a807-aa03-4450-a9e4-d5a7bc90f24f",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dddb1626-388a-43f5-a566-1f99cc766cc8"
        },
        "item": {
          "id": "8316b91e-969f-4816-ba49-2bff929065d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "13db07f3-7113-4a1d-be1b-02d31bd9345c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800f2cf7-6d6b-4102-b396-96c11510207d",
        "cursor": {
          "ref": "26229010-2b9f-495f-a5f2-2f40bcda0f72",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a2ae7289-9c40-430f-bb30-a5c70ffac8d8"
        },
        "item": {
          "id": "800f2cf7-6d6b-4102-b396-96c11510207d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8eda9bfc-13fe-4abf-8f71-d435882801f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d897fa7-04fd-4aa3-a01b-7a9ffce37278",
        "cursor": {
          "ref": "69d4d4ab-24e3-4307-933d-2a317aa011b5",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bb8c0d5c-52cc-4958-8cac-5b8ec62c902a"
        },
        "item": {
          "id": "0d897fa7-04fd-4aa3-a01b-7a9ffce37278",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3a861eab-4827-4ba2-9a38-5104948c4646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c03da4-f3a2-4da0-9828-851e1dc14af6",
        "cursor": {
          "ref": "1e6a7eb0-d2f9-4950-978f-3de2dce6849e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f064dd26-1493-43cb-9d6f-38d524d451c4"
        },
        "item": {
          "id": "d7c03da4-f3a2-4da0-9828-851e1dc14af6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2e9ab1ab-79ed-4351-8c89-c1cd1a503f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af00db80-d34e-4855-8cd9-87a96bd9e0bb",
        "cursor": {
          "ref": "724b1fc1-fc68-405b-9d06-ba7988216568",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "91d04a65-6e9a-457d-a26a-046d79bc0d63"
        },
        "item": {
          "id": "af00db80-d34e-4855-8cd9-87a96bd9e0bb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7a4efe22-db68-4f34-91ee-135905b931a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9087a774-6263-4a58-adb1-9f17fc8824a6",
        "cursor": {
          "ref": "4c182099-2343-4544-b8c0-cdfdbf22f847",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b8794361-9e4d-436e-9ad2-da83a04076c7"
        },
        "item": {
          "id": "9087a774-6263-4a58-adb1-9f17fc8824a6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "95fd99b0-c59c-4e8b-b40e-f06170115e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b550a8e5-9071-4884-89f7-46d0951ead4e",
        "cursor": {
          "ref": "18c45e96-7674-4cf3-92b2-bb195b22a950",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9a5410b8-a645-4502-be85-a089485310ae"
        },
        "item": {
          "id": "b550a8e5-9071-4884-89f7-46d0951ead4e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a660f461-d434-4c8f-85b4-aa87caf8189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccabf7e4-f61a-4c66-a934-5f7732914547",
        "cursor": {
          "ref": "c1f83858-17bf-4331-85e1-7ca803de7cb4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4868fcd4-ff3e-4df7-ab53-e90d415ed98e"
        },
        "item": {
          "id": "ccabf7e4-f61a-4c66-a934-5f7732914547",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ddadc8e-9f37-493b-af1a-1a6bfb10179e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4618a296-6ac5-4341-bdb4-6e6f49ef8751",
        "cursor": {
          "ref": "3f1944fe-dc66-4aa4-b364-324b541b19f3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1fd1c5ca-8a78-4df0-8411-35928d2cb080"
        },
        "item": {
          "id": "4618a296-6ac5-4341-bdb4-6e6f49ef8751",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eb488913-9b56-4972-bba1-75195b79a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d7709f-da15-407a-a774-0dbc421d43e4",
        "cursor": {
          "ref": "18fe90cb-9e8a-4c1a-8a55-1c5e8e065f45",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8587cec1-4797-4609-998f-076db0b50c7a"
        },
        "item": {
          "id": "d0d7709f-da15-407a-a774-0dbc421d43e4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3b12fd9e-036d-47d5-8ceb-3c85b039209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f949abb-99ef-44fe-850b-091f9286b01a",
        "cursor": {
          "ref": "ae437fbe-3756-4c9f-965b-45c74f104b48",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6fbb1285-c943-4d52-85ec-14e00a0c723e"
        },
        "item": {
          "id": "9f949abb-99ef-44fe-850b-091f9286b01a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "92dd1201-d3ef-4f0b-b8a5-6e30f90ce115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0a3895-567e-4c50-ba67-ebd91f2afdb8",
        "cursor": {
          "ref": "14ab4741-8bf5-4511-a00e-8a5aa794f5e5",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ed96e795-4f03-4e44-a23c-fec869c299f4"
        },
        "item": {
          "id": "2d0a3895-567e-4c50-ba67-ebd91f2afdb8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e88e825e-1a87-40cd-9bba-7fb6d400fdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9752da2c-d374-4d86-a76e-d5d09f1dbcde",
        "cursor": {
          "ref": "e6b059ef-9e1c-4ac7-9912-65251adde03f",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8810e3ac-5809-495e-a727-9535e63a16d7"
        },
        "item": {
          "id": "9752da2c-d374-4d86-a76e-d5d09f1dbcde",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "373db6b3-b1bf-46b5-955d-9094a41b4ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf19c29-779b-44f7-a160-85f7f196f390",
        "cursor": {
          "ref": "4b568d58-173e-4938-90d0-fce112bc6e94",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "24771376-c9c4-42bf-8051-b16899719cad"
        },
        "item": {
          "id": "fbf19c29-779b-44f7-a160-85f7f196f390",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "30bf5a6c-0f47-42d6-8b16-97f9b3cf9756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2af8b1c-e9de-452f-a0fb-eb0790a748b2",
        "cursor": {
          "ref": "db22bcc5-196c-4c5e-a353-308a43a2bdfd",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ae013d0f-c500-4a6e-b347-e7615249abd1"
        },
        "item": {
          "id": "c2af8b1c-e9de-452f-a0fb-eb0790a748b2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c5291112-22a6-4611-8102-73546ccdcf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a584cd-20f0-4c6a-a36a-58b147424acb",
        "cursor": {
          "ref": "61796857-9161-4a8b-92d0-8e185a3764f3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b6db16b6-03f0-4d56-89b4-7c0f594a8f40"
        },
        "item": {
          "id": "15a584cd-20f0-4c6a-a36a-58b147424acb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c5db0e85-95ad-4206-ae20-f637f217c28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07c80d1-560a-45bd-bf90-6dfcee844a90",
        "cursor": {
          "ref": "a775cad2-1031-4e40-b047-5babc9cee0e9",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3016fa94-e74a-48a5-93c0-cdff683aad66"
        },
        "item": {
          "id": "d07c80d1-560a-45bd-bf90-6dfcee844a90",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ffb9cde0-de22-43a8-9154-52468bcc96c0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08421bdf-d01d-4be8-8bbd-dffda811ddb5",
        "cursor": {
          "ref": "a428fee2-a6ba-4927-8753-9775b1c652ef",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6c0a9426-9877-426d-9002-0ed03bcbd9ca"
        },
        "item": {
          "id": "08421bdf-d01d-4be8-8bbd-dffda811ddb5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0b355c15-926c-44b4-9764-6335adc91477",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f40ed74-e6a6-4aba-8571-6c6470267aaa",
        "cursor": {
          "ref": "2589a32c-3a1c-4fe2-9e2a-4478ed911e20",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fa42a9d6-5fef-4704-a561-f7858bfd41ae"
        },
        "item": {
          "id": "7f40ed74-e6a6-4aba-8571-6c6470267aaa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "51b6a678-58a6-4fab-9e2f-24c13ed4947f",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81468c54-7234-42f9-a325-9d2f98d8f706",
        "cursor": {
          "ref": "6f0964c3-a013-4c00-a1c3-9b723d04b0b6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ab6b6447-a556-47b9-bd04-093c5643f905"
        },
        "item": {
          "id": "81468c54-7234-42f9-a325-9d2f98d8f706",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "df532b33-b59c-4b30-93a6-0c9876929a3f",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb2e6ac-64b8-4c4f-bd0f-82b6e34455f1",
        "cursor": {
          "ref": "e9b781cd-f3f2-463f-ba49-e59bea84c187",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e8fdfb65-7b94-4b43-a464-cdde8e7e367c"
        },
        "item": {
          "id": "ffb2e6ac-64b8-4c4f-bd0f-82b6e34455f1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b3cebb8-26ab-4c18-9d4e-c91599296cae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb2e6ac-64b8-4c4f-bd0f-82b6e34455f1",
        "cursor": {
          "ref": "e9b781cd-f3f2-463f-ba49-e59bea84c187",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e8fdfb65-7b94-4b43-a464-cdde8e7e367c"
        },
        "item": {
          "id": "ffb2e6ac-64b8-4c4f-bd0f-82b6e34455f1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b3cebb8-26ab-4c18-9d4e-c91599296cae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8c4345-4eeb-4ebd-9468-b3a852fade07",
        "cursor": {
          "ref": "81310165-845b-4709-9e01-ac14d4de9d7e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "244325b4-4df2-49c7-802a-6c9398ebfeee"
        },
        "item": {
          "id": "cc8c4345-4eeb-4ebd-9468-b3a852fade07",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "73bee312-742b-43dc-8ad7-d3b5018e174f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce3b991-9125-44f9-957a-354397f5d86f",
        "cursor": {
          "ref": "821da0eb-e499-40f8-b506-27acedbbb7b2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "05223100-eacd-4102-a7e2-23ff74af5bef"
        },
        "item": {
          "id": "6ce3b991-9125-44f9-957a-354397f5d86f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "81df9f99-ec8a-41fa-add7-eee57de44598",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}