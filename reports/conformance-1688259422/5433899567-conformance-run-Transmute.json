{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "16e039a7-baf9-4cd7-9c53-9e5f0af9e04a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9c0ffc0b-d780-4f95-8b3d-7235c7bdebb9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a510fb85-782f-41ce-bc94-6dc7b28092e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ddef126e-6b94-4037-9522-1c67b85061cb"
                }
              }
            ]
          },
          {
            "id": "5236f499-fc61-428a-925e-a6c5663f667d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a18bd1d0-82bb-465b-826e-14604fcb9975",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d7098a62-2b8c-4d74-9961-2c1252841f78"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9ddc1906-3328-4681-a691-4c39fbe2d414",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "793d82cc-45d9-423e-a8c5-2852dc4bd885",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8afbb03-6f35-4266-b89a-cb21884ed6c6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d004d32-720a-4e20-b091-120a59247a63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24aaf194-bb59-48c3-841e-0f6bc127e6d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85be07db-583b-4ae1-bda0-2ef4d826c2c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a390cb8f-041e-4660-aa3e-ada3ca51a2f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7da4ffa1-7691-400e-b7b7-d4c28f5e05a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e822036-48f3-4198-96e7-e038b635ec0b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eaab0f9c-14cb-4955-83d9-3c59fa34842e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "26be986c-cae9-4cb7-a2ec-32915a9b38cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98aa0f47-226a-44c5-b36e-ee44a7d60434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4df9cca8-b37c-41c9-ab82-3810a57ceb18"
            }
          }
        ]
      },
      {
        "id": "066da4d3-7a11-4f0e-9421-5fff62b73c04",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c7fd3334-4ef9-4924-a8ac-0989dca2ff30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41f4eb40-c6bb-4230-993e-2b0ecc8f82c5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cf31a13-c59d-49fd-a96f-3674b7e91a09",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e0c154-2d50-4667-b3e9-bb5962c8cb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d460c2cc-7e47-48e9-81ba-929d316e96fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba20c133-2dfc-41cd-a4d0-8ac888070f1a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f246f3b-35b6-41d4-8b74-75ed103b80a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43bf8f1f-06be-4b99-9f42-9cca884eb114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2e3428-ac21-49eb-8130-47f53a0e60ac",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2622b1b8-3d60-4d58-bd39-15588a1b013d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85d95f3a-4ee6-41c3-8ffa-4ec1b2399c1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24badc59-5bd8-42ec-9064-7439482a9e6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9feadd1c-640c-43a6-aa88-f31d22448e9a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9751a881-3620-49a6-9325-2d6591b9c394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a656197d-ea5a-43f8-b460-2b080844d797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e45c0c-d894-4c33-96b0-f24f52ab23aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc877877-fd39-4789-ae80-ed72466726ce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac711f0b-6187-4a18-addf-b7d31abba251",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c10d4e09-bd7d-4975-958c-e205b35b5544",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b9c9c87-d00d-4f47-9d01-debb17fd2c28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ed672ad2-6598-4baa-b073-025fdc17c79c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73ad20e6-64d5-4374-86c4-182aa55dbbb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "10331941-fff2-406d-b152-d9a0a50edffc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dac5fa17-2a15-40a5-ac4c-49c7d7f5d6a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30b0db10-e098-4404-8500-c3db322f6a77"
            }
          }
        ]
      },
      {
        "id": "abfd17c9-3f3e-4847-81ad-61ea90168f47",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8490fec2-3863-4213-8032-473e1f97f05c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2befd209-aec7-41fb-8cf2-551188061c12",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8556a7fa-7a51-40bf-b5ca-7aa7dd3520b2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6b21aa-fe0f-42cc-bd4a-04a13140fa26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6445874e-fdc9-438d-a2ee-fb66105fd8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3883ebe-6239-4668-9a47-b4d71713cda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5f36603-8513-45ad-9987-a58f4e03e693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f2976b-2ade-459c-8e67-ba221cfca91a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a45cfc1-aaae-421b-ab9a-32e0c60d9125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4439b5e1-fe1c-4d9f-9e48-160afb8d8d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af604c3b-2de3-4a71-a646-efe4d9fa738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6216e78b-51c1-4aa3-8c5f-ed5df31a54fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ca5a25-766f-4bb0-9d26-685f98c8b046",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83efbe96-9c93-4df5-8c2c-e84a95427c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6ea3c1-ed95-48fb-bd26-d9b2a13b41f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a543bb-a4db-4685-aca7-4b985c7730ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fb10be9-7d2e-401f-9937-d792ba1b0635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004f47ae-0d54-48b8-845e-4e6f13ce6a65",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60def63e-e266-40e8-9060-1359f0834024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23db663e-6b75-4d7d-ae44-c38d50313683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8daa21-6c4f-49fe-ae02-6b1ac64ea80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b09bc488-aafe-46f7-98b3-9b76ebe5c2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60062b39-d216-4722-b059-5e4b1cb2b1d0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd628d3-8965-4020-be18-3c93868e6963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97b0782-4a07-4c5d-ae86-62e06afbf826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d61154-f4ee-45f8-a5d2-2dd424e532a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dc1c12d-fee1-435d-bd2f-7a8583837212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0bb36e-6734-4aec-b74e-b4fdb8cd38b7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451f1a82-21fb-4e7d-a1ee-56054e46bd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f24aebc-edb6-4d37-b514-a30e05adf1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a681fd4-df14-4f5d-b503-7ec45fa141a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ab971b3-f178-4419-8086-6198184b6044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f030125-78a3-4bd1-bf45-3dccaa7bd572",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f3c328-d0f2-4641-90ce-30c7fe254738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfd9d2e-0220-4002-b209-6b1b8f230058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f68e20-8f28-4b34-bcec-b15fe1b6479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "628033c6-53d9-4045-b70e-a4daccb564d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8bab20-15cd-4c00-a81f-b1d7c1da09ec",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098fd415-8c5c-44d0-8b82-8e775d790bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ba1289-3da7-40ad-9f17-aebd3a673f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8fdc06-9488-4fed-9ce2-66736d417b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baad2aee-000e-409f-a5fb-1ab3dacac9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791a31ea-a422-461c-bb26-f7b2897a8d93",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b71a24-b8c3-47c0-96d1-1102315b36bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c79cc9-30c6-4e7b-b834-15aba206a78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb48de8-9034-4bce-836a-9b49336b417c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b236c092-191c-4e80-9f3a-0b7daa56c5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a15628-33d2-41fc-96a7-aaf929f56bd2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aa8294-59c5-419a-ab15-88dd28ba900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd85739-08f3-42a6-b350-a78579e1ef91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad60e538-3ef2-4b47-940f-e96039c4c3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc1c61fb-984d-45b3-96fb-c46db32a77ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84afb4be-f382-4047-828f-c3e46592de23",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76fd9f9-b443-41de-93e9-00dc3baa164f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a1d8ce-2b26-46d0-890e-f8d0b8d177e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37268089-bed4-4b9b-ae9d-b38521f2abc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33096ba0-2cd9-492f-b525-414fbfe5d777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d81b5a-aa88-49ec-ab18-fdc71cffd694",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160494ce-d997-4b10-a548-2a1b1d065f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4301745-d2de-467d-ae66-21ad0c8b4474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d9bce-c181-4058-bb4e-d098eaffd129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c47be53-0cb4-4a7a-abd5-0612872e0586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebcc6c1-a986-4022-9644-d5a2b52563a8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815d800c-ab7b-48f6-8c75-5a1350ff9a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e90580-30bd-4d20-b08d-c1153c73f7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df020f6-989a-4884-9c98-ec593c81117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "231b2366-b0e0-48f8-a70e-b4fd1b7d7b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f6a804-1861-4a14-9d1a-4e2da669027d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56dbbe9-1fc5-445f-a08d-90d113547860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab974d6-63bc-48d0-b38a-2adc036808ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9213117-62ec-4dcc-86a8-44216dfe57ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00e6e32d-2cab-4e2c-8dc3-acd70b4af837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f7c107-5349-4a3a-9361-a69ffd760fec",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e9e021-0357-4da5-978f-c6c587a0c984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ebee7e-02d7-4a17-b659-07bf761ba0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddaf2a9-9fb7-4e8a-84ed-42d581c6db15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86a4d802-4433-4e0c-8a43-ffc3ab8d2396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd13a044-07a6-499c-b339-ba8e504c881e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd12b1d-babb-4bd0-bf05-7847df749c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c381ac21-8d8c-447f-9a16-f808a3db8c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0456c0a3-da2b-4825-845d-5afc4e15e37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "122bdfb6-7ca0-4e01-bf46-d77ebb36fdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e028feed-43c0-41a2-b4b4-da67925a2604",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55654e48-df83-4461-98e4-1a1a99ae1a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db19251-38e4-4079-9bd3-df585953cebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bacf3a-25bc-422b-aafb-b8d4a2883445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a022c556-ef35-46ed-86c7-f8c3a7aa0fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaf6619-6e0e-49f0-a679-0cd1585cdb2e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931a8587-3695-4cf1-b8df-ca8dff5fb231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ba1983-c6fe-40df-a0ea-300601f5df05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54b9dbb-bc93-4e1f-bd06-1358ef67eb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "196ce619-8839-4398-9b4e-511b8461abef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0df89dd-e635-4b8b-9790-fb7589f49ae7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6bdbab-8a5c-4c40-9c48-db73d4cb32b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c35e8f-cff8-4c58-89ee-d74ad00ae0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72923d4-7674-465f-8a30-d5f5b76a3820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0314c5a1-344e-4f76-bfc5-48398ae24f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba0e420-0036-479e-b65e-36ce6c636106",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706cd71e-0e6f-4159-a4bc-e0655a0ed3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc35b2b3-36f5-45cb-a57c-89187addc876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ebcb0b-c2cc-410f-b2aa-a816606baac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e2c2aa-7662-4ddc-a7e2-5c4547ce8cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaca144-73e0-432f-bc69-e1d5965e7bd6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42719ad-becf-4f12-ab43-6298463a3b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c770c6-c3ae-4c60-9fd8-7bd066fe63cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32066a6-899f-4aa6-b006-3e739b99c904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6baf4d23-df62-483c-b03f-e79b5bdbad43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0b633a-ddff-40c1-a0d9-a7d96b155bcc",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e24911-7fb1-46d8-ae33-cdde1dcc17ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee17d40a-e6ee-4eee-8192-b2a5a5e02701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0409d30c-8fa9-4567-89c4-008a91822258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9196fcf-9a58-4542-92b4-160f0d6ddbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8c7a14-48de-41ae-8f17-00010be92f8c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00db1df-b3d8-41d7-a516-b78e4213495e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82975fc7-4486-4bc1-8bc2-3f541aee6aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58442d1-145b-42a3-8923-4621f0fe8dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75861bd3-09f7-4e17-8885-44a83b1b2918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580f68b7-5d55-4f53-a9e0-aa8953844c48",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c63316-610b-4f1c-8721-f415de5e9447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4760462-fa89-4df9-9ccd-9029e4b8a520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d11a72a-f220-49c0-8d38-4e325a6951a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "977d64a8-0f85-41db-add1-914b5db73428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602d651b-341f-4ee9-b29d-8f5839ed6485",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fb00c8-6853-45e1-867a-50ffd633389d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1fafcc-c8c1-44fa-9a52-287880d6d0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a81dd55-6829-4b2f-8a7c-5441484baccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24ab2c44-f93b-4385-95e6-d207b7325ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9f800a-805a-42d1-8738-47946dc5e19a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d95604d-5ef9-45af-a0ac-2d124b2b0c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5481074-fafb-4cdc-99be-d160efee4b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431e73ce-ae97-4982-88f4-fd0a084b4fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccda62c0-f9f2-416b-ad8e-ddeaeece559b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1886a2-665b-49aa-9ac0-989ab146d24b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d258035f-effc-419a-8fcd-8ebbbfc07d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42625540-2f0f-4a25-a89c-ef1b081a3c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91c66a4-dd49-461a-82ec-9241ade5709c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf950081-641a-4892-b959-4d9b57df1d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff23db6-c21d-4378-9e9b-2d67e80dc189",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10f283f-dad6-4776-8022-9ad27d48df79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1836c5-0f9d-467a-b13d-7af930b08ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ed45fb-fc09-40b4-a2d5-89c316f056f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a614a0ce-2273-4d51-9840-f063b3c61e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b25306-44fa-4c59-8b79-c4f617d9fa49",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f878b3d6-70c7-422c-8680-73f4f267ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01deab3e-fe5c-4c2b-88ec-3adeab8cb02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c10b4fc-ce87-4466-826c-ea458396fd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "681743df-f6c4-41aa-a4ff-ff13f7817cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4f80bd-deb5-462c-ad95-a98b39da7cd4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dc0e72-5303-4cb4-a3b3-00a1470aba97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91bbe0f-96b8-4bf4-8c6e-a81117b1e755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb58a55-dc4d-4b10-ab98-54a0cc114093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c63077d-34cc-4f4d-9cfc-47ae70f47b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83235983-18bd-452a-90bc-55dd16093f9a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab8bafa-0c0e-477e-b501-43203c8cf292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01b9acd-fba2-42bd-8191-ef93fe9d73f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34edf57-98f7-401a-8bc2-a052c8d293fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c007cc-6fd3-418a-8650-6b0d4e27ed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702b5ee5-7c52-458b-8e09-91c3bcc1410c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50e1b78-91e8-4580-9fe7-449bcc7517f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263b21a0-1885-4ea0-98a4-fc79be035052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e93455-9553-491c-a7fb-e0590ba6cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73244070-842a-4709-9c01-999c455409df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9401d71-7be1-42bc-8fee-9ff3518cfe55",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526e8f75-3da2-444d-9c53-b7cb8b06fa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76877180-f9eb-4756-af0e-defa11c84d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b7f527-7fe4-4357-8b74-7569e3c9037a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abd7a41-3b00-465e-98b5-9f96f5d850cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c350351-4f9a-4898-9a01-dc04e46d078b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feb7973-9827-4ea8-8d5e-df6b2fcf5430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4806d36e-1b50-4c09-a55c-4a8a5fd97d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396b8c3a-abd5-4ca3-b6e2-fe423a7be83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dafe343d-0d2b-47e8-9889-e3330968c65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de79365f-48f7-46af-a523-83622070c5c6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec51bd2-0fac-431d-86c9-bea0dec4d386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e9a5a5-e6ab-4b41-a331-f8dbd8fa5fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c087c75-561b-4502-95ab-a7efd68a8636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "70159427-5108-4678-acd4-f951cc58804d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e165191e-ebe6-4e78-b02b-93f7b045edd8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fa726b-cdca-4970-b2e4-0a87fabb317b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5bdb8b3-34c6-47bb-bf8d-ab80c42f86dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5400b3-1087-4968-98a5-42ffc4f8a69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09df4cb3-998a-45a6-8cf2-a74aebbb0a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e431614-7733-4992-a759-3d0a5b68a600",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eaa3333-ca51-431f-b9d3-9df4ac8b171e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3309783-5299-400e-8ba7-c22be518b1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042274bc-e6e7-47c0-8bd6-02ecd2e653d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24a0c966-dcea-4f98-961e-b6884b32f964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ecae15-e60e-4dbb-8515-759a7fee5b28",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c1de9e-9493-427b-b530-29bc89883ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfa3d00-ecc3-4adf-94ff-fa2627017a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ff5d41-c7e0-44a9-bd44-b76ed890f6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40ef54ef-3466-4e9c-857d-3072241f48db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b76218e-ce5b-4e60-b97f-50bc2e6b6a52",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f4072-8e20-4026-a35e-7f0db4080fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b6bbb9-d736-4f29-ac8c-f23a14816259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5054ed6-e816-4abe-a41d-9fef9065635a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fc1a06-da4a-4b7b-8a70-f1a8a8e2dd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35607d15-fa12-4889-83c0-2e8b51f08466",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81a995a-b7f1-4eb7-8e8a-4b45ab650ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f50290-a246-4ef9-9cc1-5752a8b032f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6337899b-eb33-4f21-8128-7139f66c2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa78560-491c-4b86-a854-8d0bd9fed2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203e5bd9-853c-44bf-a09f-8fe396bd0d28",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b4c23b-94b4-4fb1-b874-93359910e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed5bc89-a2c5-4b4f-b44f-8afe9884faa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a3e8d5-b1c7-4300-b7b7-d559a52f9a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "257a3e66-a4a4-422a-bfc5-e7b4c7a708de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e9ab2c-fdeb-45ad-9303-cb9d54418c74",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e254d8ae-cc53-42a9-bb50-b897c6a32085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c4d3f6-3f61-497e-8131-9e6a0ee97152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1c62aa-12da-4054-8464-b4c0f7569198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f71fb129-054c-4cd8-98cf-ce163e97ba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60971cc-7e84-4404-a91f-77e5b1a66fba",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f966e0-cbda-485e-ad8b-fb34f9134300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6dec0a-84ee-480d-b027-e6b79affe334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54ddbd2-aa2e-4218-bf23-cb69d1dbb6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d902516a-326e-4bbd-a22e-432781962a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed7b2f2-a911-4ef3-bc50-d7b2b234d3fa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f914479-0ff1-4bcb-b4b7-35c9dba8c151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2581c9e6-95a2-4c62-b92e-0ffc156f55d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc36165e-094c-477b-a9fc-e07c665ffcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d899d2f-d603-45bf-abed-fd8d5ed33815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaf1fba-4df3-46a6-9720-d34f42f41a8f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e4b79a-34a9-4ccb-b6be-8d7a1a976b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8d0585-0d7a-4169-b611-83be1fed2a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d469177b-7bd1-4f5a-9dce-3096a39cd756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bb475d-82b1-46a3-a28a-3120fc8d00bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4920bf3-fd3b-46cc-8f24-ffaace89a947",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9601f518-bcb5-42ff-87c3-79beb8b27f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af98274-5cc7-4eea-a06e-76e7ef734c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7974d82-6584-41e1-906d-7fca7dc7b91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf719d95-885c-4965-b0a4-49aec69d55e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9559b4-cd5e-4092-9232-8024fd8f07c5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7b2d5e-fa85-4279-914b-86a7f772053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b3b42c-d668-4398-9377-4f11053bfada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0deab9-71d2-4789-98ab-62579497add9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b74214-56f4-4ba3-949c-5e7934f4bdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323937f0-6316-483f-b4d0-5374b8d47db0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c276c2-c459-45b7-beb4-0552aed5e3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e48f994-2734-4873-83e6-11ed8dc34ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82911d3-e3f2-4d42-b8fb-808b9bd5a80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c30de5cf-49e9-4914-91bb-14fe68f3a5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32224d99-b4b8-4054-8d7d-2186c6a67b8f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635d25e1-98e1-4f81-b0df-ea17ccfe380c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cb490a-4d6b-4921-9e9f-6113ea0a6cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32dced0-1297-4f56-be68-ed6e33730896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8db957f-ae71-42bb-b22f-8ad15c124cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3243fc-a5d2-465e-81f1-34f0a9f5670d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0b2853-9b06-4f55-b8a3-e6e80563a29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8fed10-daef-4289-bdb1-7076ff895913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa2bc68-bd9e-4b36-9883-86a3392aeb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1124f07d-c6c8-4b7f-9f2c-75b309d068a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effe8be3-bf45-44e6-9b36-ba326bdd6c2b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c894b6c-daae-4518-844d-4815ac66ce70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424bc244-7c7d-4e65-be97-eedce6907dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d63a19-99c5-4c41-890b-ff9f481a31ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "764dccb5-1591-41fc-8c45-6652c6ef3a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3a70fc-ff6a-4641-9d22-c8fe48855812",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb859acd-77d7-4ab6-911e-ab78c26b8406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41be51f9-97fe-4773-a276-36866292ad64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5495a3f6-3878-4e9b-b8e8-1b8c72e3c5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfd9abf-dcb5-45dc-9a96-de278d9fade9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2ae4bf-c3a7-45d8-8541-dd3afbf6007e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67cc57f-0cab-45b7-a90d-50f10cb79dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf3d22d-f344-4cf3-8c29-916aaa20d768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a60341-0015-4ea0-8f9b-102428ae063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a360a2-44bb-40d4-b501-8df68ec99368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8497fb82-9982-4183-a6ab-840695643d10",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b36a03d-6853-4561-b869-db051873768f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0c11aa-bb80-415f-ba96-f6fa126e73a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecc47cb-a0e9-465c-88c2-81a060b7edf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae14273-b02e-493f-8e8e-eea03c8e3a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e481865-3268-456a-ae3c-5f0cca888339",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70303686-a2a2-466f-9935-002caa0030ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfad90a-9ded-4fe6-9d39-f75ec8375955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6118543f-3407-4e40-9a25-aac3837253f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3166826e-a50a-4323-a3ff-cb31ae406151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25435e08-6828-4c1a-b07e-6dd420ea0d04",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a686cf-0e4a-4481-bc2c-5a35ac220855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecadb64a-1ad9-4780-8be3-973bd2b22ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94a53d0-7ec7-47bf-8518-cdd11b578316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b3021e21-fa7a-47ef-955d-60cf6fcec45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630ebee6-3c01-4057-b724-51a9fd8f0806",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b9dd86-da64-4379-8cb3-31ec84d970a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "929c92ae-72c9-43bb-8470-e78ca21e2abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be19c6d-ec84-4cff-b6d9-208cf13c0a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f682cced-2a89-47fa-88d8-457350e4653b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1f1a48-d2ce-43d5-8f12-11509a26c4dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db154798-1a0a-4f7e-9b62-99cab9252b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbeff01f-0f4f-4d78-8426-45a02102d10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e74c81-070f-471d-abd2-0b50bb607482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b05929b-b45d-4ed5-8212-6bce551aef4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93285ea-5f65-4879-b96e-2366d37c56c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4a33d7-5d95-4c17-ae57-c91acb15d5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eec7d38-7226-437d-885d-718648d2c798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4754bae2-1a5e-458e-8a54-ce68d5aa3070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "25be86f7-7b80-4cb1-b6d5-a9cadbd6951a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f195072-fa9a-46fc-a452-72e3f15ad3e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8896282-8fdd-4df0-a105-b41b13b89623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d3ae623-47d4-45bb-9da1-cc3d86f8fb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5000a673-04f1-4f4c-9453-458f0a1cd464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b42b04-fb46-46c8-9bda-a1271924fe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dc6cb4-7b1c-40b8-ae99-9cf188f3f324",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a385193a-570a-44e5-b013-3b3938140a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b7acf2-5cf0-4f32-b77f-2ab988c852b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5d7878-f4bd-42de-8286-4886c0b83bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "508a9d6e-0a43-44d8-b952-0e7ea7b7706c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b02003f-7fdd-4e00-b9b8-b5b0d58a41e7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4fa5bd-e7f6-4883-80da-916d82664020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248ec9a6-1f1c-4652-9809-fd9641be4463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5be4bd2-9d2a-4694-8b9c-d56f4ccf261c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be54d78-0f70-4c1e-a7f7-1856555b742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ba2e45-fce3-4851-a9f5-588a1b32f0fa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0025ec8b-bd7a-436a-a264-0e8055513ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8377e7-5e8f-4a70-9584-89f5bd32116c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75017a5-89ef-4d92-bd84-0fcc40511090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd6d61d-ac6b-4547-85a6-1b1b3454521f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49e4ade-dfdd-4a17-aaf6-5bc7f976660a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8d1c26-c9ee-4e40-b338-b579de1c7573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a186fe18-b023-4eb2-8ec7-9052fe80d420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc924c89-2231-49a1-bd0e-d4f5c194d500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d96664c-7cb3-43c3-8d93-fe1cea2b992e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568a3fe7-10b7-484e-ba07-2e28127f00c6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8615d308-ddb8-4bab-917b-9070066c4e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e7f7c8-f2c8-4174-99e8-7cfb788c8359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf4da74-b807-4c65-85bb-1316be91ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7823b93-d3fd-4e35-bc98-953dc1e1d768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2568ae-ad7b-44e1-8916-1aac580cbcbf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2362669e-65ac-41a0-b638-c88aaf0b6b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a55203-07b9-42a5-8eb1-693da07381e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0671c9-27c0-4479-ad0b-e42e69df56b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0673ac82-60bd-4a59-9477-cbf1b552bedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c036ad-e294-435c-a446-ac8fa7932873",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cabc20-2945-4501-933b-218a7ec85b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2457659-e398-418c-9757-68ca4f29fd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41ac35d-1227-4862-a745-bbcdd65833a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa0fc9f-df57-4c79-a706-092eba42d1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e108cef0-7116-4548-b907-7d24b3f1afb5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c570fe-c6d0-4ee6-afb4-eca196f777c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e6abf7-1f31-4664-8e65-a15c322b9c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158854d1-16d8-447e-b237-07b1920c6b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35a41c6-620d-40f0-9535-b0a7fe7dc10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7535b7-effd-4b42-adf8-c172427ba57d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc999f27-e439-4fae-8ee6-5bbc1944e8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcec3c2f-dd79-495c-8647-9b36a4598d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c72ed1b-b16b-41a0-b6ee-d67eb875cccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "12fcb1e8-267b-4d54-985a-15cb67b910d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a518b3ec-d1de-46bb-8eeb-52694ac1ca02",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756110c6-d3ed-4785-a9de-57d7ca6d0655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f476a88d-b408-44dd-a7fd-ead1b4a60238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217c1d2c-9ea2-4beb-ab0b-9a12d0768d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c95238b-e569-4cd7-b196-844a3fe2d31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0df0a9-67b5-4d7c-bf97-494e2dc7b2a7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc9171e-1572-41ce-ba30-c1c6297a934f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64ed03e-ec36-453f-b776-7f305b8722e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54973b3-ec4a-4c22-9ea3-8e39dccc44ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe4e86f-7627-4438-892f-6556fbde7c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9eadbd-8d99-42bf-a127-528b12f1ab57",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd423ac-35c8-44d4-a982-0a1e8406e32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ade186-5e10-4ca5-a97e-fef7962bcb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6644fe0b-5747-4319-9543-3886c9809fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c3908d-3214-433c-9fa2-90eefab87ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830103d4-17f5-4a69-ace1-3a557d2ddba1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5285d7-337d-4440-89ca-5d1c806a745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7db715-f12b-46bd-bd10-2bf021122e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395bdf39-5a3a-4bc2-badc-53176ee37976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8fe1ea-f6a2-4c82-8299-dde5567bd91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adb16be-d526-4d66-abb8-0e9fcb905dfd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf97da40-5357-404e-8bac-168d2284ab65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ff0745-b44a-4982-84f2-4f53002c2f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc971c41-7d03-4e76-a523-370c891ccee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a429ba0-b393-4523-8d28-56e9d7d2c2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b251a3-375a-431e-a778-9b98190a4ced",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0487fb-1086-4ce2-bb5d-f981b721126e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f276bd6-4713-4727-bae3-a6eb18d1960f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3e8cce-d9c3-49c5-bddd-d7463ac2d144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70902c54-6559-49c1-b470-38b3d775e616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fba5d2-db92-418c-87c1-40f68c1fab34",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0286d0-7766-4c00-b3b6-371a0026bfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11191525-d261-4e20-99df-1470a5d51bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e4079f-a5ae-493c-b8e9-8c6fd191b640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92216688-c333-4d34-a80a-a7b015779228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c8ae8d-5994-4b20-a3cc-a1f9c2ad9465",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d827df-c50a-4fb0-9950-3ef9e0e54d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6c9541-bbbf-42b2-9b17-ec040dec5889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e916d3-feda-4ac7-8e0c-240057455114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e25dca0-5c88-4353-ad95-490a7baf67f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e10c4af-bc92-4caa-90c6-ca7efc899a4e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ba21a7-96e2-42ac-88e9-e02677f32690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4172d214-8a03-4d13-be4a-aa53902109a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a4aae8-312e-43fb-ab5c-64440033f667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51860890-d5a0-46b6-948c-d0ff93f490aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124cef43-b578-4904-8bf4-450a906041f2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52270330-ee25-4070-9918-1ec8b98ed8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55cbb46-231b-41bb-927a-64e4a2b26c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21e5879-f3d8-4900-ba41-c7b0abf3b778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7057a1c5-1f9e-4a48-a19c-056ef7ba62e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e490ca-ce07-4d07-99e0-9ab96599dd6b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6e8c73-c3c7-47d1-aa65-eb8209edb64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add43b91-15ba-4a6a-81c7-bf2d37e9dc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dc6f8c-ac38-41dd-b74e-03af19231f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe229d8-c233-41ce-b4b6-d688e1a6e0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea48010-074d-44cc-a649-f327357756e4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dfdc9d-a780-427a-8eac-98e83c8f3e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452a706f-f550-42a8-af34-3eb97c3f7fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae6ea86-3d34-4cf7-a3c5-a71fe1d5701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31747ac-3282-4ebd-9c3b-604f1c9959fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a6a32b-421a-4111-8643-ca26a3134bd2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141105b8-fb56-4c7d-ad46-6bdc6e320ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd15dd0-5a11-42bd-b80f-d46c239fc188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4b8e72-0d73-4e4a-b2da-a84c313be492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "187c62c5-6c85-4dcc-8a95-aa96752de9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c8d674-e5c1-463a-9d4e-bf7616c5bb8f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5286923a-d5b4-4dc4-95b4-5f0b05b8e291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eaaa9d8-62d4-4440-868f-e9cb87de3fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2be5721-e479-4368-8988-f0be3a985cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb4b778-97df-4435-a96a-02abbb7ba5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5c58e8-1fbd-4b04-8604-288600c82e9c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "566ab887-2aa2-408e-b90b-cd1d1ff2b17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ed944a-44f5-46d1-b7eb-fa1de92564f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13da5e9f-21b5-46f7-adc5-d0675ae0cd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "384d92c9-d6de-4bc4-b9ec-cf4a231a11d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16799a1a-1f07-4511-8da0-2d13a12c01cc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd8758-caf6-4f48-bdf7-9bf5c3f8fb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a959620-cfb3-4594-89d2-3b3a2674a707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3073816-3f7d-4339-bffd-663d8717a62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27017a74-2c60-4883-8164-8304ab7384bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18e931e-426e-4c94-8a17-143ea32271e2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329c733f-a7d0-42b2-9857-370d94e46788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0f78f6-dc64-4653-98db-23bbaeeb53b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "139e7e0a-53f3-4371-abc2-05b7a023a898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "69074671-1db0-451a-9718-9ad09fee3a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c35c0ab-b6aa-4908-836d-10160964b564",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44647e1-6f72-4858-a4b1-5a2f1b23a5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3993a636-3409-4072-91fc-65ca39cd39be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e9acef-e618-4063-b3d4-1d40d1b3437d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "16c85851-2395-4667-b8ca-b3af8d693af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a065b833-461b-4b8b-8a48-086a5d7509de",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2caf78-c257-4f04-9154-6bf21920c65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b859baf5-1882-4e9f-9c8d-45dff6471d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400cbad4-6f03-45a4-841f-9a7f73da0ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5989da9-bf95-4106-8794-17e09f67d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bb397b-d88a-452e-b30c-664a70b06ada",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21be660-a05a-49b6-a49c-a3b0fda3795c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076390d2-3e0e-451d-8da2-d3e336ae78cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610d7a61-82c4-47fb-b0d5-9077a677e57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da8cb2d3-f774-47f1-bf0e-d48a04653f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4e7d56-06b1-4d2f-aec4-f6c94bcfae2d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011f6d17-121a-45f8-853e-cf4b924729f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c900495-b70f-49fe-ad23-d93aff348846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af639e8-3849-4931-9f61-625c05895dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec5ccfe-68e0-4218-b00d-ac0fc70d5442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8922a1c9-d0e2-4734-96f6-876f467437a4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928ddc83-6bb7-4972-96f6-3663082c98fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fadb2e8-9f1a-4568-8d16-88920ed37e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d370eecc-6be0-4073-98ec-5fb07a50c48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "092ff3cb-fb40-4f09-9968-ce5cf815c9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0552a1-acea-40eb-acf5-cadb27c937d1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85865ce3-28ed-409c-9bf4-9d4a270eb5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d5430a86-3a40-4928-a64d-0ccfe8680acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dc1d1d-7629-49fe-8378-0d4f7ceedfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a58bbdc-b021-4ef4-9c87-7328b14225c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4f863bad-9d54-4251-b035-80c25d045e0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3200079-aded-4117-942f-60e65bb99454",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bef043-e10f-4560-a9cb-ba910465795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb025c81-693a-45ed-bbff-5d55f99c33bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc53d525-ca7a-4511-a065-f5217557230a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0662bf80-083e-4a45-b803-841ece668682"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fe0ff1f-7cbb-40db-932f-482cd545eb00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "807ad439-ae76-4465-a219-99a58417cdea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "162d37d8-e7a0-4a0a-b0c1-2591049246dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb39e8f1-60f1-4bc4-bf8f-d674ed862fcf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b95badae-fe47-4b40-9c02-d3e5e80cf521",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a69c886c-043f-4608-941a-e2293041b3ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "832c3c07-6c1a-4fb2-89d4-0c1df26745f8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ea3b62d-aff8-4a4a-88e8-505c9b20e251"
                }
              }
            ]
          },
          {
            "id": "28640635-28dd-4e8f-bb1e-b011dfc23794",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9de1d81-8d07-4516-94fc-0c5337bf182e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1bd50c2-8d71-4b8c-ad32-c0d27ac858be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "053fc580-378e-4347-83cd-1eff5e56617f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e738df1-d152-4d11-b64e-5c7bd1a924b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b489bd13-b7fa-4f5a-ab13-e9db47cf13c4"
                    }
                  }
                ]
              },
              {
                "id": "4ddb95cf-bdb2-472d-9902-065f9fb2b1b0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a99686c-ff92-40d3-8e76-a8710e0625c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b38c876-1008-4206-890a-09b61174f208"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20b05ed4-480c-4745-b437-9ce2c90c4f1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7797bda-6f94-4796-afe8-f461ce627d4b"
                    }
                  }
                ]
              },
              {
                "id": "caf7fcfe-8bd8-4472-a576-c59a074489ac",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cbf3e76-2e4c-4b72-82a2-f7f9b991b2f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "832878ab-5864-4015-9bf2-ce163ede7994"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0abd6ad8-5e78-4633-8229-44c72c6f1bce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b391a96-4f2a-43d3-a9cd-778cdd92e91c"
                    }
                  }
                ]
              },
              {
                "id": "d557838b-8728-48c7-8ac9-069a1a704d82",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72add71f-141f-4f94-ac34-94f9a1306fd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80c6c335-b1dd-4f95-a553-a2ed2d6d02c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a74f82b4-395d-4256-a32c-31c6b26ee5a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "85fecc05-d1ae-4cbe-96e5-4bef6d83a6e2"
                    }
                  }
                ]
              },
              {
                "id": "7afb120d-7154-444a-b32c-f9252445e174",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e85b861-3868-4e96-b118-44116669029b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5098d72b-1374-4a93-820a-e26485a4c563"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3438d28-b1c4-4978-bc36-ed73e1164bcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c3541ea3-2f29-45ef-8852-2a2362cb20dd"
                    }
                  }
                ]
              },
              {
                "id": "0b3fcdc4-042f-4eda-a46e-0310819e6693",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27482315-2eb4-4ee1-a722-9da57f16273a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67c06195-d655-4a43-9ddc-1607c6dec8dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9399d249-5f69-4de6-8e29-94efba807a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee443206-2532-438c-abd0-2e163301694e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf4316f3-7c5b-42e8-b527-8216104a4e95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b51fcbf5-14bb-4f79-9327-3d8eff4b5d74"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c3b1366a-3c4d-4101-9919-4568e31efdd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ecdac832-a1ae-43ce-89ac-e59606ebdd6f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdead90e-c136-49a0-a422-212a1d904e26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ca50edd0-31b9-4878-9d90-d90214e37896"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "425cbd34-030e-4598-839b-882f057511cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b182dadb-c883-4e96-86a1-f5a55efb4e02"
            }
          }
        ]
      },
      {
        "id": "38f7c97b-8bbf-4283-b085-cb4e2f5dae5e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e8a79368-a010-44d4-8eb7-e41da9dd4adf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87cd60e9-dedc-4aae-8fe8-2e1d44110d0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fc70c2e-20d7-4020-936a-928776ef05ba",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aea46f0-7fb5-4abd-aebc-b3fb6c924029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1526b2d-98c1-4d25-bae4-1b4de7813af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4edc5e-689b-48c1-9c13-b5d2c90980c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc021128-88dd-4e26-84e7-cd771518a152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5159c63-25ad-4a1c-b233-d01d83550772",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63dd361-40c6-44c9-8230-2d3accecfd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60363118-54c1-4286-bd79-1c6b5e25acdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5fa8ba-5eda-489e-bdf2-9de1987f6586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8c3b74-0cce-42d7-87cb-74ca86dc5601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a1b780-0254-4558-8584-e72e2aee9e58",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d582e0-ec4c-4127-9f48-2a34941186b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f3d100-b12e-47e7-9839-5bfd1b777b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7cb0f9-9f8e-4fca-9d96-74290f808fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5163f88f-f982-444d-b9c6-354ca8573b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7a9f1c-4f62-43cf-b04b-c7141dd9ce0c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e632175-d446-4259-b537-a263061daebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaa54153-5e87-4016-9e41-17df85d82540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc35e26-ae30-4e9d-85fc-589253e38707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a52c3ae-a8cc-4420-8f52-a27d0287f30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19958e2f-9f27-4da5-b551-ded8d502a7d4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6a1448-9bda-4030-94a7-a0287e66d92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638be8d6-2f39-4728-aed5-6daaf5703380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8611755-0547-4d64-bf84-adc49199e968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbffd640-796d-473a-86c4-635056aae6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26df7b1-8e51-4a35-9b5b-6b633d3fa554",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba5847-851d-4174-803b-27b5ce83d743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15dccd8-4f6f-49fc-8ae9-4835cd5269e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9878398c-74b9-486f-ab05-7d9c6c5eda9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d130e5ed-fa35-44ec-b14f-4d0aaac498c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28555e2-7ad8-48ec-889c-199a278a7452",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988246dd-ba8a-4853-97e9-380d11b075b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029f3970-3aed-4c61-9bad-6900fe6645ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada0d05e-948e-477a-9bf0-b11152938bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "787dd31d-3e9d-4418-bb78-bdf572316044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4845a4f-752f-4183-92b9-d6775654c539",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cda636-9cc8-4f01-b387-657a686497e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abc68eb-c833-4219-b31b-488a5ad8d90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657a2d59-5416-454d-b486-b4f5803cb246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f23cc9-28f9-4f10-880f-0df406ef86bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7674b1-135f-421c-b353-f578fc5b189a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884892c1-ce76-4892-b2cf-2529ee0f08ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c309f065-f707-4f83-aa48-26fc81612912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d6dd75-4388-458d-9539-325d1f1c224f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90a28fa2-6d47-4947-9dc1-3865e5e87909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3036685-f2f9-4f9b-933e-d7ab762114a2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9b1e17-f191-403e-91e7-4b26ff8c6a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868eb9ea-5b3c-4660-bb17-f180cc35c09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c20ccc-aee1-4eb9-bac7-ed685c040882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35a68ae5-0ee8-41ce-a83f-10f1ed225492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f097e5d8-7b7a-4fff-9bff-695922f26dc8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f742169f-b736-454b-b28f-367025ef3f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e71328-a75f-4f63-a625-ea20d34c2d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33aabbc-addd-4d2e-b9b2-5f175ed44554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e8fed548-e4a9-4673-bd07-4510f3ef62fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e2d298-2b7a-406b-8a37-e77c21cee8f2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccb99e5-2749-41f7-8ea3-ec9ff3864a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a548c060-e9df-4cc5-b8c2-1dff7b99148c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c05d6e-2a10-4bb6-8d4d-9e6666fdd5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11e52b87-0943-496c-b427-6fd1ab6542c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399a77ac-2565-475b-be07-1b1f658ef2c9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6624520-0e6d-4efd-b09f-2363bd30ef2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9002ccc-0e52-4d5a-9394-51a5f051f884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b58371-8d87-4e3d-9056-5c0322527d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aa5804-d131-4d10-b240-5e966e041e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1b8ac8-2c85-4273-9282-76fd19a44092",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46899fc-74b0-44c5-91d2-c6eee31d1c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec814221-d767-4fdb-897b-68d13a49c7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0dbc193-be0b-461f-ad22-653b6e7c1d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8051efa1-c1ac-42ca-8955-cc7bab3cef44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e8c08c-4edf-4e90-bc12-cd830ea56442",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c215909-1dd8-41b3-bc60-7eab9c14549e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d334a0a-6004-46bc-9f30-5515aa5c39a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43be7df-8afc-40e2-8b59-a1fcf2d5a09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3b5c67-fb8a-4363-9f47-b2df0fcd983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac5605e-1971-455a-9704-2918ad8ed101",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa9242-36ee-4905-98f5-8096fd3439a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b434896-6ce5-4781-a630-59a079bfb909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ff73c8-940e-456d-a0c9-66aa399dc18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e471a5f0-14ab-42e5-a279-7810356de012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89aeb63-878c-42bb-990c-a4f838a71e83",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940a64d4-2f2e-4cb4-8318-a222175b8a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253cea0b-6aac-4a69-8b08-5b408402e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79fb680-d06a-4190-965f-f9a80447cc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e80f82-8b85-4325-b03c-9762f2e026ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281855cd-7500-4530-a935-a292179a2bec",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460ba5d4-1082-4554-a9b6-42e2118860bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84df8623-0783-4f6b-9217-f140062f1c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dccbba7-4b8b-4df1-842a-cc624d01b3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e04de93-8aa0-4c8d-b8c0-d113faf1c02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfeba24-94fe-4df5-953a-23654ba2e068",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682c0a83-891f-424c-9264-2d6849fae9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4b619e-5aea-45b3-8e25-82b74d1e0e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da806ea-0465-4e0c-8be2-6331cff5f5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4770693-d3e1-49e8-9de4-783d8b3733a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fcae0b-f558-4dc9-8ccf-0b4c8d1b98b0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e1f14-7912-4759-930a-d4703102470c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274ee1bf-0474-4d15-a2bb-b84e3046778c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f253201-8a87-46bb-9512-f2bb6c746aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0d09ba-24fc-40f9-bc84-4969f544a02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b14a8e-236a-49d6-83d7-9b668d6d9fc2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaedc17d-6b36-4942-9fa9-eef44cfa3246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69a4260-19ad-4fda-90ea-3aaed33d2fe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd94449d-3809-4585-b0ff-ec6c5052d33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "421de4f8-6c48-454e-97cb-5e89ea909b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2887cf56-cc52-4a74-981f-9dbca1ec2175",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1360e64-0c9a-4e43-81da-26fa74a1d32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d04040-17f6-494a-a5c4-ac5f58996f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9190e1-a81d-4ffc-8161-b17e7dedb3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a975ec0-33cb-4e92-a6b5-a645d1b72bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dea160-d908-49af-9fc5-f032dceaebe7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638209d8-9809-4a09-8bc6-098340f25f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59789fa5-584f-4ffa-a2ad-6f8b34e1d67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67d1d61-7fc5-4bbf-9ea7-d7df36f0bc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "898b6120-f786-4152-b94c-6df3ebbe96fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fba244-658b-4ac2-9625-2b3ecfdfaa53",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08715170-b8bb-4ada-a2ad-01881f52f3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559553bf-dc67-4e35-8a77-542baa3794a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723e5ecf-8a9c-41b7-8320-6a5c05da8b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "399d7325-6be3-4091-a0aa-3d50e79c3b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecefc13b-fed0-4882-ab8c-78cc0220fad8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcf5be7-3830-4821-af5d-a55977fac7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa72e5c-145c-44e4-bafa-f9a95d3c08dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d30b8c-7d7d-4f40-b69a-273fc75a32ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63bdfbf9-4881-4c40-9e1a-32c08b643986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e06e69c-333f-4486-b755-4feb3dcf4822",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fff3c3-b9af-4626-be81-84bcbf53aff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4b0a9d-a332-4f96-81d9-d11e2700b16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e85a1d-a207-4a36-a316-0f2e2337d156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6806f974-76bc-45d0-8c7e-5280eecb53a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49057d45-0d96-4b30-83fe-8e69b84e70f8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696b922d-674e-4e0d-96fb-981ed96d1c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3df458-5656-46ca-9bb6-0e48831480bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc5df30-fc2e-4a0a-84a7-af8fdbbf9af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf59149-0dbe-4b6d-887f-46f4226c7321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91f0129-109e-4e2b-a07f-498cab41bcd7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e419296-0714-48d3-93cb-73e127b314a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277ebf52-a1ab-4808-b7f8-e61175cb7056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f2b1a3-92d7-4aef-9346-d0cbf74c53ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2b4ac3-6dea-489b-b10e-012a1f222c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2192ad5-2d9d-44e6-a5c8-4bfd9cb0bbad",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad656130-586f-4533-9363-1b50e8623c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0864f9f9-f6ba-4500-a7de-5f32c58f9aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752196e6-ea91-40e3-957b-eb29e98dbffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768b7e9c-7a43-4712-8205-95b611c113cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4aa2c51-4178-4b3a-94f3-6f8357c49cff",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5cb23d-9a4f-459c-8d6c-1160bd710e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c239231f-be79-45f6-a78f-db62227e2867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0d9981-5ef3-4368-b0ba-e29262443650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0b7cf7-a969-4553-954a-f9bd9c2d3df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cca00b-a94e-4dcb-a089-5c38870279f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7fe434-4161-4533-82d6-40f50b6640c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9f790f-4b3a-48e5-bb03-b670800c78eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ce8065-f62d-44a3-9a31-806e686994b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99f6379-d779-4533-9ae0-ae502b1cdecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c032637b-0a88-44eb-90a9-5a2c018b3c53",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5133f5-b222-4dae-a7c8-7d6648325a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b88340-b8eb-484b-85b2-5c3e1be288dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b1cee2-ac20-4069-84e2-790068517011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d677fd5-d4cf-45e3-9f77-14f2a5266ba6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b67a013-d5d6-4fff-8176-481a26f30b4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82787c7b-f6c6-47c2-b80e-e4d564d9cfbc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd9c5b7-eb63-4c3b-8ccf-8325e2a9aa30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c54dc6e0-adc2-42d8-9f05-b45a2e19eaed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74945181-7d04-42ce-a157-f6294ee0a6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7a4da18-f97e-4df8-b9d6-a55a63fcb457"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ffe465-9d9d-4cc7-befd-7b3fc7c0464f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63f4be37-f4bc-44c4-ad38-e23d95dad42b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9a76a63-74b5-4700-be68-02cd9c7740c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "414d1f1d-ef0c-44d7-bcc4-98c21ccbac70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a22dd36-d2c2-414b-b668-6739782c60cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a5951e5-f8e0-4d8a-aade-b64fbf07b1eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d13b4777-c2b2-46f5-ab60-433d4647c63c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adb716f5-52d8-4327-8f53-49106629ca17"
            }
          }
        ]
      },
      {
        "id": "fb4ae338-80d4-40d2-8c3b-0c13add43064",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d0ccbf44-39c7-4abd-b748-cc4297640b65",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ecac2d8-fdb4-4b56-9b68-53e21b73b397",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0873b8bd-c8cc-4d29-8291-021d53235467",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57af0ed5-c832-480f-89fc-81aa51751dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11b409a-782a-4763-b9b6-94d420848655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d745ab8b-3e4f-454e-8d51-3c5989944d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "871bae4b-d0bc-4fc4-9e32-66ddc94f40bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b058686-e7d8-4918-b7ec-3425d4cd4f21",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c46c43-0ca2-4240-ae91-1da840320c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c61191f-6d54-44a2-9c2b-a221be02df93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1263b800-eda9-45a9-89c8-332e46e2dcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db68bae-7054-4316-b525-1968916457d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d8b398-b2ae-44e1-94a1-88ed4798f935",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a89efc5-3a02-4961-bc3a-9080f9883b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8cf3b85-2938-4d85-bcaf-1427efa2f1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0df423-36d9-4bb5-aa6a-915b22ee7211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db37103b-7033-44eb-b9a2-61caa85f5d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f59c7e-f21d-49af-a173-73362e015402",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c429e6-d5a3-4c4a-ac45-3ca7fb69dc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78277a79-e877-46ca-88b3-2ae7d4235e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85523b12-3b27-42cf-9d0a-289e8ead2543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "385151e7-68e1-4cd4-bbbb-aa70edf35d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dad38e7-892d-4081-8247-62dd92de79dc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5b0039-0470-4eb8-ba0a-bc36f413b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08238858-8353-467d-8ff2-f2032154dd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8ce938-1850-4e65-b2ee-1116e150f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48919825-96b3-4a23-bf1e-20ab46d868f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80514cba-a462-441b-ba3c-e3b7c4ec3617",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1928de10-7f24-4da3-a1b2-7cbdb5762ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b807a6-dc46-408a-9cca-3d8eb8457e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49342ce5-d05f-49f4-9822-75eb9cab72a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b44e474-cc68-42f7-a354-45974b09215e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d5bf21-a64a-411c-a589-b85e8017ee3a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627e45cd-d346-40eb-aec5-28a37b86c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c8433c-ef93-47cd-bba6-4c16f4bccb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf92995-8c3f-468c-bbaa-eb7a787d35a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3adbd59-8fd8-4762-8238-3448f6c6de2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538552d1-e8f4-46ab-90ab-c1231db7efc0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a2df94-257b-461a-bcb6-fb8768d7d567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ba258d-90d8-47e3-a967-67a35f1a2408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5641cd1c-bdf3-470f-b655-96cd33e66bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "acfaeb99-4b31-43a2-88ee-aeeff89a0eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e11a3-9380-4f17-b101-6cdacd1a4a0a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5162b2-c4e9-4f8e-9be6-63227b255a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82efe605-f67c-45d1-8854-386cc4e4c89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35eb8636-278f-4bd1-a9ab-8d9a2ecb361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17925fa9-c012-4d5c-a4df-a446866ddc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3d6c7d-6e0c-4a91-9772-399624a6ef4d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0d5ca1-8e2a-4b0f-8b08-5d66519d2177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d200da7e-0da2-47fb-8dd6-28d681e2b871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86c7621-0ac4-45d7-8920-ba08e2515f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3863135c-939c-4248-a6d4-8124f1ad9560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d1aa27-dfb5-47fb-8f1d-672c43565acb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa08cd1a-328a-4cb3-82fe-5da507129be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680e734a-34d0-4f67-9feb-3d8321557c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da29bcb5-067f-4287-a3a2-7f3f94da4779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8cb455-b9cd-4902-bb5f-532244036b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c9418a-c673-4968-88b0-7c678f309617",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150c1238-2dd7-42de-a7d7-111f0362c1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd1a0a1-9471-46f2-9576-eb970a64a3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0dd0ff-1769-4954-ba3d-3b345af79167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd7d227-945b-458e-8505-8bacb7d4cf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba5a95b-26b5-409e-a076-8b33fd18ee4d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b4813e-86f3-406b-b5a9-0c10fe901a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a50ac9-6da8-4172-9b20-9dbf8e3c8c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393934c1-6660-4222-9020-f70d8dc8363f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b30afa3-ff7b-49d1-853a-1c4bab90cfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975d4065-43e4-4a43-8a6d-ca55544d3767",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ca04da-d901-4009-94bb-c824a449ee7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9352c66b-9d44-459d-afd5-20b26d4c1918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc49c7a-05c2-4810-b0d3-5540ce295128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f070d99-b6f7-41d4-83d0-608a2527b6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a5124d-bcef-47fd-84c4-7171e8b0c380",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4787b8d6-eed4-4583-b942-cc691503c586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd52c83b-d90f-46c8-8c80-630c69e83215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2557ee3f-da45-4c35-8a5f-f295be311792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f484dad4-8a81-4a20-b010-295338a8287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a16b9b-752a-45b4-9df3-11869b4bfba0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a09527-ed79-448a-96f4-e53212194ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c346fc83-110f-46a7-9aa3-3c46d7144c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fa7275-a947-4225-b6d1-beb974250891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "01edc349-c660-4e9c-96a4-efcb12fc34c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e160de4a-f18b-4ebe-9f96-0ce7449e7b38",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd85b38-3e94-47a3-b231-96bf55603ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98923ead-4d9c-4a58-8d90-0833a2b9db3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df714f5-c8b3-4f5b-a282-77b8a73eaf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee13261-e00f-4d7f-9db5-d37ef6b54e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea96cab-10b9-41ec-88b9-9e7a10d86f32",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0e91b6-b478-42cd-9a42-079c6d1e1970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a503b7c-c63d-46aa-bc06-a8994b92c23a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506c4f66-d792-446b-b8e5-35611c5150d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dab1667-a8c5-456b-85de-45116ff35625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b865c8e-43b4-482b-aa6d-f80d09fa5650",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb185d8-d723-4595-9098-f89908f58c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3a6c83-5088-4d91-b78f-5df0149e26cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb6f4b9-726f-4249-b9be-a04a17910008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bc18cf-0105-40a1-aad0-d671b42d3d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3c6201-7f60-49f4-9869-3a5ba1f46ca9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0263684-8a2c-4bd9-93b3-cbe5a7e31da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cba53ea-34a1-4e9d-9206-54c1ae9887ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8e40e0-5032-4fca-8848-90198a61c5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac87c04-3829-4a77-b7bc-a20d18746aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ae3b5e-b09e-467f-b82e-dbd127bfb7c0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e3c62c-81d1-4c75-9fcc-9a79bbde9a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7350afc3-8c5d-41a7-a579-47b69ce92610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c21beff-af12-450e-bc54-a5aff1b04a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a25051cb-d27d-4df9-a90e-8889d74044d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9edc88-07c3-40c5-871f-08edc6814eda",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94601661-6c80-4c07-bb8d-b548effa8dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ae3311-1c2c-47eb-b0d4-e9b9d691aad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2644af96-67a2-46b0-b2d7-2f9ab3057eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6fe6f4-410b-4366-80e1-1732a3f9900c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f6a9b3-1df7-404b-ab4f-3472b3033b85",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4741df3-1635-42b0-8263-c37104ec33e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e167bdb1-fa6a-4ce5-833a-1f491a546a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c94801-a45a-43d6-8623-a5fb63a86456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1462ef-8a23-42b2-9107-85bcd1a86a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aedcfd-a8db-4110-ad64-9855d25a53e2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c431ee09-404f-4f28-9bee-7b38bcb77252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38da6ca8-d2f9-43c2-a439-d783ecd6c5a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533d44d9-b195-42c3-9729-378296236c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1193683-8cdf-4288-b740-84fd054e39d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74070310-490e-49e9-bc07-4763e38364b2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7b8be5-7e58-49b4-9da1-831382ac67b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ee797a-539c-4cb9-8a78-023489caf438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecb1149-2071-4543-a1d8-5f1504e12c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec18cbd-634d-48f7-a306-5294570f63de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56418ca-adde-403e-be02-b4598da39b08",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd56c01-c050-4505-a73a-bd15e9bfe133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102f46b3-d506-49bf-b799-0c2a82846d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fb7a49-566d-4bdb-9497-4c4399e6113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b70d4fae-fc50-4f04-83a7-a213d08092d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c574c25-7493-4e12-8f9d-594f582b9ab8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "755970a4-ccc1-4b31-a186-821480c00393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9df5bae-36a2-4992-93ba-c541a9d9c8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8547c865-07fe-40ab-b774-30a51cf1a388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33c3da6-f392-4c50-a645-5fc27f983a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e017d1a5-c27c-44a2-8d9e-eb38526f5fdc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfe096c-dc63-425d-87be-a90fd1a24905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583ba976-6d1c-46f6-b8b7-11bafe2ef73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b187863-a904-4bc0-a110-ea02e96bf7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41803d56-2dbe-46fc-a943-232360cf4f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256f843d-92b5-4d92-bb8e-6d2d2368a65e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5ec335-2fc1-48fa-acab-838fb2bbb44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5342b5-c156-4441-82c1-0d696b106819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c092cd1-38b9-4b57-a9f2-a712560d54d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a4e152-32f1-40e8-bb45-2d09a5ee830a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52e2b1d-d2a6-4ae6-98a6-ee4e2a2016d8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2ab2fa-a058-491d-a0a7-917f8d1914d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3a4a09-d87e-4eea-b2ec-b44a5a95da56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7add91e6-9dfd-416d-b666-e34e403add18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e926262-fb7b-4900-ae81-093ed57407f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1329956-90c2-4507-834e-cb3ee7e06000",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81fa2f4-22e4-4f3a-81f7-f97bc769a97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d28cd2-d52d-470c-85f8-ad7a6ff68dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f673f8-0b73-4c46-93f0-fe486a113c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67f54d32-2ecc-46a0-9d6a-3a5b0ea88ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc3e2bc-2e5f-4fbc-ad07-30aca917d605",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea05dd9-dce8-45a9-80c6-a0448a8e51ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade36d59-f288-477d-93f0-f1110381fb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175d832a-fadb-4e7b-b2d9-14b981040470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea7431a-b002-4b20-a134-57d455842531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080c4992-4c6f-4b2c-a15f-6584f1af312c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d984303-bcba-4285-9964-572073bc67f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809b9e8e-e17e-4730-8894-f331bd96233a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4abd757-1d8a-4b51-ad57-853353444ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c63939-9e6a-494e-bfb3-67ec007e372a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1c4e63-901a-4cee-8c4f-67d80a8a7d33",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cfb5b6-766a-4a23-9a32-9fccac54e210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5113ff-cb05-46b3-8270-5b0ed5bccdf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc23daf-e781-4c8b-a83f-6766a0f07b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19ac5bde-f3ce-4e6d-bfef-e90795b301f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6751622b-30c3-4f12-94d5-428c7a74de3a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da872122-7296-4a62-aff2-760203084e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da45599-e7c7-48dc-a203-e10bd55fd5d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765ee4db-9488-4d46-adab-bfd53f9b8050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd9f957-a943-40ed-b23d-35efb794290a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece443fd-3f4e-4af5-8592-12d9f69d8083",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d993221-446b-4b11-b0d8-6f9c005e7b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86e9308-adff-4249-a6b6-089c9e2eaf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1383a80-2b8b-4401-9bf5-3fcadaf1f9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f92d8b-8b59-4a43-9736-0cb7bd06b7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335a2aca-d68e-4e02-a839-c930f9328832",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245c1351-edc3-4088-9dc9-ea599fa1fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03669da2-2767-44ca-bfda-cb5d46bad0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d807df83-2424-42ef-8af4-e3fd3094a3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f70f26b-95cd-4e65-b8f9-6b02ce36b8d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "034024a7-4398-43cb-b929-0b3133ccb91e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a02484b-9a80-4ffc-9c55-1fb58098bc08",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a89db7e-dce8-469d-a802-70740316827e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa55dff-ba54-4de4-966a-36fdaccdf1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3c7fab-6905-4e2d-9041-b1a9d025f6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be7b4cc5-d0a7-44fb-b322-4e7ee1f98675"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8860a082-c744-4ee8-a4d9-e4bff6d86ca8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19e802b8-4b02-4ae6-9fd4-e978a7761e3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6628b3f3-a0a2-48a4-9df9-0d1cfbfbf991",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc6f17ba-d183-4348-809a-5b6899f55b1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbbb80a1-0863-4316-a236-abb7282bd956",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7aab41fe-07f0-4b09-abc6-386ab2faef74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff5e6c78-f60f-4ae9-a9a9-f441d7518e14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34cde303-74ac-4d43-8a5a-e5a1a133ca06"
            }
          }
        ]
      },
      {
        "id": "a767147a-c780-40c0-ad08-d2fb646cda39",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a043b365-6bf5-4737-bb82-cb3b2ac65613",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ce1e085-a257-4b02-8282-126b8790ba16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c735817d-1c1d-44bc-b70a-5c15125e55b3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e84a57c-ca25-4de7-85a5-27d1817c0a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1015ed-342d-4bcc-a6eb-1b291a0b405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57fc829-749c-4765-a936-08d44305d052",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ad441d-3044-458e-8e16-04a8722115c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174860a1-ac9b-444a-8188-2732b23d0c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daac4a5e-489c-4289-8df7-4d444fc17cc1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc3e20c-b70b-416a-8119-3e2df54eacf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8f3602-8e29-41ba-93d1-a9a32e58a4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872d6f00-32b6-4219-b541-a192942d2a80",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d6ba0c-e9c1-40aa-97e3-3e4cb29091d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2bc703-fd40-43b1-bbab-02fa8744e5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5f0611-147d-4dff-9252-166f6e68cba0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17aa78f6-821b-4339-9c0e-87e5598e8410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef64590-65e7-45ac-be2e-1fd500c036d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70309c50-a4d4-4add-ac52-c828810ff8c8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4081534f-714e-4e69-9fee-08cb382ce6ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884537ce-e3dc-4b13-ba5f-8971aad24c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891e1191-fd02-40e1-b6fe-f8a010552dbb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ac819d-1912-4d59-9758-e908b863e8e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315be6a3-b64b-46fe-880d-6ce0d938a5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1d2b04-7677-4701-bda1-ea51c9ce8012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a8ff29-be5c-4f0f-9b72-cef00a195f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2c9c07-b3a9-43dd-b809-a912edfaf5b9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc67594-4ce0-4aef-b318-97b292576441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa135de-0193-4cd2-a58a-3df4a3126570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f842ca7c-ba46-45e3-b64a-f562d54e0d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0c4621-581a-489c-b6f5-ee6883c4e455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216fa646-bd14-486b-bbc7-0f6268dc5273",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801e2378-93f1-4e04-866d-08f264266fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f08226-7d35-429c-b8ba-ef4b685ede83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ca5f1e-70b0-4e0e-aeb1-8a6d17b46aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197f8ea8-fa24-404e-882a-505210157bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9ed36e-9951-4699-ab74-1ef7dd110f85",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f51022-f58d-44e3-8f12-3d2e5bd1b050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb476826-bbf4-495a-9701-f7314a4aaa4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eccb3b-bd62-49c5-9eac-818dea25ab41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9e59cc-824e-4d80-8613-f5b034f90687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f0683f-bef0-4a9a-9735-059a28ada801",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6e242b-009a-47c2-9aa0-70ef060d0436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483d4ee6-08f9-451b-933c-e50acc1e2c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c28697-d5f3-4c2e-8fe7-800dff438dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004d4ead-cc57-4836-a98f-7ea30411f51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e4d6a2-b5d0-490b-8def-e0fda4007cf0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81288b16-4b6b-4649-842f-2433b951cb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ceef70-eccf-405a-994f-d8a83df10fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd44601-e89c-4a4b-9c95-c599f42a2047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5136c7c6-ebb1-43b5-a8e4-a126b2ad819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e268dd-8743-4eab-b2c3-fac8e963a876",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb48db0e-6780-418c-a77d-53bcf2e32ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5598c0d-8504-4ad6-ae17-6067a707cc66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec886b98-4a91-4c5d-ade5-0f17f365039f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce59d5e6-d328-41fe-a5a7-765c28721030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c7d172-5235-4c1b-8454-bd6fa4b30a25",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad7da1c-d01a-485c-b1ea-1ef21b013486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73f5aa94-14eb-4e63-b07e-cb5861a05057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea76ae1-48b5-4384-8462-d9d15643b259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3626468-f069-4619-a118-3a287d264f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea9d89e-6705-4bcd-91d1-a23779abd850",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91824c72-5c87-4e42-9384-67b127858014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79eddc8-af7e-452a-9b35-5e1b76e255a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e79604a-9712-4960-a86b-7bcec40ffbd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4f54f1-b5b9-4509-9c20-8ee41812f81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab1a15b-2a7f-4f84-bb87-30484adf70bd",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7535e75-a0c8-4cfe-8a6d-45a4afa948a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffa31024-2d5b-46d2-82b0-9338871bc287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55491dda-0f05-4ec0-a9da-cde8ec44c823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3675c607-d58c-4429-8740-de3e293f88eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df2ac81-283b-4827-8b12-889c3ca357b4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da038312-9c14-405a-84f9-07ecd2d2f530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016d3a3c-d61a-4355-af06-1d5dcf58c3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f691409-2832-4c88-9cca-2a8bf0134c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d85752-3101-404e-8577-c35969b6a9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a309ec86-2cf7-420f-a730-1495537f633a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0521df-af4a-47f9-a20c-30d73e7d4470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183d8772-bf73-4a96-aa22-d0819e3ecba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a8c839-8974-40c3-9b7a-4e1ab6860270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24468983-002f-43da-a28c-017c01761db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b179ec0-ce3f-430e-a56e-c040aa40f91c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aa680d-82a4-4704-9b8d-bfd7a42aa746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57173801-383f-43c4-a5dd-34a9bbc1a177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0e3ab3-8201-454e-8efb-b7f15ecf5ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c4c44c-d73b-4115-a99a-509fc4b58326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a46968-3b3f-48d3-b160-c67a05dbdefd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cef1300-249b-4256-b987-32f4237bbc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53bd41e-690b-4dc9-beb2-855ad8b631eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e09738-c986-49b1-ba2d-e90e7169555b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08f7baa-fec2-4e8d-a7dc-dce241a50cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107ff253-5568-4524-992a-fbb1c73714bc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39ec0e0-720c-4935-9d35-2f5d590e09ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04b1d2f-aa8e-42a0-b150-ec13132fe3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0997ad-0125-41c8-bdd3-52e284bc01ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ab41db-61d3-4bca-b1ed-36f5a51fde31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10ab3bf-ae51-4b59-a3c9-4c6734f5def5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca8cff3-c978-4dfa-a246-d0e3cc6ce4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1277c1f6-357f-4dbc-85c7-242662fead3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563d6eb4-9f18-4b8e-8e44-c25426335939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7686ab3a-c527-4a2d-abd7-a786d33a06c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e83d8e-e749-4d23-ae9d-463867f3b4b7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b044a1d7-f9a3-4892-aab0-3c5b12ce4d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30ee6ee-735c-435a-83e3-ce69dd810b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40641ffd-bd32-429d-9402-d6b31ef8cc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c58ffc-855b-4247-abd4-8cccd21a0d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e0017a-61b2-402c-bda1-f9c973d57230",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860c0cd6-2f9d-4920-b726-8bbb6965d750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84942190-1b2b-4e53-b930-f920bb4b4cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae8bdd5-dbde-4901-9faa-0b1a066bdc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c1c44b-ae87-4886-b63e-d6297cfdcdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74c92da-ab2a-4f12-b87b-9e26f80ef973",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ef2dac-e42a-4660-82e3-b0e676b873e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885b983a-41e6-4085-8b81-013a6c025d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8026d2e1-5804-4442-baef-ae43d33dbec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70ae33b-2916-4848-bd53-4d11aa55a9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f6b62c-0288-49d2-856d-96ab5ddfd54c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18928ea5-c8da-45b2-8de5-eeaed3a9310c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a6b3bc-18e8-49e4-b1be-22c158665a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dec745-ca95-4b80-86e4-ea39254cae8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d84b994-24e3-4160-9b3f-f3d72c4195ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4326b33-5f50-422f-8c55-d199e2defb64",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3e4311-967b-4c2e-a3e5-1f0ee2e4345d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e40241a-2686-45ef-8816-9463e4e0a3d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ac337c-401d-4435-a0c3-a514af5962c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329828b9-4e6e-4f16-8e4a-30fae6c6fe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1552c4b2-0f16-4767-af91-cd3ed3e31250",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1332ce11-263c-4bb8-b38a-3535377ca08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ad0fef-3e52-49a9-ae89-9d096c84a9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83eb6d6b-75d0-424b-b005-236e5b211311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b381ce-b910-4562-9c77-7418e2c4ed71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceee6515-18e6-4332-919a-7a2a56a7d12a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb53288-c56e-45d6-8f6e-06f599f2c138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c4b8b2-0c2a-49b6-a697-82b365dc63b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5126eb40-0b9e-423a-8e24-622c43cb81c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d87541-6e5e-485f-94a4-ebfdb8e8bd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5e3cf7-f14b-4f0a-8f57-38ba95bfb613",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2147a04-5bff-4ffa-8425-68f445a51507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ba36c6-e7de-4380-b6b1-cef241f8de4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb44979-471b-492a-b81e-f2476da3bd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13186f6b-ddf4-4c9f-81a8-3f798eca43c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca75b689-f330-418b-8ab4-656c62bad37b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae6b6e9-6de0-4f08-a135-6e3ac0661de9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3fa4930-11bf-4b0e-ab46-6832406cb301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81367eb7-5eba-44c8-9666-07725ff4566e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e789c704-d976-464a-8cb6-8eb28cab64a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59096e2c-d7e6-4420-acb6-8394a290d76d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99db2162-230e-499e-9b7b-31e107dd1b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c5fd5a-0896-4bff-8999-ba1a6b478a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e29fb57-56d6-4715-b64f-7c55677ef7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637fd763-1923-414a-9a04-8a11596ab3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ceca0e-0ce2-493f-9506-0e83e99ab52a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0130331-7230-49fd-871f-adf1c69e49ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18286540-4fa8-4f8c-8e9b-2b2d0511df69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b433779-f475-47cb-be14-de51b5f3c023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d282cdd-e6e2-4882-937d-76cb7b9fa41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934b4051-c132-4aaa-be72-593930105fe4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c794a728-e59d-4e8f-aa7d-05c62cdaf99d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f830a2-5ee2-407b-857a-6185fcbc9396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "038f7cda-b475-460b-a602-04c480b49db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd21906-24d0-43c1-bca5-268a10282540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90cce09-2222-4d01-9f2d-37928bee792a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46299884-464a-4cdb-8572-ab7aa19869fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c17b531-adef-4dc1-b91b-56ee549e770b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a8471e-a4db-4770-8d2d-ff04e8fdbc85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2a08a6-af70-4f59-b80e-9ebeeac71ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7825f6-a865-45b6-8914-14fd8fefc39d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7f5ad2-60c2-46b1-827c-5cb9411c5afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18014fbe-be42-4ab7-a860-c546c7b56893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47b35f6-4f13-485a-ac5a-89fd9a2a5822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2347d3d-96bb-44d7-9101-a8905825964c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fdf2ef-c650-488f-ba20-26efca95e8cd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1fad77-b4a4-44e2-b704-a5f56551b721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7e2f6a-f9c9-4732-a0b3-40e930dfbb07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a51143-4969-49eb-9aae-44bf5be03d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dadc25a-985c-4ea0-9539-4d94f442ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a354bd1-7556-4855-8e66-14edbfb04de6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad13bd0-d254-4cd7-8001-4da2735756d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb59dfc9-119e-4fc6-a7d7-1d26926e730d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aec823-4afb-486d-9737-7221d1169207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f39c0ba-99d1-400f-a632-e1117cfb6ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917b53f3-5397-4d66-bf71-f250bdb58b6a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3761ef5-6ba2-4c74-98e3-c643dee2be18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cb3396-21fd-4eb3-9e04-5f94c130c894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff19ba7-03b9-470d-b24c-8ccb9bd9a2e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6f2c3e-5176-470c-9c74-2f8435f9bc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e2b30-b76a-47e0-8334-00c5df1886f2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51478d2b-deb1-45a2-963a-c225b211d855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b13e73-c1a0-47df-855b-dbf4f36ee00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e16b93-b62f-447c-b7c2-e39e4ee170b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d860634c-8c0b-4193-88df-7e21b49db2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff948397-ebf3-4090-9f51-b4fcc47520f2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f55f99b-946f-451a-9408-3a882f59494d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4d11c9-e597-4cd1-b5db-d5a8fd478233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59463e66-3ca5-448a-93ce-d78a88ed1da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adac7bea-9b74-4bf5-a2e2-5a9778d8b415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364789fc-bdbf-4f48-99fd-7e3e98ec0847",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e4e347-2da8-4626-8dc5-973fffdca4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f6faa4-483e-49ea-83d5-d10dc709dc1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87504975-0dc9-4ace-be4a-794bd9f00c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881424aa-5533-47f6-b096-33ba1d4d3cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7cc5ba-1fec-4491-b538-47ad7c08d704",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6d1f01-a3f9-45aa-867d-0e11fb918fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd092d8-3bf2-4e31-ab1b-6ec8234e6ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ea41a2-e250-4db0-9d3a-05af380fc964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae5d6d5-f8c0-407a-baf1-2863e0c271a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105d6af3-050c-4a89-a8a8-3375395e9d34",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03f87e8-afd1-47e7-9a2d-5421798d05d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816239b4-4a01-40f0-9d82-5c379a71c758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e2cfa1-4380-4df3-8dbd-bb06ebdb31ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c17ab7-7797-4e82-8fd4-e8d6c9951ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d4770d-a8a2-4569-80e2-98c02f4701a9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f7eccc-3528-4343-aae0-214e12b52214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f38f4ba-c8d6-49ca-967a-66147b9b63f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7510971-692d-4e46-afe4-3061879a5f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd154618-b002-4e68-9206-a53e81a78bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436923e2-7f50-4019-9e00-2c0e6628bb46",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65320ea9-b3f3-4f71-a0c0-8ad256490fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac316dc-3c19-41f7-bb53-bf96c9bcf9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fd8aba-2eac-4278-b522-8430ef9f9732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7ec878-4783-40e0-bc56-8d8f7e73fdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90d0b07-8994-40f7-a308-9bdb543aad22",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87a7a16-97ea-4d35-af99-16e30a6967b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444e685a-a774-4224-bce7-f019954bf97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef75830-98dc-45bb-8fad-2ce1d52d051e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee74452b-0636-4533-b9f7-194c72393d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a7a3d6-c53d-46fe-81bc-5a458a9558e7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f8d6cb-ca46-4c70-8494-37a3e7be0cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b54e4dc-c055-4d4f-9757-aa7b065fb73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecc199c-aaa3-4825-a4bd-bdb6451476eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ba8233-067e-4aee-aa39-8d9452f0d97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcb4796-e9d7-4cde-8855-870bd87e59f8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b34019-6cd6-4228-bf3f-a7d25510c6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd8aff5-1ad1-4120-a6a2-1ca8c63c07d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be35a52c-1924-48da-89ad-bc7a35dade79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ed986f-4295-4957-90a1-ce87fae1623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497c55a4-fd8f-491b-a2bb-31abd9c6a7b0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd6746f-b68f-4073-b43d-758f6f4ce7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837d76d4-ae7c-47a3-8a30-6ce0d50f6e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2c5d8d-eb8d-41d4-9715-a83e81fabf95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ac45c0-806c-4253-866c-c2f2e0acd1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6785560-b672-4749-88e9-451cbfab9345",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f182d6-418f-468e-8fd3-6a5458998700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e82c0b8-e048-4e48-9a29-47b3a37757d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3605112-af44-4f59-a32a-deb0d0e2efb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2735f008-bc7f-4592-b573-382976e3c45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06cb253-fd9a-4fc2-aebc-553cb1c43c92",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c26f09-3ab0-4df4-96ec-31187287c48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c165f6-c037-4cc3-9226-b7e22882eb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af52e5b8-3949-426e-8609-307c09228405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ee4ba0-7b49-410a-a06e-2db8cf1cd275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82735b9-530b-4520-b30a-47ab76c3d70b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6a3051-4cdf-4ad4-93e4-1ab08bdb29f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000f0c91-1513-43fe-9f18-aa36a0c9c8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76567dcb-fd86-4df9-a56f-572b448e57af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca057306-9d19-47d0-89b7-e099643b94d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc6341-f137-478d-963d-79fc5debbc80",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f3fa9e-eb57-4b9e-b561-e0a7944bbb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3aacb8c-28bb-4460-affc-65757662c603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37b6a1a-abd2-4b21-a4b1-79880a01cefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798a5666-dbc6-4aa0-bb38-106d6097d0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e95d26-b745-4b14-b935-222ade7b7a26",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1ab34a-d356-478c-9b80-b2aa748ed112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907fc0d1-78aa-49af-8acf-d2cb079e4351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ea5946-360b-4c86-bc49-075a101e2385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4aa168-12d4-4b26-9a13-09e73bcc6204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac35e44-6a88-42e7-af06-fd11414602e6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d636b3-7aad-49fe-8118-5c2235d0f2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4119be-c9cf-4d43-a0a4-a6ff66124522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac00b2f5-955c-496e-92b4-32154b940145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cbc224-7a19-418e-a3f6-4e267d89141b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ab61d5-c398-4846-a116-556462c5dcfc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c54f95-9887-4547-8c0e-8af8ded3446f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c672332-7e42-4a12-add1-832d30fe3e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3699dd-4e0a-4573-82d7-3b91f98b1036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7351fd68-10ba-46d6-ab07-29f21b4f8e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0968fdb1-8c8a-415e-9dbb-355f8dbf85fb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac44bbb-e614-4abe-acfa-721d44386c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f7e33b-08c4-4eac-a931-43194d927bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e496639-710c-4cc2-a4a7-64abdbaa806a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06acee47-9696-49cc-8abe-0b8e78b1987f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c4f71d-0722-483d-b60a-670806e41c17",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a12808-235d-499a-9833-f87b0020d1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00086720-eb9a-4b56-9a77-81293e557046"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667cefb1-e268-4cb4-b488-6cc1b82bb8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16517703-99c7-452e-be1e-4543628c8332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348003bb-432b-4a8a-9a1c-f28d7c82d694",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1906bd-2b63-4b2b-866a-d84a046e6838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543dd4fa-76a2-409b-b76b-87a24fd4ee29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5106f5-98e3-46f0-9966-b85edf2b92a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b572efda-f4ee-4e3f-b62a-45b0b0a1d204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519470ff-8390-4ce8-b984-4a45ebd1c049",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973c5ff6-4164-4520-afa0-ce217221935d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455cd4ba-ca33-4ec6-a34b-e920ae187973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d97f517-34f7-438d-8eb3-ade4acbce058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967d96f4-97cd-400e-880b-de57ca502b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48824b96-cda3-49b6-b841-9df661154390",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82805cc-ae3f-429a-af0c-2c13d1b4f827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63287a1-869b-4d9c-8f58-4109b8c08758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbf7731-45d3-49c0-9b5f-0ff61ad4c614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22c6e71-15ac-4613-bd54-084b693b1fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79706234-1596-4680-8d1d-4117992d184a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64f56e9-0f2b-4466-832f-699252a904cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322346e5-d87a-4ccc-bc36-b991b8ffcfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eb878f-72fd-4b66-91c3-f69bde1b54ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9983f97d-5ab6-4f46-8c9d-c19616c3e281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5354f0e7-e743-4c10-89fd-fb3446579034",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277aac58-7db6-4995-834a-a55feb7539be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65809d11-74c2-4370-a225-609796b0d03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d39054f-5032-4a32-bfac-eeb7944202d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d783c92-4322-4870-8cee-b5ae7232ce60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17f3b4d-f463-4cc6-aca0-2bd91c8fabdd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4170cde-310e-40fd-9853-5057ca6478e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28f0e3c-99f1-4f53-a3b2-c55bbf716268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dcedad-d429-48e7-b5ce-56b004723726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c75fbd3-c45d-46df-9723-89245a1c16f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b753e4-beed-4b88-8d2a-1cfd8136fef6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcae126-20f4-4e1e-9adf-5a53ed623bba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be2784d2-802c-4204-8dae-539a0465673a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ef7406-d957-48c5-ae58-a9bb29563df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbca3cb-faf2-4629-9cd4-5f44d137387f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f157e0-8003-4091-8110-acc9187d9227",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdf44ed-0184-44b7-97b6-ac01117316e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aec6079-a006-4224-81fb-db91cfb27d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5057d9c-db8b-4bcb-98be-cb1b07b43a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6326cc30-505a-4171-aa0c-22ef39d3fe22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b661d7-c8ab-4cd1-8320-c6b7245ef3a4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ea072b-eb0b-494a-82ad-1488bae9b4c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17502cb2-6f5f-4db3-939a-4f5137f2b500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6ef8fd-c455-4111-9353-5d8e2a768660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03927dcc-b4c5-46b0-8706-c38388af9362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874f1be4-35df-4217-80cc-63bae6b10163",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8668982-9b69-41e9-832c-58fd2a236669",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7818a8-4606-4cd5-93b5-fafe87641455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c61304-3ad2-43de-bdb4-0ca66ebf84d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e8f4ae-a437-494c-a571-f7a6e3cd987e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e52abd-3016-4c3d-a643-9c8e7cb55089",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bceeacd8-74cb-4cf0-b835-88f67442f2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a4403c-832f-4c46-8096-e5f5b671cc44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecba2a7-0d87-4a5e-b6ea-9f617282de2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e31a399-d535-4649-9b69-c759020885d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90915f6f-f3bb-41d7-b3a1-285871426248",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0b0cf5-b65b-430c-8534-c0d63293cd38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38790df7-3a72-4bb4-b2c3-7073fd82f0d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b99b80-b10a-4e79-9f90-db3722d70189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8c3453-ed87-48fd-990c-9dee4a4fea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee784efc-966b-4455-86e0-7d4024dab260",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d412cebb-7b28-43ba-8bc8-98968d62d785",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "971e05c2-aef6-42ae-ad4f-1100af74e6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb87659-3326-45c2-9973-8715b23515c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7de016-f5b2-4e6a-a187-b8b92bca5773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdddd761-4818-4912-9f8f-8918ee28b435",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac336fa-5dff-4de4-a970-e86e88c84cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a758608-5232-4bb2-ae5d-67943fe6b4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4d4172-9575-43ed-b773-d2e5f9e3185f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cebdf55-8acf-4117-9c2b-ba56b662911a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff111c4-b0c6-4ac3-8ef1-58ae4292f383",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2421f0f-02b9-4bfd-98f8-00b018cf8c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3286fd36-f2fd-4421-b33f-17a99f43f126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcbed1b-7b09-462f-94d7-e8860a0be3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae858fa1-905b-43c4-bff2-22a9824f181c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b43692-ae41-4d81-9814-3a14e48e05bc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de2183b-3440-47b8-a968-f8b362439734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "162f39c9-5848-4f72-b624-347c571d0ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dc807b-b507-40a1-8744-34d0d7704a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df839f75-2185-4634-be45-c16d71b05937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07622985-6e53-4be8-a6f7-eee3e7d769ec",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29305f31-c811-474b-82c5-23806f81ad31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bab1c31-133e-4fb4-b1e1-85bc2c803d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e205f8-ec16-4a1c-b4b2-d8361bd5a632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfd7089-2cd1-443d-b646-2e0c16a31a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4613ee35-f317-4bff-b34c-115f851e1691",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a6ecdf-43b0-4df9-b1ee-7c004fd05782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f921b3f1-3b2c-4e6d-97c4-961558d7e14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7593083a-75c5-43af-bf79-ead08145b69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d2a882-e50e-4d08-b9b1-e7de5dbe1be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb80a31-260a-4f02-b09d-2f72decef332",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e046c31-7310-4d25-8546-4e2681998eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b139e0-9cad-4531-88a4-ca3a7f4d14f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8542d69f-9d16-4a64-95f0-26dfc212fe1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d13c12-f6b2-495a-89ad-bec4a02a3425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dbc85d-cf5d-4705-8ed2-de05e2dd3161",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe068a2-0505-4c11-a9e6-3c098fa6716d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e479dc8-ccc0-42fd-9af7-10519ac88756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11919e91-1276-407d-bc1e-987bdfe7fb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a565ff4-c4a6-4e41-9bf9-4b1b7c712f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9062992a-ef1b-4f2c-be05-fb4b13096368",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec79ac0-f223-4c73-b0fb-4fffcd08cbf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da840c4-cacd-4845-9517-9abd82501d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018998d2-2f6c-4d88-b55c-eb32f133e205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9916551e-2e50-4df0-b091-81458f1daf3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55900a37-650d-447a-bd67-21dfc400382c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c38155-a4c2-47dd-950c-a191e713ce2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baa198fc-0e54-467f-90b9-2ef3ebe837c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f9d182-5765-405b-b4ff-89413e2fc6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960ce477-7762-4d32-9ce8-4e3852a8e866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e71e08-56f3-496a-9cd1-c5345545c78c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc50962-9109-4d8f-973b-dc862b479666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32c2399c-deec-43b8-8c14-c38b203d54d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d74241-13fb-4092-b190-4f77c9576625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c861239d-1ff5-4a30-aa93-6f12d7f0e058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff05a12-4fa2-437d-b8d7-229ac3562fa9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88accaf9-ff2a-4be6-b41c-eea6fed7ec40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69afbd67-ff0d-46c9-b1b3-6dd6ad52b8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102cdc20-db1d-4f86-8f68-c1fc2a5e5406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0438ac8f-d009-4dc6-9b79-a8db31d104ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed62db7d-4868-4842-85b8-13c5c955be9a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd150467-f5d5-4f74-8591-67406fcc98f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af56c3aa-9262-4cda-ace2-eed48e597581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5619db-428f-4db3-b44f-6583ed35a6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c0fa34-2305-4877-b1c7-35efab71524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d50dbca-dcb6-4a45-851c-9ae2d861ddb2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abd9e00-ee55-4109-ac51-022a577d0319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f64eb78a-db45-4ef8-aafa-810b41591678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173720d5-8ab2-49f2-aa67-d93c48da670c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadb1b2c-d101-4e51-8d97-c273b2e981d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80a394b-32ab-4310-bda8-630d032433ec",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb6b9d4-4734-465e-8f9d-d78a1df96f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "baac3fe6-54e0-49d3-bb9a-db8ac92e9f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05369597-9696-45e0-ae89-189da0d2f790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29b8dd4-d31a-40e7-94a4-5eaf33c8df8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3873712b-987e-4d42-8c55-a2747f631992",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b435ddba-6238-4edb-977d-d955a622194a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46acf542-4380-4241-8905-e879eb667616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969c5456-6b45-4f0a-b079-23e91d30c690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a08ca09-5842-46a0-a681-80381a383970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc5066c-5959-401b-b6cc-f22b2d8c9ede",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9129b859-1271-41ea-8b33-f196eece7731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e707ca55-94ec-4fa9-9a13-10d77bec8f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d3b12f-a7f1-432c-97c9-3e78dcbdcb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b4bc13-6c50-4423-881f-a93743d5d717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d806d9-665b-4750-a081-1d7e781a6bd1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf00a78-a99c-41bd-a20c-cc8315e848dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade5457b-ff33-464e-aa30-0ec051b3dce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe9128b-30f1-412b-a22c-024edb0a64a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab56aff4-2f92-420c-b9b2-6669a3300b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae33387-4986-487b-bab2-608a3023239e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93cc3f75-e810-46c4-9523-a0b0b6aaf59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ca3e76-aa02-43bf-9bdc-e23b51a777b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d97866-c198-4f51-be3a-1ef28c652c87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf05aafc-6b4f-4f37-819f-1589d546b117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3b3077-73a8-4826-b74b-25dcfcda2897",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe45edd9-c7ad-4c1d-8ceb-8a2227273430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebad23fa-640b-4b89-9ad3-f6db24eb348c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb6c087-6839-4b0d-a32b-08cfccbcb084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b593480-1fba-443a-b170-239fb9c09df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aed7c69-90e6-4187-855e-7d776731cf7d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d00119b-3050-4ce8-a736-ae38cc17d771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa2343f2-79ca-4a28-ad23-c1a2fe961e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a0cc1e-31d2-4368-b929-0e07c93d05f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895edea2-205f-4d78-a8e1-19d1c11e5bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f700a9ff-535e-499a-a564-53b2a08c83d6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2530bbe-6c58-4689-bd6b-ab327b59a46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9054e717-162f-4604-851c-c7713704112a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3753dc-d799-499e-b579-bad455868323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6835643-1e52-4fb1-b51c-9b959de76c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310ba67b-edc7-4778-8266-b0cebf63231e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acda621-573f-4c19-8a2e-540ca8fa2ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178920a5-7748-4643-b0d0-ef6d602e5647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2516467-3ea6-442a-983f-8d8d2eb91a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce6f65a-d1e0-490e-891a-f7e2c0f8a506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cfe6d6-baf3-40c2-b4d4-b326ced4c1c0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da634218-e3ed-4bf5-89fb-e62864c64f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "408e50b7-61a7-4c63-90aa-5da774972687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d2d421-7b70-4723-9dcf-bb7c77a96245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647db476-2a9a-491e-959e-bd17b4a83c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d6ee81-ddf2-4ee1-9381-648c5b377a29",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65140cac-14c9-4e66-b697-2db7bf0d22c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd76e45c-86aa-4d80-b7ee-7d52372b08df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0341b14f-476b-42a6-958a-c917ece8ec4e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c2271c-0f16-4347-893c-167aec028178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92085f64-e239-47b8-adc8-a785bd9841c9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f66d1ae-3663-4660-bce7-13ffd19f31dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48e40aaf-93c6-47bb-9a8e-c2d7c679d268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2718564c-7bf4-4eb2-9d90-45f58873de28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc97ad1-b143-4a71-88db-f49bb334d431"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f736c3-bdf4-48a6-aa75-9e6abfe6d4cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60f998c2-b1fb-4b4e-9bad-f0300e4e5888"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "285455f5-e529-4b38-91aa-e96100cd27f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a18e6c7-8bab-45dc-9f10-a29fcc46148f"
                    }
                  }
                ]
              },
              {
                "id": "d581a28c-b8b9-4bc1-8b80-0ecfc8ed9e41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71a7d08f-447b-4af4-b6c5-ca1b54705f55",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81187017-cb52-42cf-a1cd-2cb2e38fc1e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a2cc4c95-60a1-4514-a1cd-8d44c9bef4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20746868-1a0a-44d7-84e2-7db32ff36de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea18a38c-d3ec-4642-a885-77caeb265ef0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f146f2ac-6631-4a15-8c03-990eecc12519",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f9e8f9f-5cc3-4c6d-ad8a-d276c7d938d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb60181e-9c8b-4701-9266-6839825a51ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddd02d98-bf91-4dfc-9c16-24909e3b2738"
                    }
                  }
                ]
              },
              {
                "id": "834d87cb-b853-401b-916f-14e641359b81",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ec5d1e8d-6ec7-49ed-8fd4-4004b14a24f7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0cb2c0-026a-4be1-8c05-aa911d5940aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8e8dd47d-59eb-464d-a92e-762615e2b974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7236d7-d413-4184-a781-af20f165f581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ad554a-f2ce-4661-a0e1-af16878a366f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "134736c2-52e4-491d-bf79-d7dda5098652",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9eae250f-2654-41b0-9cbd-f5be9c91d75b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0b5b719-497e-4064-b478-abfe031b8b99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "088b73a0-cd30-4a91-aa65-7bcff7c9e86a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76dae906-e84f-4b25-afec-ff16afa518aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1414f44a-ef16-4ef7-a32a-de053a742900"
                    }
                  }
                ]
              },
              {
                "id": "99683e65-d3c7-4bd5-822c-55755ea25d61",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c66e8c7a-a721-478b-8b61-c9d9e2d93977",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e95e043-f473-416a-b45c-b42b598bac09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74361b8e-43a7-4d54-a738-3c39ec1dc263",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e745662a-18a0-4965-81e3-0a65e7f3f3d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "380d65ba-271a-4c37-b0a9-387b248501d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8452b410-28c2-49f3-9bb8-a3bad7c6f766"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e391db7-f530-4b41-85b9-3b03a85de90c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16802a83-7603-4dff-8a9c-655911981728"
            }
          }
        ]
      },
      {
        "id": "918b5dc5-52de-4dbe-bc12-ff9602d0a22c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "147335ed-9e6e-4c74-ad4c-cdc2bf620967",
            "name": "Negative Testing",
            "item": [
              {
                "id": "93b260ce-1619-4a17-adae-1df3bdb73358",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b73372b9-e0db-4356-94da-25dc9524e3e1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df217eb-26be-4930-98ee-4ed2cac613be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cb631834-030f-4e7f-aea5-f3d2d056e026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a3a639-89f5-4117-9b62-57c580b818f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aa864d6-5a64-4c96-95ee-30f61b25a18c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b23d189-abb1-4175-bdf6-dd186ff652fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b3ecb0b-ba4d-419c-b532-abd30a50f0d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "832e4b34-80f2-4439-b0ed-ae239cd00712",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "922824a2-5f8f-4992-ad55-0c086bbe3477"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88c1a0cc-7813-4d67-9995-63c50fc7c7a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f1813430-9985-4e90-bb9f-f5c28428d3e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "487d37db-d42e-4aec-aa54-704305086696",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5aee6af0-2e25-491f-883c-ca827463537b"
            }
          }
        ]
      },
      {
        "id": "4a065b3b-5683-48da-aa4d-8913a8a28ee1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1e881eac-5828-43dd-a287-2136c043c4de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdf817e8-b7e5-4745-8e0d-1174371238a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bfc90551-c02f-49b1-9d6c-68347041b5e5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bf35e3-5b77-4e02-ac52-37918ab10e7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5d2e419-d899-4da4-bec4-f72d5bccb08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da76b2c4-af8d-4a98-afd4-254a09fafa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "071e908e-2916-4c89-8cb8-c9b196ba7ba7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73aa575c-17b1-4660-908d-0d6acc4162f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d099bc40-189a-4563-aee9-785448670cf1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13a724c1-f0c1-47bf-9def-0f137a5fb4f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c50a2d6-078a-440c-86f1-6c99f75a5cbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a28e8aa-123b-4541-b420-94226ff82696",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6892c091-a292-42fb-9484-579cb2cd84d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0561edd-807d-443d-9925-b84e61b8d8e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53d7e098-349c-4442-8094-df9d8d27f379"
            }
          }
        ]
      },
      {
        "id": "0dfe62cd-2dcb-4d20-ae10-451f6e955cb5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ab27021f-e9eb-44fc-8b55-2778c144e9f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "240596a7-d9d8-4af0-bad4-9b5c39c82b8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "753e1e92-d77b-4ace-a054-c515e4e8404d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd8134f-5fca-47df-9fe3-2e5f79ac9d97",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1742386-d615-47e9-9150-12f92372e435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d10a12b-3cfb-453c-967f-28fe1cc17cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87826690-4a36-4b73-bfae-b36da84a2015"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcc7023c-7075-4356-a250-5e77d7d33aa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11220f76-e0f0-4de7-9606-ddf73da2d6a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "989a67fe-eba2-420d-8a29-0f31f86f9962",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "287d07ee-d73c-41c8-81ca-84ba74975014"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43df7b3c-3acc-429d-b156-b04d6dc350ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d421eb6-bd83-4a99-b38c-4bbc57d15654"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0e5219b-fb91-4003-b028-dc82c3d321b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4de79702-7c9b-40f1-bfe2-79b72ff97b29"
            }
          }
        ]
      },
      {
        "id": "0c80ba9d-c221-4139-be70-0ca53b0f8ba2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cc2d136-a0a1-4115-85ba-eb4086da39ec",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9249df78-a78e-4378-ad13-b3ed8c94262f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "573010cf-7408-4f72-9c8f-41bc7f58d526",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22b0f494-4c9b-4890-aa32-063a593f7775",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a51f35a-0daa-41e4-92f1-8980fb853ad4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 806.0035211267608,
      "responseMin": 10,
      "responseMax": 7388,
      "responseSd": 835.9997535979127,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688259015580,
      "completed": 1688259256605
    },
    "executions": [
      {
        "id": "9c0ffc0b-d780-4f95-8b3d-7235c7bdebb9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d4f48b8e-feba-4715-81e0-dd88e5c36f39",
          "httpRequestId": "19b01443-fa3e-4822-b7e3-571021009159"
        },
        "item": {
          "id": "9c0ffc0b-d780-4f95-8b3d-7235c7bdebb9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "25c8392f-c9ef-40fb-9e61-117b9c08096f",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "5236f499-fc61-428a-925e-a6c5663f667d",
        "cursor": {
          "ref": "63af17b2-6562-4ac6-88e9-98b05f1e01cf",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c857441a-d64f-4a92-9e63-395f0914a9ec"
        },
        "item": {
          "id": "5236f499-fc61-428a-925e-a6c5663f667d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "56391124-3cdf-4fe6-9ee1-0f73976b4250",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a8afbb03-6f35-4266-b89a-cb21884ed6c6",
        "cursor": {
          "ref": "ac1ef2b3-7893-43fd-94b7-b5741dc1bb70",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9fb9742c-e3b4-4700-93dd-a03385199f88"
        },
        "item": {
          "id": "a8afbb03-6f35-4266-b89a-cb21884ed6c6",
          "name": "did_json"
        },
        "response": {
          "id": "8092c00a-bb3d-400f-9516-b5f83f659bba",
          "status": "OK",
          "code": 200,
          "responseTime": 1338,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf31a13-c59d-49fd-a96f-3674b7e91a09",
        "cursor": {
          "ref": "d271d0d5-11eb-40c7-acbc-887e1542f296",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "524850c6-979d-4c5b-bb9c-bdb54f36b7e0"
        },
        "item": {
          "id": "5cf31a13-c59d-49fd-a96f-3674b7e91a09",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab6e328d-5113-4e73-a265-5c615f26c7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf31a13-c59d-49fd-a96f-3674b7e91a09",
        "cursor": {
          "ref": "d271d0d5-11eb-40c7-acbc-887e1542f296",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "524850c6-979d-4c5b-bb9c-bdb54f36b7e0"
        },
        "item": {
          "id": "5cf31a13-c59d-49fd-a96f-3674b7e91a09",
          "name": "did:invalid"
        },
        "response": {
          "id": "ab6e328d-5113-4e73-a265-5c615f26c7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 936,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba20c133-2dfc-41cd-a4d0-8ac888070f1a",
        "cursor": {
          "ref": "b9559292-7fad-4250-8649-e83784703fed",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dee14aaf-63ec-45a1-8bcd-9f15f047c1f6"
        },
        "item": {
          "id": "ba20c133-2dfc-41cd-a4d0-8ac888070f1a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0e592785-c545-4320-8b21-4f4d94365b83",
          "status": "Not Found",
          "code": 404,
          "responseTime": 906,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2e3428-ac21-49eb-8130-47f53a0e60ac",
        "cursor": {
          "ref": "93d2b7fe-54a9-44af-b529-545b969e1b8f",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3c620257-b465-4937-a2a0-52f201f9ce36"
        },
        "item": {
          "id": "2a2e3428-ac21-49eb-8130-47f53a0e60ac",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "95834eee-4e51-49b5-b13a-993bfeed9547",
          "status": "Not Found",
          "code": 404,
          "responseTime": 905,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9feadd1c-640c-43a6-aa88-f31d22448e9a",
        "cursor": {
          "ref": "9ad7dd64-5783-446c-a503-be48151284d7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d3a28ec2-7d9e-4d36-9135-306c25d589d9"
        },
        "item": {
          "id": "9feadd1c-640c-43a6-aa88-f31d22448e9a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5c9b4422-4686-4789-9b86-253a6acf60ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10d4e09-bd7d-4975-958c-e205b35b5544",
        "cursor": {
          "ref": "2ce6c1bd-3136-4f73-aebb-f649db44bd7c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cffdeafc-e1bf-4b09-8e41-9972a91c2b0b"
        },
        "item": {
          "id": "c10d4e09-bd7d-4975-958c-e205b35b5544",
          "name": "identifiers"
        },
        "response": {
          "id": "d56cb2ed-03f6-412f-9bea-6ecf919461bb",
          "status": "OK",
          "code": 200,
          "responseTime": 1702,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8556a7fa-7a51-40bf-b5ca-7aa7dd3520b2",
        "cursor": {
          "ref": "7e954faf-7207-4b45-83a8-79e1bf20eea9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dab47ade-4275-4fe9-80e3-a02de9c78451"
        },
        "item": {
          "id": "8556a7fa-7a51-40bf-b5ca-7aa7dd3520b2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7c3508f3-520a-46e2-beb5-42249a1c5460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f2976b-2ade-459c-8e67-ba221cfca91a",
        "cursor": {
          "ref": "cc8813a5-3d4e-46ba-a52f-c3ff71f1dca4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bd5199a3-d52b-4e2c-b87a-1913cc40fc21"
        },
        "item": {
          "id": "82f2976b-2ade-459c-8e67-ba221cfca91a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "584ea983-c768-4878-bab7-167afdd1ced5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ca5a25-766f-4bb0-9d26-685f98c8b046",
        "cursor": {
          "ref": "033b4b33-f5e9-4e71-bb43-03dbeaa1a30a",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9a2f5301-7e2c-49e8-8dc3-a1ce56815b75"
        },
        "item": {
          "id": "87ca5a25-766f-4bb0-9d26-685f98c8b046",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e4ba1c97-b319-49a5-8efa-a8646bb9accb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004f47ae-0d54-48b8-845e-4e6f13ce6a65",
        "cursor": {
          "ref": "b96f8f39-acdb-44ee-872a-637ba92905c6",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6b83fba0-c264-4d7f-b46a-b95438f0befd"
        },
        "item": {
          "id": "004f47ae-0d54-48b8-845e-4e6f13ce6a65",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "54d6e2d2-26f0-4171-9d70-f9d54fbdf7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60062b39-d216-4722-b059-5e4b1cb2b1d0",
        "cursor": {
          "ref": "999d1feb-13f9-4001-8a2f-70c11fd5bcf9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7b664a9e-b3c0-47e7-a887-42e7dcd977cd"
        },
        "item": {
          "id": "60062b39-d216-4722-b059-5e4b1cb2b1d0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0c04a37c-79bd-493e-83ff-87adb683614f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0bb36e-6734-4aec-b74e-b4fdb8cd38b7",
        "cursor": {
          "ref": "406fde2d-d527-4abe-ab1c-4bb80c29fac9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "61c4e401-4bf7-42f4-93b5-fdb54bfbaeba"
        },
        "item": {
          "id": "5d0bb36e-6734-4aec-b74e-b4fdb8cd38b7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e68365a4-fc0f-4203-9e9c-c2a20b9f8373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f030125-78a3-4bd1-bf45-3dccaa7bd572",
        "cursor": {
          "ref": "9cff8bd0-412a-4667-abd7-cdb73ec7a901",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c4fd7a2c-568d-4e84-9951-d067b375fc92"
        },
        "item": {
          "id": "9f030125-78a3-4bd1-bf45-3dccaa7bd572",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d8205213-307f-4fb3-97ac-504804098f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8bab20-15cd-4c00-a81f-b1d7c1da09ec",
        "cursor": {
          "ref": "5269c5aa-8d9b-4bfe-b450-b3e24b294822",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4094f27c-135e-41b2-9a1c-a393899c161d"
        },
        "item": {
          "id": "ea8bab20-15cd-4c00-a81f-b1d7c1da09ec",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "949384c5-4835-4e38-87fb-57a25c43bbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791a31ea-a422-461c-bb26-f7b2897a8d93",
        "cursor": {
          "ref": "a9f45233-3282-4cb2-ba88-e1686a26c294",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "55874c43-d6b2-4044-a902-f3b53f7744fc"
        },
        "item": {
          "id": "791a31ea-a422-461c-bb26-f7b2897a8d93",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b343f9a9-d4d6-4a10-b370-b8485e6ca267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a15628-33d2-41fc-96a7-aaf929f56bd2",
        "cursor": {
          "ref": "f0b3c2d4-c855-4ff6-8b94-f8d51a5a9b8e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3c951dba-db31-4fa3-a84c-015287f35446"
        },
        "item": {
          "id": "f2a15628-33d2-41fc-96a7-aaf929f56bd2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f867bc83-10ec-40f5-96d3-e2a290df6d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84afb4be-f382-4047-828f-c3e46592de23",
        "cursor": {
          "ref": "ad1116d0-1459-446a-a549-0da2f1089065",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d856a7ff-34dd-41e1-a8bb-eb55efa37b9d"
        },
        "item": {
          "id": "84afb4be-f382-4047-828f-c3e46592de23",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "423c55cb-3df6-4743-9b10-2703b0061e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d81b5a-aa88-49ec-ab18-fdc71cffd694",
        "cursor": {
          "ref": "1ed49475-c109-40e4-8237-af05d9390752",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0a64584e-114b-4464-bc48-c706591960b3"
        },
        "item": {
          "id": "81d81b5a-aa88-49ec-ab18-fdc71cffd694",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "388f1254-f326-46c5-a4a5-716c7b5250b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebcc6c1-a986-4022-9644-d5a2b52563a8",
        "cursor": {
          "ref": "77969a00-eb40-4990-9369-156752b87d89",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "88afafb9-d307-4719-9907-7e48a3bf556d"
        },
        "item": {
          "id": "8ebcc6c1-a986-4022-9644-d5a2b52563a8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c2a4ef5f-a31c-4a88-a30c-562124e1f44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f6a804-1861-4a14-9d1a-4e2da669027d",
        "cursor": {
          "ref": "a9ed6dc9-1c99-4dcb-8e2e-ff65cd9236bb",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "78e0dadb-4c94-4e78-a573-80dbb221308e"
        },
        "item": {
          "id": "76f6a804-1861-4a14-9d1a-4e2da669027d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cdccdd77-0ebe-4e6f-bff3-1dab1d7c5b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f7c107-5349-4a3a-9361-a69ffd760fec",
        "cursor": {
          "ref": "4e87c331-633d-4b08-9f9d-a788e2a1683f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ccc686e1-a06a-4a1b-ad61-a1978b1e10d5"
        },
        "item": {
          "id": "90f7c107-5349-4a3a-9361-a69ffd760fec",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "60621630-1d7f-48c9-92cc-483d517cdf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd13a044-07a6-499c-b339-ba8e504c881e",
        "cursor": {
          "ref": "c1aea9c3-9774-47fe-926e-b1d365e6f8f2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a10f1d5-d299-4c73-9dee-d887ab532f14"
        },
        "item": {
          "id": "fd13a044-07a6-499c-b339-ba8e504c881e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f6bfc5c7-ff72-4215-b14a-0ac566fd2d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e028feed-43c0-41a2-b4b4-da67925a2604",
        "cursor": {
          "ref": "e864b70c-1138-489a-8c5e-6f9bc305b0b3",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fb7b88bc-ee65-426c-af34-bc49079613c5"
        },
        "item": {
          "id": "e028feed-43c0-41a2-b4b4-da67925a2604",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dc019d50-dd60-413b-8421-aa7784dbe7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaf6619-6e0e-49f0-a679-0cd1585cdb2e",
        "cursor": {
          "ref": "158e2a26-2244-403b-9e78-f16ddce0a2b6",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e0ea4884-be70-4d51-8fff-fa099dac8abc"
        },
        "item": {
          "id": "fcaf6619-6e0e-49f0-a679-0cd1585cdb2e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "50d1cbaf-8e64-4f0b-8bc1-fa31c03021b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0df89dd-e635-4b8b-9790-fb7589f49ae7",
        "cursor": {
          "ref": "a8bcd999-6a47-4d84-90bb-98b07d5f7fc1",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "44066497-41eb-43eb-bab1-0288edf2f5bc"
        },
        "item": {
          "id": "b0df89dd-e635-4b8b-9790-fb7589f49ae7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ef6b57cf-8967-4b57-9b9f-01d2763948c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 764,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba0e420-0036-479e-b65e-36ce6c636106",
        "cursor": {
          "ref": "e83b132a-35df-4ea7-838f-1d8f66956860",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "044cb635-7f66-4cae-a178-6fad0d358b14"
        },
        "item": {
          "id": "cba0e420-0036-479e-b65e-36ce6c636106",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1aeb56e6-a124-497c-a292-b7489a319f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaca144-73e0-432f-bc69-e1d5965e7bd6",
        "cursor": {
          "ref": "47c63070-17ca-4fab-b2f3-744f7ca7dad0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fb907b8d-bc81-4c15-809d-5b775dc4ecfd"
        },
        "item": {
          "id": "bdaca144-73e0-432f-bc69-e1d5965e7bd6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f8697393-e89a-4ef1-a74f-36864c582294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0b633a-ddff-40c1-a0d9-a7d96b155bcc",
        "cursor": {
          "ref": "ea9f79b6-c3a3-49a0-a450-adbc988dd626",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ba10315c-f1a6-42e8-b30e-8a3cb8b6087d"
        },
        "item": {
          "id": "fc0b633a-ddff-40c1-a0d9-a7d96b155bcc",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9d9f310d-69f2-4345-aea9-445c20aa4b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8c7a14-48de-41ae-8f17-00010be92f8c",
        "cursor": {
          "ref": "f2de1d2b-88ec-4b92-ab5f-972714b03b2f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9998523b-3e85-476a-86c5-c378fd0d527f"
        },
        "item": {
          "id": "4c8c7a14-48de-41ae-8f17-00010be92f8c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "348d802b-4040-404d-8e9d-d50fb0624c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580f68b7-5d55-4f53-a9e0-aa8953844c48",
        "cursor": {
          "ref": "6a6fbd9c-7c9d-45b6-bcf8-4729543ef270",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "06c4ccb6-a358-4a9d-8920-b589ab9d3534"
        },
        "item": {
          "id": "580f68b7-5d55-4f53-a9e0-aa8953844c48",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cda8eadc-669e-4c2a-9891-a8bfd45f87b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602d651b-341f-4ee9-b29d-8f5839ed6485",
        "cursor": {
          "ref": "829bc33e-7462-4f40-bae7-4e40c2d440e9",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d766b178-5f94-4249-9ee5-95203ec87c18"
        },
        "item": {
          "id": "602d651b-341f-4ee9-b29d-8f5839ed6485",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cff80b3e-7e76-4461-9040-9ff114228bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9f800a-805a-42d1-8738-47946dc5e19a",
        "cursor": {
          "ref": "1f5bee02-02b7-4b52-9414-8f4c8cd008d0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f49f8b72-433e-4b7c-a1a3-89b97425a864"
        },
        "item": {
          "id": "0e9f800a-805a-42d1-8738-47946dc5e19a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e8b7bdee-0422-4410-a3dc-3640f50a5251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1886a2-665b-49aa-9ac0-989ab146d24b",
        "cursor": {
          "ref": "0f313e9c-1fdd-4eb3-8a77-1a37b05c1e11",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f10011f0-b146-462c-a1b5-fae016fd2229"
        },
        "item": {
          "id": "1f1886a2-665b-49aa-9ac0-989ab146d24b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "22d3121e-9dc7-43ff-9809-2b0e444d84d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff23db6-c21d-4378-9e9b-2d67e80dc189",
        "cursor": {
          "ref": "dc2327d3-0f0e-46d1-ac3f-123ae2a374fc",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "beff09b4-47fa-4b70-90d7-54fdbde287e0"
        },
        "item": {
          "id": "8ff23db6-c21d-4378-9e9b-2d67e80dc189",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f634ac5e-039b-4d22-af6d-971c1472a337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b25306-44fa-4c59-8b79-c4f617d9fa49",
        "cursor": {
          "ref": "b5884b11-85c0-4569-a7ce-93107668821f",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "242aa47f-f2d4-4bce-aaad-5a0e3ade40ae"
        },
        "item": {
          "id": "25b25306-44fa-4c59-8b79-c4f617d9fa49",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "37224521-1142-4a10-a223-b3802a3b4ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4f80bd-deb5-462c-ad95-a98b39da7cd4",
        "cursor": {
          "ref": "7c27ac19-90e7-48b1-ac23-382c9b5a6595",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0449d515-0967-413d-bbd4-a80088b58adf"
        },
        "item": {
          "id": "0e4f80bd-deb5-462c-ad95-a98b39da7cd4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3ecb0ed8-148f-44ae-b0a8-83dde417c14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83235983-18bd-452a-90bc-55dd16093f9a",
        "cursor": {
          "ref": "7a1c992c-4353-4429-9938-5694f5e4b9c8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4d8f8854-b03c-4093-baec-e3958f5e1fc4"
        },
        "item": {
          "id": "83235983-18bd-452a-90bc-55dd16093f9a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0db361af-2f0a-4d8d-be86-c4fd25d1eb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702b5ee5-7c52-458b-8e09-91c3bcc1410c",
        "cursor": {
          "ref": "6d81e408-a617-4035-9131-de20c290cf24",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f94efb5d-c31b-41f7-ae74-906b913741ba"
        },
        "item": {
          "id": "702b5ee5-7c52-458b-8e09-91c3bcc1410c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "54df40f4-da23-4c7c-8c5b-f754046701a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9401d71-7be1-42bc-8fee-9ff3518cfe55",
        "cursor": {
          "ref": "7d4e049b-c52b-4a0d-8710-cc3fb34691b5",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "95ea4eb0-8df3-4971-acae-ee4d2b2a66a5"
        },
        "item": {
          "id": "b9401d71-7be1-42bc-8fee-9ff3518cfe55",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a560b9e9-dc5d-4f5e-b267-edf46090edc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c350351-4f9a-4898-9a01-dc04e46d078b",
        "cursor": {
          "ref": "7e14e6db-d9e4-48cc-9e75-ae10da120d74",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b59c89a2-931e-4db9-868a-8388ceba3b34"
        },
        "item": {
          "id": "9c350351-4f9a-4898-9a01-dc04e46d078b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6ff1a0d4-d81a-4235-9552-f2a513bc88fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de79365f-48f7-46af-a523-83622070c5c6",
        "cursor": {
          "ref": "f7f13909-b298-4dba-ab2c-aa360ca491a1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "edb5788f-1faf-4edc-93d0-e549ba3262b5"
        },
        "item": {
          "id": "de79365f-48f7-46af-a523-83622070c5c6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "df20c277-59ed-45b7-abd8-ba68ed349f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e165191e-ebe6-4e78-b02b-93f7b045edd8",
        "cursor": {
          "ref": "009d1fbd-4514-45bd-ac91-83a9fa010e36",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "06cf2e45-da66-4587-96db-ae2bffbc2402"
        },
        "item": {
          "id": "e165191e-ebe6-4e78-b02b-93f7b045edd8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cf239fb1-65b7-4c39-bb6f-ab80c93a068f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1000,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e431614-7733-4992-a759-3d0a5b68a600",
        "cursor": {
          "ref": "f9854e70-ec34-42d5-9e64-e0fc361c2462",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "319e1d4d-db99-4387-ae0b-f4975ce948c3"
        },
        "item": {
          "id": "5e431614-7733-4992-a759-3d0a5b68a600",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "42d69373-65c0-4426-afc8-d9bc2ecb3efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ecae15-e60e-4dbb-8515-759a7fee5b28",
        "cursor": {
          "ref": "29c8a727-fb18-475e-8d86-8fdf691c4295",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3d507d52-bd50-42af-bbbb-ce985b6cb5c5"
        },
        "item": {
          "id": "c3ecae15-e60e-4dbb-8515-759a7fee5b28",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "03b781c7-ace9-4135-8591-848f3076b205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b76218e-ce5b-4e60-b97f-50bc2e6b6a52",
        "cursor": {
          "ref": "94f13ee6-2265-4299-a33a-306db176c5d0",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c73ba45c-02b9-41e7-bdb2-010ba22b1c16"
        },
        "item": {
          "id": "4b76218e-ce5b-4e60-b97f-50bc2e6b6a52",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1800d37d-72f4-42bb-ad79-52f86f6726e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35607d15-fa12-4889-83c0-2e8b51f08466",
        "cursor": {
          "ref": "78338782-33d3-4a0f-aa65-159b284c752d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e15ca545-e1f3-4479-be7f-f00aa92d7a2a"
        },
        "item": {
          "id": "35607d15-fa12-4889-83c0-2e8b51f08466",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "badc45c1-649d-497d-8b93-d798528c89aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203e5bd9-853c-44bf-a09f-8fe396bd0d28",
        "cursor": {
          "ref": "7e079ba1-08da-485b-a2b2-9cab64713102",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "09994576-51ad-46ca-98ee-4bf8342364d4"
        },
        "item": {
          "id": "203e5bd9-853c-44bf-a09f-8fe396bd0d28",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d7c23853-be89-4508-8cd7-98f8cf1ecb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e9ab2c-fdeb-45ad-9303-cb9d54418c74",
        "cursor": {
          "ref": "d6e7003b-b890-4ec4-bacd-7e58157341f5",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8c853d79-f35f-4fda-8c56-bcf57cf0c3a9"
        },
        "item": {
          "id": "20e9ab2c-fdeb-45ad-9303-cb9d54418c74",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1cc16420-8da0-4886-a896-46918524ecaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60971cc-7e84-4404-a91f-77e5b1a66fba",
        "cursor": {
          "ref": "6579130d-bca5-4d13-877b-a670651293ad",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d06b8d65-82b0-4abb-9674-b1a890097f63"
        },
        "item": {
          "id": "b60971cc-7e84-4404-a91f-77e5b1a66fba",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7cd308a2-648f-4d2e-88fa-4eac8a7997ea",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 834,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed7b2f2-a911-4ef3-bc50-d7b2b234d3fa",
        "cursor": {
          "ref": "597ce103-10b2-42a6-a312-b0cf6d48d4a2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7d0dac81-5e46-4ee7-9381-38cf397caf87"
        },
        "item": {
          "id": "9ed7b2f2-a911-4ef3-bc50-d7b2b234d3fa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a0a34f52-d3d0-479e-bdf8-513dd43992d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaf1fba-4df3-46a6-9720-d34f42f41a8f",
        "cursor": {
          "ref": "03bcfb9a-dc88-4b16-a0d9-b03f80176e6d",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "29192e98-4d27-4867-9b2b-b3e2f4b50dc2"
        },
        "item": {
          "id": "6eaf1fba-4df3-46a6-9720-d34f42f41a8f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "81823e2d-540c-4f10-b66f-8233920f5c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4920bf3-fd3b-46cc-8f24-ffaace89a947",
        "cursor": {
          "ref": "3ab65a59-ee2c-414e-85bd-3e6998344f88",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "73bb07f4-bf96-4998-96b1-5517011e857e"
        },
        "item": {
          "id": "d4920bf3-fd3b-46cc-8f24-ffaace89a947",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b694fd19-4266-45a3-a9a3-819646cade38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9559b4-cd5e-4092-9232-8024fd8f07c5",
        "cursor": {
          "ref": "28bf3809-242f-4661-8d82-b8e7eb408b21",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "083c9000-6fca-4ce5-957c-e3963a87395a"
        },
        "item": {
          "id": "ec9559b4-cd5e-4092-9232-8024fd8f07c5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b3c5349d-6d3b-4be6-9875-48d87f98d308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323937f0-6316-483f-b4d0-5374b8d47db0",
        "cursor": {
          "ref": "ffe150e6-0502-4ed3-8ff8-5ee03affe00b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4b6e5337-1bdf-40f5-8a61-ac5dff039d47"
        },
        "item": {
          "id": "323937f0-6316-483f-b4d0-5374b8d47db0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "79736a43-70e0-4519-8a94-612acf9abe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32224d99-b4b8-4054-8d7d-2186c6a67b8f",
        "cursor": {
          "ref": "d3c2c06b-acec-411a-b84b-c49b35623e25",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d540afda-d02b-410b-9a21-fe32bc271290"
        },
        "item": {
          "id": "32224d99-b4b8-4054-8d7d-2186c6a67b8f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c081bd5c-5b32-4c81-b352-351f2db86b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3243fc-a5d2-465e-81f1-34f0a9f5670d",
        "cursor": {
          "ref": "6cd865a6-3e4d-4a42-b97b-f974fb9b3bae",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fb06bb2f-67c4-480e-902a-08beec0e5de4"
        },
        "item": {
          "id": "8d3243fc-a5d2-465e-81f1-34f0a9f5670d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1a3481e4-f48a-450c-ba4a-d767b968d60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effe8be3-bf45-44e6-9b36-ba326bdd6c2b",
        "cursor": {
          "ref": "6da74f3b-172d-465e-a467-3e77474b9404",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5b91edb2-ec03-4a9b-a1ad-e213b06e80f6"
        },
        "item": {
          "id": "effe8be3-bf45-44e6-9b36-ba326bdd6c2b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4f0a80e9-e5a6-4f9e-a1cb-c2e991c89c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3a70fc-ff6a-4641-9d22-c8fe48855812",
        "cursor": {
          "ref": "4aac437c-0f9b-4d65-b352-df9e305c80f3",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d8ab7605-ed15-46b2-b867-090b90dc97c9"
        },
        "item": {
          "id": "db3a70fc-ff6a-4641-9d22-c8fe48855812",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce14a9fe-7231-43b6-b22e-c67269f574b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2ae4bf-c3a7-45d8-8541-dd3afbf6007e",
        "cursor": {
          "ref": "ea49cd3e-c661-47b1-b65d-bd5284a10af4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "28ce8ce0-1003-451c-8f15-6e5499383bd1"
        },
        "item": {
          "id": "fe2ae4bf-c3a7-45d8-8541-dd3afbf6007e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4e81e657-1a46-48e4-adeb-a821e7e9ecb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8497fb82-9982-4183-a6ab-840695643d10",
        "cursor": {
          "ref": "b92f6d41-4355-45e9-a83d-eea670982edb",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5c601b72-276b-4ee1-9c4d-84b2cc8aab54"
        },
        "item": {
          "id": "8497fb82-9982-4183-a6ab-840695643d10",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9bc825bd-15ac-4d4e-8923-da105567b466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e481865-3268-456a-ae3c-5f0cca888339",
        "cursor": {
          "ref": "d40d0dd4-a912-4adf-9fca-b5ba4ea551d4",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a178013e-43f3-4090-ba9e-105df90e4503"
        },
        "item": {
          "id": "4e481865-3268-456a-ae3c-5f0cca888339",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ca39c7c7-5c68-4343-a425-d1d94dc636d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25435e08-6828-4c1a-b07e-6dd420ea0d04",
        "cursor": {
          "ref": "a46f39d2-2e34-4984-9b82-662f4098aef9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6cd393e1-2f76-45ec-9db3-2e3d78b418cc"
        },
        "item": {
          "id": "25435e08-6828-4c1a-b07e-6dd420ea0d04",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b2b79d2b-acfc-4e29-9071-bda05cb7d0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630ebee6-3c01-4057-b724-51a9fd8f0806",
        "cursor": {
          "ref": "2e8cdcd2-bb09-42f0-a423-8f3059a1c947",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9fb50773-42dc-490d-b1b1-18c90aa02279"
        },
        "item": {
          "id": "630ebee6-3c01-4057-b724-51a9fd8f0806",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "921153a6-7730-4d8d-9039-a4bda85f7c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1f1a48-d2ce-43d5-8f12-11509a26c4dc",
        "cursor": {
          "ref": "ac521477-fb20-4df9-bf1a-758011220d9a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0f13093b-a8d2-4fbc-9866-b3e3a8c26673"
        },
        "item": {
          "id": "8f1f1a48-d2ce-43d5-8f12-11509a26c4dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8f4ec873-b98f-4917-a0bf-add4d5505b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93285ea-5f65-4879-b96e-2366d37c56c6",
        "cursor": {
          "ref": "6d23d4fd-c90d-4f3a-a843-2fc49d4e8cd0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9ad86159-0f06-4df2-a12d-0a6a6ca73e08"
        },
        "item": {
          "id": "a93285ea-5f65-4879-b96e-2366d37c56c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1b4a48a5-76a8-428e-839f-8b6c89b744b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f195072-fa9a-46fc-a452-72e3f15ad3e6",
        "cursor": {
          "ref": "196a5c62-f173-4227-afd9-f70bc2746c06",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "61c54c3b-f1c4-4206-b57b-510030ba2866"
        },
        "item": {
          "id": "1f195072-fa9a-46fc-a452-72e3f15ad3e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a82e0979-4dc1-4d0d-9824-223dff2e26ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dc6cb4-7b1c-40b8-ae99-9cf188f3f324",
        "cursor": {
          "ref": "4187731c-cae5-4474-8964-41f97ef2b073",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "af88a15e-9bd2-46a0-9a0c-d663f69d959b"
        },
        "item": {
          "id": "54dc6cb4-7b1c-40b8-ae99-9cf188f3f324",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eb3d493b-38ea-439e-adc9-9501e0bc9cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b02003f-7fdd-4e00-b9b8-b5b0d58a41e7",
        "cursor": {
          "ref": "ba2f9a65-95d0-4794-aef3-4b8fb56b282e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3da59a88-11f4-416b-8c01-0cae7f355f93"
        },
        "item": {
          "id": "6b02003f-7fdd-4e00-b9b8-b5b0d58a41e7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "48bcf3d6-ea6d-489e-97d2-a1b235134b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ba2e45-fce3-4851-a9f5-588a1b32f0fa",
        "cursor": {
          "ref": "54d3b25f-ca79-4074-9109-6f4d3015afe8",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6cc2cc76-9a09-49b1-885d-13cd63bc60e5"
        },
        "item": {
          "id": "82ba2e45-fce3-4851-a9f5-588a1b32f0fa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "45f83027-e346-4e2b-a9a2-a3a063a0046a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49e4ade-dfdd-4a17-aaf6-5bc7f976660a",
        "cursor": {
          "ref": "5b0d5620-86d8-422b-95c0-6ad9e5c30bfb",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5f65380c-5ace-4922-a682-baf234e12651"
        },
        "item": {
          "id": "c49e4ade-dfdd-4a17-aaf6-5bc7f976660a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "017b903c-1346-492f-8b11-724a117115f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568a3fe7-10b7-484e-ba07-2e28127f00c6",
        "cursor": {
          "ref": "d4210f53-476f-4f23-b9d6-b955597cd57a",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f47b897e-e0ae-4974-9231-5b7b5d75d39c"
        },
        "item": {
          "id": "568a3fe7-10b7-484e-ba07-2e28127f00c6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6578825b-db75-4773-8d63-580273aab9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2568ae-ad7b-44e1-8916-1aac580cbcbf",
        "cursor": {
          "ref": "cc47e505-fa32-4f51-91ae-d714b0887739",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "740afea2-a7bb-4d94-8f14-df120aeb88e2"
        },
        "item": {
          "id": "1d2568ae-ad7b-44e1-8916-1aac580cbcbf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a6d7df30-02b5-4c4d-8aab-78523a47c7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c036ad-e294-435c-a446-ac8fa7932873",
        "cursor": {
          "ref": "6dc7c648-67dd-408b-a88d-5fd835f2dc9c",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a2bc94f9-5285-4a22-8550-addb05bcca97"
        },
        "item": {
          "id": "46c036ad-e294-435c-a446-ac8fa7932873",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ac10d752-0699-410d-bcb0-f7817143e6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e108cef0-7116-4548-b907-7d24b3f1afb5",
        "cursor": {
          "ref": "357aa83a-332d-40e7-88f0-0db5e1c575b9",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae3872ac-e4e2-4dfe-b216-ed2b095629ea"
        },
        "item": {
          "id": "e108cef0-7116-4548-b907-7d24b3f1afb5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5bf0e47a-7f7f-4fcf-b22e-3dc147797ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7535b7-effd-4b42-adf8-c172427ba57d",
        "cursor": {
          "ref": "73dab326-a290-4a9b-9050-144b48046a5d",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "727e3503-58de-4036-84fd-34ab918f6d70"
        },
        "item": {
          "id": "ee7535b7-effd-4b42-adf8-c172427ba57d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9ee273ee-20ce-4a9d-b24d-097fe5aa7737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a518b3ec-d1de-46bb-8eeb-52694ac1ca02",
        "cursor": {
          "ref": "205a5828-6b99-48fb-b1b7-02dfa1b2ef76",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b40a9a95-d51d-47d2-8b8e-9fdc40814e20"
        },
        "item": {
          "id": "a518b3ec-d1de-46bb-8eeb-52694ac1ca02",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4ad62842-e0b4-423f-b223-8468a3396ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0df0a9-67b5-4d7c-bf97-494e2dc7b2a7",
        "cursor": {
          "ref": "eb27cdc7-abfb-45c7-bde6-90b7fd1100cd",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "13d11ae0-8738-4242-a0be-d9dbac7da33d"
        },
        "item": {
          "id": "5e0df0a9-67b5-4d7c-bf97-494e2dc7b2a7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a3ccdb9b-525f-449a-b434-df53c8651a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9eadbd-8d99-42bf-a127-528b12f1ab57",
        "cursor": {
          "ref": "cf29817a-86ff-4a0e-8de5-c76665e63d27",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f26d33e1-be75-40a0-9885-679acbbb609c"
        },
        "item": {
          "id": "ad9eadbd-8d99-42bf-a127-528b12f1ab57",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f4510506-41d1-421e-a15a-55945f059275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830103d4-17f5-4a69-ace1-3a557d2ddba1",
        "cursor": {
          "ref": "8865c02f-a6f7-4dae-bc70-6423008206ed",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dbf1eaa4-84f8-46a9-901e-fca902b8e944"
        },
        "item": {
          "id": "830103d4-17f5-4a69-ace1-3a557d2ddba1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa25ed9c-6a40-43b3-a60f-8130ef779dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adb16be-d526-4d66-abb8-0e9fcb905dfd",
        "cursor": {
          "ref": "411da989-e93d-4bdb-87d4-66f750a96c1d",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "694e6b59-6053-49d6-b7d1-94e02b9b3ff3"
        },
        "item": {
          "id": "7adb16be-d526-4d66-abb8-0e9fcb905dfd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8d58c0e0-baaa-4477-8d73-0dab6727e56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b251a3-375a-431e-a778-9b98190a4ced",
        "cursor": {
          "ref": "9722c15c-d536-4783-acd0-f9efd573bb94",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9c9d9e3b-0e87-4ae8-bfcd-219b7bae2c1b"
        },
        "item": {
          "id": "50b251a3-375a-431e-a778-9b98190a4ced",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4c5a888f-291c-466b-b0c0-6249e979a1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fba5d2-db92-418c-87c1-40f68c1fab34",
        "cursor": {
          "ref": "0cbe44d4-a8da-44a6-82b5-527dca2ef361",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "04b7cecf-4da0-4554-84d4-e8cf8ab02063"
        },
        "item": {
          "id": "29fba5d2-db92-418c-87c1-40f68c1fab34",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0813d1c8-0810-4d8e-9ce1-f864101deece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c8ae8d-5994-4b20-a3cc-a1f9c2ad9465",
        "cursor": {
          "ref": "f75a62c7-2aa4-4b53-9f04-c86bb0912c4d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f26b2064-2abc-418f-984b-4747711e3066"
        },
        "item": {
          "id": "64c8ae8d-5994-4b20-a3cc-a1f9c2ad9465",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "35e4c057-39d6-4262-8b41-8ad4853ae45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e10c4af-bc92-4caa-90c6-ca7efc899a4e",
        "cursor": {
          "ref": "5a6a1ce7-6477-42b8-a840-b0ef179be3b8",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e90c02a2-1af5-4a03-aa5b-3a85e459e608"
        },
        "item": {
          "id": "5e10c4af-bc92-4caa-90c6-ca7efc899a4e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "62f29610-9d9c-47a3-8ee4-aea037595741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124cef43-b578-4904-8bf4-450a906041f2",
        "cursor": {
          "ref": "d3614a9d-4ba3-421b-9b8a-9ff686056052",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2b9b7062-e216-4ab7-8550-b67a63325b5d"
        },
        "item": {
          "id": "124cef43-b578-4904-8bf4-450a906041f2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a1767254-bf25-4cda-ad35-15d9d4efde8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e490ca-ce07-4d07-99e0-9ab96599dd6b",
        "cursor": {
          "ref": "6297edea-a442-4e3c-921f-f15f74c466d4",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c02710b3-b9d0-4e7b-aa0b-d216ab274b00"
        },
        "item": {
          "id": "f2e490ca-ce07-4d07-99e0-9ab96599dd6b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9b387259-fef3-4679-ac70-7d055755a542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea48010-074d-44cc-a649-f327357756e4",
        "cursor": {
          "ref": "876d5c6e-cf3c-4b71-b60e-841592c97602",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d4b54273-a65d-418d-a803-ac2905081bd0"
        },
        "item": {
          "id": "9ea48010-074d-44cc-a649-f327357756e4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b8870c1e-c4ac-4ac5-9019-8c7c93ac33a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a6a32b-421a-4111-8643-ca26a3134bd2",
        "cursor": {
          "ref": "e3f66a64-9d00-4433-bd9a-06c19a997271",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0a7cb120-4b1a-467f-bc46-e463df099f76"
        },
        "item": {
          "id": "d9a6a32b-421a-4111-8643-ca26a3134bd2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1a0bdd8b-221b-4907-9fce-c0340ba223a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c8d674-e5c1-463a-9d4e-bf7616c5bb8f",
        "cursor": {
          "ref": "d181dfd9-c30e-4390-86ad-f8c1a349e0dc",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "80f9e96e-56b4-47d0-af0a-66e109ce1dd1"
        },
        "item": {
          "id": "86c8d674-e5c1-463a-9d4e-bf7616c5bb8f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "884c7058-8279-42d4-9a1e-1804c6f3b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5c58e8-1fbd-4b04-8604-288600c82e9c",
        "cursor": {
          "ref": "5873905c-f526-4a3f-b402-37bfe9c2bfb3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "72267764-d60e-460b-a0f6-5955972f991a"
        },
        "item": {
          "id": "1e5c58e8-1fbd-4b04-8604-288600c82e9c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "687f6fe4-464d-4e94-8424-1aa9cd14c15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16799a1a-1f07-4511-8da0-2d13a12c01cc",
        "cursor": {
          "ref": "ddee8f6e-d41a-4d4e-98e1-8fe75c932c3f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7229abac-df87-46c7-9fe8-9a9d5b896f35"
        },
        "item": {
          "id": "16799a1a-1f07-4511-8da0-2d13a12c01cc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "519e781d-a882-492d-8047-9fb1182f9511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18e931e-426e-4c94-8a17-143ea32271e2",
        "cursor": {
          "ref": "5ce987ab-0baa-4976-9ab2-ef8fd5ea16f5",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a9410016-86a2-4472-8877-4b5c64b2cbc4"
        },
        "item": {
          "id": "f18e931e-426e-4c94-8a17-143ea32271e2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9c091218-6482-491e-990e-09559542017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c35c0ab-b6aa-4908-836d-10160964b564",
        "cursor": {
          "ref": "1d3390d7-f362-49ec-a689-2c0deab090a6",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5e4027a4-20e6-42e6-babb-15c72a962e79"
        },
        "item": {
          "id": "8c35c0ab-b6aa-4908-836d-10160964b564",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5528db7b-8e75-4453-8f2e-1685a8df3f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a065b833-461b-4b8b-8a48-086a5d7509de",
        "cursor": {
          "ref": "c69883cd-fe7f-4161-97df-a3a2b1ba1816",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "950b7fb5-ecf6-42c7-9e03-64a6a9cbc1af"
        },
        "item": {
          "id": "a065b833-461b-4b8b-8a48-086a5d7509de",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "419a18e6-ad1c-497a-949d-154669bcc45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bb397b-d88a-452e-b30c-664a70b06ada",
        "cursor": {
          "ref": "ccc1d23f-9cdb-42ac-b727-1ad19159cfc3",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ca172552-0bb6-4329-88b9-58d6f204bbef"
        },
        "item": {
          "id": "a2bb397b-d88a-452e-b30c-664a70b06ada",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3d058ae7-8964-4a39-acd0-11d046c30d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4e7d56-06b1-4d2f-aec4-f6c94bcfae2d",
        "cursor": {
          "ref": "5ae976df-1cfc-484f-85e5-c89a814c4b79",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3b5cfdb3-945b-435f-a8b5-02854dbe26d8"
        },
        "item": {
          "id": "eb4e7d56-06b1-4d2f-aec4-f6c94bcfae2d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bb6e47d6-34ed-452d-a7d2-494eba70021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8922a1c9-d0e2-4734-96f6-876f467437a4",
        "cursor": {
          "ref": "7c7cebb7-ef6b-430d-8ced-e0f89005bb52",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fd77310e-951c-43af-a234-33573b835868"
        },
        "item": {
          "id": "8922a1c9-d0e2-4734-96f6-876f467437a4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "627262d0-a77a-4ef1-a5ca-e8cffa5b2a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0552a1-acea-40eb-acf5-cadb27c937d1",
        "cursor": {
          "ref": "93bc86fc-04b4-4894-93bb-676bc9a43efa",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5affae59-ff8f-4f0a-b72d-819779434665"
        },
        "item": {
          "id": "dd0552a1-acea-40eb-acf5-cadb27c937d1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f1b3fe5c-2fbc-4ec8-a535-3c6e2bd9d826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3200079-aded-4117-942f-60e65bb99454",
        "cursor": {
          "ref": "5c35e6ed-1411-4d78-a244-fe87bed755f1",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6dfae2dc-0ce7-4cf0-92c9-61383d931114"
        },
        "item": {
          "id": "c3200079-aded-4117-942f-60e65bb99454",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9505d56c-4b22-4809-a0ad-b2b9b2e3879b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de1d81-8d07-4516-94fc-0c5337bf182e",
        "cursor": {
          "ref": "aa05f6fe-bcbc-4224-b2ba-3967c9f29fc5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5ecea968-b376-406a-b61c-4a45fbf16478"
        },
        "item": {
          "id": "a9de1d81-8d07-4516-94fc-0c5337bf182e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f69a1f48-2ff9-4890-a5ab-a1cb99fdc60b",
          "status": "Created",
          "code": 201,
          "responseTime": 7388,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddb95cf-bdb2-472d-9902-065f9fb2b1b0",
        "cursor": {
          "ref": "e56adbf4-dc50-4259-be0f-923a0d40a541",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "00f8b336-4f74-4fe7-9290-34beb4b7a8b7"
        },
        "item": {
          "id": "4ddb95cf-bdb2-472d-9902-065f9fb2b1b0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e171c988-382f-42ee-a920-65e0b2adbe31",
          "status": "Created",
          "code": 201,
          "responseTime": 7198,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf7fcfe-8bd8-4472-a576-c59a074489ac",
        "cursor": {
          "ref": "8c429eef-5a83-49b4-b0d3-5f336a01879c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ea855340-e846-4b7a-af17-4fabed3e830e"
        },
        "item": {
          "id": "caf7fcfe-8bd8-4472-a576-c59a074489ac",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "748a8dbd-c495-4050-bd4e-56e036d3fccc",
          "status": "Created",
          "code": 201,
          "responseTime": 6600,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d557838b-8728-48c7-8ac9-069a1a704d82",
        "cursor": {
          "ref": "c675f094-bebf-4ea5-9b6f-bb8776113587",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "42b581f2-faab-4811-af94-dd3b5698626e"
        },
        "item": {
          "id": "d557838b-8728-48c7-8ac9-069a1a704d82",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6a4187fd-4d8f-47ae-a0b7-be2be196361a",
          "status": "Created",
          "code": 201,
          "responseTime": 6514,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afb120d-7154-444a-b32c-f9252445e174",
        "cursor": {
          "ref": "176fea7a-2527-4fb3-9cf6-5132a1ecc791",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1fdbb662-601f-4285-9513-f887c680900f"
        },
        "item": {
          "id": "7afb120d-7154-444a-b32c-f9252445e174",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9ba53192-0822-49e3-8a06-8cda80063325",
          "status": "Created",
          "code": 201,
          "responseTime": 6634,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3fcdc4-042f-4eda-a46e-0310819e6693",
        "cursor": {
          "ref": "e7e7fb5c-1329-4cf5-ae26-15bfb769fc53",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9aef9604-ea85-4478-a0c1-33e4f1d6dc05"
        },
        "item": {
          "id": "0b3fcdc4-042f-4eda-a46e-0310819e6693",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "df47d4a8-6e23-4483-ad8b-403dfcdafd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "6fc70c2e-20d7-4020-936a-928776ef05ba",
        "cursor": {
          "ref": "e69a2af0-a81d-43f1-8315-236a88bd2f45",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "434d8f96-dfcf-4627-bbf5-728f55fd7e51"
        },
        "item": {
          "id": "6fc70c2e-20d7-4020-936a-928776ef05ba",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3d614aee-83d5-44ae-9a50-f260cd3955ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5159c63-25ad-4a1c-b233-d01d83550772",
        "cursor": {
          "ref": "0ca4fc0f-8d02-48c2-a3bf-9274862fa5e2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "412d52ee-86ad-422f-a78f-bec138c9ca5a"
        },
        "item": {
          "id": "e5159c63-25ad-4a1c-b233-d01d83550772",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "657ee995-ebd0-468f-85fa-41ec4f756a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a1b780-0254-4558-8584-e72e2aee9e58",
        "cursor": {
          "ref": "744d8344-9f10-4c54-9dad-3a5e000e673b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cb0fc515-0fd3-4903-a88e-001197d20b4c"
        },
        "item": {
          "id": "61a1b780-0254-4558-8584-e72e2aee9e58",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a6c9e363-c620-4bfd-83fe-9fe39384eb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7a9f1c-4f62-43cf-b04b-c7141dd9ce0c",
        "cursor": {
          "ref": "6dff0f04-70c8-443f-a10d-f67e10768c71",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e2e2c33c-d448-438f-a62a-a0c8a6c87439"
        },
        "item": {
          "id": "3b7a9f1c-4f62-43cf-b04b-c7141dd9ce0c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "081cf9d1-c01d-4e8a-ab0c-ac23ac17df06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19958e2f-9f27-4da5-b551-ded8d502a7d4",
        "cursor": {
          "ref": "a662fb02-6844-4685-bb81-566bb302da6e",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6ad40e12-5eed-4984-a0b1-af4742aec06e"
        },
        "item": {
          "id": "19958e2f-9f27-4da5-b551-ded8d502a7d4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa772509-7206-47dc-bcd6-b2b90ea1ec0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26df7b1-8e51-4a35-9b5b-6b633d3fa554",
        "cursor": {
          "ref": "5495297d-9b9d-4192-8284-b18e9cff0695",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "238272fc-5b56-4481-82a6-91fedc3c4585"
        },
        "item": {
          "id": "e26df7b1-8e51-4a35-9b5b-6b633d3fa554",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ddaff7e8-d974-4dfe-ac35-d220c321f039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28555e2-7ad8-48ec-889c-199a278a7452",
        "cursor": {
          "ref": "0ecd804f-9578-4306-8a2c-dd02f32fef6b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a3c7085a-f2de-41a8-8f8d-93990f4c8ee2"
        },
        "item": {
          "id": "b28555e2-7ad8-48ec-889c-199a278a7452",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5e2c0ffe-92fb-41e4-9305-307268a2e4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4845a4f-752f-4183-92b9-d6775654c539",
        "cursor": {
          "ref": "3b565cee-7412-4d1d-b3a1-b67604a0fa6f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ff05e079-e06d-4f0f-8136-8578afa83d9e"
        },
        "item": {
          "id": "d4845a4f-752f-4183-92b9-d6775654c539",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "118f331c-d01f-4dbe-adaa-ba14ef9a189f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7674b1-135f-421c-b353-f578fc5b189a",
        "cursor": {
          "ref": "5b623fa8-c8fc-47d3-a2a9-95da2f90352b",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "af401fe0-18dc-43f2-89de-5135c156ae51"
        },
        "item": {
          "id": "ee7674b1-135f-421c-b353-f578fc5b189a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9868e5e4-2f6b-4285-bcef-cec06dcf7aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3036685-f2f9-4f9b-933e-d7ab762114a2",
        "cursor": {
          "ref": "36b6dab3-3eb4-47f6-acbd-de6f809446f7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "18c7cfa0-2524-40ac-a92a-f1045fc9ede8"
        },
        "item": {
          "id": "b3036685-f2f9-4f9b-933e-d7ab762114a2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "25b2254b-9528-4217-a738-0a07c9df8fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f097e5d8-7b7a-4fff-9bff-695922f26dc8",
        "cursor": {
          "ref": "52fdd129-970e-4ad4-9069-550af8a51111",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1f820a47-8331-4eba-b8e9-4df0359c989d"
        },
        "item": {
          "id": "f097e5d8-7b7a-4fff-9bff-695922f26dc8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e93de4d-d0e1-48d0-bff6-91a0bc258aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e2d298-2b7a-406b-8a37-e77c21cee8f2",
        "cursor": {
          "ref": "5d30e9b7-861c-4285-bb3d-6ba43793dd95",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "974623e9-9d49-404e-bf61-69a165309895"
        },
        "item": {
          "id": "89e2d298-2b7a-406b-8a37-e77c21cee8f2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ea25935e-4e73-478e-a9ef-6c8ab1ca2892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399a77ac-2565-475b-be07-1b1f658ef2c9",
        "cursor": {
          "ref": "a86c85ba-76b0-4ea0-b196-8a47233015a1",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7412f145-deba-46c8-8419-602b4686d7cd"
        },
        "item": {
          "id": "399a77ac-2565-475b-be07-1b1f658ef2c9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "52bcc4c1-bfc0-4d87-a541-b4eff24e821a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1b8ac8-2c85-4273-9282-76fd19a44092",
        "cursor": {
          "ref": "d1f90bc5-46da-4666-a713-97e8ca9b4986",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "40160f2d-a253-4415-9c24-5e7045834383"
        },
        "item": {
          "id": "7b1b8ac8-2c85-4273-9282-76fd19a44092",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0ab6d0e7-a313-43a1-b14a-18b513a91f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e8c08c-4edf-4e90-bc12-cd830ea56442",
        "cursor": {
          "ref": "268f1922-8708-4d82-ac7e-022817f1aa5d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0bf1871f-9852-462c-a5eb-3d72fef316dd"
        },
        "item": {
          "id": "42e8c08c-4edf-4e90-bc12-cd830ea56442",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aed0d462-020d-4755-9de5-ac0f5a806e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac5605e-1971-455a-9704-2918ad8ed101",
        "cursor": {
          "ref": "19fb64c4-c9f4-44b9-bd83-a1fe22ac8489",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ba53aa8a-801b-4d05-b203-c8229ed0770c"
        },
        "item": {
          "id": "0ac5605e-1971-455a-9704-2918ad8ed101",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "333461bb-cfc9-4ca3-9914-da59059c4f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89aeb63-878c-42bb-990c-a4f838a71e83",
        "cursor": {
          "ref": "43addfcd-0baf-41ce-b279-4b60e0f8bc63",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d723dacb-1ff4-499e-94fa-f29489a64565"
        },
        "item": {
          "id": "a89aeb63-878c-42bb-990c-a4f838a71e83",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a577a0e-8346-4bbb-a87c-01f774f07a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281855cd-7500-4530-a935-a292179a2bec",
        "cursor": {
          "ref": "415dcffa-2757-4843-a782-3137a22f5d6c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e14e1875-637d-4d82-a5c0-78ee13ce029c"
        },
        "item": {
          "id": "281855cd-7500-4530-a935-a292179a2bec",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "66f2baeb-255d-4e9a-8d56-3d3f2e41e42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfeba24-94fe-4df5-953a-23654ba2e068",
        "cursor": {
          "ref": "f671c529-3c7d-4506-af79-010f2e27cf39",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "65ed33dd-ac6a-46a8-ae86-22a0f173b21c"
        },
        "item": {
          "id": "7dfeba24-94fe-4df5-953a-23654ba2e068",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c03e2b93-afbc-4afe-b5f7-39749b5866ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fcae0b-f558-4dc9-8ccf-0b4c8d1b98b0",
        "cursor": {
          "ref": "8e657e8e-d0e1-4d93-9524-6fac025299e7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d51fac28-6c12-4aee-ab82-d90a16f0fd29"
        },
        "item": {
          "id": "d7fcae0b-f558-4dc9-8ccf-0b4c8d1b98b0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c076f106-07b4-4d6b-8aac-b1af1c718838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b14a8e-236a-49d6-83d7-9b668d6d9fc2",
        "cursor": {
          "ref": "2d9c9467-2bd0-44ad-8874-dae620da9646",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d17142a8-1b61-435b-ae6f-98f92fd43721"
        },
        "item": {
          "id": "57b14a8e-236a-49d6-83d7-9b668d6d9fc2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7df41470-46c6-4425-bcff-3a7cff07e616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2887cf56-cc52-4a74-981f-9dbca1ec2175",
        "cursor": {
          "ref": "e3eb2c56-d1fd-4ef1-a517-61d87412af2d",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2b6934e7-814a-44e1-ab61-f6085c340771"
        },
        "item": {
          "id": "2887cf56-cc52-4a74-981f-9dbca1ec2175",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9d82b268-53d2-45b6-b41d-fd6fb2536903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dea160-d908-49af-9fc5-f032dceaebe7",
        "cursor": {
          "ref": "33b1cb2f-359e-4efd-acc5-df0e50c037a4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e657382f-17b8-47d4-96ac-5c3cefbc20a4"
        },
        "item": {
          "id": "73dea160-d908-49af-9fc5-f032dceaebe7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "076c5d36-112b-4b3f-b860-12e1df43540d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fba244-658b-4ac2-9625-2b3ecfdfaa53",
        "cursor": {
          "ref": "8cb7fb06-ab03-4e3b-ae2f-91655d4ef61d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6caa7b70-b211-4a72-a2dd-2ef99d9a8622"
        },
        "item": {
          "id": "55fba244-658b-4ac2-9625-2b3ecfdfaa53",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b1a79109-635f-4455-a7f3-50b772b88c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecefc13b-fed0-4882-ab8c-78cc0220fad8",
        "cursor": {
          "ref": "3bdde933-f986-4352-b537-3dfb2650b045",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "841953b4-a143-45c2-9aba-ec5f6c84ba9d"
        },
        "item": {
          "id": "ecefc13b-fed0-4882-ab8c-78cc0220fad8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "11b77906-1134-478c-b4a3-21d4c432b5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e06e69c-333f-4486-b755-4feb3dcf4822",
        "cursor": {
          "ref": "e80f7ded-e447-4ed1-b514-50d248971452",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e058d996-3717-499d-9c91-3b9560a045bf"
        },
        "item": {
          "id": "5e06e69c-333f-4486-b755-4feb3dcf4822",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5faee7e6-cfa8-417c-ad01-5f5adc2eac0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49057d45-0d96-4b30-83fe-8e69b84e70f8",
        "cursor": {
          "ref": "ef30cbb8-1f8f-4da0-a332-e32f3fa066c1",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6e3600eb-1395-4a74-8e55-a887760e4dc9"
        },
        "item": {
          "id": "49057d45-0d96-4b30-83fe-8e69b84e70f8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "30bc7956-296f-4be5-a08a-3ae5cfbf8b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91f0129-109e-4e2b-a07f-498cab41bcd7",
        "cursor": {
          "ref": "4f2cd9bb-69c7-4831-9419-366c2298f60d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "40d70243-a8d3-410e-b966-141bfb817951"
        },
        "item": {
          "id": "b91f0129-109e-4e2b-a07f-498cab41bcd7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ab4618e0-f1e6-48fc-a8f2-0fba088cce7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2192ad5-2d9d-44e6-a5c8-4bfd9cb0bbad",
        "cursor": {
          "ref": "c7115eb1-0df2-437a-bbb8-5b2d528d5394",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cd6b8a41-9a9a-4974-85ec-e98f6bd51598"
        },
        "item": {
          "id": "f2192ad5-2d9d-44e6-a5c8-4bfd9cb0bbad",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a6c480ee-6f20-4522-8398-7a16824ebb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4aa2c51-4178-4b3a-94f3-6f8357c49cff",
        "cursor": {
          "ref": "87379ec2-636c-4516-9061-24aed78d8d2d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "34c7be48-f4e3-44df-9c1e-82dc4369c583"
        },
        "item": {
          "id": "f4aa2c51-4178-4b3a-94f3-6f8357c49cff",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d1f8c6b6-5804-45eb-8607-10807837d9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cca00b-a94e-4dcb-a089-5c38870279f3",
        "cursor": {
          "ref": "65a0d81b-1858-4c6c-a473-0195f4c365bb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "37c6de8a-ac54-4618-bcfe-e4d5baaed641"
        },
        "item": {
          "id": "c8cca00b-a94e-4dcb-a089-5c38870279f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "42b19ea9-4a6e-4811-a00a-2252e834a5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c032637b-0a88-44eb-90a9-5a2c018b3c53",
        "cursor": {
          "ref": "9bcaa911-b838-4072-ae2c-3e912c70aa06",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e5bd90c3-e7b2-4e01-9286-c11d347de33b"
        },
        "item": {
          "id": "c032637b-0a88-44eb-90a9-5a2c018b3c53",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "30f80ce8-50df-4507-a7e1-77112cab2377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82787c7b-f6c6-47c2-b80e-e4d564d9cfbc",
        "cursor": {
          "ref": "64cce627-3637-448d-aeca-a38559ba2224",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6794cf4c-9753-4280-9f8c-35d65fede020"
        },
        "item": {
          "id": "82787c7b-f6c6-47c2-b80e-e4d564d9cfbc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "058994a2-1777-4036-b307-175015876a6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0873b8bd-c8cc-4d29-8291-021d53235467",
        "cursor": {
          "ref": "9d86f07e-440e-44fe-b5d8-f9a91358537f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "66a6318b-054d-4edf-bc33-9002df41d4ab"
        },
        "item": {
          "id": "0873b8bd-c8cc-4d29-8291-021d53235467",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a62f5f7c-9f63-4a37-9c4f-2513b7bf3230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b058686-e7d8-4918-b7ec-3425d4cd4f21",
        "cursor": {
          "ref": "80394427-8a50-40db-9c4a-849e0e1abb4a",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a4b1e851-17a6-43e8-9ab5-d9092374c780"
        },
        "item": {
          "id": "8b058686-e7d8-4918-b7ec-3425d4cd4f21",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "27f66c9f-fa6e-475e-9399-698180feb608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d8b398-b2ae-44e1-94a1-88ed4798f935",
        "cursor": {
          "ref": "c22780d0-9225-4b16-9260-e2d4b8b530d8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "99990f08-6c59-41fc-ad65-747cf48c29e6"
        },
        "item": {
          "id": "12d8b398-b2ae-44e1-94a1-88ed4798f935",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0ebbe8c7-0d36-46a4-aaec-a3a437fcb57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f59c7e-f21d-49af-a173-73362e015402",
        "cursor": {
          "ref": "5edbec87-169b-40e7-b929-0bfd1f00c3aa",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "193e9b34-193b-4c4f-a86b-77033bd1bb77"
        },
        "item": {
          "id": "58f59c7e-f21d-49af-a173-73362e015402",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "862e94e8-9395-4c57-a488-2b446c226a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dad38e7-892d-4081-8247-62dd92de79dc",
        "cursor": {
          "ref": "8a9bd337-5a6d-4560-8be8-6c921b31394c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "934af215-9493-4803-ba37-a3c76b1dc832"
        },
        "item": {
          "id": "4dad38e7-892d-4081-8247-62dd92de79dc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3554d58e-a05e-4c09-8811-a578533ac728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80514cba-a462-441b-ba3c-e3b7c4ec3617",
        "cursor": {
          "ref": "b9d8a109-6ea4-4297-bdac-2b1e71712c7a",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27c20711-6e9d-48f1-80ec-b6b3310c952e"
        },
        "item": {
          "id": "80514cba-a462-441b-ba3c-e3b7c4ec3617",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dd1bf9b2-72c5-4800-97a8-2509fbdaf5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d5bf21-a64a-411c-a589-b85e8017ee3a",
        "cursor": {
          "ref": "25226b96-b391-48d1-bdb6-6c0762043a11",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "038f7c41-f0ba-4195-aeea-77a6456e452f"
        },
        "item": {
          "id": "b7d5bf21-a64a-411c-a589-b85e8017ee3a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c630bf5d-2c31-42ab-95ad-67dfd29eb332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538552d1-e8f4-46ab-90ab-c1231db7efc0",
        "cursor": {
          "ref": "cfb81a2b-fa13-4144-bb47-0314c8ad6069",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "dd8fae0f-595f-49ff-a228-55f01f2b75a9"
        },
        "item": {
          "id": "538552d1-e8f4-46ab-90ab-c1231db7efc0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8aeeef08-f8ed-4d2d-b253-9c6aabd39586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e11a3-9380-4f17-b101-6cdacd1a4a0a",
        "cursor": {
          "ref": "208a5c9f-a4ec-4238-be0c-d46b661e6ce3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "693af677-1269-4c70-b27a-560bfcafc1bf"
        },
        "item": {
          "id": "f63e11a3-9380-4f17-b101-6cdacd1a4a0a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f33e41f2-34bd-4294-af05-c40ba4ea387a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3d6c7d-6e0c-4a91-9772-399624a6ef4d",
        "cursor": {
          "ref": "b8ef85bc-8a00-447b-9ef7-741aa068b45c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "81890fc4-715a-474b-ad39-cae708777d64"
        },
        "item": {
          "id": "2a3d6c7d-6e0c-4a91-9772-399624a6ef4d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f9a5d6f-641b-4988-a89c-ae01ccec2ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d1aa27-dfb5-47fb-8f1d-672c43565acb",
        "cursor": {
          "ref": "21df70da-5675-4149-a7a8-6b35fdfb3a79",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f72da52c-2285-42ad-aad7-64793bb30a14"
        },
        "item": {
          "id": "09d1aa27-dfb5-47fb-8f1d-672c43565acb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "620c3c9f-af6c-4c1d-ad30-520d6d505cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c9418a-c673-4968-88b0-7c678f309617",
        "cursor": {
          "ref": "d6ef5f94-fc7b-4563-99b9-21f51dd053a9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ad98cdd4-06f2-49b3-944d-d74f284d402d"
        },
        "item": {
          "id": "e1c9418a-c673-4968-88b0-7c678f309617",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c6c4c1fc-9349-42cb-b953-81afbe6e01be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba5a95b-26b5-409e-a076-8b33fd18ee4d",
        "cursor": {
          "ref": "2c573a44-2aea-4c72-999a-05a182be645c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8e299a43-6dac-4659-99e5-4fe26f0e8ad7"
        },
        "item": {
          "id": "aba5a95b-26b5-409e-a076-8b33fd18ee4d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a079095b-49ac-4628-8f0e-b981bafc6cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975d4065-43e4-4a43-8a6d-ca55544d3767",
        "cursor": {
          "ref": "437423d1-3101-48f1-ad4f-dccf12e52a23",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1d0faf9a-5f9f-448d-b821-01dd21f88e9f"
        },
        "item": {
          "id": "975d4065-43e4-4a43-8a6d-ca55544d3767",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e681195c-8b4f-4bb9-9472-57d3602006f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a5124d-bcef-47fd-84c4-7171e8b0c380",
        "cursor": {
          "ref": "502e40b5-c679-4ae9-9cc6-1f91202862a4",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "509a080d-0978-4361-bfd2-7abbb78a2545"
        },
        "item": {
          "id": "66a5124d-bcef-47fd-84c4-7171e8b0c380",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "74c85a60-3e4d-407b-b230-d611e29f784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 818,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a16b9b-752a-45b4-9df3-11869b4bfba0",
        "cursor": {
          "ref": "505c153a-c1b5-44de-a01b-9b3ff742d429",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "50c53030-3597-4b0d-8c36-ae6cfbefb72f"
        },
        "item": {
          "id": "08a16b9b-752a-45b4-9df3-11869b4bfba0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "962c69cd-5a7f-4314-ad35-dbafb7587df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e160de4a-f18b-4ebe-9f96-0ce7449e7b38",
        "cursor": {
          "ref": "85dbfcc4-d1a1-45c0-9d15-f91a1acb5492",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e7a2730b-d0d0-43b6-a228-a2b53504b8bb"
        },
        "item": {
          "id": "e160de4a-f18b-4ebe-9f96-0ce7449e7b38",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "895691af-882e-4904-8e0c-083c7ca10c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea96cab-10b9-41ec-88b9-9e7a10d86f32",
        "cursor": {
          "ref": "18acb78f-459d-4cdd-bc7c-94b6c3477255",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "47b2af17-ea79-49e2-a268-295a8194f900"
        },
        "item": {
          "id": "6ea96cab-10b9-41ec-88b9-9e7a10d86f32",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "28c22f1c-bf2e-4b81-8cde-2ea9f22358d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b865c8e-43b4-482b-aa6d-f80d09fa5650",
        "cursor": {
          "ref": "e039fc17-9d24-4939-9020-dcabfbfb0d1e",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9b5a9569-9392-47f5-a75c-16192bf148c3"
        },
        "item": {
          "id": "9b865c8e-43b4-482b-aa6d-f80d09fa5650",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ae464326-93b0-40b9-a6fe-25770f47cb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3c6201-7f60-49f4-9869-3a5ba1f46ca9",
        "cursor": {
          "ref": "0a0d376e-3fed-4810-838d-f5c7eb2b932f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "68e2e6c8-152b-4ccf-9139-456323ea8189"
        },
        "item": {
          "id": "dd3c6201-7f60-49f4-9869-3a5ba1f46ca9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2146fb1d-c54b-4c73-8487-cbbf7fe154a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ae3b5e-b09e-467f-b82e-dbd127bfb7c0",
        "cursor": {
          "ref": "d66aceb8-a500-4de7-8936-650043d1dc0b",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9db4fd06-1d5c-4f0a-8171-daf2d7b6ae2c"
        },
        "item": {
          "id": "05ae3b5e-b09e-467f-b82e-dbd127bfb7c0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "14badfe1-c45a-4563-b7c9-d1f7d0bb0a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9edc88-07c3-40c5-871f-08edc6814eda",
        "cursor": {
          "ref": "c0bfe4e9-cb72-466d-945d-53024a824954",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e4c4e697-1833-4ebe-9cb8-873dbaf7fe95"
        },
        "item": {
          "id": "ef9edc88-07c3-40c5-871f-08edc6814eda",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "80f521f8-8192-467b-a55c-d3908bc95bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f6a9b3-1df7-404b-ab4f-3472b3033b85",
        "cursor": {
          "ref": "970a111c-0164-437a-b3bf-0f3dea9e2ca4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bd51bcbd-f021-4b3f-b594-565a1367424f"
        },
        "item": {
          "id": "73f6a9b3-1df7-404b-ab4f-3472b3033b85",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "50d72c25-23d3-476a-bcb8-3063f6a60b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aedcfd-a8db-4110-ad64-9855d25a53e2",
        "cursor": {
          "ref": "c61f2039-2135-4b86-b6db-228a72ea34ed",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9fb80c14-fc3b-4f5e-b209-7ee6a5b86afb"
        },
        "item": {
          "id": "93aedcfd-a8db-4110-ad64-9855d25a53e2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1913515b-030b-4010-bc0c-3db65796c006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74070310-490e-49e9-bc07-4763e38364b2",
        "cursor": {
          "ref": "c581d38a-698d-4f91-bde5-4cfc7df09d63",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5c5e0f29-df32-434f-9d0d-b2138516262e"
        },
        "item": {
          "id": "74070310-490e-49e9-bc07-4763e38364b2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "63f76902-ea74-47c8-88ab-51d08c3d10e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56418ca-adde-403e-be02-b4598da39b08",
        "cursor": {
          "ref": "96d6cda4-35d9-4112-af91-192c1874516c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "baa1bcaa-9c3e-4e36-a9d8-fda63f67425b"
        },
        "item": {
          "id": "d56418ca-adde-403e-be02-b4598da39b08",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "96fb720a-b554-40bb-8739-35ae2d1b4f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c574c25-7493-4e12-8f9d-594f582b9ab8",
        "cursor": {
          "ref": "c712fbc1-cfc9-4363-bd0c-27979c091241",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4f693791-4eaf-4e14-b793-ace2d66f0b29"
        },
        "item": {
          "id": "5c574c25-7493-4e12-8f9d-594f582b9ab8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "231313a2-6a35-49d9-bf53-8947891a03a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e017d1a5-c27c-44a2-8d9e-eb38526f5fdc",
        "cursor": {
          "ref": "a97d944a-6b02-4b45-8117-86500281a642",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9a82e600-ffef-455e-b49f-f2ca17789cb5"
        },
        "item": {
          "id": "e017d1a5-c27c-44a2-8d9e-eb38526f5fdc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "63a5f6b9-6563-4910-86de-2923b8320943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256f843d-92b5-4d92-bb8e-6d2d2368a65e",
        "cursor": {
          "ref": "ffb3d17b-3de3-4a13-a096-707f111c22ce",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "abf038f3-28da-48fb-9aad-9ea5765c1a5b"
        },
        "item": {
          "id": "256f843d-92b5-4d92-bb8e-6d2d2368a65e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f297616e-e1a3-49f0-bb38-14ce376ca032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52e2b1d-d2a6-4ae6-98a6-ee4e2a2016d8",
        "cursor": {
          "ref": "dd910f95-bd74-4d14-baf9-99a38205e079",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "31d27816-51b7-49a4-9b52-067f9716d1b0"
        },
        "item": {
          "id": "d52e2b1d-d2a6-4ae6-98a6-ee4e2a2016d8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d56066b-db2f-4ef7-bb97-f1fbe226d839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1329956-90c2-4507-834e-cb3ee7e06000",
        "cursor": {
          "ref": "10f6b5e1-94a5-4286-81d2-e3903f20cfba",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0076ed31-e9f2-4fd9-ae34-d038f6a1e391"
        },
        "item": {
          "id": "e1329956-90c2-4507-834e-cb3ee7e06000",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "40946ae8-8157-4eaa-9d03-00fd0b0275fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc3e2bc-2e5f-4fbc-ad07-30aca917d605",
        "cursor": {
          "ref": "780c42d4-1c1e-492e-b56e-199a98adb33d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f318b64a-43a6-4b13-ad37-d0c45a04dddd"
        },
        "item": {
          "id": "ccc3e2bc-2e5f-4fbc-ad07-30aca917d605",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6a7e7328-4086-4939-98a3-f5102ec45941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080c4992-4c6f-4b2c-a15f-6584f1af312c",
        "cursor": {
          "ref": "bbc947a0-9506-4e3d-befa-1875cf6c1acf",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1d4336a9-6ba8-43b5-800d-3f70b03b5d51"
        },
        "item": {
          "id": "080c4992-4c6f-4b2c-a15f-6584f1af312c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "da1002b2-3c62-45f0-8514-1148fc0abdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1c4e63-901a-4cee-8c4f-67d80a8a7d33",
        "cursor": {
          "ref": "b7e686fc-05c9-4b73-ba00-4f5022f954b8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "714bac0c-ab07-4bf7-a807-ab5858da5011"
        },
        "item": {
          "id": "9f1c4e63-901a-4cee-8c4f-67d80a8a7d33",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d6c05b76-c712-43e4-98fe-9df6ff48b1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6751622b-30c3-4f12-94d5-428c7a74de3a",
        "cursor": {
          "ref": "bb8348ac-4089-44f4-a4e7-468bf3d8c409",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2fca0a7e-767e-49c5-900a-19f782709638"
        },
        "item": {
          "id": "6751622b-30c3-4f12-94d5-428c7a74de3a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "27891581-8aaf-4f58-8802-beaecd8392a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece443fd-3f4e-4af5-8592-12d9f69d8083",
        "cursor": {
          "ref": "f860e937-9d86-4272-9cc1-95e94e89517b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "11041674-6640-4a64-904e-ccb7e50de809"
        },
        "item": {
          "id": "ece443fd-3f4e-4af5-8592-12d9f69d8083",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c38b1e27-0473-4a68-818b-8d7c46d819f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335a2aca-d68e-4e02-a839-c930f9328832",
        "cursor": {
          "ref": "57205918-2e8c-4868-9d39-81ff367bb3e7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2a32bf05-88c8-4bfd-9876-624a25bb0fbc"
        },
        "item": {
          "id": "335a2aca-d68e-4e02-a839-c930f9328832",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "22920e2e-e1c2-4b25-87de-427a68228cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a02484b-9a80-4ffc-9c55-1fb58098bc08",
        "cursor": {
          "ref": "81482b8c-495f-4cc6-8a1c-338e32e0f15f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dfe7d67c-2c52-4b0e-ac20-f73c36954452"
        },
        "item": {
          "id": "7a02484b-9a80-4ffc-9c55-1fb58098bc08",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8912c7ca-7ed3-4e9a-8fb5-696d9f6d928a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c735817d-1c1d-44bc-b70a-5c15125e55b3",
        "cursor": {
          "ref": "ed262107-c291-4d2d-998d-6d0dba34cf83",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b0fdbbca-f180-4d13-b709-c759549a2c90"
        },
        "item": {
          "id": "c735817d-1c1d-44bc-b70a-5c15125e55b3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f63e8083-87c0-4a3c-a818-4dfb9ec5ae1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57fc829-749c-4765-a936-08d44305d052",
        "cursor": {
          "ref": "6d070f9c-5a1f-4442-9cf0-3084742aa628",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bf350b32-2c47-4b9c-9e27-5bd1fbad9090"
        },
        "item": {
          "id": "a57fc829-749c-4765-a936-08d44305d052",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "91c501ea-2bcd-40df-81ff-f6c22b4b2304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daac4a5e-489c-4289-8df7-4d444fc17cc1",
        "cursor": {
          "ref": "b942a2d3-415c-4f3b-a9ac-636908c82633",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "75e20e35-cac1-41b3-853e-be6d34ad27bf"
        },
        "item": {
          "id": "daac4a5e-489c-4289-8df7-4d444fc17cc1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "feb9a444-6805-4123-ae0a-2a34c632bcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872d6f00-32b6-4219-b541-a192942d2a80",
        "cursor": {
          "ref": "7a79f4ba-2e62-4a3e-b314-9235b087bd16",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7566dbee-37f2-4557-925c-6d7d3fe474a2"
        },
        "item": {
          "id": "872d6f00-32b6-4219-b541-a192942d2a80",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7f06bb0c-cc7a-4fe7-ae29-56371362a440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5f0611-147d-4dff-9252-166f6e68cba0",
        "cursor": {
          "ref": "9f45ca78-53cf-4586-8a13-3be243fbea06",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "86320275-152c-4737-b516-5f0cf4b056ab"
        },
        "item": {
          "id": "ea5f0611-147d-4dff-9252-166f6e68cba0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0ef4de5e-f19b-4cd1-ab7f-72fc5031f28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70309c50-a4d4-4add-ac52-c828810ff8c8",
        "cursor": {
          "ref": "99efe6bf-2c40-43fb-9db9-5f3337c63a49",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a7041e93-28ac-497e-8d57-7d1f89a1d540"
        },
        "item": {
          "id": "70309c50-a4d4-4add-ac52-c828810ff8c8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6a562a74-829a-4ba1-9618-011a10b6659d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891e1191-fd02-40e1-b6fe-f8a010552dbb",
        "cursor": {
          "ref": "e1c6fcd9-35e2-4c3c-8bc4-5a9386e5571b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b3f6f179-d73c-4029-994f-2621b57eca91"
        },
        "item": {
          "id": "891e1191-fd02-40e1-b6fe-f8a010552dbb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1e8b34ee-241e-41a8-a4bd-6f3158d1c011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2c9c07-b3a9-43dd-b809-a912edfaf5b9",
        "cursor": {
          "ref": "eb1a50c4-4227-40be-beb0-185a8aced6c3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "14581344-69cf-40e0-8ffe-db7a1201f1cc"
        },
        "item": {
          "id": "6d2c9c07-b3a9-43dd-b809-a912edfaf5b9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "48ceafec-8418-4866-9860-6d7e91c26a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216fa646-bd14-486b-bbc7-0f6268dc5273",
        "cursor": {
          "ref": "138751d4-7391-4886-8afa-abedb617bf2d",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e0699eb0-53ef-42cf-bda2-c7a6946c4ec0"
        },
        "item": {
          "id": "216fa646-bd14-486b-bbc7-0f6268dc5273",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "57ddf23a-f6a8-4f9e-84e1-0cd53cf1a261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9ed36e-9951-4699-ab74-1ef7dd110f85",
        "cursor": {
          "ref": "8212c110-9014-4d6c-a6d6-e444d71cbfa7",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a09bc497-5eec-4e8e-8898-b9591fad9310"
        },
        "item": {
          "id": "0d9ed36e-9951-4699-ab74-1ef7dd110f85",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6e5adf80-c729-413c-901a-ee28d21f89b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f0683f-bef0-4a9a-9735-059a28ada801",
        "cursor": {
          "ref": "e1908fac-1764-4103-91c0-6c4ec58e4b48",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bc2ec47f-b8d8-46e4-af88-d027e972e99f"
        },
        "item": {
          "id": "87f0683f-bef0-4a9a-9735-059a28ada801",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a60a1b74-c7a7-495d-9036-e19222ca0ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e4d6a2-b5d0-490b-8def-e0fda4007cf0",
        "cursor": {
          "ref": "6c53aa5e-a778-4492-983c-6ee1618e7acf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "de0d72dd-3c73-4929-b634-db31327bfb9c"
        },
        "item": {
          "id": "d5e4d6a2-b5d0-490b-8def-e0fda4007cf0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a8063f33-d6b1-4423-b804-7accd0c75e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e268dd-8743-4eab-b2c3-fac8e963a876",
        "cursor": {
          "ref": "af38f2d1-b463-4d3b-a270-9b4a19129585",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c6bb2abe-e491-4006-b024-9a3d66dd1cd1"
        },
        "item": {
          "id": "24e268dd-8743-4eab-b2c3-fac8e963a876",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c4ac6041-f0c7-4df0-ab9e-6038262a9745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c7d172-5235-4c1b-8454-bd6fa4b30a25",
        "cursor": {
          "ref": "0f25b50f-dc8a-4500-869f-84ce56e16915",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "20e7b4da-3d85-470f-8941-97915b460725"
        },
        "item": {
          "id": "f5c7d172-5235-4c1b-8454-bd6fa4b30a25",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "17d9b7f7-c794-4145-9fb2-b236aebbb9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea9d89e-6705-4bcd-91d1-a23779abd850",
        "cursor": {
          "ref": "c78d42ba-9775-4d10-b4c6-255c5a3c4742",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "13d951d8-5ca1-4789-9556-67afaaf77079"
        },
        "item": {
          "id": "5ea9d89e-6705-4bcd-91d1-a23779abd850",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5d2e02f3-7a80-45d5-9a9d-e4b79b2a9bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab1a15b-2a7f-4f84-bb87-30484adf70bd",
        "cursor": {
          "ref": "943c5817-2002-43a4-993c-b33dccee0e25",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c81864be-60a3-4e1c-bfe5-d495f96808e7"
        },
        "item": {
          "id": "1ab1a15b-2a7f-4f84-bb87-30484adf70bd",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bbc76338-4f71-4805-a878-9411f9601096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df2ac81-283b-4827-8b12-889c3ca357b4",
        "cursor": {
          "ref": "04f98620-5a20-44f8-a6a6-dfb84e3094ac",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "eca1b7aa-bbad-4197-bc81-96baf458f927"
        },
        "item": {
          "id": "7df2ac81-283b-4827-8b12-889c3ca357b4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e8ed0ee-c146-407e-8b35-81546eca118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a309ec86-2cf7-420f-a730-1495537f633a",
        "cursor": {
          "ref": "e6dd495d-ed82-4e81-9965-9270c836a02a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b7d67cf9-81bf-4393-bc0c-7dc915b9f8f9"
        },
        "item": {
          "id": "a309ec86-2cf7-420f-a730-1495537f633a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "03d269c9-6b54-4a64-a163-7a65e4360175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b179ec0-ce3f-430e-a56e-c040aa40f91c",
        "cursor": {
          "ref": "c23f5a3c-1d73-4551-a323-30220a36a3e3",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "3396581a-0ff9-4f75-bdb8-2a613c99c712"
        },
        "item": {
          "id": "6b179ec0-ce3f-430e-a56e-c040aa40f91c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b71bdfb0-ca2c-4e4f-be67-b7a541bb3936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a46968-3b3f-48d3-b160-c67a05dbdefd",
        "cursor": {
          "ref": "45e83be2-d028-4d8a-a9a5-e36b11663b5d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9e8f69ff-f19f-4d79-b6c4-997f007de294"
        },
        "item": {
          "id": "30a46968-3b3f-48d3-b160-c67a05dbdefd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2fe3c027-16b5-45d2-aceb-97b90fc23493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107ff253-5568-4524-992a-fbb1c73714bc",
        "cursor": {
          "ref": "9111c9c8-0ec1-4a7a-992d-8cdfb71bf070",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "702f391b-2b63-4d96-82cf-5c8d9f3e51d9"
        },
        "item": {
          "id": "107ff253-5568-4524-992a-fbb1c73714bc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b9372100-bd7b-47cd-8f63-db9744dda911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10ab3bf-ae51-4b59-a3c9-4c6734f5def5",
        "cursor": {
          "ref": "6593d95d-7c79-4bb5-84ab-1ca552da73a9",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "63782f4d-27df-4070-b444-0556b63fba77"
        },
        "item": {
          "id": "a10ab3bf-ae51-4b59-a3c9-4c6734f5def5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e7133606-4449-4829-9053-b2d5f650a2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e83d8e-e749-4d23-ae9d-463867f3b4b7",
        "cursor": {
          "ref": "4c6bd67b-fd90-4bbf-8ff5-47768b844509",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "239ef249-596e-4674-94ac-1b48fa03a1e0"
        },
        "item": {
          "id": "56e83d8e-e749-4d23-ae9d-463867f3b4b7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c76ef79c-90a3-4327-bf6e-1e539b6d049e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e0017a-61b2-402c-bda1-f9c973d57230",
        "cursor": {
          "ref": "3a47a9ed-97f8-436e-91fc-59f0f158c355",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6635ad31-6f14-47cf-8aff-616576f68329"
        },
        "item": {
          "id": "e0e0017a-61b2-402c-bda1-f9c973d57230",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0900fb07-9f7e-4de1-bf5f-ffc5842f4ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c92da-ab2a-4f12-b87b-9e26f80ef973",
        "cursor": {
          "ref": "6c1c441f-1729-4b76-9fef-42c31f59260e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "274709fb-bf78-4cb8-aa91-45ac1e3cbb0d"
        },
        "item": {
          "id": "a74c92da-ab2a-4f12-b87b-9e26f80ef973",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b3f81b80-3ee0-4e2e-aaca-1f5b6e0d614a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f6b62c-0288-49d2-856d-96ab5ddfd54c",
        "cursor": {
          "ref": "4d9970a2-ecd0-4d3d-b707-f339a159a723",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1e9760a0-5481-4e2d-9190-5ddcd75092f4"
        },
        "item": {
          "id": "b4f6b62c-0288-49d2-856d-96ab5ddfd54c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cf4f0b9a-6e34-4a14-af1f-f3a50f9dd52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4326b33-5f50-422f-8c55-d199e2defb64",
        "cursor": {
          "ref": "37b4ec01-5673-4532-9b75-5d896fdabdfc",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "496097a6-d350-48f0-bb7d-f067350e4de7"
        },
        "item": {
          "id": "d4326b33-5f50-422f-8c55-d199e2defb64",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "95a0f4ff-2b1e-428c-92f7-b0ee87e34823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1552c4b2-0f16-4767-af91-cd3ed3e31250",
        "cursor": {
          "ref": "b1630c62-9574-43a8-bab1-ef7993bcfe3d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "098eca6e-d91d-45db-94ae-a9e051afdf21"
        },
        "item": {
          "id": "1552c4b2-0f16-4767-af91-cd3ed3e31250",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3853584a-21d6-4ee7-b598-44b0f01e4f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceee6515-18e6-4332-919a-7a2a56a7d12a",
        "cursor": {
          "ref": "9c1276ab-3cc8-4a20-9987-8708ea0304b3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2fb33ec8-4fc0-4bc3-94b3-7031e08a753b"
        },
        "item": {
          "id": "ceee6515-18e6-4332-919a-7a2a56a7d12a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cd520963-38a3-43a0-80c7-3f10fb3d15c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5e3cf7-f14b-4f0a-8f57-38ba95bfb613",
        "cursor": {
          "ref": "a5818b42-6db0-4dd4-94b4-d6501e827d6c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e565d9f8-b83c-4078-8c3a-b535ad38e4ad"
        },
        "item": {
          "id": "bd5e3cf7-f14b-4f0a-8f57-38ba95bfb613",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "38b50bfe-c49b-4c1b-97f9-2ef8205b23e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca75b689-f330-418b-8ab4-656c62bad37b",
        "cursor": {
          "ref": "c8d45b3a-dc71-4713-9de8-b1553385137e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "774b0dfd-37b1-4996-ad58-e3748b2f85b4"
        },
        "item": {
          "id": "ca75b689-f330-418b-8ab4-656c62bad37b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da7f7097-769c-4428-ba6f-6524560abf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59096e2c-d7e6-4420-acb6-8394a290d76d",
        "cursor": {
          "ref": "0871a908-567f-4f31-a67f-284780072f8f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "32cd733d-31fd-42c5-a6c0-dbe2a3b60924"
        },
        "item": {
          "id": "59096e2c-d7e6-4420-acb6-8394a290d76d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "449f4b0f-0eac-4cb7-ac15-5460ce36c61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ceca0e-0ce2-493f-9506-0e83e99ab52a",
        "cursor": {
          "ref": "5c892587-5739-4aac-802b-16f83546d426",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "20828610-8b8a-478d-96e5-bae7b389e528"
        },
        "item": {
          "id": "35ceca0e-0ce2-493f-9506-0e83e99ab52a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "90ab50db-e9f1-435b-8026-236ab820a89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934b4051-c132-4aaa-be72-593930105fe4",
        "cursor": {
          "ref": "32951627-89df-4699-94e2-f775a3063547",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b3e7435f-6ec1-4b2c-a430-9b25a12db915"
        },
        "item": {
          "id": "934b4051-c132-4aaa-be72-593930105fe4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bd786303-55a0-4477-8028-cbb62678d89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90cce09-2222-4d01-9f2d-37928bee792a",
        "cursor": {
          "ref": "1709ea40-4210-43dd-b374-8688f8748bd8",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a09df5b5-94a6-45c7-a4cd-5265e9e2de3a"
        },
        "item": {
          "id": "f90cce09-2222-4d01-9f2d-37928bee792a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bc048831-6153-499c-a7da-15afd430d4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7825f6-a865-45b6-8914-14fd8fefc39d",
        "cursor": {
          "ref": "4bcd78b3-4287-4a07-91b6-05ff88394fac",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "253b83c4-a4ec-4edf-84c1-2d8b327815cc"
        },
        "item": {
          "id": "be7825f6-a865-45b6-8914-14fd8fefc39d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0d6c38a4-f721-4295-aaa5-9eb7e0141d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fdf2ef-c650-488f-ba20-26efca95e8cd",
        "cursor": {
          "ref": "10bdb1ce-2ab6-4388-97aa-ef6b1b1305fc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f8f3da88-8f49-40e6-8ce6-9dc0bae93953"
        },
        "item": {
          "id": "35fdf2ef-c650-488f-ba20-26efca95e8cd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "16b1de96-5dc6-41f7-b274-ac7987d5bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a354bd1-7556-4855-8e66-14edbfb04de6",
        "cursor": {
          "ref": "e77301d0-2d2a-4e07-b68f-bafed25f76d3",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5e1aa004-8919-4631-9637-8fac908fb995"
        },
        "item": {
          "id": "3a354bd1-7556-4855-8e66-14edbfb04de6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "97d0e972-33b8-4abe-aeaf-3681e5b3664e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917b53f3-5397-4d66-bf71-f250bdb58b6a",
        "cursor": {
          "ref": "7caeef17-bcc7-4900-a26b-691fdd65bb06",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "88c41e2f-2c81-4fd3-96e3-852760822bb6"
        },
        "item": {
          "id": "917b53f3-5397-4d66-bf71-f250bdb58b6a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b247b9cd-ec89-4a45-870a-78c9110604af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e2b30-b76a-47e0-8334-00c5df1886f2",
        "cursor": {
          "ref": "5b91499a-44d0-4c16-a509-69e081dcda3a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f0d1f395-3781-4b29-b4a2-9fe45c8ec10d"
        },
        "item": {
          "id": "196e2b30-b76a-47e0-8334-00c5df1886f2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b6022ca8-52b0-4e47-9a42-6685698b6724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff948397-ebf3-4090-9f51-b4fcc47520f2",
        "cursor": {
          "ref": "c72a1b1a-af5e-4980-987a-a98f11b991ee",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f700efd8-4a56-49e1-8e64-a223f8fae66c"
        },
        "item": {
          "id": "ff948397-ebf3-4090-9f51-b4fcc47520f2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "427e1849-d9ce-4943-a813-ff21e987247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364789fc-bdbf-4f48-99fd-7e3e98ec0847",
        "cursor": {
          "ref": "bb23666d-b540-4dff-92db-600722d01d0b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c03f733d-92bf-44f1-8148-85d14c1eba7e"
        },
        "item": {
          "id": "364789fc-bdbf-4f48-99fd-7e3e98ec0847",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c8a07995-6b61-4e1d-bf07-297c2794009c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7cc5ba-1fec-4491-b538-47ad7c08d704",
        "cursor": {
          "ref": "67800ef6-c4bb-411e-89d7-0658e87a524f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3518528e-50d5-4016-b2cb-e0fd2c10c80d"
        },
        "item": {
          "id": "4b7cc5ba-1fec-4491-b538-47ad7c08d704",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6cea12f0-117c-4da3-9048-b2e9a3539a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105d6af3-050c-4a89-a8a8-3375395e9d34",
        "cursor": {
          "ref": "4104013e-2c7a-4069-9eab-bb924fa37b6e",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a6a0438e-4da6-4f17-99c0-91fb7359c34c"
        },
        "item": {
          "id": "105d6af3-050c-4a89-a8a8-3375395e9d34",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "19bc220e-f443-4dba-88f8-3e068aa86971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d4770d-a8a2-4569-80e2-98c02f4701a9",
        "cursor": {
          "ref": "ffebc442-5476-404a-9286-77845fd5d939",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6cd0d505-8d23-4a53-9ef3-9f197149df35"
        },
        "item": {
          "id": "61d4770d-a8a2-4569-80e2-98c02f4701a9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7a773c3d-7a39-48c3-987f-ba077a971906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436923e2-7f50-4019-9e00-2c0e6628bb46",
        "cursor": {
          "ref": "4763b382-6ea2-49fb-bfc9-5d80a976704f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b20f84ac-06f4-4bf4-92ac-82acf8b000d3"
        },
        "item": {
          "id": "436923e2-7f50-4019-9e00-2c0e6628bb46",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "341afcaa-897a-4a48-a3ef-9125bd2707e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90d0b07-8994-40f7-a308-9bdb543aad22",
        "cursor": {
          "ref": "a26b9147-cf72-48de-a3fc-d0101afc3bc2",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f08081ad-3311-4916-afd5-b7a4a3984ee2"
        },
        "item": {
          "id": "c90d0b07-8994-40f7-a308-9bdb543aad22",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7d583403-2d11-4c05-80d2-7312bd295168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a7a3d6-c53d-46fe-81bc-5a458a9558e7",
        "cursor": {
          "ref": "b9497bd8-8cac-4ebf-afe9-051ddaa6f3d5",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fc8e9807-ab11-49c1-984d-a55ca96a5378"
        },
        "item": {
          "id": "45a7a3d6-c53d-46fe-81bc-5a458a9558e7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "164a15ac-dc9f-46a3-9fef-deb5b49e1f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcb4796-e9d7-4cde-8855-870bd87e59f8",
        "cursor": {
          "ref": "8229309a-917d-46a7-ab25-d22fb40f2627",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "af5cdb1d-b214-4c04-a3ac-e65631ef363c"
        },
        "item": {
          "id": "6fcb4796-e9d7-4cde-8855-870bd87e59f8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "64ee3dde-526d-4a3c-83e0-3391c0a1ac08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497c55a4-fd8f-491b-a2bb-31abd9c6a7b0",
        "cursor": {
          "ref": "a9bda00d-2f07-42c4-8bf4-6e66629d0d34",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "02ffaf74-6205-45a1-ad1e-4fcdf2d8580e"
        },
        "item": {
          "id": "497c55a4-fd8f-491b-a2bb-31abd9c6a7b0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "38fb4b11-0d9a-4a37-afa7-bfb975885f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6785560-b672-4749-88e9-451cbfab9345",
        "cursor": {
          "ref": "5b81be31-0aa5-4261-9b2f-26b8302912cc",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b883d9cc-236d-4059-a26e-fb82f8093181"
        },
        "item": {
          "id": "a6785560-b672-4749-88e9-451cbfab9345",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6bf9c474-bb29-42ea-9f39-2d5594e44a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06cb253-fd9a-4fc2-aebc-553cb1c43c92",
        "cursor": {
          "ref": "9081466c-fdcd-4699-9efd-14ebd71f1abc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2cd9c17a-3d2b-444a-ac34-cbe14e1110a0"
        },
        "item": {
          "id": "d06cb253-fd9a-4fc2-aebc-553cb1c43c92",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fd96779b-541a-4918-ac14-8c00de4f902a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82735b9-530b-4520-b30a-47ab76c3d70b",
        "cursor": {
          "ref": "7bdea5f6-0106-4c91-8bfb-e98606f50354",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "47a49c40-7c7d-4e28-ac9a-d419a7cd3490"
        },
        "item": {
          "id": "c82735b9-530b-4520-b30a-47ab76c3d70b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ba53ef20-d988-43bf-9e2b-fe2cf0d5a748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc6341-f137-478d-963d-79fc5debbc80",
        "cursor": {
          "ref": "9f27b18c-e347-4078-9abb-3732fc489f09",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bff0a4b3-34d8-483f-a06e-8b429d64fec6"
        },
        "item": {
          "id": "a9fc6341-f137-478d-963d-79fc5debbc80",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "edb51b17-0f59-44d1-9298-f0f10b7a127b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e95d26-b745-4b14-b935-222ade7b7a26",
        "cursor": {
          "ref": "7d876ef6-6d5f-4b2f-9e82-a69008b5efc7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c84996e2-3e84-4b99-a901-c11a871bdfa6"
        },
        "item": {
          "id": "16e95d26-b745-4b14-b935-222ade7b7a26",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "42de62f1-4c17-46fe-8882-b80d0a556613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac35e44-6a88-42e7-af06-fd11414602e6",
        "cursor": {
          "ref": "7087b25f-d332-4d55-bae3-c0da31e02428",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3cdc9a12-1d38-4941-bfe3-4385936af11e"
        },
        "item": {
          "id": "2ac35e44-6a88-42e7-af06-fd11414602e6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3f254774-a18b-45c5-8440-0572472b6cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ab61d5-c398-4846-a116-556462c5dcfc",
        "cursor": {
          "ref": "ecb99355-f4c3-409d-9af9-eb834331e26d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "efab0a93-6377-4d02-9cc0-75bea17214fc"
        },
        "item": {
          "id": "b1ab61d5-c398-4846-a116-556462c5dcfc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c3d802f-95c4-4779-90cf-23562eec0ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0968fdb1-8c8a-415e-9dbb-355f8dbf85fb",
        "cursor": {
          "ref": "02cf225c-a1df-444d-88d5-f36d65378d67",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ff2adf6a-ce0a-42c0-849e-dcd1dc1cacc6"
        },
        "item": {
          "id": "0968fdb1-8c8a-415e-9dbb-355f8dbf85fb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dcc4c777-3779-4498-862b-eb1a3a99d382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c4f71d-0722-483d-b60a-670806e41c17",
        "cursor": {
          "ref": "02f7dad0-2479-49b0-9a73-1cf265c5ded7",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "695c479f-faef-4cb7-a140-014b39ff4af1"
        },
        "item": {
          "id": "39c4f71d-0722-483d-b60a-670806e41c17",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "35e518bd-2dbc-4388-9b9e-b0ae578ff2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348003bb-432b-4a8a-9a1c-f28d7c82d694",
        "cursor": {
          "ref": "deaf9bed-3018-482e-929b-221d2a08c531",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9212251b-3f34-468c-a1d8-e77a66feeab4"
        },
        "item": {
          "id": "348003bb-432b-4a8a-9a1c-f28d7c82d694",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "66fca67c-4952-4992-9bfa-2cb95691fab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519470ff-8390-4ce8-b984-4a45ebd1c049",
        "cursor": {
          "ref": "4874cb9e-976b-4100-b502-8448c766682d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "65e7b8f8-24d4-4d82-a7c5-5db327c56ae1"
        },
        "item": {
          "id": "519470ff-8390-4ce8-b984-4a45ebd1c049",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f16ebea4-0be5-46f1-85d1-ed5628ffc2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48824b96-cda3-49b6-b841-9df661154390",
        "cursor": {
          "ref": "a36166f7-a879-4508-85a0-df00a8340c3a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bc9ac50d-a17c-414b-a690-53b77c95a817"
        },
        "item": {
          "id": "48824b96-cda3-49b6-b841-9df661154390",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e00eb9b8-7b4e-4abb-a367-e0586daf82c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79706234-1596-4680-8d1d-4117992d184a",
        "cursor": {
          "ref": "ae96e6df-fab9-418a-b74f-fdd2c03091ae",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cb2d58f7-f19e-4194-b1e2-6868f2abecac"
        },
        "item": {
          "id": "79706234-1596-4680-8d1d-4117992d184a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f120f389-70ab-402c-bc18-f2b7448a5230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5354f0e7-e743-4c10-89fd-fb3446579034",
        "cursor": {
          "ref": "cbf76526-69a7-43a6-b47a-623ed6c3dbf3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "17682bde-7f15-40e1-8e01-434ffa7848d8"
        },
        "item": {
          "id": "5354f0e7-e743-4c10-89fd-fb3446579034",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "91c89f45-ee10-4f3b-910a-492d64350186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17f3b4d-f463-4cc6-aca0-2bd91c8fabdd",
        "cursor": {
          "ref": "02852f68-cdd2-4a50-a708-046886d211f0",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3d215597-be7d-48f3-be24-702cf3b45bda"
        },
        "item": {
          "id": "f17f3b4d-f463-4cc6-aca0-2bd91c8fabdd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d3da987f-8163-4fc1-9ef0-4d71dc57a658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b753e4-beed-4b88-8d2a-1cfd8136fef6",
        "cursor": {
          "ref": "90d8cb44-977a-4de1-8e0d-ff0e836c8537",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2aa595ec-02a7-4664-9092-04e0d3f01a92"
        },
        "item": {
          "id": "83b753e4-beed-4b88-8d2a-1cfd8136fef6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "646ee83d-5915-4770-8e87-99fb2580d6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f157e0-8003-4091-8110-acc9187d9227",
        "cursor": {
          "ref": "23335a7b-8067-4d70-91c4-522b5a06c29a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d863200a-4212-4f83-abca-b40fa7f89bfb"
        },
        "item": {
          "id": "68f157e0-8003-4091-8110-acc9187d9227",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "60a8ec49-42db-4b1a-bf1c-a13bf9d42d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b661d7-c8ab-4cd1-8320-c6b7245ef3a4",
        "cursor": {
          "ref": "914093c5-10c3-4cb6-815e-4e4a536fb00a",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "65e99ffb-2f9a-44a7-919e-3a453a0641d6"
        },
        "item": {
          "id": "25b661d7-c8ab-4cd1-8320-c6b7245ef3a4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3ad1b57e-bc26-47ec-b5ed-01b132185cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874f1be4-35df-4217-80cc-63bae6b10163",
        "cursor": {
          "ref": "b4cafa23-d200-4467-8221-bfbc5857c7a6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e27fbd05-efe7-46bc-99ea-6641d3a7699f"
        },
        "item": {
          "id": "874f1be4-35df-4217-80cc-63bae6b10163",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0ac3faba-de6d-425b-82ac-ff15554d2ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e52abd-3016-4c3d-a643-9c8e7cb55089",
        "cursor": {
          "ref": "665c8bda-b2b5-406f-bf98-01f6e2d33259",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "10543552-4554-4800-9758-c828bc6267e5"
        },
        "item": {
          "id": "68e52abd-3016-4c3d-a643-9c8e7cb55089",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a3200ecd-946f-4510-8de8-f73ec99fc1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90915f6f-f3bb-41d7-b3a1-285871426248",
        "cursor": {
          "ref": "4a98e5c7-f6b2-448f-8e18-a355444e83eb",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f3c53110-40dc-4eb3-bec5-deaa12a63b02"
        },
        "item": {
          "id": "90915f6f-f3bb-41d7-b3a1-285871426248",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "68ff1813-2add-4f53-a098-563d37d86518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee784efc-966b-4455-86e0-7d4024dab260",
        "cursor": {
          "ref": "24ed203c-4e20-4c2b-9e49-c2285e2563bc",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dfb3b500-0035-4635-8753-b5c4c357a920"
        },
        "item": {
          "id": "ee784efc-966b-4455-86e0-7d4024dab260",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "626129e8-f1db-4b7c-9457-d2608c211a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdddd761-4818-4912-9f8f-8918ee28b435",
        "cursor": {
          "ref": "6979bd85-a2e6-47e8-b190-ecb9fe6b39b5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "50eff069-8b1b-4947-a11c-619b000c3a5c"
        },
        "item": {
          "id": "fdddd761-4818-4912-9f8f-8918ee28b435",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d307d614-e7cf-46af-a7bb-3ff5499211db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff111c4-b0c6-4ac3-8ef1-58ae4292f383",
        "cursor": {
          "ref": "074a5aeb-fa90-436d-8047-080406437b6e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "81ee37cb-332e-4a42-a507-2d05fc00371b"
        },
        "item": {
          "id": "9ff111c4-b0c6-4ac3-8ef1-58ae4292f383",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "23c80b88-6ba0-4f28-ad2f-784cd9794d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b43692-ae41-4d81-9814-3a14e48e05bc",
        "cursor": {
          "ref": "96d1228b-7be7-48fe-bce4-bd93f8baa2a6",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0fb12f57-765f-4525-8c14-7c44cb19f261"
        },
        "item": {
          "id": "49b43692-ae41-4d81-9814-3a14e48e05bc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9d79bfed-0118-49ed-9b2b-4b18c13c3c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07622985-6e53-4be8-a6f7-eee3e7d769ec",
        "cursor": {
          "ref": "0acbb1b5-264f-4e93-9601-9bfb39c3d90c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ba655e44-0971-4da1-a041-e61359957c86"
        },
        "item": {
          "id": "07622985-6e53-4be8-a6f7-eee3e7d769ec",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f64c0066-52c1-4895-82ea-fdf5fc6ca6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4613ee35-f317-4bff-b34c-115f851e1691",
        "cursor": {
          "ref": "d61d130b-750f-4e39-8e95-ff8e074e34a8",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bbd29135-4527-4714-81ac-9d81f46128d9"
        },
        "item": {
          "id": "4613ee35-f317-4bff-b34c-115f851e1691",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5db61fa6-3c01-46f2-b154-766fee344d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb80a31-260a-4f02-b09d-2f72decef332",
        "cursor": {
          "ref": "f55f3ea1-0288-47d8-baab-08b9e4321c15",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "97d9d706-528b-40f0-a42e-82346afb1590"
        },
        "item": {
          "id": "0cb80a31-260a-4f02-b09d-2f72decef332",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b0975a51-2918-49a7-a2d9-3937e4b047d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dbc85d-cf5d-4705-8ed2-de05e2dd3161",
        "cursor": {
          "ref": "ae5f6a96-1669-4002-85a9-52a54d405df5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f19bdd4e-7a34-4294-9b5b-e3da77eec6c9"
        },
        "item": {
          "id": "41dbc85d-cf5d-4705-8ed2-de05e2dd3161",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "333c75ae-906b-4a6d-a1ef-48600cc03480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9062992a-ef1b-4f2c-be05-fb4b13096368",
        "cursor": {
          "ref": "7a6791d1-9822-47a0-89b4-925aa1be3210",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c487e87e-c32f-432b-9f2e-22448075785f"
        },
        "item": {
          "id": "9062992a-ef1b-4f2c-be05-fb4b13096368",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bab01f87-5b8c-423d-bfb6-a5862b27bb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55900a37-650d-447a-bd67-21dfc400382c",
        "cursor": {
          "ref": "24e16509-e4ba-4e7f-873c-8549bec4137f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "08298b4d-0c23-4b8d-a9ef-bb2bec5aa1da"
        },
        "item": {
          "id": "55900a37-650d-447a-bd67-21dfc400382c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e119798f-7bfe-4854-a72f-c8070bfcfcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e71e08-56f3-496a-9cd1-c5345545c78c",
        "cursor": {
          "ref": "16e383bf-9dc7-42b2-b16a-cecad26989e7",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "59758fed-9be8-4359-8907-fff1e8921b1f"
        },
        "item": {
          "id": "a5e71e08-56f3-496a-9cd1-c5345545c78c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "36892d67-0c0b-4b4f-9083-760112177620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff05a12-4fa2-437d-b8d7-229ac3562fa9",
        "cursor": {
          "ref": "e95e7e10-9671-490f-bd66-67ff96e30e69",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "31f01a2e-406e-434c-8a9b-53e40ab2bc32"
        },
        "item": {
          "id": "bff05a12-4fa2-437d-b8d7-229ac3562fa9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9375d832-5a12-483b-bfcb-bd589e9c8906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed62db7d-4868-4842-85b8-13c5c955be9a",
        "cursor": {
          "ref": "7a7584bd-485c-4ffc-9b70-e3eecfac980c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "51040749-16b1-40bb-9129-a379bc9f99f2"
        },
        "item": {
          "id": "ed62db7d-4868-4842-85b8-13c5c955be9a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7c8bd287-79c3-4af7-a45f-2a6b95e404ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d50dbca-dcb6-4a45-851c-9ae2d861ddb2",
        "cursor": {
          "ref": "0a699fe4-09ed-4807-b28f-8c62d89d00b6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "083349e7-a72e-4dc4-b619-87f887e580a2"
        },
        "item": {
          "id": "2d50dbca-dcb6-4a45-851c-9ae2d861ddb2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4ed8b159-b066-4e3a-975c-b19696017601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80a394b-32ab-4310-bda8-630d032433ec",
        "cursor": {
          "ref": "7f94b11a-4a58-4735-9848-7e54b72e6c40",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bbfaa722-80a6-4ebb-8618-0b4eb8d2a07f"
        },
        "item": {
          "id": "b80a394b-32ab-4310-bda8-630d032433ec",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "63d2ecf4-7d5e-4bca-9ed8-f12ff12919a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3873712b-987e-4d42-8c55-a2747f631992",
        "cursor": {
          "ref": "41311d8b-724e-4f95-9e31-4b719af2b30b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ac5741fd-5075-4e0d-a4c9-3a1889b44ac6"
        },
        "item": {
          "id": "3873712b-987e-4d42-8c55-a2747f631992",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b748488-62d4-4088-a5d0-b2d3956e4934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc5066c-5959-401b-b6cc-f22b2d8c9ede",
        "cursor": {
          "ref": "285d4731-aacf-4a65-87bf-4daa32063a3b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a28cb641-c0f6-4c94-9d21-42090c69c9c0"
        },
        "item": {
          "id": "9bc5066c-5959-401b-b6cc-f22b2d8c9ede",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ea1603f2-5b1a-42b0-9dd7-493040daee66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d806d9-665b-4750-a081-1d7e781a6bd1",
        "cursor": {
          "ref": "1cb0d82e-7410-48b9-934f-c5a92f6c8d45",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "523648d1-bd47-4235-bf8d-c10ea46cd999"
        },
        "item": {
          "id": "d5d806d9-665b-4750-a081-1d7e781a6bd1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cef6daae-b2a3-4fad-a4eb-5c6f01f9a936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae33387-4986-487b-bab2-608a3023239e",
        "cursor": {
          "ref": "366a01cc-04c0-4419-817b-226d70e16c25",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "02010dcf-b9d7-4c72-999a-6af51c669882"
        },
        "item": {
          "id": "1ae33387-4986-487b-bab2-608a3023239e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2452181f-e7d4-4401-b1da-3b86cb410bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3b3077-73a8-4826-b74b-25dcfcda2897",
        "cursor": {
          "ref": "9b5a4c5e-e64f-4350-8863-427e8e77bc05",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f7c6d640-a907-43d7-8431-cd0c2f3358c3"
        },
        "item": {
          "id": "af3b3077-73a8-4826-b74b-25dcfcda2897",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0a013782-e9ff-4132-bdba-f4c189bf8f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aed7c69-90e6-4187-855e-7d776731cf7d",
        "cursor": {
          "ref": "277d8df2-e45e-4759-9a3b-61505909f57a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "fdbcff2b-86d1-4b71-a66c-6711d4d5b0ca"
        },
        "item": {
          "id": "3aed7c69-90e6-4187-855e-7d776731cf7d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e66e3e2e-a640-4829-98a5-e2a737e4a91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f700a9ff-535e-499a-a564-53b2a08c83d6",
        "cursor": {
          "ref": "a43a3b71-d824-43ee-83e8-7285c4f6b446",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "821d4eed-e519-48db-b05e-1991f06c4d1e"
        },
        "item": {
          "id": "f700a9ff-535e-499a-a564-53b2a08c83d6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6f9a1dfc-8d64-4810-870b-c89d3ad314a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310ba67b-edc7-4778-8266-b0cebf63231e",
        "cursor": {
          "ref": "e2c84234-ff7d-4b52-9657-ef724a580de3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "aaa11890-6d53-4ea9-b06c-5809da573663"
        },
        "item": {
          "id": "310ba67b-edc7-4778-8266-b0cebf63231e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e5149d4f-1586-4deb-abc4-a376617a0619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cfe6d6-baf3-40c2-b4d4-b326ced4c1c0",
        "cursor": {
          "ref": "3bc38ac0-4067-43c3-be51-2f7dc01517a9",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "65f31a74-a106-4cd3-8109-9b907562aea1"
        },
        "item": {
          "id": "b3cfe6d6-baf3-40c2-b4d4-b326ced4c1c0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "01f03133-ee41-4745-9332-17590a5fa71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d6ee81-ddf2-4ee1-9381-648c5b377a29",
        "cursor": {
          "ref": "11e2ebc4-9ef1-484e-8895-d14a5b6c7fb1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "04577a0d-462a-4cb6-bf49-8552b0d8f92d"
        },
        "item": {
          "id": "d3d6ee81-ddf2-4ee1-9381-648c5b377a29",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f241f982-b1ad-4e93-a883-5face0cf2bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92085f64-e239-47b8-adc8-a785bd9841c9",
        "cursor": {
          "ref": "933fd349-ea24-442f-bbe4-6ee9ba82dccb",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4e4a6319-ecda-4892-aa73-f1f144b0f98f"
        },
        "item": {
          "id": "92085f64-e239-47b8-adc8-a785bd9841c9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f7411032-b82c-4e61-8a1f-6b8ec413f109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a7d08f-447b-4af4-b6c5-ca1b54705f55",
        "cursor": {
          "ref": "980ebc82-be97-4a5f-9534-e87e4a5b4f0f",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3b9bc0ea-1654-4af0-8a31-0d0685da4fc1"
        },
        "item": {
          "id": "71a7d08f-447b-4af4-b6c5-ca1b54705f55",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4292360e-f940-4296-a44d-f5217248d66b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5d1e8d-6ec7-49ed-8fd4-4004b14a24f7",
        "cursor": {
          "ref": "1082490b-f46e-48d4-9ac0-04b354b954ff",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c0c64868-e701-4a3d-afc1-ecbc918d13ec"
        },
        "item": {
          "id": "ec5d1e8d-6ec7-49ed-8fd4-4004b14a24f7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ee8f3af8-83ef-4738-b389-fdd1f3cf4bc0",
          "status": "OK",
          "code": 200,
          "responseTime": 649,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eae250f-2654-41b0-9cbd-f5be9c91d75b",
        "cursor": {
          "ref": "65a40d7e-662b-40cc-8327-ce3b659bb390",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dae67264-cba1-45fe-b4d2-bfb1dc5e57c0"
        },
        "item": {
          "id": "9eae250f-2654-41b0-9cbd-f5be9c91d75b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "27d89769-7668-4f20-9c04-b4ac154d4936",
          "status": "OK",
          "code": 200,
          "responseTime": 1805,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "99683e65-d3c7-4bd5-822c-55755ea25d61",
        "cursor": {
          "ref": "4a8aa5ed-9707-498e-997b-58d420178115",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "763508ff-1eed-4546-9e43-8d70989ddbd7"
        },
        "item": {
          "id": "99683e65-d3c7-4bd5-822c-55755ea25d61",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "581b3cd8-ef2d-47e0-8c71-1e9a834ec32b",
          "status": "OK",
          "code": 200,
          "responseTime": 1549,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73372b9-e0db-4356-94da-25dc9524e3e1",
        "cursor": {
          "ref": "015dcf45-569f-4097-9772-2e6631f7e89c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ef863e3a-bec2-4c5b-9254-8c50fb312f12"
        },
        "item": {
          "id": "b73372b9-e0db-4356-94da-25dc9524e3e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ccef59a9-4d1d-4e1a-b0f2-dd197674b24a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73372b9-e0db-4356-94da-25dc9524e3e1",
        "cursor": {
          "ref": "015dcf45-569f-4097-9772-2e6631f7e89c",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ef863e3a-bec2-4c5b-9254-8c50fb312f12"
        },
        "item": {
          "id": "b73372b9-e0db-4356-94da-25dc9524e3e1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ccef59a9-4d1d-4e1a-b0f2-dd197674b24a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc90551-c02f-49b1-9d6c-68347041b5e5",
        "cursor": {
          "ref": "6aa89be6-79e7-48f5-a5ca-7ac01f19ae4d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "43e129ef-566f-4760-94dd-acd98be6d40d"
        },
        "item": {
          "id": "bfc90551-c02f-49b1-9d6c-68347041b5e5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2627f109-235a-4a6c-b1d8-e127a167a279",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753e1e92-d77b-4ace-a054-c515e4e8404d",
        "cursor": {
          "ref": "cbc4b68f-d636-49d8-8005-f6752e2bf22f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a7f62a8b-a673-4d1e-897b-6c0ca0f419e9"
        },
        "item": {
          "id": "753e1e92-d77b-4ace-a054-c515e4e8404d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "efaeda26-a9af-4858-b845-58bbdfc7e20b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}