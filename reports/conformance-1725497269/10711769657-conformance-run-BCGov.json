{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3d01e27c-ba77-402e-ba5e-f068e19662f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "20754c11-746f-48f6-b247-3fd36c247299",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b548c08f-4a84-4559-a91e-0eef4ae79915",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b8152b6-faad-46c2-9c2d-b13925bdc8ae"
                }
              }
            ]
          },
          {
            "id": "deb9e006-0635-4b11-957c-769ac4cb5036",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2e8bd2d-a424-4ed0-a5c0-c35c64f68956",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "91a3d7c1-2f53-4614-801e-14ee09caf629"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "64699db6-66ee-478e-a62b-29abf03b0cee",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "79fff896-3d1e-4c4d-bd55-6720092b4244",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8514fe29-fe88-431c-b961-67c3d2c79154",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6861c83-b2b5-4a3e-9c24-6bcc4f940c32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e71bcd7-0cbf-4472-89e3-b27b7afc9663"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a30cc471-3674-4c3d-99de-9f58129370a2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54237515-0d1d-45ca-8a67-621e5cbc2df1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c049cd6-37cc-460d-81c5-985048c32f0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aed79270-80a4-4ee6-ac73-1e96eee2982c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6ded934-98af-4b26-a69d-e9ad7abe13d0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "68adc283-7787-42de-979f-7d886d29b5b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f04d5a7-27bd-4581-a4c9-f5bb253214b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "593e1d18-722e-43ed-9152-6e8a39e1b589"
            }
          }
        ]
      },
      {
        "id": "467f6ea7-f82c-487a-84cc-857506795d1a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a3aa0a75-d450-4e27-87f3-0b78cabb4144",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e34d42cd-a986-4e12-a40d-4704f1b01f9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7708766-c3d7-462c-a1a5-37856994c566",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528c2de8-fc67-4f99-a694-508a85250c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc36a8e6-74b1-45c8-9654-b8eadd1e1fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f839d97c-c05d-4ad8-b70e-67cb80e997f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14ca5ac-a034-43e1-9e32-eae378afd46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccc55706-4896-48f9-9614-207479660ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe1e52e-593a-440f-92c7-32a9883a243a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218fd1d7-7ea9-49d8-ab73-497e355a3927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f9d27ef-3364-44d7-94ca-fc63bdfaa262"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f62b4235-14c4-4113-86b0-391820f4bbdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba4a9640-0dff-486d-915b-064e2b4fa39d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2fcb88-70d6-4f28-b03a-fa3c938f4b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15321d4c-b7d1-43fa-a59e-46d8f201936e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8840ca-fc21-4250-bf92-c228fb3fb691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa9c9e3-3572-40d7-8502-5554483f510c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e608b7fb-764a-401e-b8db-2a72603c262b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d61bb0e-4f96-470c-9bad-4c9f921d55c5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04018a4f-649d-47cb-bbc9-29e5e6b3d20e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cf21accd-e8b0-4c64-845f-ce3e9f3cb5c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e2eb7c3-fdc1-43e6-8462-6ffc5e956a3e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e6f8cb12-7272-4e50-bcf2-e847333a767a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e958e9f-3cdf-4dcc-b066-ec016f8bf859",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b6ca3c95-13d6-4042-92ee-29bf34064fba"
            }
          }
        ]
      },
      {
        "id": "94bbc457-51fe-4261-81c8-7e9d4dee2b85",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "93c25843-b827-4af6-ab90-c092802d983c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b2ce08c-f763-429f-bf16-3eeda96aabac",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "97bc9e0f-5391-497d-af08-a8972ae0ce31",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad430181-2607-4ff1-ac01-7379531f3454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d516a8-fb45-43e6-9319-1558ead56056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acc3a98-e5ba-41c7-8ce7-faefc46ba2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdcde09a-0d11-4c75-a5f1-84180e66d45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635097c2-d604-4d42-b73c-666205758bd2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c699903-eab3-4eb5-8b11-42a8bd752860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5962f254-ef08-4342-808d-3814574b5851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2b3899-34b4-4865-b07b-0a9e17d25d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aee3f0ec-46d8-493a-b883-39585834f4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260fbe15-94c7-48de-b32c-9c98dea72316",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5c5d00-9e0f-40a3-8831-c3e7d88018ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f37251-a7f2-4214-bff0-9d940d25d6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc16d06-6e8b-49bd-af6b-0e529277d369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aee830ab-42ab-4c49-a8ea-304307b141e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0cd883-18af-4906-a418-73af3537083e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229e1bed-ff1f-405f-92aa-6bd5c0177ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6462aa9-6d5e-4630-9089-e7053668ee7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e4d6d9-8b47-48f8-af18-344df716c360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a4b86f-3f7e-411e-b7c4-d1581b9ee8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea63886-dc90-4183-8e11-fc62625ed94b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b5ad6d-d4f0-40ff-ab20-c562b4d95c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1752971a-5dce-4e50-8aae-ec6a9d3e842d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb7ab8-4721-485e-aaf9-302eb5bba571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36b18acf-3e40-44db-aa68-02af9f6d7230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20e0ffe-52cb-46f7-aff7-6fdc07f9ef73",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc2eb16-49bc-4a34-a50c-32f7ec02f39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc8dc04-8c5c-4b66-af06-41bd8ff68445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5358463-d72c-4b6c-8fc2-43e685697ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d95cb750-9f7a-4f1b-9cb2-6b5c049b9ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc549294-2c98-4ac6-94c2-653b184a5fd1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a638cf0-c5e7-414d-a064-02672d3dee5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe7dfa2c-6c78-4075-a8b4-1e055bd11292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae49db6-b31e-4694-aa85-25ffa6252db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fe77690-5a12-4743-bbb7-f16c35b1ee0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba590ca-c349-4865-82d8-e755a8f4b97e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45141729-b91e-448e-b894-33a79479a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c4eeba-c60c-482e-ae4b-852df59c6565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc19952-3cc6-4598-9558-b07bd5f8d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "584832b9-6708-4ace-9ea6-23ee48174351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06381cbd-0ca5-4390-89e1-190b9f838032",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9395e2e-7085-4097-86e8-4d1761648801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84a32c3-5cf5-4a67-a407-edadc9527242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedcaea8-5904-4408-8747-06313ec3b84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a6a87e9-d552-46c1-af58-10c286f42adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd3244a-73b5-443b-aedc-a0e82fcc98ac",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79377a0-dcb2-43b9-b3fe-8ed944e25bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0a9e0a-bbda-4cb9-88e0-384328e91fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83cb7b1-c725-46a0-8916-b954c1cdf201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f763a9-cc65-4f80-b7e2-a15b0561864f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955b7628-5938-4ced-bb5c-d27b3aa9c3ac",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fcf5df-efd6-4808-bc3d-0321a75b4522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7654b24-cec8-4c29-8084-028d0eba222e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8524edf1-4dd6-4c9a-8e6c-bd0517dc3939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7192b01-2387-4df3-bbc3-3e9894980962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4a3d22-66aa-4274-955d-7918cdfdf4a0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ba3bf5-3d21-4404-8ed3-2c1ee9554690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51049bbb-e90c-4103-ba39-38bb36a812bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87a08d1-d0ee-425c-a3c3-f3fe1ceda21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60378a52-6481-4b75-bf1e-429dd4ecb466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aae9c3-b66c-46d9-a4c4-d59e4b07edd3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fff4218-7023-4db9-83df-25f7295629da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b836d6fe-2ef3-4a76-9d73-315d1c83442d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c5b7a5-490a-4b6d-94b1-0e83c02b20cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f92489d3-c4a5-4e44-b360-778a77cb9db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499a6e30-1b2f-4395-bdc5-add6d783d32d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c9beb8-0b16-4d0f-aa9f-ac8c24dedcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb34e7e5-c027-4ed6-aa2e-077067bfb948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff7e29e-d377-432e-96ae-9cd9b8a66785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67a9e120-2857-4552-9d9d-f5070b660950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c56f63-2b14-453f-9ce8-a0867b108e3a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86156e8d-b31a-4ea6-aee1-5fdbcf78fe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b78b91c-592c-42fb-89ca-e6041bc84c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c5446a-de22-4371-8fa0-d79c9fa60da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4cc9b37-beac-49b5-90f9-04e6f38bd5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805497ba-359d-4665-88eb-09e83137ba3b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0deff8e-6987-4f5b-857e-d4e650910b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31666f3-bafe-4d64-b3cf-02ca96eb6654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8da9ae8-db51-4212-b7e6-26bf41ca9564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52acf5cb-9941-4c46-aae5-612be9945966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524a8779-88a6-43ca-8860-267990f22a24",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda01785-f1b1-4fbc-877e-bcd5c62cb7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e367dc7-cb4c-4943-b46e-fde96efb2518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39548d53-710d-48c5-a966-143873ea515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb58605e-4ef5-4398-bf54-e662d672ca23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee270d8f-f4bd-4c67-83d6-bfa06576e25c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04b1de1-1ba7-4753-aa13-d9a17e4f002f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf87f89b-6bd0-4ae7-8a58-d57ac01d52f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f070d7-7d02-4a8a-bfec-1532a8de7b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0702c0a5-cf42-44c7-a1ad-8db7627789a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e35466-91e1-405b-92ae-156f29ad1d39",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac613730-c349-46b5-af7f-8d0ed82a085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ee0c53-1526-4194-bdd0-ad177ad52752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8651bb0-db52-4a82-9e46-15eb651075bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6692535e-2a9b-4433-ad5f-e1af16bf40ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ced9696-081e-4ba7-b602-5a92755cede9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dcf4dd-4e33-4951-833d-539bc5719be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3481c2da-8423-4b45-8c37-9b5c015a8d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdea2680-8025-47a8-9eea-2fdc1f0b67d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7451549f-130c-4af8-9d8c-0b74de0910b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a411a5a3-5118-416b-abe8-544ced0150a1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04f10f7-9c74-4d31-a2bb-fc96fa0c76b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c737ee-f3f9-4327-aabf-e319bedc4e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ece742-b4cf-4de0-b81b-6c2693e0b618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "663f1293-cfd1-43e3-87aa-8fcf2d53009c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf69c2-5737-4c2e-b635-a565e8a5da1a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6793ed43-e20c-4395-a94e-d981eb7f7f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47457b4-60e6-406e-b07a-915dd543a91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e4e50-7797-4bfa-9a9c-d18357065d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "400f6076-7858-4d21-b11b-fb27129a9c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeab6358-bbb4-486c-9345-8d156c17ccf9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d36c836-772e-49b6-a53b-9c46349f1ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10457aed-1b9a-4af7-831d-8c13fa92ba03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae731d-8fe6-4dd6-b45a-fa139c6090f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1473d01d-f8b0-44b1-a03b-83a86a78329e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7373a9ae-14f0-4fc2-9572-0d6e107cde02",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873c0a72-cf22-4a62-a084-94e4ee808271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d58d3a-4834-4ff1-888b-b348d1b7a0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a7678a-b515-4e47-864f-73d83b18548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e371dc31-8f75-4691-ab93-86b89cea9631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8f61e2-c41b-4b2b-b987-32dbb2f7aa98",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c918e880-3e55-49fe-87f2-273fd4b94564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38e94a9-430c-45dc-ae37-bf34874a8c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2123d0-caf6-4410-9b6e-d389a2e1cd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af93222-19d8-42ce-846a-104105e68718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb8f50c-3bc2-4845-9c1b-7ace634df776",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51985cf9-942e-4aa5-98a5-df174191b77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24605e9e-421f-441e-898d-303bd870ce4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712e553a-dae4-4db2-8c27-191a4248ec48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd7f51d-0c9c-4cb1-bc33-e044185a7255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061d864a-3fdc-4b02-adce-6c0281ff8b3b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6970c05d-46f2-419a-946a-a55bddd68db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2450aad0-0640-468f-84c8-9d3dd327fb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfbc0ed-b429-4809-aafa-3ef5ad03873d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "447b885c-299f-438d-9386-9e7e228e5cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9644883-26c7-4e5f-bbe4-a3f44bd0645c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456f3cae-716d-4644-beec-c7293fafe443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dc261e-750a-42c6-8c6a-34829c02c4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59422f9a-cbc5-4599-9b03-6984186d5fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2072e6a-9bc8-4e02-a1f5-2bd60b5441b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8915e4d-c0ca-471c-ab51-1338e73a7acc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82aa9000-a279-4a44-9587-6e9dbe4a76a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb96d075-04eb-4723-b4a2-7e0387a663d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed7373d-fd3b-44d4-a035-6efe1ed132a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a191a3ba-ee85-4c62-9d6f-30562df50eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab01ea58-9abe-4c47-8ba5-f05dbdd9394c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a016113b-de83-4b29-a225-8509f818a0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc233c73-ab48-4799-9535-a8c97369468f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1228b19f-0218-4c91-9e43-6f8374638d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9acf97-975f-4544-a479-f5bd7ca8c90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cda8b9-8239-43a7-8bc8-84f38cf89444",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3977086c-dc9a-46a5-a719-594767703601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2006b341-bfc8-4ce1-b5be-1e578369ebb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13c0f3f-6fe5-497c-823f-92cc2833fc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6adff65-3e21-4c72-9c98-52dbcb68a4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f24bfac-6755-4e19-896d-546e84bd8dda",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94328e56-d6b0-4e5a-8e35-2180280f25cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aadbe43-06f1-4468-828b-23d8f41354e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2115de12-bd36-47a1-9300-af10d480754d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "317eea2e-7a21-4a7e-aec5-d3efcc0b891b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb1fdc8-531b-4778-b1cc-702d993afe75",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c55cf0-1214-4a4c-9979-2ff020a3c726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3cdf2b-7a26-4b49-a60f-7a9da80cec6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29db00cb-8de1-47aa-9a94-f0d8c9828218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe10c08-95f5-4f64-b20b-5d1bd7271acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4675546a-8b4e-49a5-9b2f-25efd39d74b2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70c7f40-2a0b-47b3-ac13-c685750c8391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7710f8f2-881b-4c63-ab67-99e692af5d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95018915-ea69-46ff-a5cb-ff2fee6411bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1736c2-5392-4dee-886e-8dc98a00070d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d04ee1a-572e-4c67-a17c-703c4ec794b7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037e2615-2022-4281-99e6-01f9b70b5581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4373e90c-fa87-45cb-b69f-ac17950d44ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746a8516-d41b-4676-bdc2-efa4cb73fac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8469c16b-169a-45a9-87b7-be357505f2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8bdc36-49fb-47a5-834d-6d2400f8083c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de46d2a2-64ab-4e5e-a4e2-7c9c01225974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "040a6a1c-416e-4f7a-9bc9-f99977e91470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5711aa-60f5-4b06-8c59-d301ec74ce47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57e041bc-5e41-4dc8-b084-155d975ceb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e308fb-a0de-4f60-a4f3-2e917794031a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bd652f-88df-45a7-81c1-d415439b38bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f41012d-591e-4f87-b7c4-1b8c6a9b1717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9700340-6066-407a-892e-8e4c81bb78ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1ff327-9a23-4b25-b4e8-646978e7f13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b07cae9-7d84-42fa-ba04-a1d7772b6b25",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022265b3-3864-4ded-85e2-a1fbe39b508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa97aaa-97fe-4abd-b410-6ce3861ea838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bebdd0-0eb1-4835-8a3b-c1d4e643342c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9479e7-158f-4830-9a2c-de92f4f85e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1bc3b3-e405-43ad-b73c-30360412ccf2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640f71e4-1191-4f4b-a78b-85623d2b4dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792b30e2-fb06-4ed4-87f8-343576d28409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7ebfbe-d420-4329-ba74-4a9fa6062fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4eb54a-55d0-4bb0-a833-c5503366c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8d3f78-3f4e-430c-9e71-b88f34536bf8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ce5e57-e4a2-475d-b586-9a58ce2f5985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8ed0e9-a5c9-4afd-bb6c-8d716ccdceb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68aea94-c10c-40a1-8495-af8d4af370c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b151ab-32e7-4f63-bba5-0c1060765e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effa3700-e416-4e0a-8dcf-0f672b77a0a2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac78cff-fbba-423d-baf7-e53180b21ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e62958-86af-40bc-b631-cf80dcce23a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15803a6-a955-4ea2-aa99-f52d7181bbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d4d156-aa16-4809-83d8-7b1255887646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2ccec7-8bcc-4d92-95d8-02971923dcf1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fabb78e-4e05-49ee-b878-f2e48a6331da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d49a8c-b2e1-4872-81b5-043657420cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90fca3a-f1e7-4852-bce7-4f6da436d960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7ca2d6-ba3d-4ece-b519-8398948fa395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728822de-9f68-4487-ba61-207acf18cd13",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155fceee-91ec-4b81-9be0-250a5718c1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd7ccbc-9058-4443-9e11-d81083ceb330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c30e7b7-1b0c-4c6c-a95b-fa42c08d0da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dd6a30-e803-43bd-807d-f9653dfc4617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac96055-f3ae-4549-9c85-08a8ea5cbefa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad91664-3002-413c-9ac0-f7229be92952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7144aa8-fd8b-4992-a927-059b0bf9f84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb594c7-2d67-4121-852a-c9bbf2333a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af6a43f-acad-4c67-8b8c-7e70a0686164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1bb120-133f-428f-b082-da2a2ec91019",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f871bad-b418-4ab8-94e0-b303373d9c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd7a262-2e2f-4797-947f-fdc25bb6f88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc05383-21c6-4be9-9860-6b56f4d1d0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e9a2fb-2055-437b-9cb8-bf8f5323867c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e262156-70ea-46ee-bee3-92496d3b13c2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2000dea9-5545-4a6c-b0b7-d097fc1663ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c11a76-70a5-484c-b1c9-2883a57c9260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9563088a-1b9e-4c8e-9990-4bd14586f935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bab9f58e-ef2d-439a-9f70-9d30b4ecbc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d6f399-a678-4e85-9e28-116c7acbd796",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d699a09f-9d72-4537-a2a2-7daa87e2eacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb19cd9-9f0c-41f0-bfbd-19dc80a91586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf44391-192b-4e28-9379-0e11cf071011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24df31d2-982d-45b2-aaf9-4515d3e8560c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c341052f-f37c-4f4e-b927-044b9f93a9b1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f00510-fe16-4772-8f8a-74312a3bf3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d68e488-8f93-49f4-9166-8867fb903b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e5530a-1b69-4670-ae7c-8866a66b7da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f70658f-e3fe-4aac-94fb-cd4eee459ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceea653-9c97-4c91-9cce-31950e7e7c71",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6951ea40-11ad-4ca7-b57c-f34c7c3db5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84c2b91-71e6-485d-b215-94cb13fed171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549ded66-c7c1-4496-88b5-2d7f1809412b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6d683f-77b1-44a9-8e23-f01d397273f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba6fe61-0570-4fb1-a328-297fb9701e78",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa647a5-aa63-4975-baf9-2b17c528baa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837c1d20-1af6-454c-8cfd-b77595784daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769e9382-7c13-4b07-a202-264ab096f140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ab7e4b-9667-4228-b3d4-c23f4ef7d35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c046094-a77c-4fe8-bdeb-52042667b9ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88da748d-96c4-4de2-b3e8-b086086d7cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab1d39e-2fb8-4636-ae8e-54381b5822aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52145c1f-7bb6-41bc-817a-7c63ea217573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed0bb84-c658-4f4d-a052-89c263913fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f9225e-3c19-4cad-be17-fd54731ec61c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c689a6-b590-4179-b516-08f795ebb86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8210bdf0-aea6-4af1-84cb-e05cdbf5b990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81096a8d-a2bc-48a6-99fe-2690eb1df45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a79a657a-bbec-4ea8-bbc8-f17c86f2b735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d350a434-9759-46bf-bc1f-e925b6100c97",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d30388a-56fc-4f39-a8d0-35b73b8c1cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214b7571-39ae-4e2c-8e58-6ef5934812a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd60f20-3638-4eb8-a644-d56280b4f9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5f7eac-44b8-4857-beb7-1722472b95d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2de553-112c-4c6a-993a-6939f43a1408",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ecb233-8581-4c18-818b-4c0571abda57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7971d5-bbdc-46e2-89df-6276a9d7514a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeb44bd-f0d7-426b-9962-cbda47d66e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56e11081-a068-4a6b-b611-ce145b2224ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b7ee31-143c-48f8-b4ae-b272145ba909",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e9a8b6-1e14-4cef-adaa-deaeecc71daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264e299e-292c-45f5-9ce9-1d1121e2857c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b33be1a-0686-4a2b-8ecc-892a914dcf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f627159c-8490-4713-ae9c-a6d6c649ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df82475-e9bb-449a-94c7-4143d59d8563",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6500c2c6-02c3-4123-8c62-5f3073892cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fb82f9-ee98-4f31-aba1-794d2568c0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd762f3f-d9b8-4e76-bfa7-25980a8f1c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9f38be-48a3-49bf-9f12-6339ba63383e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4424064-abaf-40a7-ab4f-e298d9bebfe6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a65ded2-c46e-4201-ae16-1cfc8bf56d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b612e1-7b48-40d6-a98f-96cbc8938382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796c8d31-2710-438c-b31a-1e5760d504be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a974ca5f-5f0d-4ce0-a79c-16bedc9c4841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b091a5e-1fa9-4a1e-8e99-5f38ad6f1282",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c062bcab-8d27-4ba5-965e-9c95f02ce6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25364147-a58d-4f84-a51f-5b91e4384a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976ee6fc-efb6-4cba-9d91-fe8f110a40d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84d56055-f6f5-4104-b370-ef74606fc08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43d5c41-0763-4b8b-88b1-3b493846a672",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0b5077-a036-4871-aa65-7bc9585f3bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56abe583-af3c-469a-bda3-5ebb76692757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eecfb777-f1d2-4e16-9e5c-d5d366765eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f8eaf76-abdb-4935-a9fc-976a674b9246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daa7cfa-ff38-4180-9831-bbadc36a6324",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6cdbad-b6b4-4552-89ae-d4152b83c189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed41486-9193-411c-b1a7-0c68f7d3f509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1def63-f974-4f9e-8196-ea09ae6c0fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3734753d-08ce-4efa-8d48-86ce1bdf45a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a378c9d3-31f0-4f18-bf09-918cafeb6378",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f4f582-8abc-4276-85b3-037e34e65f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb8e613-01fc-4059-8d32-104e51ef2835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53285965-f6ca-43f5-8e07-62cc7cfddcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f55738d-30fd-48a3-a620-bc3083ea6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddce983-8276-4319-a2ca-cc2cfb928239",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28343775-28b1-4421-a46a-90235d2f2ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59122d28-1af9-4172-a025-63cad0df90e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243e1da7-d018-481f-961d-9e69b335fa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e213c207-b700-42dd-aae4-b878290a1e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef22a401-ab6f-4dcd-9161-8293f789ad05",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6934b6e0-3ef2-4fcb-aeed-b90dca0ea3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eba3e18-82cf-4f0b-87d3-e41080efcf84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11c08d2-214d-4b09-882e-94720d873224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d6421f-30a4-485f-8e2e-ccc204e4c9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc9b6fc-cbc3-4c65-8b06-d5f6cd4b61d6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c4efdb-4264-4546-adcb-1301005b8a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d96a258-c7ac-463a-b3df-0d238df93788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45732c08-83f3-4fb3-a30e-5bb8a2246ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1b6918-69e9-4830-b6d7-6b65cb913331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe80740-4aca-4626-bb4f-7711e1f02720",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc86edd0-2a09-420f-8791-d53b88033807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64ca804-6fca-4583-a71b-5da7c5832a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a954fdd7-c987-42a6-a92f-22a003bfeacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1882e38-ea5b-4adc-bf6b-68a7538599dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455e9415-e653-4c00-95cf-1f86df13881a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b21f77-e4a2-4e7f-a4c5-430d64ade006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bfd991b-835d-4b78-8c45-326787bf18ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532f6be3-9fce-41e8-97c9-1ada5e15f749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7917054-4224-41f6-866a-cb2469e0f9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2760e38f-9358-445d-b85f-c63469086983",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01d24be-1401-4009-8cd3-803824162b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051c078f-b5ee-4b44-9f49-a880f8a6d24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22a1d78-b2d0-4f96-85ad-945cf3c82728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad621e7c-df69-43be-98cb-c34cdaf7dcff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99b3bec-6cc4-41d2-8b00-0880871934bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da417b0e-83df-4282-90c6-af440639776c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa790ce1-c2b4-4594-8629-b48c6824626d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5516a8c-cd81-44ff-bb04-d61031a1cb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "573000d5-f6a7-491b-b361-f48da6c16156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85a737c-943e-482f-bd64-fbd62ca7c31d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dbaad5-b4e2-41f1-a516-b3f909773da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3194860d-e91d-4b83-9319-f2d84fd227b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a344ddbd-4460-47b1-be49-62635d7fdc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cbf4592-2dd0-4f7f-9377-4d3c567c9c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96608832-bd17-49bd-86a7-2775f7269aed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5576d15-db5c-4527-a4c2-6ea18b1928c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f9d3c2-1a0f-47a2-b46d-16eb2dfa0cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3d8e40-43e1-445c-b02a-36ad836ed1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b79b6516-c914-41a3-b6e1-a55533b52e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c263d86-e245-4e9d-ae71-58fb6c14e012",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47d1989-3b70-485a-839e-93a069958353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2e1f05-f277-4d8b-bdc2-1fa574b15525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aa7eda-5011-4689-9ae6-89f90e3569cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed6e407-f72c-4e20-9e99-32b1a128cddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088ff487-9925-460a-9fe9-b61fcad7f3e9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71a70b6-44c0-4043-9a45-9f807302d3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ab051b-eba2-4a0d-9ae4-8e16d0bb7cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc661438-4232-4acc-a535-88f43a4a7664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8879f88-61e3-4302-9703-de4775ff1fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f01f59-4945-499e-b7a1-746050433b9f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f5abcd-04c4-4739-a6e3-9e31e27dd571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8428e6-caec-4e4e-b1cc-2689f08cc9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b46b3d-8487-4ed7-96d4-9abfcb7e9a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e932856-509e-4623-9682-006a9a1f066e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e90b7fb-9bdb-4b6e-9916-4abe631a5dd4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0518965f-785b-4cae-971e-de1f307ce5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04d731d-ab90-46ca-8a34-a1b13c2114fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714272c3-ae93-4dc2-96b1-e31b9803ca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b47a7f29-828c-4f1d-b9ab-e27ec35e2e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7adb3144-f982-42de-9fe0-83c4eb9caaac",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68275a7-3d03-454a-8b3f-4a9e02ca3f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f510c1-b13f-4fbd-87f9-996ff7e5e0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861fe4df-e1d0-4e9a-8652-81e328774c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b589a6c7-3e95-4fd2-a11f-8a5d736ffe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340a1f88-c2d7-4c73-8ff8-1aa64fd428a3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2de5f4-4ee6-4ba0-afdd-366d0bce525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841802dc-5ea7-4584-b8ed-7ea084ef2e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37b05e1-744b-446b-8c42-09b2e7d26696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c07d547e-baca-48e3-bbdd-41da8f990463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3b3f58-50c5-4e0d-9678-8fdeefa9d742",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9100d4e-111e-4229-9d3e-fd88edc12236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a910ef1d-0ac1-4ad2-8974-f1186cb6821a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acf89c8-55ca-4a82-bb87-f3ce7a14ccf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db7980d4-b828-4f2c-bc89-9886194799dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543d3ccd-8663-4792-a46f-446731f86004",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c102f0-9f01-4e53-b6a1-2030d2a2254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d938e8-09d2-43ce-af91-e61f8bc9c80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e53a18-58cb-429a-8aeb-d543a0054848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6368cf59-bc65-4cf4-963c-1ad4d2d924b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7a8877-a988-4352-8e74-c2a1e714e51c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264f1706-7fa9-463a-a5da-2e358d7b3d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a683bed6-3882-4f2f-97f7-b26d33514ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64573e5e-a612-44a7-835c-faa1080b1d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5334086-3c46-45ae-b587-c5ab18322ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb94b1a-3fc4-429f-a518-837de5eca897",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1125da3d-9318-42b8-ae17-ee60a2f131a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4665bc-a4c2-4057-9265-77f0dc4339bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46178dd6-e39a-4312-9448-ddb830580599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b274dfca-d303-4bcd-8890-94d6f9770a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0236c09b-39e1-4602-92d5-41272c830b84",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f83e69-3d09-4b48-88a8-22037342350b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d1cb2a-05bc-4caa-b280-369656f31d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6e3644-4760-40c0-86f2-9192a60794cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e862025-e47f-4fd8-8ec5-da8730ca77dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461efc89-d6a8-4656-bf80-1eef79fe4426",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733f197e-f4f9-4cbd-8500-8e7a8a0bc1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0335d464-9646-43ef-a38b-d023b0b3de26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146c62b0-2dd8-4d39-9e6b-7292d6136f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6f27b5-b582-4281-8fef-792d1d52c979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a6d6b6-fe14-4369-a519-7f0ca907311f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dc7ebb-233f-4736-87c7-cac776a2459e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c57f385-f414-4ad0-bd2a-5306136c3e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a892ef3-383c-43e3-b228-745338d57cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "259aecd4-9eee-4529-8368-f446fcef7a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2078fc06-f9fc-4602-aca5-a806b0a5ada5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78008d71-a00a-416b-a6f2-0d856de572d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bd4000-08b3-4e7f-ad97-da1d95e9f4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58a2c7e-5645-4318-91f5-d70ce6823491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45753d09-7017-408c-a81e-60b2eec38d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730e0bc4-3fd6-4d06-8ee6-05ef0bad80f9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef07426-2b1c-4849-902c-ee712fb4b5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97044adb-71b4-4db1-9ea4-b0970080e202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bd62fa-ac29-4e9c-8878-49a923abd849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12553981-7d6f-4cd7-a6f3-a6d65215ee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1f88d2-223d-4b2f-9196-0bfbfc0cdfa2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbabdc2a-0863-4540-8bf1-de9e03f7fb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f583a85d-2434-484c-9483-2d64664bb614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c11b36f-5c94-46d7-90ba-03b62e6830d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9831302-1aad-4a0d-bf88-89cfb66b1728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a813ba17-6c35-45dd-b971-22884704c612",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cb49db-e8cb-43e5-91ae-9c91147c7b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb1262d-6487-4c59-bc74-e3eb42b3ca7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcea6e1-ed6e-49b9-93f9-0d304761adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "50610817-fdc8-4f78-8903-bdb8d88042fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb89d5c-68ad-4970-98cb-805234161ac0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19e51bd-9746-4620-8f5c-36b127bd7332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a0db5a-d7a7-45d7-8bf1-9ed22046162a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0364f7-2082-4266-beab-db0d6a9372fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "34e3729d-d305-4504-89fe-583ac3b1d169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7962a341-5cdd-4fe9-ad3e-b366b4de97f5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b1128d-b130-4458-8aad-8ea6dcc5280c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0975e71-c293-42e5-833f-3850cbc3c425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04c5baa-b8ed-4f02-83ba-ba59ddea8e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8d7267-3f1d-45d6-8e36-46d97a1852b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc9c2fc-495f-42b5-924c-15ae78d23028",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ece5c9-3a5e-4a84-997b-3b59bd7d370a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50ab883-7d3d-4a49-97b7-0e3be00e93a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec0bc92-823c-41e1-96a0-87921e22de85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "151c44bc-4afe-4bee-a832-7d9922ac675a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def8e8a7-1980-4aff-92a7-a4a2aa593422",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3e859d-911d-4288-88aa-b453cf9dd21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678200ac-f3fb-4d39-9869-95fc264f1cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc87cf0-7da3-47cc-930f-ad5965eda2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c961f0b1-d144-4d82-a1f7-d81b6302be01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4fb1cd-c830-4267-86d9-7075be7e057b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04f72d4-4d56-4166-8fb6-4bf1c1b9c70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "206ca1f1-a49e-4919-9884-20d14928bffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c98076d-9735-480a-aadc-91bd72f51f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "333b3b9b-b200-47e3-a0d3-8126b823de29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "455788e8-a2c2-43f4-bbfa-f6c6b5e8500f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "989475ba-0fea-45a0-a08c-4eeba5ffeefe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558004fb-421c-4393-8d07-50938b6515f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63df1dee-bbb5-4479-80d6-26fcd5639fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da64d722-7d9e-4648-9fff-5189337b5bb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3127e39-625e-487e-ad42-f4d81a580905"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a7a7627-026e-4172-8fa1-00ea96da7834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebae4ee3-9277-4b97-a7e5-e6853037c544"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de1814de-6e1c-49b6-b00a-d25f985fbe79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e4ebef7-a4df-4bd2-a5aa-c1700c9bf2e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e539d278-8e1e-450c-8bce-e6d87fb949ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e658efc3-6b4d-4f41-ab73-d7f38e363e80"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aad25b65-a268-410a-9036-d03cc82ca9e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1d5400d-bc2a-4cd2-9239-4da2823d0cda"
                }
              }
            ]
          },
          {
            "id": "c7a38e4a-6b1e-4008-8ac7-c177fa5f17a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46f4cc0c-095d-4f51-addf-89fef1479ea1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "61dc81a4-786b-4ef3-b82a-c45341989384",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f154c4d0-44e5-4797-a7f5-673749a5d68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2f3704bb-08d4-4821-9f7a-19c88a634e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bddfd6-683e-42a2-a2cf-f4b38ed307cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5267175b-2da2-49fc-843b-8adca5e8817d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8fb6eb23-66f5-4b16-a09e-d871aa13c8aa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1111403-24e7-41c5-99f5-0a6366024099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d50639df-f8b9-44ec-8eb7-f8515f1320c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c9a0e4f-a8ea-4064-8faf-f640f1d0519e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bdfde387-eb35-4282-bd2d-ae225f832b5b"
                    }
                  }
                ]
              },
              {
                "id": "af885cfd-8320-4ba8-b021-74244b8650ef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7e0d1be-736c-40db-8d76-96008a889c0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c910aaeb-15b4-4731-bd58-8c1a5726392d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a34fc6c9-3d7d-4f71-9200-cd131671fb7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44f685fc-cf8d-46ef-9659-d5e49ad3b2ad"
                    }
                  }
                ]
              },
              {
                "id": "6cf6a832-4ef0-49e8-9213-c3fe1562126c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f2649ec-4796-47d4-9d13-2e8d8b18e139",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91a71500-56a9-4be6-9e5d-03bfaedcded4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba3886b2-6dcc-4249-8b1e-4d341d7ab314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b642e380-5e8f-4784-860a-b517ee732077"
                    }
                  }
                ]
              },
              {
                "id": "a1012106-fc80-4c6b-a10c-7b383c9af9fa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "876e14a1-5f12-44a4-9d49-6ce19f3cea2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a22523c-99eb-4439-b441-2e0f2892eb70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdd22861-543b-49cb-b204-ba7f1885b86c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0cf856c1-48e6-41f0-b2e9-d0fb1ae36233"
                    }
                  }
                ]
              },
              {
                "id": "b17e544c-9d58-4440-ace8-9376803af91f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75b93e41-083b-4dc0-9669-db2d879a84d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77926f14-9408-4351-b050-e7b561a1ca02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7b36ed6-1435-4678-903f-4f464c6800a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "589ba1e2-f138-4aa8-8f4e-acfa9f2a2e4e"
                    }
                  }
                ]
              },
              {
                "id": "16b374ad-4e60-45a7-b5a5-858f6511f41c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4775c6d-4a37-4aa2-a157-b72e9c10f464",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c31e6b7-7956-4709-9d80-7a279372e821"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8811cc6-66b1-4f77-9b98-1550cac8181e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a73c8464-c127-42f6-84ac-0741ab0bb1e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e453f1d2-675a-4ae1-857f-f9c35a3614bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "617b2f57-bc46-4159-8c4e-5d8cfc3f2b00"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11d34743-99d1-4d7e-b564-63b15f21f36e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7303bde-3b16-4583-856c-0d235ae6d260"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08996c7c-f49c-4df4-880e-37525d2ec7a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8e3cf478-d420-45a1-ae03-be9c8f34388e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33f50fb8-cecd-4252-a4b6-409af7a33032",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c313c76-8ffb-4531-aae8-2662b2911c7e"
            }
          }
        ]
      },
      {
        "id": "4703cadb-cbd9-4202-82c5-6af360648aee",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "13057cb6-f0c2-49cc-abb9-5bc67e5bab90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c7a274f-d4ce-4f3e-9154-baf361c81d4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "60ded3bd-cb34-4b00-8cc3-f4ae5acab953",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66aecb6-8946-4af6-a057-6b7024f58199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920086be-4444-4142-9fbe-4f571eb20dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe52671-3357-4c92-96f5-37022abc2cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb7f4a8-c70e-4a54-9f65-3f926cca2b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034f650e-7161-4c2a-8731-77858100464a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d1a93b-c71b-4932-bf1d-edda3d0770da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfb2b4d-4690-40dd-822e-c6ef65a909e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3482297-534f-4324-9fb6-35f8861aa091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3f05fa-89fb-415b-8e65-d8d8198f6696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d81a7cc-8764-4b1f-9160-e8ed8f5967fe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc182854-5a00-4e14-9bc7-006cbf8c7218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860615d1-d731-498e-9854-003e7a19277e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc7d9d8-0cab-4b58-bc69-a9c1a534cdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "669c1d1f-1fc8-4c7d-b8b5-74363ed1ae00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638486bd-c862-47d7-9ad0-de6b8e4df94e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09eb1818-9142-4a6e-a3e5-e94c3984e232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6607b475-93bb-44b4-b38e-eefa5b9a8431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34257534-1909-43d3-9afd-4baa087c9252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef8c863-369e-451b-8ae9-462fd08066aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24595d70-657e-4b5d-8133-d8d062029165",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23443b3e-edee-4986-b473-468fc7bf823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488e0fff-4fee-4e13-bae1-2974feb06f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f1902e-8c13-4742-9ccb-aaceb41baab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3ad5bb-e71b-4174-aba9-dc9891b1c4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d014868-7f0b-4c5e-a635-24e72fe5aad3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88aef902-cf2e-4195-90e9-c0b051ebde94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec98c32e-418a-48a4-a239-cedccbd61d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c1db2e-b512-4fdc-821d-5c7dd172490a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e647ab42-689c-45d0-8e0d-8c43687c153b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31a8137-f755-446a-a444-c0e3baeb2bd8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adbc7cb-3a48-4dd1-aae3-b29bac6bca33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9b7f12-7a3f-4856-b56a-a1b686ca5f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336d868b-a09b-4568-8310-07a1b034eca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be06672-3cf0-4620-8e42-5b94edbd5dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7f035a-5410-4553-88f6-235604386c38",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35027fe5-b7f0-479d-b158-f4c7b4598c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba364f0-a147-42f6-9171-e44c021a5e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce9c123-349d-44e4-954c-7e2d2cca7efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c05eaf2-e65e-4dd1-8eb7-e85a3c5dee04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fe308c-e54d-4cfa-82a7-61f81a75f872",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed335ee0-709c-46ee-9995-8d737330c1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f73febb-36f7-4eb6-8583-d9e973679aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e98331-f8d8-4f9f-9c49-77f1f07c7f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fefc51f-78fa-4d1d-b6c0-a596e2976187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c827fafb-e8ba-4759-8020-f783788ddbc3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b015baad-3c4a-49ac-9b17-86c791fdd496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03aa870a-cb8a-4d2f-b33f-8fb949b63282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73889b71-6392-491d-afe4-0ec441b86140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149a87f3-aa12-4bd9-89b2-5197b44ddffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3919b6d4-f8a7-4170-bb7c-c6ad20fcbba1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd10ebb3-7463-442d-a46e-f0c11e7ee208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6797e708-27e9-4fdb-823b-1c9beb4b1487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01da28d4-57cd-4b2b-95cb-f2a67daea810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d450bee7-74a3-49ab-a582-7697a8c2bde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec956723-885b-4b5c-8ac2-cf37535f24ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b705e2-1e15-409e-99ac-6264a38a29a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15f67c0-2fbb-4124-b320-a0aa06d6117f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ca0fa7-d412-42cd-8f5a-80f4a0f1d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7fa0f4-2ac5-48b2-b190-af6b9b7838cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86b1449-288c-42f3-972f-b618bb83b006",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a154a476-4c30-4501-90bc-008dba6aa788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b04fd64-e731-423a-a56a-edbc30002677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7b41c5-6ebe-430d-8973-3f8d1123bef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1556d9e7-4da4-462e-b9b8-fea36577ae79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372a8bce-dd4e-4e78-ab36-745d29d635c8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87399dc2-44e8-4429-b927-ae94dace63cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705b8b55-fe9b-4ab2-ba1c-478d47358937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f45e77-87c4-4f1d-98d3-4771460957b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "05daa870-c2dd-4adb-82f2-0aa5314131de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6916bb80-8184-4e02-9b72-8de4101b5fd3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efc46c4-0233-4ecc-baeb-b890863c492c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c450e7ad-bf4b-467c-ba1a-a38e4493c14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be45a1e6-5b94-4185-a2b8-c47daaa26339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "12975c22-a36a-4f54-94a3-894920fcda1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4f3ef5-93fb-4718-a788-d6811865716a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a4d97c-b0d9-4806-9d80-56be44588435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543421d8-b43e-40ac-b02b-a90c34ad9cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd865bb-3848-45d8-90ae-06811147b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f61a37-bfd0-42dc-b2a5-eb3cdfbcbce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d891a33-d9c3-4d56-85fb-b30dc7a500bb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02154fe-9fd0-44cc-aa8a-45323fa1828f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d35aa2-ce35-4bf1-90ed-3eae0a55723e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8c8eae-68dd-4ad0-97ab-57fc791e5810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa32c69-d396-42a0-85d0-592d8128b9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c032de3e-618a-4a70-81aa-9202096a82a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd638d3-1a09-45bd-9025-3d1100542a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273fcc3d-7b53-46db-bcf0-963f872bd66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b434f42-f12e-45c9-bd0a-685560ea0f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff0ae2a-4ff3-4a90-84b2-5b5c804c1c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb9d27e-27d5-456b-8255-8238b3b87ea2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497eb9a3-c13c-4b47-82c6-f58e283bbc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04386dd7-9350-4f57-9975-35331da45e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb89209-358a-47cb-ae33-dfbf62c15d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350db064-f4e0-4023-9d43-3fc72221dc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cec0b7-5712-4d31-83f7-126c51dd709c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f447a58e-a725-46a8-bf3a-7416e68082e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030e7b79-7d2a-40b2-a902-04d6595e5dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca8bda6-ac93-482e-9b9c-987e296057fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "084f82a0-f363-46e6-9476-b53563475e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b46702-708f-4938-8e7a-8a34e768ec3f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acb8e60-d668-4b37-aafe-eaec4976fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71131cbb-7f32-4a58-9e42-862c8302935d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711d51f7-8270-4732-a482-a6f1ead977a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc98efc9-98fa-4054-84de-527359e4278f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6096918e-0365-49f8-9cec-16053ff4e013",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1827632-ea3e-4e6e-80b7-fed63935bd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da59fa53-aeee-40a1-8f80-9cebb06896ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ead1a3d-b113-4e51-b24d-5f917b394d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "730f8f0f-da3f-4b4f-aeca-3d9c4185a2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b6509-11e8-406c-99dc-71d279570806",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc68242-49c7-496a-bd6a-1cf88d41e4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4b8506c-1ac3-45f4-a978-5f99231eed49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be69884-22e4-4794-99a0-976903799471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a794b120-5b30-4f8a-a7e3-a8be5c48a962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db643760-a4c2-4e2f-8e13-622ffb1b06a5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baf2c13-af38-412e-8b4e-ec456670c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaeda902-4157-4aff-9680-3fba3d6b8eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d333d32-13e3-45ad-abe5-23c065bf0fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ede55c70-67e3-4283-95be-da11ffc21db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334c3d9c-2e9b-46fd-99a6-26d0409e5664",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4ddb08-17f5-4232-8b29-805e37ea719a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd98838b-29fa-4e56-bc39-a121b9b475c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df53ef15-9612-4542-9d35-ffb3d724b655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae09ac8-49cd-421c-8ec0-750e8decedba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4269a5ec-d76d-415d-a8c8-4f6986f39109",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1395d44-9253-473d-930a-599dc7ec6874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca7c8ab-8a70-4e93-ab6f-c7bb42400b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4674a58-ab77-46d8-afbc-7c7e1459e4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0013df9b-6efa-489f-bcb3-a29f49ce24dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3009d9d1-6098-4b26-9b48-83a5c9b4c0cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91ccb33-755f-4957-a387-98eccf781238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e9a4b9-f0f3-4179-a1b9-55dbf821fb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030cf3f4-2ba4-442f-a661-95832191f42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8eb1cd-cade-425a-bce9-df1cb75a7e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276d2f3d-9c46-4ad2-af11-bc89da7a2383",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce13690b-bb12-4799-875b-ffb4b8266da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc35887b-f37f-4ebd-9bc4-0c0a685360ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c834c3a7-078b-4969-b8a3-66f077344c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b731680-d55a-41e3-8290-324546b9721b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b805fad3-a680-427d-ae85-5fddc941fb0f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71930d8a-7c0c-4a41-bb0e-f08facda8381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a27922-0005-4c1b-8daa-d66fac85b6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcf1267-cbe0-47e3-bc9e-2d60816d1b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edaa8cf1-2741-46c8-b8e8-a9dc0c8c7e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cc37c2-d1a8-4d68-93b3-53a550faf580",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb28a8-bd38-46bc-818c-c4fa44a52938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800e4aa4-4e45-48a7-b019-6365af55f097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa44fd1-ae3e-47cb-a898-54859e7fdb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22c0435-8527-4a1c-911f-e5658d39ec9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe3130e-803f-4464-a8d5-2d0f08c2ab51",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eaf6cd-b0e6-429c-b20f-2d8e33bdcaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a465d714-ddad-413b-a303-532f428ab5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b9413a-09e4-4d0a-b146-9236f75f7001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18adcab-f0ab-4fd5-8d9b-a07e63974dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb73587-12fd-494a-84d3-058cf45b32c0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50623dcc-993b-4594-bf71-8318d1b2e8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307c83e8-ec6a-4cda-9c8f-064f9b4e87b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6fc782-27cc-4935-baf8-946ccb6ab4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd6cb77-afa3-4c96-9961-56251e637007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65509225-500a-41b3-84de-7dc7ed1f0297",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e97c46-45ee-4ee3-bb38-c3f43fa33b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9260e3f0-7091-4522-81a8-84fa419c299a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050ca3e4-4bb5-4ae0-a80d-e1fe9a136a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22577dbb-15ae-4197-848b-75724693913a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ba20b6-7acb-4064-9633-b2e8376d0bd0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa4dc76-503b-4a3a-bc5d-ced1181463f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001f8170-4e77-4dd7-a921-45ee8a1f9e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8af56f1-9a21-40cd-a7bd-9824da705165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9004899-acc2-46e4-b1ff-25aa14ce4af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a463dcab-07a7-48fa-bf94-5c07edda2beb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decd9879-3877-4c7c-a23a-bd631a9446dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a155994-9785-4cec-884a-042e4c22f602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898fd622-fde5-445f-9765-71e2896e6497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e666788b-4d91-42e9-a691-fbb2c5316019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b730bf48-a5ba-4a8e-a35e-fee11b57c94b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ea31d7-9ab2-4692-8c55-5dd3ddf468b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a87958c8-a92b-4115-84d1-5d66d3575db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b411b643-f8ca-4a2e-b512-568d7aaf9cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf035fe-25b7-402f-ab96-37420764240a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2227a14-4997-4a47-8c29-20dfef00f150",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a393ba-dc1f-4668-927f-75957d3ced76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821ffe8b-c495-4eb6-8016-a95730a6ba34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebcd205-bf14-4d2f-bc12-341d77e67564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "296a32e7-1b26-425a-915e-ed14c09f775a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d9fc80f3-3bf3-44fe-9427-5767683cc93a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c453f183-2a2c-4729-83fe-8b3d6ce84d81",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0989bea-8366-4a62-a1fc-57733791c5c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4931277d-6efe-4cd8-bb53-bf347481a86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bc85fc-cdf4-4b0a-9199-5e33e2564e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5108226b-d75a-4dfd-bb84-5efdd00615b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ec83228-8d48-466f-a2bf-012010e6a11d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0841a48-2b5c-4ec8-8bbc-d55237b48c7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "af9721e5-5f4a-4770-9372-c24e466becc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51dcca55-bc6b-4334-a66d-43831414d204"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e7cf124-f65d-4c54-9d9d-1868f4f87c03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f519705-557b-4c3b-963a-d0d9af161e50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cc68bdb-2104-4bcd-8fa1-828babd0d05f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a72063c-9aea-48e8-8be1-93cad48156ab"
            }
          }
        ]
      },
      {
        "id": "d9e5636d-1c00-4de9-a991-fe618813e245",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b967a890-44c6-450d-8fe4-dc358ca9c16e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d710bda-7bb9-40e9-ac87-60a512a6e987",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6a37ca8-df8b-4cd6-9dc7-ff241ceb77f0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48330b44-f584-44ae-8566-946cecf34258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0d5a41-70fe-4b64-a19a-02647107723c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0884e1-b839-4be6-a423-78344e3d2d49",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7b3889-f5aa-4435-82e5-7f45e620316d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f7a026-3a55-4f39-b005-f08016c85049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613813b9-19ee-4a79-97d6-e6a986d8f942",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c79ffa0-7da7-40a5-b824-b6b67da540d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0edc559-612b-4d9e-8ede-7c1ca9eb27c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f85bd34-5d7e-457e-8481-1b0231cf5f9c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e38cd5-641f-4d3d-b58e-622b1166bc51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72986d02-72d2-4c2e-8de0-f552adbc9a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bba8d3-549d-4045-9c39-3aa8e68ce4e8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647798a2-d16e-4d25-b77b-c1bcfc4b320d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a51f1d-2988-4991-b4e3-e56b750ebdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471546a2-8713-42a4-ab16-be63402c370f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101fc28a-0a92-40ca-bf6a-1ecd30a4c841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0fee9b-d0e7-43fa-8cde-805d705fc078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b67b3f3-dd37-4ad2-8605-89809f86931c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ad141c-8ef4-4d93-a4d9-840b80552c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5247f1-f149-494a-a1fe-5c99440f5d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "824ec31e-25fd-413d-b44f-a17aafd9d915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e1d5f3-145e-4f61-ab8a-6c863187bca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e457e012-c73c-48c0-acae-cec98d778629",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557893de-68c9-4af8-83ed-d7ae595aeb67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0692e1bd-88fa-46f5-b7f4-b922b50d209a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381645f2-106f-4318-8a15-cd914cac3ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ba881a-e8e6-4952-9491-93defbb168a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f243de49-9ebf-4417-8574-5343be4f562e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e21908-8f86-4721-86bc-9539a5f2317e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "045448b4-0487-4dd2-bbfd-efc74112eb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a182fd22-7d92-49ec-91cf-a9db0680dd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d412a036-1e8e-41fd-88c9-35a568bbb8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c260d375-008f-4284-8931-8cc087d6d851",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f9996-73f9-4d2b-9de0-a740e1ba423f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "552e0f49-4385-4255-a40b-69f2577e6d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d97e69-b2e0-4dbd-a5b9-91ef80e2b12f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f34e25a-e3cc-461b-9a6c-4afa427fc2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f25c72-b03a-46a6-88e7-86e127599846",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b3f6ba-e674-4eb1-a2c8-c82b7d6c3fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acba210d-5bbd-4f2c-9400-fdb0c2a26716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59adcc46-d935-4596-a487-0aa222d0a1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb119df-b237-4c20-a782-a588926f309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32defecc-7a15-4f36-ae2d-a4dbdbc1a800",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eb17dd-2f8b-49c2-b72b-9e3bb29a42d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354e2c4a-205a-4c3b-8720-a8504d51a2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe0ed1c-8fdd-4a9c-8773-7938a0c259ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2825bdf-3357-4906-8da3-5284a1bb5879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f84c1f7-9721-41b3-ab58-7c02bb3cdf05",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b92de8-c792-4408-82d5-7ab653b66058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d54032-5f89-4189-ad88-30a28fbee3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b52f23-41e2-4a04-abb8-99ba356eca2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc582cb7-a9bb-40be-888d-82b11958b9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d68b587-fec0-4141-b3ef-8acf63a295d7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b64542-9dc1-4e4b-85a1-1612ed0a2768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f0e333-b053-4919-a534-b6e8375b08a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16e4219-924a-4cd9-8ba0-b6d485f7c518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc40f5ac-ab2a-4b9e-b162-a3d134e1120d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f69ef98-e176-4d38-9690-91747d6ece78",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb4683a-8f1d-4af7-9b68-23cc767e1d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7ac44b5-fe65-4edb-95eb-72f4e8e1f786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0808073-fd88-46d9-ace3-8c0997788e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1eef2e-115e-4aaf-a42d-dae5a88924fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501c146c-69bb-4cc3-a2d2-d9f18db3ab17",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd84c419-e429-4b80-b099-b64ce19cb598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c885300-40f9-4d9c-97b0-49031c36efd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027166a9-7618-4eb1-b412-618d04b49c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e532e84-3a35-4b82-b16c-554a62738443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bef6683-4657-4634-b790-8d2e68a251b5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d63f85-e389-4f0d-a870-a462f62b4f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ede6854-1bdd-46da-8268-0c1d76d03eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a166c382-cb2a-4d51-81db-e5e4749565a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d88bed-fff5-4e01-8d9d-71899882131d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3489f7b5-030d-45ae-b633-6a8b2344af30",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27ae3d8-acc5-419f-b3dc-ad155d36e0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42cd222-9669-4075-9653-9de6ede42f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7241258c-eaee-4ff9-8fce-ab29df7be7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13d8778-6cd0-40de-a1f9-51a495ec185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceb53d6-fd12-4c6e-8f30-32b59787b6ae",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a357b67-7566-4723-80c9-42aedc6ab5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4d1475-ce32-461c-8b65-a0a39405c210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae7163f-ff9c-4096-a517-3a7c86a91d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed18cbd-66e2-43b8-b717-5d2f2852a4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13eea975-0567-4965-a698-c6877f029a05",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27890c23-d89e-4854-b13a-db2259374cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3859b0-7370-44fa-a1c8-c30c4069fccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bbc323-2382-41d8-8d34-596afd023d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86e8836-8643-4698-b7b2-76abe11f058f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f227063-25c7-4611-b532-d60bb2fb24e3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfbaa67-6d73-4317-9559-1ca24360a456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3481a180-faed-4915-8cf3-295db8979432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e79fc3b-5599-45c1-9a5a-8769c7589258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290e6a40-ea07-4031-b54a-5d677947258a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9943a0bb-cefb-4b03-b4d7-7d930233dae8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aae048-c966-4f4b-8360-5e26730d426f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989db890-3af2-41a6-8796-e9714c5137be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62b7a52-ec2a-4e97-9ea6-0bf597b74a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5edc08-cc80-4a1a-a0f8-7a42090925cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebea29d0-b9d5-4d28-8920-0019415ee620",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2baa73e1-f69a-4f02-ac9c-21dd9776d6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f521341d-d91d-41df-9848-362dae6d2290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f35fd38-f4d6-41a8-a184-983766345337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59239e26-0378-4084-b084-dad325a1b582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80172438-0333-409f-ba01-e18acb066aa7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb2b9e7-eb07-4f20-a193-52040a79d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb13db8-9493-42e1-9174-499e4eb66033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0057e8-d6c3-4cd2-b9cb-79c1f244b606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7843d27-d2e6-46b0-a467-2e8d1e2d3a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b045fa5-de71-4908-a7fa-4bab8cb1e686",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce291778-9ac5-4a7f-847d-389821c9225d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47b62c31-8a17-47f5-8d29-d2d980129d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02b6a21-247b-45c2-a6d7-965df4ce7761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc32dcb-040f-4ada-934c-3a7fdaf92a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8db66ad-4c5b-47c9-be08-2976abf8b0bb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb9ada4-36b5-42a1-8e03-a9c667384c3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d272618-42a1-46ba-8c44-541abeb34a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8596d1a2-77fe-4c2e-ada0-472f111a14ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddbfff3-602a-442b-b2bb-4516e52f3b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98932b65-6ab2-425b-a905-9cc1e19d1287",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9077c5b1-2c0a-4983-bdfe-a65bba86a3e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d4f195d-218b-46c7-bc8f-a1ea385ff85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d618ff8-ad0a-464c-8bcb-b194f4a40d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a277af63-68c5-4462-8065-b01b5b2a2b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a000233-0f62-4d81-830c-de3f881c7607",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e7c5a9-e291-4345-a5b0-adbcdb3dfa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4eb0df6-ca0b-4c88-8b6a-472bdaf0fef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b38ac17-7295-454c-9ade-b93c2030fb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9add52-1380-4ac2-9555-27c233707c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c84afe-ee22-469d-9703-db0459ae08f8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9630ff-5c2d-4ace-8fb5-352767e86e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fab51a-feff-49a5-9126-9973ef63faef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d576523b-d8b8-461b-b8e0-3e609df260af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8f1b76-0c01-49d6-b36e-3375210b1a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c9686e-8aa3-4b8d-acd9-52511375b449",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16f3b2e-5b5d-4197-a684-a16f0edb73e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23e0edf-cfa4-4e48-9a33-c7e1b3f277c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12de31ff-65ce-4f20-a2a4-912726807fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbfc61b-0e7f-4b90-bb7b-ac2a503c0f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f52618-92c3-4292-bcc6-1dadc06e6be2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54db103-0504-46d3-8d79-4917871bf3cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd9dd11-1b5c-4027-8fe7-644612e86eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16a08d1-06fa-4142-a3df-82f67e898989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59d6a12-e6e0-41f1-8aaf-eba607ea1cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b0dc2d-6087-4f4c-a367-ff62540e83c3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c207c5d-db58-44e1-8d8e-55c077198f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded966cd-8eef-4d33-ad44-84854475d616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e062a4-2541-4a9e-8fb1-a574f0dbf8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316988e3-81cb-4272-93e7-ff0879f92b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb4ee03-ba8f-4b0f-a4c7-30f1440b68c0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c804f75f-7c9b-496d-9ad8-29af4ee9c024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc3661b-4348-4271-91d5-ae13bf1edd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495cd41e-80c3-4b26-99c4-ce1ade2309f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec491dff-429f-46bc-a385-fec3d73b489e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fef19f9-fcaa-4cfc-b4c4-876a3f65b8ff",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b227885-2fc2-4f3d-a72e-1ecb247cfa4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f3b3f4-c7e2-431d-aca9-9dec1d229a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda058d6-d5b3-40ea-8b09-83fe9fe8f496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88540309-068f-493b-b379-ca873d420248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18380826-2a39-4787-a860-6b6f50289074",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e88f555-9c22-479f-ad35-b28c51b3c2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a491c9-e95a-4c24-afd8-c3ca12ee4f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ae53f4-f2c0-4c72-95e8-92a9bca12d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ee4e2b-f663-437d-8e6e-4f91fd0681ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892e3a45-1e28-431a-9358-2d438851018b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26baaa86-24b4-4b4d-8055-288256e7e4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbdf5d6-f8c8-4e71-9d6d-530d95fea25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21c98f5-975d-47e8-828b-0e2c948df373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2679af64-06f4-44c3-b804-6648b96a459f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896a0abc-8f3d-41a3-a1f2-820d1d19b591",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7018a7-e9ac-474c-936b-be51e34e1d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20dab597-36b6-4585-9dbe-365641103f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219b72f5-b858-4d31-aeac-1213280929ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0005a0-c899-46e1-b993-65713a8bf439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf38ee9a-0c9e-44d8-b1bb-1812040ae630",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f07ec4-c2a5-4e37-9a4c-14532ace8972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6c9a67-02d4-4d1c-bdbe-6d699c8b4e8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1532d3fa-fcbd-44a1-9990-ddff34dcd2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaad9da2-e0a9-48bf-b307-0ae463c20074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43548506-7424-4d85-bd22-5ddc20c0177e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ce44fa-11ed-4bd8-abe8-d98d612b3638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752a1969-3724-4a02-b162-1bce1725b01d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f31b412-b303-4e91-a9bd-610db908443e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97b4a94-de53-42b0-92cd-0e9c6247b314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe9b508-e407-45ff-a192-03773eb4c304",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f00d23-1776-4ea3-b258-91fdf0be9fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3157a38-85c4-4088-88fd-5d3485c10bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afc38a2-b5e5-4638-9134-44a8c42a8c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15552570-c8ae-46e6-a0f7-6f840bac2792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd115a3-79be-45b8-bf61-2f0992f114ac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b84d97-b6ef-4c5a-9bdf-cd65569d12ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9d8b6d-8033-4002-bf20-dfa6b2f21c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d37464d-6ec7-4e4b-979c-556bc999658c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350c23ae-e449-4042-a421-ea15dca1c19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27e9840-d074-4ec4-85d2-7ba37344a8cc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313fe0ef-cf74-4f48-ba89-cd99f2ce4abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab389e17-cccf-4039-8e4f-27e6eb362f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd554070-5ad4-449a-819e-70158a6b829c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7d4571-4e9c-4d2a-9518-89d338b2e8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8046da47-142e-495b-891d-6ca55e512d8a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edb709f-0a3d-41e2-8869-3146aeeb0fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b115b1c-9108-46ef-bef3-f98e088e0521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d2070a-f925-4c01-9f9d-72e45e9faf2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3423af-aa0b-4a5f-bbc3-1938b1e771ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a067afac-87d0-487d-9b68-fe137339b14d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f390323c-890e-4877-92f8-49697e9f2602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39db33f-65ef-4554-8b7b-d145cb401af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb4b1d0-3334-4eac-a24e-c4f6a355f2a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7076a7-1204-4b9f-89fb-a3196901e9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023a9830-3c91-4e29-b048-7ba92e7d9730",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f3f43d-180d-4ddb-83c6-e8d5a52077ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d3f1b6-7a2c-476f-a1f7-cd513e13d869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65828469-032c-4509-b115-32d2bffdc228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a170c02-281f-4d1d-85b0-791615c518f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13366cc4-a177-4821-8d4f-e34594f22649",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a566b3-a3c8-4ce2-994f-f5622038e4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad607e9-f6f0-4cc5-9279-b361282b264b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cbcbda-a5d0-44af-80ea-cbb4633c83eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cb1daa-7946-47c8-9695-581df9e19692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d693a3-1c8c-489f-a803-73ada5add60b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0871ad2-c8bb-4227-ad76-3c9b701b44cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41aae63d-5c10-4385-b04b-cb70abc64339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b09c407-2f1d-4b29-a824-74dd4b818f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec93f708-3c4c-4c6a-b306-34e88745dda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960f7cff-e02b-4f6c-baee-2f84269bb5f7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da78ba2a-9b76-406a-bbb2-42a692b6941f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a80a5e-23e8-4259-b39d-dd2a2522f839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b2d0c6-f23f-4ecf-b3f5-1286a8b91b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bb5f55-1af1-440f-978d-5a6d58f04477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d1e7ff-fea7-4ad8-9fc3-1884af80be81",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47334607-54c6-4e30-8f5a-1f6dfd90fdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7549c8-2d00-4a1e-9a3a-efd1cafe7341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c25fe1-cff9-45a0-be03-90727995d65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb82a5c-cfd3-4a55-bd93-fbd14fdea936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c706e93-e4f8-4bae-9393-9662b9b02866",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085ccc64-cae9-493b-acfb-d39968a7546a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb685b47-fd4d-416e-8624-14b34f5c9cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8683878c-9bca-40fd-8bdc-b849668e2ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d05ddb-398a-4255-a484-b6968bc91a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34126cc-6b5a-4881-b516-6e5b58c5379c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effcc431-7ed3-4196-9dfb-3d11fc6756d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3474b0bb-818b-4fa7-a64d-552920c0dd0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df94b43-9135-4a5a-97e1-2e197bb363ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288973cb-7225-4f21-9332-4b81836a3101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c631d0ca-3f94-45e5-a935-5779553cd5ca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ef3fc4-7310-4b17-a5c3-13a2ba3dc9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d20b02-3151-403d-a4fd-1933330a58bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3967a49-5e64-4013-8fd6-b04f804c1a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250390a4-4624-4fbc-9a57-8dc6d82b6cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebf9212-2e39-4ca0-9de2-f530b16f4f66",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f00346-5b35-40ed-a2d9-bbe64cff36a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ec1d9e-afa6-47ae-aa2c-d93f3c37b9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6d2391-7645-4d5b-8998-51ac9f52d70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcb96c8-8fe2-4621-8c8c-06bf4ee3aa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d89d6e-56d2-4881-b417-92aabcbe69e8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b819887-72a8-45f2-8d29-cbda94ea9789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b51950-8b83-448c-9c84-7f5428bf1dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4c8cf0-29ac-41a6-9dd8-fea9d6447b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce8845d-a2a6-43e2-8400-8c06bb0d9d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc160f3e-bf68-4270-a690-ca5b86f2520e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d573a9-e875-4b54-b2fc-1734c250fbac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14e5dca-cfd8-43d4-8dee-5f83b41066fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1d7473-aeec-4755-9540-86db78363329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05839f0-4864-432e-bdf0-3b89897e183b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a14ce55-ec73-435b-8c8e-48f2a085f56e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f97f27-455d-4363-9b6c-4af0badeb7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40847463-f0b7-43aa-866e-12f9d6e6f867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc83d25-ceb9-4f8d-81df-0e9192bf8b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb05bdf-b46f-461b-91e5-124c8c39337c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef812bdd-2c1b-403a-86bf-21cc1ab7dd0c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76720397-58cb-4930-a1d2-669edc199ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0047e61-6792-4497-a55c-9d44c09e35ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cc030b-3ab0-4c86-8796-1f8c82fcd19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbab8a82-918d-4b27-8fc7-333a8f2925b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67a26ea-e951-48a5-a9ef-b1598e849360",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec6d446-cb89-4779-ae69-9ecd5e2a15f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb033001-4cd1-4e94-b690-4b7f1916ccda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbcd073-c4fe-421f-8b19-37f2045821a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2d3538-b20e-40e1-b0ee-dc18921b28e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbe1829-fc46-46cb-a6cc-c211d54d340c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ced4240-6c26-43b3-9daa-64749686cd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45bd69c-2c02-4c92-952f-f8ea952ed3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8780bf06-b1a0-4ae2-ade2-59c74e2edb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcdb852d-3e42-48f4-8727-28c5c4fa5f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6cbb33-3632-4f56-9d2e-ea5ad7d4f332",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59c87e5-3f0d-4aaf-8334-59ca5718a7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de725ad7-fcf4-433c-b4f4-5d197b188b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5ea530-1711-408c-88a0-113df336f78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6e9ade-b1c5-4eaf-a0a3-316b2fceb08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1e2198-9a28-42ee-b170-b71e00a654dd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a404c4-55aa-4ec9-8b3b-67d4d00b4a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dae27a-5555-4286-bfab-b31caf79d594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741708c2-da7e-4f24-bf4a-a4fb81688522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e37d9b-97de-4a67-8ff4-4eab64dd9d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f42af2d-73c7-432b-9c4c-cc2f300bb0ef",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cf3a24-0e24-4fd1-bc63-ad8fba0edb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d160f961-1863-4e58-a099-37ef50a45cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae99455-578d-4043-a277-24666e12cb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca08466a-72a3-439c-bf6a-ad4d778be0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cdfc9d-4fec-4109-92bc-7c1be03932d5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119fa214-b144-4c53-a82a-d297289cd2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7266a8-0b12-4804-b017-627826eb33eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4fa152-5373-4e53-b8b4-ddcbe98a46d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49ab9a6-fcf6-4da1-aeca-24421f22f893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6aadfb-103b-4df3-bfbc-bdd8afa28a60",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f713fa8f-5db3-46d9-a2dc-32f173b73c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d03381-1a20-4bb2-ad4b-144e6ea749bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e90d306-a4db-4215-bdfd-c29115859832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fc1152-fcc1-4964-b097-762fc2ba15d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69c210e-3f0c-4e1c-a51f-f2637e6b200b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80700ce6-47a8-4c2b-b185-8afc5ca59361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bc5b8e3-80a7-42b1-8e98-6ed1512f9150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8486f656-ccc2-4dec-a7d1-4ca9e270ed5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1930bd64-fbfa-42b4-9ed4-e264202c35b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c80e30-e22c-46f6-ae6c-06690874d0e9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3722404e-7857-445b-ad48-d716176d30a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bc5256-5876-4357-b858-a81f02ab14e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60a4487-236e-4e3e-bd61-56251205d36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b7cd5f-eac9-4e71-870b-fb44b3620c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03287da3-1479-44ac-95bf-583d30c94a41",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e288a01-0829-4210-a8ea-a0919d02b351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2f6d4d9-39fd-4402-803d-a3a92cb3b9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9305c9-8dd9-4a96-b2a5-a87f535cdaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2cd003-87df-44ca-a991-8205709a6c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea507f6-878a-4c9e-a344-0d6556313c0f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240e3f04-6731-4e37-bb47-62de9ebf3bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b13e04-e780-4c56-ac18-5b05f9f0b7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b432486-fb08-4505-ae25-cce72322526c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79170ca4-4dcb-4a21-aaa5-8260eecaf4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b4cab6-3296-47d2-9beb-8799b212bdaa",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500bd339-3651-4ea0-9d8e-e968824cbc5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff6da91-9f75-4a01-8169-bd036e963d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9524906-ac7a-4e15-9d76-de0c313574d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059b364f-0ffa-470d-9777-836d699589ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87213989-0046-43e4-8b76-764456c005e4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63ee8cc-aa74-45c8-a983-e77f9b423f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd975963-2f8b-47d6-851d-6fb87c35199d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8230ed57-597c-45c5-b10a-20bbb626fe0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc273554-6a23-43ae-bea7-cafb32786f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb9d814-9836-4cfc-8fd3-f5d84fa7d7bf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31111276-a852-4c57-8e16-aa9160dc0e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5112e69e-e763-4c6b-b5fe-5c085f405ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245d2daa-bb94-4ac1-b2d6-06c59e4b6d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b708bbca-b234-4dfc-8711-7826a2368fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da70f316-5ed8-49dd-a693-100939c41825",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554880bf-6d0c-4ba1-933b-087fc0621b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e214a689-5f9b-497a-9af3-1270e6e7ba87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a10bea9-aad2-4bcd-9827-087d77695a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eae7899-479f-4508-9ca2-6ca4c5789300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5505d4-4515-4c7e-90f9-b7a15574adbc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b5f525-f75c-4425-bed3-aec5dfc02ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96a022bc-8029-45a1-9939-140b34fd03f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d59bea-7468-4050-aa07-8cb5bf31b807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db67196-55cd-428f-b98b-4f1d6b8709cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8732f4c1-4d8f-461d-8a8b-b052a60a078f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c164dfa-430f-4f20-ae67-7baa9a9c57f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234e8860-3ee2-43ec-8fad-a057866be1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e799314-7f38-4bbf-b850-dcce405b31d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd1b20b-dce1-45ae-be04-b1806a59ae80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03a2abf-8219-4f2d-ba22-ff65d1ecb245",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f0b046-0f96-40ef-beb5-ec282939be01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "445deb64-e47d-485d-b5a6-7ba96e174b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf653bff-1529-4a48-af5d-55388445844b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea131292-cfe8-48de-9abe-f9929f23c946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19f4940-3e09-480c-a19f-d272e42546e1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe248675-a399-4008-96a4-daf338d45924",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67126a27-efba-4b94-a33a-6b9f7747af6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9993af20-d0a2-45ee-93d9-755e7a5f44a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee125dab-c6a2-4d26-a854-2960c3769813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84618fa8-6f75-4f15-abcb-fee78fa2c885",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c040b28-6426-4050-9a01-85327803154b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ecf9300-9425-4e17-8733-b29e6a55bc56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a142877c-5708-4206-91bc-3f2ab4119b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baeba8c9-59fe-492b-b3d4-c71723d43c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478df506-93d2-47e3-9a50-6f770fe33dc0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223a518c-a5f0-4fce-986e-a0b15b1bb9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89cbbefe-3174-4d7d-98ba-d7240e7d2d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c2a894-88cf-4edf-aa8e-9cf680641336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564f6d2a-c349-46fc-85d2-77953818e592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460b67dc-9aa2-4c8a-81ff-8e5d1c75c195",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09db8015-4c6b-4d7e-8a47-382591e5d506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e325e939-39da-44cf-892f-9247a6f92c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfff9399-94c8-4938-9487-1405280161b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315e0aee-1ca5-4cc4-9f00-6789d9e85681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073f5d36-21b9-4778-b30b-d5889b82f2e7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27caa62-b181-49f7-981f-2a2a870e11e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd716da-d7dd-4ec0-b091-8725be6995a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d133d845-8e0a-47cc-8b02-5ef6090da95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daad3c1-da2a-45e1-9bae-55fdad6186a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd085a3b-094c-4bdd-9495-20650b234429",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233f1e33-a02e-4235-8e14-8a6b37bfbc05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d41ee19-9daf-4265-b306-8763fb3ef6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b9059d-6d13-4e57-99c8-0c85827dd701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f33d27d-9cce-4c04-a3dc-435834ed3613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2ef256-3000-4926-9bf9-0df88267dc7b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27512338-ce00-41e9-9a45-2a8ba22052e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60dcd1a-f85a-4d4a-9c27-316fd690bc51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5bad95-e9b3-4092-ba54-c43efc4397c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac96d1ca-5774-4fa2-8e4f-7b1abdedd905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b211b001-f962-4e8f-812e-23c835531c0f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4455ede7-c9ff-44ae-9972-86add6f3e12f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46a96165-06de-4999-a5f7-c1b37f1cf47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae74f12-ef9f-4eb2-9d51-28ef9d8ea3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c62491f-b849-41b1-a9b3-a004580ab344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a3ec14-c0b1-4233-b797-5410202ff4f3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735a8820-9829-472e-a55e-0541a72fa97c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cb2b8d-a6bf-496e-88a4-a83525ea0626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb9a8ce-b1f9-493c-91df-ec1bc31c71a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387e4544-5a3f-49ae-950a-33b297dd58ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9b110a-7d26-4ada-9056-fd9dc76261a0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eddb5ae-3c75-49ed-8194-d7d643dddd85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1acfdb2-25eb-41ac-8157-91d06b2f1bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e408b0-7b55-48ad-8b0a-39e1ab3cb583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abfab23-6eb1-4d9b-9997-300724ce4139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0964863f-8ef7-444c-862e-fc83ade12e7e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deafa063-0041-467b-8d0d-e90e0da18485",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83ac9ae1-3daa-44ff-8f96-c1eb07187139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a965f950-bfea-4829-a18b-aad259ef226d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613b97a1-0878-42af-9da7-0a7367193633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ae4fb1-d1a7-4c43-8803-7edc861250b6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfde50b-d507-44c1-9ab4-a12a1b936fa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "711ef6a0-480c-441b-889e-83bdf695980d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23853fcb-1f9c-4d35-a151-d5db986dfac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fb6485-11d5-4341-89ad-fea22dd3ae8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b44fac9-4b1d-4903-82e4-bf1454b07380",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683e49fa-edc9-4bc8-bf4b-eb523eeedba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefc068b-040a-477f-8f16-ceb6e276e597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01ea8e3-b044-4c46-a832-4721d5fae7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3605e5c2-c6c3-4279-a897-047e0c66e107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f028446b-a6f8-4243-9688-4b9bd04055d6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e57a6d6-c328-4f0a-bcc3-17da2f946b27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9df9a2b0-75a3-4ade-94ab-5a7cdf80f7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a579f91-0d35-4012-99f8-bec87d9be617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e99c95-dd8a-439e-8f60-fcedd1f02cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94a7adc-e89c-48d1-b8b6-f2d4debaf8fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70999d64-f806-44c7-bd08-c63dc0a6abb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5396c0f7-b5fa-4a3d-a5c4-90df2df5eb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ede8c6-f071-4233-8e84-f484cb878a5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5e1de0-e491-4b03-8032-94d05c147a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9300ee1-69fb-4dd4-929c-ae49ec06889d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f019a3cc-4611-48cb-861e-ce2cc9735a00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4883e663-5d55-4a72-b2e6-b7d4b3792230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f193de9-1e24-4a70-b2f7-b77402a871c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ea5082-ddf5-4d94-881b-b9b4685c13de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a536f8e5-2a5a-4a37-89b4-746fcb3a87aa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0a2b45-d482-4400-91f0-c83c72574073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a355225-00fb-45b7-8fad-7e03032e0526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ea8234-fbb6-45d3-beb2-6152084e1d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a805ab31-2d43-496f-9e7d-7c140c385c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aeaf698-2d2c-438b-ad4b-4ec9cdd8e706",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ae3e1e-a2c8-4320-8904-053669c33e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af27cd48-90de-46f5-93d3-c2675a23ea57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a082517-eda8-4b95-913f-bf85ec4afdc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301fa902-b2d1-421f-8fae-5125027c088a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e2677d-6ee0-4b0c-ad1c-20397af6f0fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ff6998-d2cb-4b99-8e18-45716cc67f66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69de13b7-2df4-4bd5-91e6-6685a7911a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edb97cc-b56b-4b7e-9d24-1c03a75d3b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4a2962-b8cc-4de8-b4a9-7580d53349af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed3f49d-47ba-445f-97e0-8e571038e9de",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6495691-c6cc-4758-a547-3138f4c44c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed30200-99e5-499d-bcf1-497c6caeb440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeaa3b6-bcc9-437d-9816-0c9d520a9472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b049ed17-e778-4247-9f2a-c2369ef339a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e929239a-0d0e-4886-9c2f-324a5738b225",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f860837-3d81-4b9c-bc43-82b0c940b5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f6022f-371f-48cb-aca8-13a6d2cd5440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b03584-ac48-4cf9-a8ad-75bbc87cf990",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1b6e0b-c87e-4489-826c-49584bd5b839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ddf295-d423-4d61-b55b-8cbea52e2ce0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e81790-9229-46e3-8a97-cab766d77471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316c38fb-c630-4318-bfa6-cbc327fd1fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9ef98f-d479-432d-90c7-99034baa436e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e67653-a577-4701-88fb-10529e9be80f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5ec5ca6-2ff4-4c6d-92f1-964235788b73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcfd53f5-6096-4a95-a48a-ff9660817834"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97d94156-f789-4282-9f8f-1c93fbd5ccb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e440fe05-6af2-4c5c-bf56-54ce49b3e596"
                    }
                  }
                ]
              },
              {
                "id": "f6a8f7fd-b819-4a9b-a941-752291a3d528",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61ff1b0d-a36a-41b8-bf94-fb1c1bbc6766",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6524af6-f4f2-4298-b2b9-50a65062bdc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ec73f44d-b6c1-48db-a818-46a1aba6a8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "594fc8e0-9d18-4b15-a904-92dfa372cfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4774dbc-e695-43eb-a373-85d876d052d4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "203c1e82-9dfd-40a0-830e-c7f72769dfbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db46b4b3-6bf3-492d-92b9-5d68129cf844"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "973ce1d6-f422-490d-b71b-66a9a1546e5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f00f9198-7c0a-416d-9e97-b63e8ea937d1"
                    }
                  }
                ]
              },
              {
                "id": "e86ecb20-235c-48ae-bb62-3487a992b1ee",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6445f310-8cfc-41b5-83ce-30ef9831f643",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fc594a-2cf9-4b82-bdfb-f73b98f65fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fb3d0d73-a5cc-474d-8926-54f13d9c2e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fecb3e-5be4-41e1-87b5-0d538682558c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c3b549-8576-4e89-b6cf-655146f4e149"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d8b6776e-3ebe-4387-ba35-f33bc5b4f008",
            "name": "Positive Testing",
            "item": [
              {
                "id": "480660c6-0e98-4a7e-85e9-645c668adca2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37ba20b8-64d6-42a1-963a-5ea54f9b20b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "34736e21-1433-4ea7-8e0c-5bc865560fb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0060ad54-e8ad-4e23-bc85-d9012a6a7e2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80dc962a-de19-49ac-804d-d69176234de9"
                    }
                  }
                ]
              },
              {
                "id": "c0a84b70-cd78-4222-8494-d593e993b163",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c99227cc-2687-4937-b907-f6cc296f8674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "979fa4cf-6210-4e51-b961-05bfc4ba4a73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b391de85-3123-4138-9299-6f1779124b55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7447809-4326-4e62-85ce-d22a19b9da6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a326406d-3e45-4dcc-8776-d917ae07f704",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b0a4be9f-2a55-41a6-8ee7-8b6fe6c3bb32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25a9a207-b601-4de7-9419-ebd610107abb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cbbdc9b-7eb2-42be-be77-afc39f4cbc38"
            }
          }
        ]
      },
      {
        "id": "e01824c6-30c6-413f-9b77-ae94e8cc1e90",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cdd7c51f-3a25-4e3c-b4a3-3ee7c3a72a3e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94c74e31-763e-4175-b67f-68515e387241",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb43f055-6e9d-43d9-a3c2-9f4793518784",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbb4547-c9cd-48dc-85a4-e9ee8acd21f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "33e388d2-604e-4805-b926-4803afb54fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1576cbac-a59b-48e6-8575-3945354db6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceb202b3-cb89-4310-856d-9f6bf4fcd871"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f029cd0-908d-4e48-a2da-203cedfdfc34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b56b3ad6-ef5b-46b4-879d-c16db8bd411e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae8eff02-71d3-446a-a385-d27e99fb0192",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af8011ba-6440-4b7d-a4a8-b6c06c3dc911"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff35a49e-0f02-4888-a36c-69b2f03b72a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b7f414f-2d92-496d-8d78-a5f8528c529d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e40aa75-e00c-4984-a6e7-edd753cd2b2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68271752-4a2f-448f-a002-763a59602469"
            }
          }
        ]
      },
      {
        "id": "c0682160-c59a-4553-a56f-ca477698ed2b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "79e2775e-69ea-459a-9ed7-9b208d2ae630",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4ac117e-f0bb-4e64-a492-75d47e6791ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cc1203c-6c40-426e-be50-c992a5354a06",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66bc7be-1214-4ed9-a7dd-61f54fd0ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "378dccff-f7ed-4d58-9c4d-42f42080e30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6169830f-c2c2-4dfb-9635-cad367eceac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4db96f4-10f8-4bc1-b0e4-f1ec4093a9fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d58aacab-4fcc-4ca9-83ad-a7488b7ba2f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4856e58a-7e3b-47f2-9ecb-66256cae9c87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a121ffe-2611-4193-9904-d16e91ae4dab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "657ed8da-5946-4686-ae7b-fe73970e94a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85c0f2dd-1c33-442e-9755-72ba97df0a41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70ad8b50-ff08-4d0d-8987-b836f864e35a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e32fc10-62e6-44ab-b3ef-99a1ec929bb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2bb500a-0c91-4844-846a-e1a51a018e89"
            }
          }
        ]
      },
      {
        "id": "64475e33-1b16-44f7-b81c-c2aef38dc038",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9b72c5d9-2cae-4d48-aaff-eb9658ee5da9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7a584e6-8afc-4a6f-9a5a-268541653427",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f74a3f4-0943-45d3-86dd-a4778fb2a522",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d45758f-09b2-45f9-b45c-ee08164d8a03",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3c26cba-1915-4f1f-ac7d-74488d7e5140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee5f026-6f00-48f3-adc7-92fc40afa512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63ea9f9c-666a-48b5-b090-d8490bc6b67a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9352d150-15f4-4034-bec9-f8e4894afc6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0b5b6d3-6087-4309-9998-fe4dfbe84584"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34050091-5c69-4453-8e9b-50ebe0de8b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db45d7a9-f3be-4fb3-b14c-613f0757ab87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "daa5ce40-53ab-4eb7-9066-5dbf22b1405a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c91cc98-407b-479b-9942-9fe71df15c0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c5dd987-bd71-4c27-84b8-82fffd134ffa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8021d87a-6595-41b6-ac98-b2c72c8f6d66"
            }
          }
        ]
      },
      {
        "id": "c4e556a2-eeb4-47a5-9157-9ef97e7049d7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fba752ee-dbb3-46b9-bb0d-3caaec7059ef",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ef438e1-d721-41bf-877d-3edb004d75af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "74dd0138-b13b-4bbd-a6df-4223af7d7b1a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d963eff8-9716-4c0f-87d0-875624ae5a55",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a232de09-9a44-45e7-ad58-799c2b6d1e96",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 426.73809523809507,
      "responseMin": 7,
      "responseMax": 14087,
      "responseSd": 2071.0927706742714,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725496955448,
      "completed": 1725497071285
    },
    "executions": [
      {
        "id": "20754c11-746f-48f6-b247-3fd36c247299",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e7186d77-ad5e-42e1-8042-d548b72dd44d",
          "httpRequestId": "8336d0ef-d288-4a87-937c-ce4802012e47"
        },
        "item": {
          "id": "20754c11-746f-48f6-b247-3fd36c247299",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "050730d9-c14f-449a-8570-ae003038f9e8",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "deb9e006-0635-4b11-957c-769ac4cb5036",
        "cursor": {
          "ref": "65b67ce2-ac64-4615-8d40-9f130655be6f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2a19b129-a1e3-4641-ab94-f96d04927846"
        },
        "item": {
          "id": "deb9e006-0635-4b11-957c-769ac4cb5036",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a01a500a-e9b2-4294-9664-98c6c29d1383",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "8514fe29-fe88-431c-b961-67c3d2c79154",
        "cursor": {
          "ref": "f49fc461-5826-470c-9368-efc5a9b8fe8c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ac824c4f-b88c-4ef1-abd9-16e12b67191d"
        },
        "item": {
          "id": "8514fe29-fe88-431c-b961-67c3d2c79154",
          "name": "did_json"
        },
        "response": {
          "id": "748e0fe2-f3f9-4c46-8842-2735f2796cc9",
          "status": "OK",
          "code": 200,
          "responseTime": 311,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7708766-c3d7-462c-a1a5-37856994c566",
        "cursor": {
          "ref": "75c4d66f-d5a3-44e7-af8d-0ec4ea44ecb7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "107cd11d-ed20-400d-92a3-3303a9e421ef"
        },
        "item": {
          "id": "c7708766-c3d7-462c-a1a5-37856994c566",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf4e61ec-e7b8-4d37-b626-47bf577c52a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2175,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7708766-c3d7-462c-a1a5-37856994c566",
        "cursor": {
          "ref": "75c4d66f-d5a3-44e7-af8d-0ec4ea44ecb7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "107cd11d-ed20-400d-92a3-3303a9e421ef"
        },
        "item": {
          "id": "c7708766-c3d7-462c-a1a5-37856994c566",
          "name": "did:invalid"
        },
        "response": {
          "id": "cf4e61ec-e7b8-4d37-b626-47bf577c52a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2175,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f839d97c-c05d-4ad8-b70e-67cb80e997f7",
        "cursor": {
          "ref": "3f8e8448-41f6-455e-8a18-1de56550a0fb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5bdae99f-d0b8-4c56-bc93-64f54d660474"
        },
        "item": {
          "id": "f839d97c-c05d-4ad8-b70e-67cb80e997f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d334fbb6-fe98-4a6f-be20-1130d9a1e11e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2453,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe1e52e-593a-440f-92c7-32a9883a243a",
        "cursor": {
          "ref": "1e3c4ac3-3d63-4f92-bc9a-1cf9dfb7e4d1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "42723268-88ea-42d4-9aa1-b7906abe59b2"
        },
        "item": {
          "id": "afe1e52e-593a-440f-92c7-32a9883a243a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c6b28a3e-3c1e-49a5-9f64-9c542cd504a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2255,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4a9640-0dff-486d-915b-064e2b4fa39d",
        "cursor": {
          "ref": "79b86108-18b2-4544-971e-8222c432d4a7",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b41e2641-949e-4a01-ae8d-2d9add20dba7"
        },
        "item": {
          "id": "ba4a9640-0dff-486d-915b-064e2b4fa39d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e3e75f7d-af45-40ab-bb14-4a0554fcbefb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d61bb0e-4f96-470c-9bad-4c9f921d55c5",
        "cursor": {
          "ref": "d3610d5d-e2ed-4c71-9ee8-f76deb86c9b4",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e0b7c5eb-0dad-4096-bf75-2b0c672a53a0"
        },
        "item": {
          "id": "1d61bb0e-4f96-470c-9bad-4c9f921d55c5",
          "name": "identifiers"
        },
        "response": {
          "id": "be046f09-ae9b-4cf6-a8e9-14f1c154ebcd",
          "status": "OK",
          "code": 200,
          "responseTime": 2603,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bc9e0f-5391-497d-af08-a8972ae0ce31",
        "cursor": {
          "ref": "db92ced7-0de4-441e-b6d7-1eb1bc86db2f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "02ea636b-5919-4372-91b7-60ffbce44866"
        },
        "item": {
          "id": "97bc9e0f-5391-497d-af08-a8972ae0ce31",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eea65763-3881-4ad8-ae8c-dff31c82083b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635097c2-d604-4d42-b73c-666205758bd2",
        "cursor": {
          "ref": "16cc0b67-28dd-4e7d-835a-ef80ce513aba",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "03780ae8-aff9-44a0-938d-ddd747417396"
        },
        "item": {
          "id": "635097c2-d604-4d42-b73c-666205758bd2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "393c35f4-30bb-4042-b4f9-3884231d3930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260fbe15-94c7-48de-b32c-9c98dea72316",
        "cursor": {
          "ref": "b6a11b10-5886-4f96-9aa9-fcabbe9eb4bc",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "de929702-8225-457b-a2fe-0c982019ede0"
        },
        "item": {
          "id": "260fbe15-94c7-48de-b32c-9c98dea72316",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f5550f48-4e8e-4433-bbb7-304fe7180221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0cd883-18af-4906-a418-73af3537083e",
        "cursor": {
          "ref": "1ab3cce6-a2df-4f85-b2c4-2c5198a777ab",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e63853d5-91f8-4416-b77c-d938c24c9977"
        },
        "item": {
          "id": "ef0cd883-18af-4906-a418-73af3537083e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f86e6422-a07a-4a9b-af0f-55e0ca602d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea63886-dc90-4183-8e11-fc62625ed94b",
        "cursor": {
          "ref": "4e63d33f-a46c-44e3-9b16-cb1929015973",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0c7fd4d0-4f49-4705-adaa-6b6426c83735"
        },
        "item": {
          "id": "cea63886-dc90-4183-8e11-fc62625ed94b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c1f74328-6c79-4361-9c09-8d5deeda3ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20e0ffe-52cb-46f7-aff7-6fdc07f9ef73",
        "cursor": {
          "ref": "faa54e69-0717-46e3-9357-3669db660046",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cba68679-07c1-44bb-b377-0abde0b57a60"
        },
        "item": {
          "id": "d20e0ffe-52cb-46f7-aff7-6fdc07f9ef73",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3696b50b-fb6a-4f58-b5e4-502880935256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc549294-2c98-4ac6-94c2-653b184a5fd1",
        "cursor": {
          "ref": "0e5755d7-8a99-4039-b878-e3bf9b18ea72",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "927951e9-f3b6-4709-b818-a2cc38d27e3f"
        },
        "item": {
          "id": "bc549294-2c98-4ac6-94c2-653b184a5fd1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "57b945e7-70c5-483b-baab-820156e0ba5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba590ca-c349-4865-82d8-e755a8f4b97e",
        "cursor": {
          "ref": "abe4af9d-465b-4513-9b15-da4bda43d706",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f998848f-6f6d-4864-9545-9ad04afc5f15"
        },
        "item": {
          "id": "aba590ca-c349-4865-82d8-e755a8f4b97e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "579687de-2144-4362-88dd-2d291b425ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06381cbd-0ca5-4390-89e1-190b9f838032",
        "cursor": {
          "ref": "abac218a-6bc9-488d-aa28-f7aae88a665e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a6ae4f20-da98-441b-af56-0779e5cd706a"
        },
        "item": {
          "id": "06381cbd-0ca5-4390-89e1-190b9f838032",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "65f3813d-2c0f-4e51-aec3-d96910a2a544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd3244a-73b5-443b-aedc-a0e82fcc98ac",
        "cursor": {
          "ref": "16d32cdc-9a75-432e-b25a-790adbaa6385",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fb4347b9-f114-48f0-bc61-8e28baed6822"
        },
        "item": {
          "id": "ffd3244a-73b5-443b-aedc-a0e82fcc98ac",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "27dadabf-5ad7-40cc-86e0-37994de14ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955b7628-5938-4ced-bb5c-d27b3aa9c3ac",
        "cursor": {
          "ref": "56827637-711b-4477-9851-d8a4300aed43",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f3a8cab5-cd66-41cf-962b-530e08469308"
        },
        "item": {
          "id": "955b7628-5938-4ced-bb5c-d27b3aa9c3ac",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "aeb1b00d-ba9c-41d9-8ff4-7ff62c4137ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4a3d22-66aa-4274-955d-7918cdfdf4a0",
        "cursor": {
          "ref": "313897f5-4f62-4c26-8c2c-73cf13877b31",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "28714dbc-b7d9-4625-9e12-1d5676feb74f"
        },
        "item": {
          "id": "ba4a3d22-66aa-4274-955d-7918cdfdf4a0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7241f982-100e-49c2-8a09-e95fdaf79124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aae9c3-b66c-46d9-a4c4-d59e4b07edd3",
        "cursor": {
          "ref": "c2b8732a-fd5b-4661-bf1f-6e5ee9f62c1b",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0979321c-827d-4088-94c4-94dc004988d4"
        },
        "item": {
          "id": "59aae9c3-b66c-46d9-a4c4-d59e4b07edd3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e9310480-d763-4e65-9941-0aa31dd61de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499a6e30-1b2f-4395-bdc5-add6d783d32d",
        "cursor": {
          "ref": "697d47e5-7640-4755-932a-098b58670a3d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0dc75d87-ab03-4801-ac4f-8934ba9f731a"
        },
        "item": {
          "id": "499a6e30-1b2f-4395-bdc5-add6d783d32d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2c1cb59d-85ca-4da5-bd16-611ee24b1f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c56f63-2b14-453f-9ce8-a0867b108e3a",
        "cursor": {
          "ref": "612a16dc-c8c7-4fd8-b04c-27ef886d8435",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ea2c5264-94c0-4698-9cb4-8b40e68dc1ea"
        },
        "item": {
          "id": "45c56f63-2b14-453f-9ce8-a0867b108e3a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ceb5262f-3229-4eef-9cd6-d9d37566f77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805497ba-359d-4665-88eb-09e83137ba3b",
        "cursor": {
          "ref": "25791196-3c25-40ff-b1ca-bde5e1f117c0",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "49fe2968-b342-4c46-bb83-efc1e321c739"
        },
        "item": {
          "id": "805497ba-359d-4665-88eb-09e83137ba3b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "deb3ef9f-5377-4e67-b00d-f7e36977d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524a8779-88a6-43ca-8860-267990f22a24",
        "cursor": {
          "ref": "53222bf5-f2a7-4b47-b170-d7f1f725f641",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9a5504aa-9776-4ff0-bdd9-51f1b1278287"
        },
        "item": {
          "id": "524a8779-88a6-43ca-8860-267990f22a24",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "95daea5e-f9ba-40d6-9850-ed131f3fff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee270d8f-f4bd-4c67-83d6-bfa06576e25c",
        "cursor": {
          "ref": "41ab195b-3913-45e5-b219-837395356f8b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6aa87f0a-9091-4192-a9fa-431f5c770b35"
        },
        "item": {
          "id": "ee270d8f-f4bd-4c67-83d6-bfa06576e25c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a3078c6d-ba1d-4063-b3e4-7b3ba295a50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e35466-91e1-405b-92ae-156f29ad1d39",
        "cursor": {
          "ref": "accf720d-82b0-42c0-aebf-04cc656fd98d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "645a3bf1-3d1e-47f7-bf74-62bb72d48675"
        },
        "item": {
          "id": "95e35466-91e1-405b-92ae-156f29ad1d39",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d9856109-552a-4284-9bcc-f09a15702699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ced9696-081e-4ba7-b602-5a92755cede9",
        "cursor": {
          "ref": "f6b5ae18-9e0f-448d-80fe-fd65e58d8362",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1cbe54ca-814b-4590-a1bf-dab66ea188e4"
        },
        "item": {
          "id": "6ced9696-081e-4ba7-b602-5a92755cede9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d0f10fd6-1c59-45bd-843d-e64e9f58f182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a411a5a3-5118-416b-abe8-544ced0150a1",
        "cursor": {
          "ref": "f364d55d-3b35-489c-94bf-cde36ecdc783",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0b1a1905-ca05-4096-aa4d-c001fc8e251b"
        },
        "item": {
          "id": "a411a5a3-5118-416b-abe8-544ced0150a1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0a5db18e-49cc-4ccd-aa37-34893a84262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf69c2-5737-4c2e-b635-a565e8a5da1a",
        "cursor": {
          "ref": "3eae4b85-099e-4127-a87b-b612ed00d176",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "56e89b9e-577a-4106-955a-63e455936a90"
        },
        "item": {
          "id": "bdcf69c2-5737-4c2e-b635-a565e8a5da1a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5f1f9940-0734-480e-87ee-2fc050f4cece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeab6358-bbb4-486c-9345-8d156c17ccf9",
        "cursor": {
          "ref": "8583c9ef-70fb-493a-a225-9e7d1a2d0524",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "63242759-a908-41eb-8fdb-ce28852c430c"
        },
        "item": {
          "id": "aeab6358-bbb4-486c-9345-8d156c17ccf9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7b86d7c1-6ba0-4099-8d50-6434e4474365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7373a9ae-14f0-4fc2-9572-0d6e107cde02",
        "cursor": {
          "ref": "7e3dcadc-dcb1-4e0f-937a-801f2a151247",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8926973d-4d08-4256-9fea-5973aa147f60"
        },
        "item": {
          "id": "7373a9ae-14f0-4fc2-9572-0d6e107cde02",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7c2644ea-6107-4a5f-a9d3-d080da61db7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8f61e2-c41b-4b2b-b987-32dbb2f7aa98",
        "cursor": {
          "ref": "dce6093e-2544-4f59-9bef-c5f1d656a397",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a1639949-e2f1-4095-be9b-752097f97070"
        },
        "item": {
          "id": "fe8f61e2-c41b-4b2b-b987-32dbb2f7aa98",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d616b6f8-b4ee-423f-b303-4e079f70421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb8f50c-3bc2-4845-9c1b-7ace634df776",
        "cursor": {
          "ref": "6733afcf-11cb-46ca-9c2f-59df31e291b8",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4d156066-18b0-4f41-821c-ea1a76eae843"
        },
        "item": {
          "id": "7bb8f50c-3bc2-4845-9c1b-7ace634df776",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "53d4df72-cb44-4c4e-94a8-62eabe23097f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061d864a-3fdc-4b02-adce-6c0281ff8b3b",
        "cursor": {
          "ref": "8cdea676-978e-4d55-bcfd-335efe197843",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "437deb59-4976-435b-829c-09a8712893f9"
        },
        "item": {
          "id": "061d864a-3fdc-4b02-adce-6c0281ff8b3b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2689bc6d-c0f0-4a05-ae45-91ad13925466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9644883-26c7-4e5f-bbe4-a3f44bd0645c",
        "cursor": {
          "ref": "ad20f2b5-cc2b-4c36-9037-b6ca8dbb6a14",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bac39418-712f-4ffd-bc4c-8b21fe546b85"
        },
        "item": {
          "id": "e9644883-26c7-4e5f-bbe4-a3f44bd0645c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "74af869c-b8b3-46ae-8e7d-0773defb936c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8915e4d-c0ca-471c-ab51-1338e73a7acc",
        "cursor": {
          "ref": "fd6ebe37-b131-4a50-b664-25dde7c261d0",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f23e5eaf-fdbf-43e6-9c76-e5d5baea0773"
        },
        "item": {
          "id": "d8915e4d-c0ca-471c-ab51-1338e73a7acc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7df57f73-bc37-4fed-8961-fb3371aa772d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab01ea58-9abe-4c47-8ba5-f05dbdd9394c",
        "cursor": {
          "ref": "8a8ccadb-13f7-4418-b8c4-8b52c9e33413",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "16d0119f-7cf8-4dda-ba62-6fce2231592a"
        },
        "item": {
          "id": "ab01ea58-9abe-4c47-8ba5-f05dbdd9394c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b86375ed-e10e-4744-b9be-247fbcd4828d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cda8b9-8239-43a7-8bc8-84f38cf89444",
        "cursor": {
          "ref": "395fb5b3-39b7-4260-be37-68c6c7b92fd6",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5b6ce004-fecd-4f6e-97e5-6b9ae9450bce"
        },
        "item": {
          "id": "73cda8b9-8239-43a7-8bc8-84f38cf89444",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "048b1b56-ee88-4652-9fa8-5c19a78cff81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f24bfac-6755-4e19-896d-546e84bd8dda",
        "cursor": {
          "ref": "8c77bf44-406b-4706-8e89-633c7de8965f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2a2fd98c-070e-4320-a6ee-f8192250871d"
        },
        "item": {
          "id": "1f24bfac-6755-4e19-896d-546e84bd8dda",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "af4f9ded-36f9-4d9f-8cdd-4e78efc8f6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb1fdc8-531b-4778-b1cc-702d993afe75",
        "cursor": {
          "ref": "a9971ce3-7e05-46a3-83ec-419eafc22e6a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "563a6d90-0301-4bb2-b1e6-0886e0635c0d"
        },
        "item": {
          "id": "fdb1fdc8-531b-4778-b1cc-702d993afe75",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "91aba338-1ccb-4bf7-b496-7777de29eabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4675546a-8b4e-49a5-9b2f-25efd39d74b2",
        "cursor": {
          "ref": "91bcdb05-fa4c-48e4-b96a-4ca514ed5290",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f18d0601-f970-4d4f-99df-e1675b63c3d0"
        },
        "item": {
          "id": "4675546a-8b4e-49a5-9b2f-25efd39d74b2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6d0093d6-971b-4d53-a31c-aa76869fd803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d04ee1a-572e-4c67-a17c-703c4ec794b7",
        "cursor": {
          "ref": "376f9406-965c-49a7-a57b-c8d95d491043",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "024f755a-5ea1-4622-8505-8a5e8fa7b7ec"
        },
        "item": {
          "id": "7d04ee1a-572e-4c67-a17c-703c4ec794b7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c6207ddb-32b6-494f-b945-2bec154e91bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8bdc36-49fb-47a5-834d-6d2400f8083c",
        "cursor": {
          "ref": "46c42a54-b032-4cbf-ba82-2defe579048b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5505aebd-15b3-4cf9-86f4-84a40b1c4f15"
        },
        "item": {
          "id": "1e8bdc36-49fb-47a5-834d-6d2400f8083c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "849a7462-3c1c-4a36-8461-be4d086e911d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e308fb-a0de-4f60-a4f3-2e917794031a",
        "cursor": {
          "ref": "7a9c0cc2-a21c-48e8-802c-029bf46088a1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cdc31d0c-a834-473b-a48a-d06c25a1d82d"
        },
        "item": {
          "id": "99e308fb-a0de-4f60-a4f3-2e917794031a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "db557601-bc26-452e-aada-8a7ff63c8c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b07cae9-7d84-42fa-ba04-a1d7772b6b25",
        "cursor": {
          "ref": "dab1615e-dc41-43ec-aa4f-989abb775be0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8333d590-aa76-4686-9379-c6896decb02f"
        },
        "item": {
          "id": "8b07cae9-7d84-42fa-ba04-a1d7772b6b25",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aca6b3a2-9498-4077-b2ba-a2d7161684bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1bc3b3-e405-43ad-b73c-30360412ccf2",
        "cursor": {
          "ref": "bbffb983-c810-445b-8f5d-3bf5ad334cc9",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "984a7f71-fcc9-403f-a485-e48ec0f01244"
        },
        "item": {
          "id": "8f1bc3b3-e405-43ad-b73c-30360412ccf2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2a8f4ec1-51b3-4763-a2aa-1b93c0acbbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8d3f78-3f4e-430c-9e71-b88f34536bf8",
        "cursor": {
          "ref": "672880a1-9e30-4d11-b395-443e9bbbcc7c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b371b9b2-63b0-49c5-9aa5-768b8d713a96"
        },
        "item": {
          "id": "1d8d3f78-3f4e-430c-9e71-b88f34536bf8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9dddb7f2-de50-479f-a6b7-7d806a3d6f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effa3700-e416-4e0a-8dcf-0f672b77a0a2",
        "cursor": {
          "ref": "3a74e797-2063-480d-846b-485467211487",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "354e54ff-6125-4e97-8489-423af624491a"
        },
        "item": {
          "id": "effa3700-e416-4e0a-8dcf-0f672b77a0a2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0dad8de6-1da7-4946-84e9-71f5e90b11c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2ccec7-8bcc-4d92-95d8-02971923dcf1",
        "cursor": {
          "ref": "394dfc5a-c324-4b53-8b15-2c6cf585a8f6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a35bf1df-c8fb-42e5-b772-77ce1094321a"
        },
        "item": {
          "id": "da2ccec7-8bcc-4d92-95d8-02971923dcf1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d3d0a5af-1ff8-4d15-8223-a4a2c759ec99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728822de-9f68-4487-ba61-207acf18cd13",
        "cursor": {
          "ref": "0e27ce28-11e0-479d-8b07-1937db0b0505",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3b59fc2c-a390-467e-940c-46361751db22"
        },
        "item": {
          "id": "728822de-9f68-4487-ba61-207acf18cd13",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "61450047-7bdf-430e-abb3-63a24193a6be",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac96055-f3ae-4549-9c85-08a8ea5cbefa",
        "cursor": {
          "ref": "4f649086-fea7-43cb-8a2b-96235c3a59d0",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "28459e05-75f8-4b97-9494-d61ba33b92f8"
        },
        "item": {
          "id": "6ac96055-f3ae-4549-9c85-08a8ea5cbefa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4b2560bb-df2f-4418-bd6e-da9e1e3dd74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1bb120-133f-428f-b082-da2a2ec91019",
        "cursor": {
          "ref": "98b74023-0ce7-4067-9fce-b6b728ddf7fd",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "df1e2148-b991-42d2-a197-4cc1f2f75990"
        },
        "item": {
          "id": "8e1bb120-133f-428f-b082-da2a2ec91019",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9d2f3e3b-cb7f-40fa-930a-2bf909eaacdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e262156-70ea-46ee-bee3-92496d3b13c2",
        "cursor": {
          "ref": "5cd1e04c-0ee1-42b0-811b-74db209b4a75",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c6f04ec9-1c5b-4dd3-bdc8-07ecb526d0b8"
        },
        "item": {
          "id": "3e262156-70ea-46ee-bee3-92496d3b13c2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "33dc1b93-6030-4e9b-83e0-36f38825eee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d6f399-a678-4e85-9e28-116c7acbd796",
        "cursor": {
          "ref": "fc6ef745-0d2f-4da4-8f12-b442749906c0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4163f55b-4c89-4c23-b1a9-a103a3114b91"
        },
        "item": {
          "id": "15d6f399-a678-4e85-9e28-116c7acbd796",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ebe7d8fb-79e5-4ae7-926e-23f1eae09a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c341052f-f37c-4f4e-b927-044b9f93a9b1",
        "cursor": {
          "ref": "38a92238-6ab0-4f3f-ac6e-6c006e923fac",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d3237e9c-7ed8-45e5-8a71-c73f6f534a50"
        },
        "item": {
          "id": "c341052f-f37c-4f4e-b927-044b9f93a9b1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "80d2ee4e-b6f7-4386-ba57-d84c36839238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceea653-9c97-4c91-9cce-31950e7e7c71",
        "cursor": {
          "ref": "04464487-0f08-42a9-87d6-5780eca6782c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "da66e65e-3eb4-4c7b-9573-924f0743bac8"
        },
        "item": {
          "id": "0ceea653-9c97-4c91-9cce-31950e7e7c71",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a84e7f1-722f-4b9a-92f4-c5ec41d75578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba6fe61-0570-4fb1-a328-297fb9701e78",
        "cursor": {
          "ref": "97709be9-dfed-43bd-9243-47672ae79b01",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f135a961-4152-4781-9723-1d8a54c78b7b"
        },
        "item": {
          "id": "5ba6fe61-0570-4fb1-a328-297fb9701e78",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cf9ff929-b27d-40ef-8f1d-46fd62499991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c046094-a77c-4fe8-bdeb-52042667b9ca",
        "cursor": {
          "ref": "0375942a-76a0-4723-b9c1-24de880126e9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d1526917-5fde-4c2a-8ad2-43e7f9ac31d3"
        },
        "item": {
          "id": "8c046094-a77c-4fe8-bdeb-52042667b9ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c92e9d67-2eaf-42e4-b666-d767a801b083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f9225e-3c19-4cad-be17-fd54731ec61c",
        "cursor": {
          "ref": "41cb5b1f-8089-4551-b916-c13d852d04bc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ddfcc165-6fc9-4f5d-93e0-b741c78c5c4a"
        },
        "item": {
          "id": "59f9225e-3c19-4cad-be17-fd54731ec61c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6f4e80b8-170e-4120-959d-26e9d39de041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d350a434-9759-46bf-bc1f-e925b6100c97",
        "cursor": {
          "ref": "0e81579d-4817-4523-b115-633a80f3247a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76ebe62b-06d7-42ae-af5f-ffb5f8495ff2"
        },
        "item": {
          "id": "d350a434-9759-46bf-bc1f-e925b6100c97",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "16e61168-e270-4aad-b483-45c6ce3040cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2de553-112c-4c6a-993a-6939f43a1408",
        "cursor": {
          "ref": "628b73f2-2f7e-40ac-878b-960cd9e6c879",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1e46753e-4322-4575-a774-5efc3d222743"
        },
        "item": {
          "id": "be2de553-112c-4c6a-993a-6939f43a1408",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "156902f0-ea07-4829-9880-67ff0b95329a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b7ee31-143c-48f8-b4ae-b272145ba909",
        "cursor": {
          "ref": "cf3660af-6e85-4759-8056-7826ddf36aa5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bd14377d-6586-4f48-9281-238fff87fbc1"
        },
        "item": {
          "id": "95b7ee31-143c-48f8-b4ae-b272145ba909",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "829234d2-7794-499a-bbf7-972f24a29f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df82475-e9bb-449a-94c7-4143d59d8563",
        "cursor": {
          "ref": "1bec3638-ec68-499c-82bf-649c5ba27123",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "162f670d-2a32-4f4f-b55a-0950381d09ae"
        },
        "item": {
          "id": "0df82475-e9bb-449a-94c7-4143d59d8563",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2d363d41-5993-48d7-9513-87a3d103b189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4424064-abaf-40a7-ab4f-e298d9bebfe6",
        "cursor": {
          "ref": "786f177c-98aa-4bfe-927e-877a6ad0d48d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b5e454db-2268-47bb-8c30-092270893e66"
        },
        "item": {
          "id": "b4424064-abaf-40a7-ab4f-e298d9bebfe6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6c058db1-976a-4a7a-8f68-fa8e17180f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b091a5e-1fa9-4a1e-8e99-5f38ad6f1282",
        "cursor": {
          "ref": "4ad94c39-3bc1-4891-89fe-e774db65885c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cc733613-c3a5-4990-994a-99f10993c0a5"
        },
        "item": {
          "id": "6b091a5e-1fa9-4a1e-8e99-5f38ad6f1282",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ae0ed339-8ac6-4ecd-a5ec-9abab1458d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43d5c41-0763-4b8b-88b1-3b493846a672",
        "cursor": {
          "ref": "9f9222be-2abd-4e2c-a477-4e64f3a151a2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60eedec8-49f9-4ec2-9b71-a6b07a955aa5"
        },
        "item": {
          "id": "c43d5c41-0763-4b8b-88b1-3b493846a672",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "84e86877-e4e4-4eca-b142-372a61a44b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daa7cfa-ff38-4180-9831-bbadc36a6324",
        "cursor": {
          "ref": "5af764a0-783f-4007-b73f-0599616efa6c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7c346868-0349-4cf3-a2f5-3e64c75d9ff2"
        },
        "item": {
          "id": "4daa7cfa-ff38-4180-9831-bbadc36a6324",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c3bc6b7b-9c19-46ba-b05e-a6861a8c3d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a378c9d3-31f0-4f18-bf09-918cafeb6378",
        "cursor": {
          "ref": "2ce60135-d4d5-45e0-89ae-8c5f7e79d6ac",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2c42eb72-b51d-4e9d-8b85-7e859303449a"
        },
        "item": {
          "id": "a378c9d3-31f0-4f18-bf09-918cafeb6378",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1bdc135f-dbce-4f1f-93f7-08a33d6a1766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddce983-8276-4319-a2ca-cc2cfb928239",
        "cursor": {
          "ref": "afd65547-0bd4-42e4-b029-5fa2f6089f56",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "51ad31ed-4405-407c-9a9e-a4452981fc3b"
        },
        "item": {
          "id": "1ddce983-8276-4319-a2ca-cc2cfb928239",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4b46f21d-ea0f-430d-bd39-5e3b94c9f19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef22a401-ab6f-4dcd-9161-8293f789ad05",
        "cursor": {
          "ref": "12ea53b0-cd08-454f-a0c9-224809a75a74",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c37e5ad9-124a-4526-a917-394598087231"
        },
        "item": {
          "id": "ef22a401-ab6f-4dcd-9161-8293f789ad05",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4ef74d25-5a9d-4994-b6b6-3c2c196cc38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc9b6fc-cbc3-4c65-8b06-d5f6cd4b61d6",
        "cursor": {
          "ref": "4e00398b-63c0-46fc-a856-0b04dd35408f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d4a94fd9-a713-4adc-a997-7e9f77a04816"
        },
        "item": {
          "id": "3dc9b6fc-cbc3-4c65-8b06-d5f6cd4b61d6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e9d35032-0e91-419e-9b3d-5b92f140640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe80740-4aca-4626-bb4f-7711e1f02720",
        "cursor": {
          "ref": "25f38b66-cf5c-4345-a5f7-36f324633cc4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "50fab4c4-9894-44da-a2f0-5c4698f2ac5a"
        },
        "item": {
          "id": "efe80740-4aca-4626-bb4f-7711e1f02720",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "30a15431-a16d-46ec-ac68-2e467d797e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455e9415-e653-4c00-95cf-1f86df13881a",
        "cursor": {
          "ref": "c2aa0d9f-6d10-4e84-8065-27214c277175",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3c6d4159-fff5-4f8a-a034-9db6a167ea11"
        },
        "item": {
          "id": "455e9415-e653-4c00-95cf-1f86df13881a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9498264f-795e-4604-8998-3255da2df791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2760e38f-9358-445d-b85f-c63469086983",
        "cursor": {
          "ref": "8dfd715c-b6bc-4f8f-a979-72628bb81723",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bdd5d010-b1cd-4880-a684-774267b5d5a0"
        },
        "item": {
          "id": "2760e38f-9358-445d-b85f-c63469086983",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b1985531-1716-4d99-9e7c-0560f4de9857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99b3bec-6cc4-41d2-8b00-0880871934bf",
        "cursor": {
          "ref": "6d4136fa-0e64-4548-9b3b-652cb90e30e1",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "630c7a8a-1426-406f-bd84-01f43c77ff7e"
        },
        "item": {
          "id": "e99b3bec-6cc4-41d2-8b00-0880871934bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9ce4bdfa-3f5d-4c07-a739-657460fdbcf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85a737c-943e-482f-bd64-fbd62ca7c31d",
        "cursor": {
          "ref": "227e0776-1425-4870-b5b6-a2ff21e176d3",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "da6ceeba-2c3f-4e5a-8a3d-9014b8e75912"
        },
        "item": {
          "id": "a85a737c-943e-482f-bd64-fbd62ca7c31d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5b4bed5e-6200-4803-a325-714627c9aedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96608832-bd17-49bd-86a7-2775f7269aed",
        "cursor": {
          "ref": "bcc2e4f7-5c6b-4121-a3b6-d31e471d70f2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fceefae2-9bba-416f-89cf-def82a94e800"
        },
        "item": {
          "id": "96608832-bd17-49bd-86a7-2775f7269aed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5bea6c60-1c9d-477f-9bfa-b02d147cd3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c263d86-e245-4e9d-ae71-58fb6c14e012",
        "cursor": {
          "ref": "4cc1eeff-25c2-47cf-af65-7cfeb54e01b2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5689ec99-3a36-4029-afab-9dcdb66035be"
        },
        "item": {
          "id": "2c263d86-e245-4e9d-ae71-58fb6c14e012",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2bcfa437-6be0-4f70-948e-8b9d038aacf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088ff487-9925-460a-9fe9-b61fcad7f3e9",
        "cursor": {
          "ref": "ca0187a7-29f6-43d3-a9ed-9cef19331ae8",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d89e1a77-46b8-46da-ab10-96d5726d0104"
        },
        "item": {
          "id": "088ff487-9925-460a-9fe9-b61fcad7f3e9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "547ef21b-f9a8-4506-9b79-4141a6d7c7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f01f59-4945-499e-b7a1-746050433b9f",
        "cursor": {
          "ref": "1b06bfa0-6977-4356-8c3a-23bbca2ae794",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "60691724-f1db-4ac5-abaf-a6c6d81e678a"
        },
        "item": {
          "id": "55f01f59-4945-499e-b7a1-746050433b9f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "22b69845-56ff-4009-b409-40e351eab152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e90b7fb-9bdb-4b6e-9916-4abe631a5dd4",
        "cursor": {
          "ref": "7ef79363-f81a-488e-910d-4848d9ed9878",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6ebb22c5-aebc-464a-9e8b-b63232c706af"
        },
        "item": {
          "id": "7e90b7fb-9bdb-4b6e-9916-4abe631a5dd4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9a0908ba-32fa-4aae-b370-735a7eefe938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7adb3144-f982-42de-9fe0-83c4eb9caaac",
        "cursor": {
          "ref": "12c870c2-acdb-4045-bfb0-7c7362367149",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9b0dd45a-8f7b-46d5-8a59-ee154bdcf3b7"
        },
        "item": {
          "id": "7adb3144-f982-42de-9fe0-83c4eb9caaac",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "941fe0c2-942d-42a6-8d0e-c83053009b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340a1f88-c2d7-4c73-8ff8-1aa64fd428a3",
        "cursor": {
          "ref": "41341c9b-e2ae-4148-914e-3bb82f90261e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "16169e79-3b1e-4deb-a6b0-7599ed23e12d"
        },
        "item": {
          "id": "340a1f88-c2d7-4c73-8ff8-1aa64fd428a3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6d9abcd4-4cae-473d-913f-5f9a3b62ff21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3b3f58-50c5-4e0d-9678-8fdeefa9d742",
        "cursor": {
          "ref": "2f988300-f20f-49c6-8b57-d2f974320d0b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fb8f78f0-f164-4748-a026-20595560bb54"
        },
        "item": {
          "id": "5e3b3f58-50c5-4e0d-9678-8fdeefa9d742",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "276697f4-cd87-48f3-86a9-dde5c17499b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543d3ccd-8663-4792-a46f-446731f86004",
        "cursor": {
          "ref": "add4684a-e603-4d37-a67f-c1c2eff0140d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "de44c7dc-160c-4c65-9aa7-52c30d00a294"
        },
        "item": {
          "id": "543d3ccd-8663-4792-a46f-446731f86004",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "31f74765-bd3e-40f6-b613-b37420964507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7a8877-a988-4352-8e74-c2a1e714e51c",
        "cursor": {
          "ref": "a24fb71a-3912-470b-b84c-5e1d9a68d69e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "03184b1e-2990-48b0-90d7-a945dc51faba"
        },
        "item": {
          "id": "4a7a8877-a988-4352-8e74-c2a1e714e51c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0b7d616f-785c-4de9-b9bb-8c165bf50b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb94b1a-3fc4-429f-a518-837de5eca897",
        "cursor": {
          "ref": "cca7da92-9504-483d-b5df-b6087300df03",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "34e5f5d3-233c-4c04-bc01-c7e1afb7feb2"
        },
        "item": {
          "id": "2bb94b1a-3fc4-429f-a518-837de5eca897",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1dcdc8fc-92d7-4267-a28c-fe42c055b62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0236c09b-39e1-4602-92d5-41272c830b84",
        "cursor": {
          "ref": "9cdc3c8f-48cb-473d-a8dd-b6e730d00544",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c08f6620-74df-4604-bdc5-70bef317461a"
        },
        "item": {
          "id": "0236c09b-39e1-4602-92d5-41272c830b84",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "03028311-019f-4385-a2c6-e05f98b891be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461efc89-d6a8-4656-bf80-1eef79fe4426",
        "cursor": {
          "ref": "14144e3e-486f-46e1-b85c-c8504feea09e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "41e4be83-abae-402f-b4bf-c31749db535e"
        },
        "item": {
          "id": "461efc89-d6a8-4656-bf80-1eef79fe4426",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c5525289-cf42-43f7-ba4a-c6f25cb73ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a6d6b6-fe14-4369-a519-7f0ca907311f",
        "cursor": {
          "ref": "6b9ec589-7934-461e-9b83-8e1f2cedd7e4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0aca8bf1-5036-4db4-8549-dc25f1785eae"
        },
        "item": {
          "id": "52a6d6b6-fe14-4369-a519-7f0ca907311f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a3ee0316-0e45-42bf-b8d0-33d571b26843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2078fc06-f9fc-4602-aca5-a806b0a5ada5",
        "cursor": {
          "ref": "1e32cfd3-5bf3-4808-953f-84d42d858205",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "627f34c5-3f75-47cf-ab23-9813136ac2e1"
        },
        "item": {
          "id": "2078fc06-f9fc-4602-aca5-a806b0a5ada5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "320b97d0-0b03-4351-af52-cdd9ee6cf88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730e0bc4-3fd6-4d06-8ee6-05ef0bad80f9",
        "cursor": {
          "ref": "f820d2e8-6e51-4b1d-b76e-664a58047603",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "158b4402-4ec7-45fc-aad5-94c5377a9b16"
        },
        "item": {
          "id": "730e0bc4-3fd6-4d06-8ee6-05ef0bad80f9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0ea62f67-ceaf-46f0-83dd-d28beb8e1280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1f88d2-223d-4b2f-9196-0bfbfc0cdfa2",
        "cursor": {
          "ref": "f02831c5-077d-41f1-a825-f7d56a8cfc33",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e856dd61-fee8-4140-89de-fe06ebc09318"
        },
        "item": {
          "id": "3a1f88d2-223d-4b2f-9196-0bfbfc0cdfa2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6a5949b6-91dd-40f4-b54f-2b05c7f108ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a813ba17-6c35-45dd-b971-22884704c612",
        "cursor": {
          "ref": "e812734a-8b35-470b-ac9a-f4f0e02c4cc2",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ad1fd1aa-8fc1-444f-833b-4ad7a287aa18"
        },
        "item": {
          "id": "a813ba17-6c35-45dd-b971-22884704c612",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6c503534-b222-4e38-b1fb-f2a470944656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb89d5c-68ad-4970-98cb-805234161ac0",
        "cursor": {
          "ref": "245c986d-0d39-455c-9de5-7c346d3f8402",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8598505c-5984-4b27-82d0-65da9fe711bc"
        },
        "item": {
          "id": "3fb89d5c-68ad-4970-98cb-805234161ac0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e8836faa-8272-4dbf-a0a4-a09237ac3376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7962a341-5cdd-4fe9-ad3e-b366b4de97f5",
        "cursor": {
          "ref": "faa49d84-8c9f-4e2a-b949-788589cea93e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "96cba064-e4b9-492c-8c94-4fa69f7f0406"
        },
        "item": {
          "id": "7962a341-5cdd-4fe9-ad3e-b366b4de97f5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ea888824-d962-4b4c-ae64-cc4c838670a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc9c2fc-495f-42b5-924c-15ae78d23028",
        "cursor": {
          "ref": "0b876961-9cd0-4a33-832a-3690e32d45d9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ed12bec4-ecd2-4317-8f0f-64ee8a4de2b2"
        },
        "item": {
          "id": "acc9c2fc-495f-42b5-924c-15ae78d23028",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9ac20831-582c-448b-923b-2cabf3e65e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def8e8a7-1980-4aff-92a7-a4a2aa593422",
        "cursor": {
          "ref": "3215a1ca-f0bd-4215-b82e-a27e3d5f2865",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7b4b7e12-bdba-45f4-9155-8f6b854cb8f3"
        },
        "item": {
          "id": "def8e8a7-1980-4aff-92a7-a4a2aa593422",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cbfca8b8-2a58-45ff-844d-929156245e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4fb1cd-c830-4267-86d9-7075be7e057b",
        "cursor": {
          "ref": "c645f580-0fe3-408f-b6c2-9379e1579638",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "26ede2e6-627b-4c86-aece-08f72d6d1baf"
        },
        "item": {
          "id": "2f4fb1cd-c830-4267-86d9-7075be7e057b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "269124a8-89f1-4d00-b2d1-a34f7df35145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989475ba-0fea-45a0-a08c-4eeba5ffeefe",
        "cursor": {
          "ref": "ebcd7d13-a75b-4d9d-a4ce-5a42414529d1",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c64f17a0-2714-4ca8-8f28-aaff9642e960"
        },
        "item": {
          "id": "989475ba-0fea-45a0-a08c-4eeba5ffeefe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c80bbbd4-f965-4824-9d35-8d347b5867af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dc81a4-786b-4ef3-b82a-c45341989384",
        "cursor": {
          "ref": "1946cca5-a254-4775-b92b-a7cffec996fb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "495d586a-c5d6-47f1-b16a-2981d0a019c8"
        },
        "item": {
          "id": "61dc81a4-786b-4ef3-b82a-c45341989384",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2fbbf185-0f4c-41c1-a176-b6f9a28c8ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8fb6eb23-66f5-4b16-a09e-d871aa13c8aa",
        "cursor": {
          "ref": "e478c9f6-1ead-4252-859d-65e062f8c586",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cd12c98b-0e62-452c-89b7-24f4e19b15df"
        },
        "item": {
          "id": "8fb6eb23-66f5-4b16-a09e-d871aa13c8aa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2e601f6a-bd65-4b94-a8b1-e8f8ced0c783",
          "status": "Created",
          "code": 201,
          "responseTime": 14087,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "af885cfd-8320-4ba8-b021-74244b8650ef",
        "cursor": {
          "ref": "6d28baf6-d85a-4563-ba4e-57eef4b7be45",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "929e6da3-5a62-4b41-a602-800b55bd0111"
        },
        "item": {
          "id": "af885cfd-8320-4ba8-b021-74244b8650ef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "28d9ef7d-3095-4983-96f6-703be43b7b38",
          "status": "Created",
          "code": 201,
          "responseTime": 13548,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf6a832-4ef0-49e8-9213-c3fe1562126c",
        "cursor": {
          "ref": "a8895608-62e1-4c02-b2ab-2a90c8515351",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "343b7942-7d08-4a09-9405-61a7c21ce976"
        },
        "item": {
          "id": "6cf6a832-4ef0-49e8-9213-c3fe1562126c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "35a4d7ef-ebd0-4200-a2a6-0bce3f391445",
          "status": "Created",
          "code": 201,
          "responseTime": 12774,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1012106-fc80-4c6b-a10c-7b383c9af9fa",
        "cursor": {
          "ref": "998e6235-fee9-49f7-938b-d123f22a8fe4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a17b4ff7-cc12-4223-9fe6-49441c78ab2d"
        },
        "item": {
          "id": "a1012106-fc80-4c6b-a10c-7b383c9af9fa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "290709d1-a6db-4fb6-9988-3150d6c1a140",
          "status": "Created",
          "code": 201,
          "responseTime": 13620,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17e544c-9d58-4440-ace8-9376803af91f",
        "cursor": {
          "ref": "dce58d60-56a1-44f3-aeb9-1abf741cf2a3",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "72722092-2a65-4c30-9737-956a1096be04"
        },
        "item": {
          "id": "b17e544c-9d58-4440-ace8-9376803af91f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5e02f8f2-fa45-4674-8067-5523da9a7589",
          "status": "Created",
          "code": 201,
          "responseTime": 12928,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-05T00:43:59Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-05T00:43:59Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "16b374ad-4e60-45a7-b5a5-858f6511f41c",
        "cursor": {
          "ref": "e917c835-46e2-4e0f-b0e5-9865a4715d8f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63a97f7b-202b-4058-8bc1-c74783cf6ccb"
        },
        "item": {
          "id": "16b374ad-4e60-45a7-b5a5-858f6511f41c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "27b3afd0-d787-49f0-8f75-c4cd33a9cc16",
          "status": "Created",
          "code": 201,
          "responseTime": 13353,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ded3bd-cb34-4b00-8cc3-f4ae5acab953",
        "cursor": {
          "ref": "09bb41e4-b1d7-45e1-8865-58359460bd08",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b53828dc-36c3-4c21-907c-0ed875e26772"
        },
        "item": {
          "id": "60ded3bd-cb34-4b00-8cc3-f4ae5acab953",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "32a962c0-2553-4327-9167-c398537a75c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034f650e-7161-4c2a-8731-77858100464a",
        "cursor": {
          "ref": "a97016b6-7f8c-460b-8771-d86f29ea025c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d5bbdd69-c350-4980-8b2f-390441959382"
        },
        "item": {
          "id": "034f650e-7161-4c2a-8731-77858100464a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "508feb34-be63-4762-bd65-8c775571df0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d81a7cc-8764-4b1f-9160-e8ed8f5967fe",
        "cursor": {
          "ref": "97820632-226f-4160-abcb-c8c1b7a57498",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "62770222-eb42-494d-91d2-99d96c08ba42"
        },
        "item": {
          "id": "9d81a7cc-8764-4b1f-9160-e8ed8f5967fe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "81fa5ac4-ccf8-49cc-9c2d-2a53f7062cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638486bd-c862-47d7-9ad0-de6b8e4df94e",
        "cursor": {
          "ref": "5603a716-4a46-43ad-bae8-9dd50b2938e3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "944f6904-8ce3-4ce0-9def-db8d243718e6"
        },
        "item": {
          "id": "638486bd-c862-47d7-9ad0-de6b8e4df94e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f7e1a481-483c-4782-992b-2e24e87801c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24595d70-657e-4b5d-8133-d8d062029165",
        "cursor": {
          "ref": "3e13ba7a-20ff-4e21-b601-7e4adb3018dd",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b888fb3a-b682-48d0-9433-e33545cabc01"
        },
        "item": {
          "id": "24595d70-657e-4b5d-8133-d8d062029165",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aff7bb64-e966-42c1-bceb-06469e463e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d014868-7f0b-4c5e-a635-24e72fe5aad3",
        "cursor": {
          "ref": "81ac28bf-de02-47b5-9683-23b8b8e07038",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "69b77b03-362f-4aa1-9bbc-a54a927a0407"
        },
        "item": {
          "id": "4d014868-7f0b-4c5e-a635-24e72fe5aad3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "156d03c6-ba3a-478b-a750-b0ed0b433c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31a8137-f755-446a-a444-c0e3baeb2bd8",
        "cursor": {
          "ref": "29f6d4d3-19f7-481d-bf0a-e7f4aa36815e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1d739947-d432-4eb2-bd70-23f39775b878"
        },
        "item": {
          "id": "e31a8137-f755-446a-a444-c0e3baeb2bd8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4cc305b2-05fb-4c55-932c-24b0b8ca5e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7f035a-5410-4553-88f6-235604386c38",
        "cursor": {
          "ref": "4a399a98-a970-43fc-a9dd-baf71befad3a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "69876a41-b34d-40e5-b8bc-818e335f2e86"
        },
        "item": {
          "id": "2c7f035a-5410-4553-88f6-235604386c38",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "449fdb0c-629e-4bab-9c1b-4bf47ada6aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fe308c-e54d-4cfa-82a7-61f81a75f872",
        "cursor": {
          "ref": "b71aea83-3a54-4e7a-9888-705580f745d9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f4e151a5-5948-4c96-ab5d-fe9887ab7ab2"
        },
        "item": {
          "id": "16fe308c-e54d-4cfa-82a7-61f81a75f872",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5af9107b-2bc7-404c-93ae-e9c4c39a1650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c827fafb-e8ba-4759-8020-f783788ddbc3",
        "cursor": {
          "ref": "b30741d1-8a38-4664-8e65-383b0b5eaa92",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "71cf6b97-e79f-472f-8989-14f2c8c3cc13"
        },
        "item": {
          "id": "c827fafb-e8ba-4759-8020-f783788ddbc3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "45db859b-b02a-4170-901e-8f7fc5c84c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3919b6d4-f8a7-4170-bb7c-c6ad20fcbba1",
        "cursor": {
          "ref": "90c997c6-3487-402c-918d-e5af27764ad3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "65fc23e2-ca1c-4887-9b8c-0b58c6be9ea1"
        },
        "item": {
          "id": "3919b6d4-f8a7-4170-bb7c-c6ad20fcbba1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a59c37f8-97f6-4dd9-b50a-cfc34f9ffa0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec956723-885b-4b5c-8ac2-cf37535f24ac",
        "cursor": {
          "ref": "35e4d2b8-9b14-484b-962c-c99fd4bb06de",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7148e8ac-fad3-4ac3-930a-a2262248026a"
        },
        "item": {
          "id": "ec956723-885b-4b5c-8ac2-cf37535f24ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d260c3f-f37b-4201-ba8e-d5bc9bea117f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86b1449-288c-42f3-972f-b618bb83b006",
        "cursor": {
          "ref": "be14ac00-d0c8-4a1e-8314-aa232dc8fa15",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0fc7d415-2f3f-4ced-a799-477d21de18f9"
        },
        "item": {
          "id": "a86b1449-288c-42f3-972f-b618bb83b006",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "23bb05da-d53a-42ec-abd3-0b89e3be8d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372a8bce-dd4e-4e78-ab36-745d29d635c8",
        "cursor": {
          "ref": "563c274d-63fb-4e53-870b-78f467a7acd3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "94962383-2ea8-4747-ae5e-fd05c52d6fab"
        },
        "item": {
          "id": "372a8bce-dd4e-4e78-ab36-745d29d635c8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cb33f664-3a0f-457e-849e-634424040245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6916bb80-8184-4e02-9b72-8de4101b5fd3",
        "cursor": {
          "ref": "f3b1b5a5-c3b8-418e-898e-9f944dc96c6d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ac14cdea-fc20-4a09-ab68-58750a5c5fac"
        },
        "item": {
          "id": "6916bb80-8184-4e02-9b72-8de4101b5fd3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ef878ef3-c612-4ccc-9983-6d9cd0097732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4f3ef5-93fb-4718-a788-d6811865716a",
        "cursor": {
          "ref": "003d5055-e596-4aeb-8d06-21d7fff0fa84",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1cd3c9c0-f021-400f-8ba7-441f4aaf969d"
        },
        "item": {
          "id": "8b4f3ef5-93fb-4718-a788-d6811865716a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "44a9eef8-080a-4c5a-abe2-f79121106581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d891a33-d9c3-4d56-85fb-b30dc7a500bb",
        "cursor": {
          "ref": "22f7e7f4-8cbc-4de9-bfe7-12ff7a994f20",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "30451720-37b3-46b7-822e-3542c959a657"
        },
        "item": {
          "id": "3d891a33-d9c3-4d56-85fb-b30dc7a500bb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1937acc1-d7d6-4fe8-a661-dcb303605aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c032de3e-618a-4a70-81aa-9202096a82a0",
        "cursor": {
          "ref": "c029194f-5c2b-4737-b3bc-6cb7fe873a6f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2eedf4cd-b1fd-49e7-a36d-ad6f74e0c50e"
        },
        "item": {
          "id": "c032de3e-618a-4a70-81aa-9202096a82a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3b15b17f-588a-4df7-9549-d1a07f27843e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb9d27e-27d5-456b-8255-8238b3b87ea2",
        "cursor": {
          "ref": "3f0076a8-8bbf-4491-a843-197603a20c7e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4d817b65-4581-4a1b-809c-1caa770f3bd6"
        },
        "item": {
          "id": "0fb9d27e-27d5-456b-8255-8238b3b87ea2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "67d49afe-0e98-49ad-b58a-fc604b1c5088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cec0b7-5712-4d31-83f7-126c51dd709c",
        "cursor": {
          "ref": "31551ba3-2872-4252-9bed-14afdf52a43a",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "61040bf5-ef9d-4cf1-bce7-731253e502b4"
        },
        "item": {
          "id": "18cec0b7-5712-4d31-83f7-126c51dd709c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a1fed0ee-ce47-4a29-b171-c3f3e81c1781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b46702-708f-4938-8e7a-8a34e768ec3f",
        "cursor": {
          "ref": "0f39fabf-020e-4002-9476-367b36b4b3db",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "70f6aa45-926c-4184-b3da-d7503cc0151b"
        },
        "item": {
          "id": "84b46702-708f-4938-8e7a-8a34e768ec3f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a72d5258-ffa5-48c1-9492-bfa844f17085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6096918e-0365-49f8-9cec-16053ff4e013",
        "cursor": {
          "ref": "aa6704ad-d903-4551-ab97-932449fbcc5b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a6a4a75b-e3fd-408a-adf3-98f3b3b83411"
        },
        "item": {
          "id": "6096918e-0365-49f8-9cec-16053ff4e013",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0ca9c210-f9a0-4be7-9812-aa5c1ead28e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b6509-11e8-406c-99dc-71d279570806",
        "cursor": {
          "ref": "e97833d4-8569-44ef-9c0e-1bf5bab4534b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6a7fe6bc-239e-442d-bd0a-1be43d73fe05"
        },
        "item": {
          "id": "794b6509-11e8-406c-99dc-71d279570806",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab2ba3f7-11f9-4fde-b7b0-369c1caf88d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db643760-a4c2-4e2f-8e13-622ffb1b06a5",
        "cursor": {
          "ref": "2c166f25-73a5-4d45-b132-b76cb1be1947",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f0679e64-0a47-4f82-a4c1-d0148143a993"
        },
        "item": {
          "id": "db643760-a4c2-4e2f-8e13-622ffb1b06a5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8c62b168-745e-441f-99e2-f7c99a88cb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334c3d9c-2e9b-46fd-99a6-26d0409e5664",
        "cursor": {
          "ref": "40e9b559-9016-4575-8388-43cae142ca0b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "047373a6-7dfb-4ac9-bb19-8dcb96f84e12"
        },
        "item": {
          "id": "334c3d9c-2e9b-46fd-99a6-26d0409e5664",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d7da4594-b00b-4156-ad20-fc429c138279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4269a5ec-d76d-415d-a8c8-4f6986f39109",
        "cursor": {
          "ref": "d2bb543d-53c3-4436-bbf3-299f9abf08a8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f485c88a-4cf2-46f5-b2f2-2806d0f2dbc8"
        },
        "item": {
          "id": "4269a5ec-d76d-415d-a8c8-4f6986f39109",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f241c944-c8ef-4155-8d62-581ab4444bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3009d9d1-6098-4b26-9b48-83a5c9b4c0cf",
        "cursor": {
          "ref": "232e0901-46bc-4083-aecc-acdd10955ab8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3d0bff08-27ca-4db4-8dd6-bc95b816e161"
        },
        "item": {
          "id": "3009d9d1-6098-4b26-9b48-83a5c9b4c0cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "92a54a43-4662-4a74-a772-5d7c77db470c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276d2f3d-9c46-4ad2-af11-bc89da7a2383",
        "cursor": {
          "ref": "f0243754-66d4-44b7-bd8d-b9cb23b4a3e1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bbc3f9bd-1ee2-4e84-a37e-9cc7b1d06680"
        },
        "item": {
          "id": "276d2f3d-9c46-4ad2-af11-bc89da7a2383",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ba4705e2-97d4-4fef-a1f8-3986113b43a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b805fad3-a680-427d-ae85-5fddc941fb0f",
        "cursor": {
          "ref": "78fc54c1-3e57-4d0f-973d-a88a2c5589e3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3d6f4371-0342-456a-a95b-56f287e85799"
        },
        "item": {
          "id": "b805fad3-a680-427d-ae85-5fddc941fb0f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9a78e166-f4af-4328-9ca6-9cc2acd3cc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cc37c2-d1a8-4d68-93b3-53a550faf580",
        "cursor": {
          "ref": "4c8fce07-0f58-417c-a4bf-f5ae1b8e4289",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "26c72aa5-0316-49eb-9f6c-f0bc0e968704"
        },
        "item": {
          "id": "67cc37c2-d1a8-4d68-93b3-53a550faf580",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "28683108-d058-4783-9a63-47ae79b2ec7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe3130e-803f-4464-a8d5-2d0f08c2ab51",
        "cursor": {
          "ref": "3e9c8292-2418-4d58-afa8-6d29ef952f1c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "917d7d0a-35fd-450c-acb6-10d5aabebf33"
        },
        "item": {
          "id": "cfe3130e-803f-4464-a8d5-2d0f08c2ab51",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ddf57374-4c3b-45b3-a5cf-e086d13d1ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb73587-12fd-494a-84d3-058cf45b32c0",
        "cursor": {
          "ref": "4965b640-05b8-42d3-9948-1a22df5a8c90",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "050944db-a6f5-4728-a1c6-d8fbaad729d4"
        },
        "item": {
          "id": "0eb73587-12fd-494a-84d3-058cf45b32c0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f6990933-22d3-480c-b35a-5ab2cb4b9e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65509225-500a-41b3-84de-7dc7ed1f0297",
        "cursor": {
          "ref": "be030cb6-6b1e-433c-8530-ba937ee24b78",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "374866e8-6c14-4f96-95cf-f9820557d3b5"
        },
        "item": {
          "id": "65509225-500a-41b3-84de-7dc7ed1f0297",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2880e445-e782-486f-b3a0-87065e5a4920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ba20b6-7acb-4064-9633-b2e8376d0bd0",
        "cursor": {
          "ref": "d2498394-1365-4e9b-8fac-7328abf9a179",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c55cee29-028e-46d7-90e2-ea1c23662661"
        },
        "item": {
          "id": "26ba20b6-7acb-4064-9633-b2e8376d0bd0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "13a6e695-e1b6-41ed-ba61-3ab6ea4eb2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a463dcab-07a7-48fa-bf94-5c07edda2beb",
        "cursor": {
          "ref": "39bd1fd3-5a5c-4120-83c8-f78904907d70",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e4b0e05f-2026-4a39-a225-af15634eaf2e"
        },
        "item": {
          "id": "a463dcab-07a7-48fa-bf94-5c07edda2beb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0fa93a12-f9d0-4322-8285-e02dac05fe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b730bf48-a5ba-4a8e-a35e-fee11b57c94b",
        "cursor": {
          "ref": "93cbaad1-b352-4adc-9cd1-c7905049980d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0f77e8b7-08a9-4636-a466-1e6d6fbdb6cc"
        },
        "item": {
          "id": "b730bf48-a5ba-4a8e-a35e-fee11b57c94b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "87d633a3-6de6-4cd1-bc6c-54de5b41b412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2227a14-4997-4a47-8c29-20dfef00f150",
        "cursor": {
          "ref": "4706d02d-3fe5-4c7f-af5e-886539436b79",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5a349905-82d7-47a2-afa3-d69400ed7992"
        },
        "item": {
          "id": "b2227a14-4997-4a47-8c29-20dfef00f150",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e8f1d688-7871-42f2-8804-16b7dfa07982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c453f183-2a2c-4729-83fe-8b3d6ce84d81",
        "cursor": {
          "ref": "a8ec305e-a119-490e-a866-2bbe75f202df",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3eae3924-8c1a-4808-8f14-0aebabb46263"
        },
        "item": {
          "id": "c453f183-2a2c-4729-83fe-8b3d6ce84d81",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fce6d6da-a24b-4989-bb0d-7e1aa272cb4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a37ca8-df8b-4cd6-9dc7-ff241ceb77f0",
        "cursor": {
          "ref": "b873da26-8896-4000-bc86-67b85c9dfcbb",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dbfcb919-fe2a-43b9-b6bb-833fa645ad46"
        },
        "item": {
          "id": "c6a37ca8-df8b-4cd6-9dc7-ff241ceb77f0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9db101f3-c1c6-4709-899d-784895943e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0884e1-b839-4be6-a423-78344e3d2d49",
        "cursor": {
          "ref": "533e7c32-caf6-4fd0-8f15-5ef43b525350",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5b5c7612-5fd1-479b-9922-eac74e0a7eed"
        },
        "item": {
          "id": "ad0884e1-b839-4be6-a423-78344e3d2d49",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b1275b08-b706-4ec8-9341-69480843410b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613813b9-19ee-4a79-97d6-e6a986d8f942",
        "cursor": {
          "ref": "28199a03-86fa-4fd3-ab4e-5bb629faf061",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "093720ff-0169-49a6-ba7f-7edd6dcd678b"
        },
        "item": {
          "id": "613813b9-19ee-4a79-97d6-e6a986d8f942",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "863fe410-92a2-41da-a342-713ea6a75628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f85bd34-5d7e-457e-8481-1b0231cf5f9c",
        "cursor": {
          "ref": "e201f633-0c26-4827-a524-f9e30245d797",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "619530d9-2c36-404b-b44e-323e6e8f4524"
        },
        "item": {
          "id": "5f85bd34-5d7e-457e-8481-1b0231cf5f9c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6ff6a4d1-2b77-475e-b6c4-0c55c397f28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bba8d3-549d-4045-9c39-3aa8e68ce4e8",
        "cursor": {
          "ref": "afef37c1-50e7-4f3e-98a3-c48fd68be469",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fa301465-4400-442e-8a25-086d1c4976f9"
        },
        "item": {
          "id": "47bba8d3-549d-4045-9c39-3aa8e68ce4e8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a304cdb2-3dcd-4d9b-b645-dc8b464adc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471546a2-8713-42a4-ab16-be63402c370f",
        "cursor": {
          "ref": "005586aa-f104-4874-97d2-2d5c78c6fc9c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "425ad461-ff60-4c22-b4c5-f8d0f8bb909a"
        },
        "item": {
          "id": "471546a2-8713-42a4-ab16-be63402c370f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7bc5fc58-4b05-4b5f-812e-6e80bfba5b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b67b3f3-dd37-4ad2-8605-89809f86931c",
        "cursor": {
          "ref": "917f8f82-f5a7-4c41-b47c-c89f6c382410",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9ee8406c-4ece-4f5b-b517-be76361850d1"
        },
        "item": {
          "id": "6b67b3f3-dd37-4ad2-8605-89809f86931c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8be97a88-b663-4132-83a1-1807e730bd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e457e012-c73c-48c0-acae-cec98d778629",
        "cursor": {
          "ref": "ae9e701c-7a1c-48bf-8836-bc9e2b80db8d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e5993c03-3823-4b8c-9c97-1aa36763d350"
        },
        "item": {
          "id": "e457e012-c73c-48c0-acae-cec98d778629",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "16f5a3f7-f0a9-44d3-9976-2ebd17e5c112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f243de49-9ebf-4417-8574-5343be4f562e",
        "cursor": {
          "ref": "02c1f5f2-f55e-4399-ba36-419415b6854a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "becc70d6-48ec-4294-9053-6d860c7af913"
        },
        "item": {
          "id": "f243de49-9ebf-4417-8574-5343be4f562e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0b9b83f1-6c82-4d21-874f-d442b21f151d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c260d375-008f-4284-8931-8cc087d6d851",
        "cursor": {
          "ref": "82850d6c-90e4-4f73-8470-25297eddba24",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0b3cca9a-b4bc-4119-ab7f-f2453c25c5af"
        },
        "item": {
          "id": "c260d375-008f-4284-8931-8cc087d6d851",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "47bec753-b40d-4cd4-813b-9fd7c9725ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f25c72-b03a-46a6-88e7-86e127599846",
        "cursor": {
          "ref": "b667cffd-b1b7-4a57-8864-c104f2ca3f26",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f428a7ca-fd7c-4730-91ef-2886ffe232c0"
        },
        "item": {
          "id": "c1f25c72-b03a-46a6-88e7-86e127599846",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f11bd3ba-51d1-4f39-aef8-0760f0acda09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32defecc-7a15-4f36-ae2d-a4dbdbc1a800",
        "cursor": {
          "ref": "640de672-5615-40d1-a11c-14dc4e4ee266",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c1a5d0c3-2f43-40d4-bbc8-5c89dd152165"
        },
        "item": {
          "id": "32defecc-7a15-4f36-ae2d-a4dbdbc1a800",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2628ab19-1b81-4ffa-91db-b6ba88b256c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f84c1f7-9721-41b3-ab58-7c02bb3cdf05",
        "cursor": {
          "ref": "1455fee1-8cd6-40a5-a70d-cecdd640dedb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f4c88d35-c4fd-4a51-a1a4-afa473501635"
        },
        "item": {
          "id": "0f84c1f7-9721-41b3-ab58-7c02bb3cdf05",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a7c54c29-0ffe-4308-8445-a5c817a37221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d68b587-fec0-4141-b3ef-8acf63a295d7",
        "cursor": {
          "ref": "41b9b87f-2c11-4716-95e5-e9a685b5523f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "51db1b0c-9f3c-4095-9d60-9f7d2fad12e7"
        },
        "item": {
          "id": "4d68b587-fec0-4141-b3ef-8acf63a295d7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "508ed172-f3f9-4a95-8287-77a1830526a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f69ef98-e176-4d38-9690-91747d6ece78",
        "cursor": {
          "ref": "3c0a2ae3-68d2-44fb-b9e7-1112e5d7bc11",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8968ef13-8ef7-4320-a959-4f90dbce7736"
        },
        "item": {
          "id": "3f69ef98-e176-4d38-9690-91747d6ece78",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e3d5f0d3-9a1a-49e3-b954-a30e0f8916c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501c146c-69bb-4cc3-a2d2-d9f18db3ab17",
        "cursor": {
          "ref": "a9e62d52-ad1e-482c-be84-6f48e68194c3",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca7d1283-52f8-4690-9a50-fad20adf7210"
        },
        "item": {
          "id": "501c146c-69bb-4cc3-a2d2-d9f18db3ab17",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1e753dd8-8f27-4f84-bacd-d36d408402ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bef6683-4657-4634-b790-8d2e68a251b5",
        "cursor": {
          "ref": "5780e387-9106-4b19-8618-edd8f74d662e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9c184807-8274-4480-8cf3-b84c23ffe1f4"
        },
        "item": {
          "id": "0bef6683-4657-4634-b790-8d2e68a251b5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "66696dae-0449-4d18-9b5b-be3ac39c7136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3489f7b5-030d-45ae-b633-6a8b2344af30",
        "cursor": {
          "ref": "dfdadcf4-5432-4522-948a-19099883639e",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "78475d7c-63e2-4925-8756-8274deba0601"
        },
        "item": {
          "id": "3489f7b5-030d-45ae-b633-6a8b2344af30",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "71ab31a2-2ffc-4020-95b3-49385e2293b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceb53d6-fd12-4c6e-8f30-32b59787b6ae",
        "cursor": {
          "ref": "0c3bd703-8713-4f68-b6d8-5c4f755a0b5c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e97afc47-86a9-486a-b32b-1034cbde56e7"
        },
        "item": {
          "id": "8ceb53d6-fd12-4c6e-8f30-32b59787b6ae",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b20d9d61-48f3-4639-a638-99a911754d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13eea975-0567-4965-a698-c6877f029a05",
        "cursor": {
          "ref": "41209101-d100-4fc7-b41a-8eb095967831",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "10b82abb-9b82-4370-b70f-13b5891477e6"
        },
        "item": {
          "id": "13eea975-0567-4965-a698-c6877f029a05",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cfe3221d-ab91-4026-bdcd-fbca8404e000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f227063-25c7-4611-b532-d60bb2fb24e3",
        "cursor": {
          "ref": "3c80301f-e555-4e61-a435-4f0ed2565190",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5513d65a-06c7-43ef-b898-80a19a039390"
        },
        "item": {
          "id": "4f227063-25c7-4611-b532-d60bb2fb24e3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2ff81c01-a1a6-4b70-84bf-104b9dde2881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9943a0bb-cefb-4b03-b4d7-7d930233dae8",
        "cursor": {
          "ref": "b5f8afe5-1d45-4e8b-8471-38e8906f2b5b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c21a1ab7-4707-4234-aa8d-bb780c0776b0"
        },
        "item": {
          "id": "9943a0bb-cefb-4b03-b4d7-7d930233dae8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "44d39a11-880c-47ae-b81a-22d38ac061a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebea29d0-b9d5-4d28-8920-0019415ee620",
        "cursor": {
          "ref": "211b6306-368a-442e-b6c9-7b8524e12fd8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0a3e55e6-0c72-459a-a90a-821f562deb11"
        },
        "item": {
          "id": "ebea29d0-b9d5-4d28-8920-0019415ee620",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2472632a-7d22-425a-b6d2-7b23898ed2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80172438-0333-409f-ba01-e18acb066aa7",
        "cursor": {
          "ref": "b35fd379-4278-40ab-8fe0-85e7238ca7e6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "33000f8a-91e7-4f24-ae5e-25e8aea6db1b"
        },
        "item": {
          "id": "80172438-0333-409f-ba01-e18acb066aa7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2d16f3dd-eb3f-4338-9069-6b8c643381f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b045fa5-de71-4908-a7fa-4bab8cb1e686",
        "cursor": {
          "ref": "e9db4d46-775c-4053-b8fd-0f7e8b728cd9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cd0d6770-29cf-4b8d-be19-600b8b63055c"
        },
        "item": {
          "id": "3b045fa5-de71-4908-a7fa-4bab8cb1e686",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "87fa8347-ed06-4cbe-8389-68cd3e510188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8db66ad-4c5b-47c9-be08-2976abf8b0bb",
        "cursor": {
          "ref": "38d6f4f6-123e-4ac0-a0ab-5410c07fe77d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "314dec72-492e-461e-9fb9-91b2203da2de"
        },
        "item": {
          "id": "c8db66ad-4c5b-47c9-be08-2976abf8b0bb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa52b65a-577c-4d2a-bab6-cb6ce15e72d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98932b65-6ab2-425b-a905-9cc1e19d1287",
        "cursor": {
          "ref": "adf17624-eea9-4ca7-ab2d-c4d140747ec6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "debef42d-b326-4784-827d-18526f17fd5d"
        },
        "item": {
          "id": "98932b65-6ab2-425b-a905-9cc1e19d1287",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "961d6bcc-ff5a-4833-ac5a-8df76d6b846c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a000233-0f62-4d81-830c-de3f881c7607",
        "cursor": {
          "ref": "53c7b482-993c-434c-8c69-ff5ea0450746",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e9f34ca3-ed51-4ce4-ad33-b9411e80c9cb"
        },
        "item": {
          "id": "9a000233-0f62-4d81-830c-de3f881c7607",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d4f3a5f7-b5b6-4be4-9c15-007d179478f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c84afe-ee22-469d-9703-db0459ae08f8",
        "cursor": {
          "ref": "a7e8b875-7495-4e20-9673-36a85418e476",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fda71994-7994-4e66-abd4-e9844ad37d05"
        },
        "item": {
          "id": "d5c84afe-ee22-469d-9703-db0459ae08f8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d9c0f582-986f-4284-93a4-d061833a5d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c9686e-8aa3-4b8d-acd9-52511375b449",
        "cursor": {
          "ref": "6706ca2b-b2c2-40e9-8cb1-cef74ad9eb22",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8d55ff66-62a0-4f93-9eef-7ee151bb1f24"
        },
        "item": {
          "id": "17c9686e-8aa3-4b8d-acd9-52511375b449",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c1ada6eb-b509-4478-835f-713211d542f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f52618-92c3-4292-bcc6-1dadc06e6be2",
        "cursor": {
          "ref": "abb62fc6-15cb-44a0-96a4-5b35423b587d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cd54faf4-6285-4496-8a81-42d62d49cb85"
        },
        "item": {
          "id": "c1f52618-92c3-4292-bcc6-1dadc06e6be2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5db45425-1a8c-4b32-a6d4-9c7760b13e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b0dc2d-6087-4f4c-a367-ff62540e83c3",
        "cursor": {
          "ref": "d9e6a40f-7b3d-4271-b886-6333decfb30e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1457f4e3-47eb-40ca-bebb-53928f2e6e0e"
        },
        "item": {
          "id": "61b0dc2d-6087-4f4c-a367-ff62540e83c3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7800b466-9dbe-4d99-84c9-2e89a83a080d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb4ee03-ba8f-4b0f-a4c7-30f1440b68c0",
        "cursor": {
          "ref": "62127f22-cdf8-451a-97e3-b3e3eef8b20f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "866dfe9e-8a2f-45be-85af-fb8cf19b5b06"
        },
        "item": {
          "id": "7cb4ee03-ba8f-4b0f-a4c7-30f1440b68c0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "af969481-5acc-4c55-8fc1-3be8a1200f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fef19f9-fcaa-4cfc-b4c4-876a3f65b8ff",
        "cursor": {
          "ref": "b032bff4-b5bf-47d6-84fd-760554e8fc77",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fff46187-3dcf-4e2a-b872-47115e634d10"
        },
        "item": {
          "id": "3fef19f9-fcaa-4cfc-b4c4-876a3f65b8ff",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "fa3b2b06-7828-4585-b856-ccaa77a6f3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18380826-2a39-4787-a860-6b6f50289074",
        "cursor": {
          "ref": "d015b966-9ad3-499d-aac9-eeb89dbd21e9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5d085f31-242f-406d-b2b3-2576ac40b3b8"
        },
        "item": {
          "id": "18380826-2a39-4787-a860-6b6f50289074",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d2967752-5e20-4e1f-8604-a63db8582738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892e3a45-1e28-431a-9358-2d438851018b",
        "cursor": {
          "ref": "6b8d618d-07f0-438c-b96e-37569dd51ddd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9a2ea154-d39b-4e10-be8c-b7fe58fb35fc"
        },
        "item": {
          "id": "892e3a45-1e28-431a-9358-2d438851018b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c216bf2f-0d17-4559-af21-62c0583a214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896a0abc-8f3d-41a3-a1f2-820d1d19b591",
        "cursor": {
          "ref": "3d3a1d59-5fcb-451d-84a6-0e6e0d6d4225",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7cce4b2e-4222-4a4c-865b-30e7fddf3893"
        },
        "item": {
          "id": "896a0abc-8f3d-41a3-a1f2-820d1d19b591",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e6c7a5ef-43aa-4379-b9e8-1a4744ce20e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf38ee9a-0c9e-44d8-b1bb-1812040ae630",
        "cursor": {
          "ref": "2a754fce-979e-4d65-ab89-e57f8a161449",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f20e6bf3-411e-44d2-b406-db1a5cce2755"
        },
        "item": {
          "id": "bf38ee9a-0c9e-44d8-b1bb-1812040ae630",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6174a54f-68ad-4a83-8dbe-4760e6e57544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43548506-7424-4d85-bd22-5ddc20c0177e",
        "cursor": {
          "ref": "fafb8fb2-efa7-4f1a-bae3-90dbd2e15050",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fae09dc1-30f0-450d-942c-4aab18a8103d"
        },
        "item": {
          "id": "43548506-7424-4d85-bd22-5ddc20c0177e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c04c24ac-cb0a-43dc-a858-46915c8256fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe9b508-e407-45ff-a192-03773eb4c304",
        "cursor": {
          "ref": "836c2263-aa0e-4324-937a-b70f5da6166b",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1636fc43-4f67-44ec-bfd8-d13c191ca97b"
        },
        "item": {
          "id": "1fe9b508-e407-45ff-a192-03773eb4c304",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a55fa8fd-f91f-436f-bbef-7b40ab4e6e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd115a3-79be-45b8-bf61-2f0992f114ac",
        "cursor": {
          "ref": "cd05c5e5-864e-46b9-ae58-664b39ac02c6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1b222e23-a917-4dde-98cf-4eb5115ec164"
        },
        "item": {
          "id": "5dd115a3-79be-45b8-bf61-2f0992f114ac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "51b643b2-2030-4d78-8644-e5185815c61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27e9840-d074-4ec4-85d2-7ba37344a8cc",
        "cursor": {
          "ref": "ed26d48b-5c3d-43ea-b522-236bc54a6a69",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "13d69698-ac72-4a65-a156-c7efb5b17b90"
        },
        "item": {
          "id": "b27e9840-d074-4ec4-85d2-7ba37344a8cc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bab5c43c-eecf-4671-9e0e-7a0115029849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8046da47-142e-495b-891d-6ca55e512d8a",
        "cursor": {
          "ref": "02741805-c21c-4f0a-a2de-5ea4b199d2ab",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ffd37f14-bb16-482e-82cb-1ec22871e4e8"
        },
        "item": {
          "id": "8046da47-142e-495b-891d-6ca55e512d8a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0b6433ca-514a-494b-b7f7-ae2a4eb9985b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a067afac-87d0-487d-9b68-fe137339b14d",
        "cursor": {
          "ref": "5c3bec8d-6f42-4ede-82d0-3c2f417701bb",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "739624d9-89ab-4988-b68d-f1381b27a182"
        },
        "item": {
          "id": "a067afac-87d0-487d-9b68-fe137339b14d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f66a933a-8fcc-4db6-918b-74b5d9aa02b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023a9830-3c91-4e29-b048-7ba92e7d9730",
        "cursor": {
          "ref": "60799adc-1f05-426c-80a8-0b90f4a0c6c3",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "99fa8661-fa1e-4f01-877c-887a5c878cc5"
        },
        "item": {
          "id": "023a9830-3c91-4e29-b048-7ba92e7d9730",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5796ebb8-b5f0-4182-859a-b438b380d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13366cc4-a177-4821-8d4f-e34594f22649",
        "cursor": {
          "ref": "607abba6-2083-48bb-962a-4029e2a3ace8",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9275de02-8222-4664-842d-eb06f345e38d"
        },
        "item": {
          "id": "13366cc4-a177-4821-8d4f-e34594f22649",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b9a5d6d6-97f2-4f5e-b714-9107956d0730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d693a3-1c8c-489f-a803-73ada5add60b",
        "cursor": {
          "ref": "618a2cd7-763d-4eaf-b2f4-a41d9d6f9403",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "37e1ee9a-2e34-4fbb-9fac-bc65b8853244"
        },
        "item": {
          "id": "07d693a3-1c8c-489f-a803-73ada5add60b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ea355b2b-d7a4-4d21-aba0-d92c7fc957bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960f7cff-e02b-4f6c-baee-2f84269bb5f7",
        "cursor": {
          "ref": "e7c0af34-edc9-4875-8461-da79b8ec03f8",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eb60cb34-cf10-4455-bc58-9492200568a7"
        },
        "item": {
          "id": "960f7cff-e02b-4f6c-baee-2f84269bb5f7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "874a76a5-fe83-414c-b99b-3284e4bb0be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d1e7ff-fea7-4ad8-9fc3-1884af80be81",
        "cursor": {
          "ref": "aa3e2d4d-4bfa-4956-8eb9-cc881dbdfa36",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1293ee1c-f71c-474b-b4ee-d0f01e220858"
        },
        "item": {
          "id": "10d1e7ff-fea7-4ad8-9fc3-1884af80be81",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "28aa19dd-f92c-4674-b6ef-f182a167451f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c706e93-e4f8-4bae-9393-9662b9b02866",
        "cursor": {
          "ref": "792e1fcb-a47e-4fd7-8372-70ac5ebe7b24",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6fec7fb7-eef1-4adc-ade4-9ddfde29c222"
        },
        "item": {
          "id": "3c706e93-e4f8-4bae-9393-9662b9b02866",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a931ef0e-83e7-4399-83a4-d7d6bbf5e1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34126cc-6b5a-4881-b516-6e5b58c5379c",
        "cursor": {
          "ref": "2a2da3cb-4fd4-435d-9edf-e1f1e536775f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "291d9e29-d24a-4e12-8c8b-67e9d28b9b39"
        },
        "item": {
          "id": "b34126cc-6b5a-4881-b516-6e5b58c5379c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "01837c5a-62cf-403c-a679-94aec549272a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c631d0ca-3f94-45e5-a935-5779553cd5ca",
        "cursor": {
          "ref": "1a82fa65-32f9-4de8-8273-b8ad4a08643e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59391376-0172-43ba-ac00-3a958f62eb55"
        },
        "item": {
          "id": "c631d0ca-3f94-45e5-a935-5779553cd5ca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2a20f192-4204-4fab-b0e8-4d6adc3d67a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebf9212-2e39-4ca0-9de2-f530b16f4f66",
        "cursor": {
          "ref": "8a5e08bc-2f0d-4741-b531-2e31f90d664e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d397088c-3c76-44e3-89b6-8a8b0813a982"
        },
        "item": {
          "id": "7ebf9212-2e39-4ca0-9de2-f530b16f4f66",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "36f1386b-1381-41b6-8564-6b70f90d36f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d89d6e-56d2-4881-b417-92aabcbe69e8",
        "cursor": {
          "ref": "e3786c0a-e5bc-4fe1-82a3-b1acd912260c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ca315d25-1bf2-463d-b1df-44e8c1c1af30"
        },
        "item": {
          "id": "a8d89d6e-56d2-4881-b417-92aabcbe69e8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d3a40edd-3dd0-4c8a-92cb-34f873ba7826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc160f3e-bf68-4270-a690-ca5b86f2520e",
        "cursor": {
          "ref": "f420acfc-a4fd-437f-898b-0574a8a19ee9",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6e284c0c-c260-47b6-bf07-64d32f4a71e9"
        },
        "item": {
          "id": "bc160f3e-bf68-4270-a690-ca5b86f2520e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4dc9c671-591a-459c-8cc7-d9f06213e1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a14ce55-ec73-435b-8c8e-48f2a085f56e",
        "cursor": {
          "ref": "96091148-6bab-4130-9225-c982d1cae177",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bb1069b6-32f9-4962-ab2f-56d088545b6a"
        },
        "item": {
          "id": "3a14ce55-ec73-435b-8c8e-48f2a085f56e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e5cb0dcc-9b81-4447-9233-826bebc8ef41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef812bdd-2c1b-403a-86bf-21cc1ab7dd0c",
        "cursor": {
          "ref": "ef4dbd00-51b6-4a1f-81d0-50ad2c6a6c4f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0fa1bb48-1b60-4370-9c13-82865a7676a7"
        },
        "item": {
          "id": "ef812bdd-2c1b-403a-86bf-21cc1ab7dd0c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e8f17be5-b720-416c-bd87-f72b92f76846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67a26ea-e951-48a5-a9ef-b1598e849360",
        "cursor": {
          "ref": "6184498f-d7fb-4391-b3af-92a9eb495162",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "50a85341-828d-4f9e-a8f9-99694be86c0e"
        },
        "item": {
          "id": "c67a26ea-e951-48a5-a9ef-b1598e849360",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "95b8ddeb-6a42-4896-9272-a2963175340c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbe1829-fc46-46cb-a6cc-c211d54d340c",
        "cursor": {
          "ref": "3723b1c5-9b4e-4aaf-a8e7-cf63b82d7b80",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8fe8785c-3e5f-41fd-86c0-a242ef8a415f"
        },
        "item": {
          "id": "1bbe1829-fc46-46cb-a6cc-c211d54d340c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fbbd63d0-d22b-43cd-813c-bff6b6dafd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6cbb33-3632-4f56-9d2e-ea5ad7d4f332",
        "cursor": {
          "ref": "4fca9c96-f999-4ece-b81c-d35b27012e96",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "906104a7-7c7c-4e0c-befd-8b493ecb4a35"
        },
        "item": {
          "id": "ad6cbb33-3632-4f56-9d2e-ea5ad7d4f332",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e51e07ff-c343-444a-b238-eea0e7973538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1e2198-9a28-42ee-b170-b71e00a654dd",
        "cursor": {
          "ref": "e1526a3d-42c8-4c09-9f53-efb7617970cf",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a0f950f5-8756-400c-b008-805389324af7"
        },
        "item": {
          "id": "5b1e2198-9a28-42ee-b170-b71e00a654dd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e5ceed8e-0421-46da-8b50-ce025c60e5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f42af2d-73c7-432b-9c4c-cc2f300bb0ef",
        "cursor": {
          "ref": "8977b46a-ed09-496e-a757-3a152b66ab39",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a8cd44ba-3280-42a8-b071-12d2274be445"
        },
        "item": {
          "id": "9f42af2d-73c7-432b-9c4c-cc2f300bb0ef",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d550fa92-10d6-4381-86ca-d65b3a54ed50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cdfc9d-4fec-4109-92bc-7c1be03932d5",
        "cursor": {
          "ref": "fe94950a-ebe4-469a-9f10-4404ba9f6fd3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "07e69751-65b5-4bc4-8f06-7842838e18bf"
        },
        "item": {
          "id": "10cdfc9d-4fec-4109-92bc-7c1be03932d5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "34b25c50-4f84-4e21-9d56-9926755e744c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6aadfb-103b-4df3-bfbc-bdd8afa28a60",
        "cursor": {
          "ref": "52d6e5b5-4716-4bcc-b4a7-e82053e3000d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a84ae7a9-2d2d-468f-bc09-c44df75b2b12"
        },
        "item": {
          "id": "4d6aadfb-103b-4df3-bfbc-bdd8afa28a60",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2115ec8c-26b0-414f-9fad-da20020758da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69c210e-3f0c-4e1c-a51f-f2637e6b200b",
        "cursor": {
          "ref": "1bd32fc5-725b-45d3-be81-24573e7ada93",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ae42efab-a60c-4e8b-9794-cda4213c7324"
        },
        "item": {
          "id": "e69c210e-3f0c-4e1c-a51f-f2637e6b200b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0bc1ef7e-33e0-48fe-9fd4-fd1dbb75951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c80e30-e22c-46f6-ae6c-06690874d0e9",
        "cursor": {
          "ref": "d1129f13-767c-4a85-8e60-7e23038eee31",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "68cac373-c8ce-48f0-8e7f-e70a041e3267"
        },
        "item": {
          "id": "b3c80e30-e22c-46f6-ae6c-06690874d0e9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f90c7589-e4f3-4272-8998-5ff486fa5221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03287da3-1479-44ac-95bf-583d30c94a41",
        "cursor": {
          "ref": "95243ca8-9666-46a3-8784-6e0ae5cb9302",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c27366b7-5335-457f-b7f7-7c82d7bae026"
        },
        "item": {
          "id": "03287da3-1479-44ac-95bf-583d30c94a41",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0b5bd7fe-6fc0-471d-9dcc-ddead181a594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea507f6-878a-4c9e-a344-0d6556313c0f",
        "cursor": {
          "ref": "d05e75ed-c98f-4436-aa4e-fb503877b0ee",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2ec2a1c8-9db9-441f-b7a8-d6f682f1c8da"
        },
        "item": {
          "id": "aea507f6-878a-4c9e-a344-0d6556313c0f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "51da3f82-c5a9-44e8-9bd0-085ff740c914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b4cab6-3296-47d2-9beb-8799b212bdaa",
        "cursor": {
          "ref": "d0121fa5-efe2-4c7f-9bfb-5c1d98b2db86",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e0899a6e-18f4-435d-a0ce-d0e6f9b81a25"
        },
        "item": {
          "id": "65b4cab6-3296-47d2-9beb-8799b212bdaa",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "471a78a3-275d-40a0-8b7d-a54d4d9e26a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87213989-0046-43e4-8b76-764456c005e4",
        "cursor": {
          "ref": "bfc6bc43-c8fb-4a6d-a3a7-2d2c0e98696f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "81eeb235-2a33-4e7d-aff8-3be0d0561aa5"
        },
        "item": {
          "id": "87213989-0046-43e4-8b76-764456c005e4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5cf7ba43-4653-43d8-924f-29a396571de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb9d814-9836-4cfc-8fd3-f5d84fa7d7bf",
        "cursor": {
          "ref": "b786e306-7ebf-4357-9d06-f64c75d49b0f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b6c8890c-960e-4815-af74-6753ff0af537"
        },
        "item": {
          "id": "3cb9d814-9836-4cfc-8fd3-f5d84fa7d7bf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a2860bd6-3aa0-41c9-8694-3b47f4ad68d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da70f316-5ed8-49dd-a693-100939c41825",
        "cursor": {
          "ref": "9179a9cb-8110-408c-9769-7a20c5780ec1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "771b3395-bc04-4740-9b42-9e992bb5773b"
        },
        "item": {
          "id": "da70f316-5ed8-49dd-a693-100939c41825",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8995e1ea-06d3-4bff-b097-a20a90076966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5505d4-4515-4c7e-90f9-b7a15574adbc",
        "cursor": {
          "ref": "4be2f597-61f4-42ea-a82f-13819a332d49",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e7e292d0-053d-4658-ab72-a116afe88de4"
        },
        "item": {
          "id": "9a5505d4-4515-4c7e-90f9-b7a15574adbc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b78fe396-b93d-4536-b9cf-b6403e7c2010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8732f4c1-4d8f-461d-8a8b-b052a60a078f",
        "cursor": {
          "ref": "d2d2c104-0797-4dc8-a41c-cb85562cdf5f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b9dc63af-ea4f-4063-b46a-b46d6326c8b6"
        },
        "item": {
          "id": "8732f4c1-4d8f-461d-8a8b-b052a60a078f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d9137be4-a7bb-4f53-b6c6-543e4aef159a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03a2abf-8219-4f2d-ba22-ff65d1ecb245",
        "cursor": {
          "ref": "316db052-6a2b-4e65-bc57-52bcd0480d1c",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "69534af5-917e-45eb-9070-c3757f151dbb"
        },
        "item": {
          "id": "e03a2abf-8219-4f2d-ba22-ff65d1ecb245",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b957c0f2-5196-422e-aff1-8c2fac3797b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19f4940-3e09-480c-a19f-d272e42546e1",
        "cursor": {
          "ref": "0ec23a9c-5d87-4bf2-9479-5421a9551f11",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "411cbd03-0a98-442c-bd13-7d1a59372347"
        },
        "item": {
          "id": "f19f4940-3e09-480c-a19f-d272e42546e1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "da07e9e5-8fc3-403c-8abe-823f76e1c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84618fa8-6f75-4f15-abcb-fee78fa2c885",
        "cursor": {
          "ref": "cd883304-f656-4d52-b2b1-bfed9aeccd5d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "11c1a4de-c029-4377-92ca-6a8c12a3382a"
        },
        "item": {
          "id": "84618fa8-6f75-4f15-abcb-fee78fa2c885",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "88b89d08-561d-4bb3-ac67-6c00991427a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478df506-93d2-47e3-9a50-6f770fe33dc0",
        "cursor": {
          "ref": "8a50ae7f-4d0c-41f0-b7eb-2ef0a4b970cb",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f9046aa9-4057-4c0d-ae3a-d6c7ffb89c0f"
        },
        "item": {
          "id": "478df506-93d2-47e3-9a50-6f770fe33dc0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b5114b7a-df48-441d-96b8-a61e1edcf25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b67dc-9aa2-4c8a-81ff-8e5d1c75c195",
        "cursor": {
          "ref": "08ddcf35-96fb-421e-934e-5ac6abc0f770",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6081f57b-4fab-4338-b4bd-9f15710934cd"
        },
        "item": {
          "id": "460b67dc-9aa2-4c8a-81ff-8e5d1c75c195",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5bbb5ceb-c982-4eb3-882c-8a8c8165187b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073f5d36-21b9-4778-b30b-d5889b82f2e7",
        "cursor": {
          "ref": "9caada00-4178-4872-8634-be9160ec4676",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "444324b5-18c8-4990-91b4-1b0c22c32ddb"
        },
        "item": {
          "id": "073f5d36-21b9-4778-b30b-d5889b82f2e7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4703064c-b779-4467-8919-8dda7914c44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd085a3b-094c-4bdd-9495-20650b234429",
        "cursor": {
          "ref": "3434bb4e-8622-466c-9b0c-2f53b2a4a88b",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "41a5622a-d2ca-4fee-a2da-b90b49f38e3d"
        },
        "item": {
          "id": "cd085a3b-094c-4bdd-9495-20650b234429",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6c67e671-28c1-407f-a08d-462133459dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2ef256-3000-4926-9bf9-0df88267dc7b",
        "cursor": {
          "ref": "d7678753-307c-40dd-b657-ef6f2cf6e1cc",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c6723493-ca37-438b-a20d-6fc0b1ee4d0d"
        },
        "item": {
          "id": "2b2ef256-3000-4926-9bf9-0df88267dc7b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f77ed82b-c1c7-4607-b17e-bfab1c378bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b211b001-f962-4e8f-812e-23c835531c0f",
        "cursor": {
          "ref": "60be44c9-8bce-4b43-b4f5-c01583e5e7d4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d845beae-bc48-4e37-b8bf-9d4d2ba29e17"
        },
        "item": {
          "id": "b211b001-f962-4e8f-812e-23c835531c0f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e9d1cf4b-882b-4f68-929d-913136f98f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a3ec14-c0b1-4233-b797-5410202ff4f3",
        "cursor": {
          "ref": "28362aec-a36e-42f3-953f-735d5c2fb101",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3574f73c-0260-46af-8575-9928377644d6"
        },
        "item": {
          "id": "72a3ec14-c0b1-4233-b797-5410202ff4f3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eaa9a3f3-0870-4dfe-9858-790410cfc79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9b110a-7d26-4ada-9056-fd9dc76261a0",
        "cursor": {
          "ref": "4e2ebcf4-1cf9-45c7-a655-ba0509db7d2b",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6c615dd5-7131-43df-8d0b-ecaa289deada"
        },
        "item": {
          "id": "ca9b110a-7d26-4ada-9056-fd9dc76261a0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0aad2d48-a6c6-45bd-bd85-7132707f9552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0964863f-8ef7-444c-862e-fc83ade12e7e",
        "cursor": {
          "ref": "19c3dfa3-9694-4638-a90a-f1be232c88a4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "32bd23b0-309f-483c-8603-98d0402e06c9"
        },
        "item": {
          "id": "0964863f-8ef7-444c-862e-fc83ade12e7e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9ca44e37-c19d-49bf-bee1-63cc6d5851f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ae4fb1-d1a7-4c43-8803-7edc861250b6",
        "cursor": {
          "ref": "d55ef042-5b30-44d8-b418-8500dc76b804",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "341eaf6f-c286-4e95-a141-62d37678ded0"
        },
        "item": {
          "id": "b6ae4fb1-d1a7-4c43-8803-7edc861250b6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b2ee637d-4c9e-4455-851c-528a28e3a6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b44fac9-4b1d-4903-82e4-bf1454b07380",
        "cursor": {
          "ref": "c17ae6d4-b568-4fa0-bd47-2547d2c6c967",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2d1a672d-2d98-4160-ae24-dd1df499bb41"
        },
        "item": {
          "id": "7b44fac9-4b1d-4903-82e4-bf1454b07380",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "21b53147-b55e-4ffd-8aa9-d3055c0d4940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f028446b-a6f8-4243-9688-4b9bd04055d6",
        "cursor": {
          "ref": "1289f8da-b5b6-41df-8afe-758e02e62663",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4f192172-8f6a-4f23-842a-d41d5ae0ea88"
        },
        "item": {
          "id": "f028446b-a6f8-4243-9688-4b9bd04055d6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d5ad45c7-96ab-4ab8-8365-70b68dd8c1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94a7adc-e89c-48d1-b8b6-f2d4debaf8fa",
        "cursor": {
          "ref": "03a0e8d2-3302-4880-97d7-6c4ab7f9d78c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "88dc2dbd-15a0-4d76-a98b-62147712ab72"
        },
        "item": {
          "id": "b94a7adc-e89c-48d1-b8b6-f2d4debaf8fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "52c6cfbc-44c4-49e8-a31d-bdd7155e350f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9300ee1-69fb-4dd4-929c-ae49ec06889d",
        "cursor": {
          "ref": "fa02bc39-46cf-4c32-a469-c4fd105739ba",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "abaca586-177b-445b-bb1e-066228105021"
        },
        "item": {
          "id": "b9300ee1-69fb-4dd4-929c-ae49ec06889d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "492d6eb1-d270-47d1-9d96-54007af58e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a536f8e5-2a5a-4a37-89b4-746fcb3a87aa",
        "cursor": {
          "ref": "7185622d-4ddf-4034-aa26-bab6f3793cf0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bac61895-4e23-4731-b0ce-bf8759359905"
        },
        "item": {
          "id": "a536f8e5-2a5a-4a37-89b4-746fcb3a87aa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d0a792da-8830-4a2b-951c-bc72b127d884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeaf698-2d2c-438b-ad4b-4ec9cdd8e706",
        "cursor": {
          "ref": "5ffa257c-ecaa-4d27-aba5-54fb152dceb4",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "35be0577-f9c4-4bcf-9241-9290333aeb71"
        },
        "item": {
          "id": "1aeaf698-2d2c-438b-ad4b-4ec9cdd8e706",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b1385813-9c4a-4d76-b796-381c49502d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2677d-6ee0-4b0c-ad1c-20397af6f0fd",
        "cursor": {
          "ref": "37716232-1ccb-4549-b3c1-5fe337e1954a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "83517ce2-b598-4175-b091-e0409e4bc0c8"
        },
        "item": {
          "id": "43e2677d-6ee0-4b0c-ad1c-20397af6f0fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "590c0807-817f-496b-b011-5040f523bfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed3f49d-47ba-445f-97e0-8e571038e9de",
        "cursor": {
          "ref": "a9c26455-7a32-4d92-a225-040c49995221",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f62dc9a7-0035-4c7a-b7bf-21db4457e641"
        },
        "item": {
          "id": "6ed3f49d-47ba-445f-97e0-8e571038e9de",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "62c1d01a-88d7-4a89-8083-a5e1c05b729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e929239a-0d0e-4886-9c2f-324a5738b225",
        "cursor": {
          "ref": "329d0fef-e981-4b3e-9c7a-8d8127fd877b",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9a767f59-7bb1-4c10-9847-dfbb7b9b8399"
        },
        "item": {
          "id": "e929239a-0d0e-4886-9c2f-324a5738b225",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fc59ffdf-47d2-4aba-a1b7-55567d5b419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ddf295-d423-4d61-b55b-8cbea52e2ce0",
        "cursor": {
          "ref": "974b56ff-14db-4df9-bcf1-efb6766e24f3",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c2a13637-a1ae-452c-9f20-61f7f29fb828"
        },
        "item": {
          "id": "41ddf295-d423-4d61-b55b-8cbea52e2ce0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "90d9a6ea-e937-45ad-8bd8-62245c230f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff1b0d-a36a-41b8-bf94-fb1c1bbc6766",
        "cursor": {
          "ref": "acea5437-9c5e-44e0-8eef-96781d4358f1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5c15cd3e-8577-4169-9288-a619c52ed4fe"
        },
        "item": {
          "id": "61ff1b0d-a36a-41b8-bf94-fb1c1bbc6766",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f57ed581-6df4-4bef-bd9f-1dcd88f484c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6445f310-8cfc-41b5-83ce-30ef9831f643",
        "cursor": {
          "ref": "7b60eb5c-4fa3-444f-9082-1218c63c76a1",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4676448f-9532-4362-8d9f-31649ba08364"
        },
        "item": {
          "id": "6445f310-8cfc-41b5-83ce-30ef9831f643",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1567ce5a-67a9-4603-b0d5-acd64daeeadb",
          "status": "OK",
          "code": 200,
          "responseTime": 2172,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "480660c6-0e98-4a7e-85e9-645c668adca2",
        "cursor": {
          "ref": "855c5f96-fa6b-4a2e-95f3-5baf1e87b2f5",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d696df90-3c2f-4197-b8ab-b5b8f088d0f4"
        },
        "item": {
          "id": "480660c6-0e98-4a7e-85e9-645c668adca2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a8cd0012-482e-411b-a588-1785ade403f6",
          "status": "OK",
          "code": 200,
          "responseTime": 3494,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a84b70-cd78-4222-8494-d593e993b163",
        "cursor": {
          "ref": "546c3d37-c613-40a0-83fa-f2753c6b05a3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9f42aac3-badc-4afb-b029-ec99f132fa79"
        },
        "item": {
          "id": "c0a84b70-cd78-4222-8494-d593e993b163",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "efdaf89c-ae2c-4fc8-82dc-bc71614d01ea",
          "status": "OK",
          "code": 200,
          "responseTime": 3281,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb43f055-6e9d-43d9-a3c2-9f4793518784",
        "cursor": {
          "ref": "82fc24df-9241-4712-8ede-c8ab9a0abe64",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5dc53127-631b-429a-8c59-e293d3fec0db"
        },
        "item": {
          "id": "eb43f055-6e9d-43d9-a3c2-9f4793518784",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc628ba8-041f-47dd-8937-e5873dc4b23a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb43f055-6e9d-43d9-a3c2-9f4793518784",
        "cursor": {
          "ref": "82fc24df-9241-4712-8ede-c8ab9a0abe64",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5dc53127-631b-429a-8c59-e293d3fec0db"
        },
        "item": {
          "id": "eb43f055-6e9d-43d9-a3c2-9f4793518784",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bc628ba8-041f-47dd-8937-e5873dc4b23a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc1203c-6c40-426e-be50-c992a5354a06",
        "cursor": {
          "ref": "743e8a6d-f266-46df-8fb3-ed434546d59b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "71232f4c-1404-4014-8c87-828a9daf63a0"
        },
        "item": {
          "id": "7cc1203c-6c40-426e-be50-c992a5354a06",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "68f8ba79-2772-459a-a0c8-348c5dfcede2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f74a3f4-0943-45d3-86dd-a4778fb2a522",
        "cursor": {
          "ref": "7805b124-f207-4744-9b18-1a0d4cbb23ff",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fbc492c9-b3a0-48e8-8cbc-0ac6f1333039"
        },
        "item": {
          "id": "6f74a3f4-0943-45d3-86dd-a4778fb2a522",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "298c5259-1a6c-442f-bf5d-055cfbffd599",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}