{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ff4b0625-4d47-4f4b-94ec-cd85618c63dc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f01c1b48-a26d-45ac-aa36-eae514b7c943",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5384d1ba-8c83-40d0-bd47-506bd7f1f338",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f9b50652-0253-4442-a627-afb5c3be2509"
                }
              }
            ]
          },
          {
            "id": "33610eb3-4f49-4318-88ec-6b5fe3c38bc4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59727703-af5f-48b5-9213-64c5472a94e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b244fd0b-1a0d-4fc1-b1a0-a6a83d264524"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b3852da5-e5f6-40da-9e68-b16ea82de7e9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "429e714c-06df-4ddf-aa5c-17e225347b32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6f36d5a-2ae1-4a5a-8a56-46a8a77d5fd7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6850a1ac-9ed4-45aa-bf73-90dd68e5852b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbf36c06-a34a-4d83-924c-ca671603e6da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6a98418-0983-40ee-bff3-ba7f7977e9b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "012ad1e1-183d-4f6f-baa7-382d8f6e0c99"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f8ffde7-8f7b-404c-8106-83ad4f18b1f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68210331-79eb-4d27-928a-d03c3722b9b3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76823215-7c4d-48f5-aeeb-92443ccee330",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a92f5fd4-e160-4ad1-9405-977fb5016f6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd68e604-dfe9-489f-b483-25cde2ae3766",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41f51bcb-82e4-426f-bae6-7a95858e560d"
            }
          }
        ]
      },
      {
        "id": "662d41e4-8b9b-4d57-8882-8e09e08ea932",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ed938716-bd50-4160-aa7f-12a2772bbaea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39fbfbe2-4bbf-4eb5-a60d-89ee95c748ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96126afc-49ad-466d-a4d8-a8799095d437",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c0d296-18c7-4e74-a013-9948d5000e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9fb5bde-b6b1-400c-b7a0-bf2325f64091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bcfc2c-1494-4700-a3b7-c4dbed8983d1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379363f4-3ade-4b0e-b78a-44a3c1bb875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a65e81f5-d810-437f-b9ba-dc95609545e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c141bb-810a-4c64-996d-3177072a4f2f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b19b69-cb6e-4cde-b2a8-6aa79afb550d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "410a1176-3e90-42d3-9a14-7ad1bd126409"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8c6a675-98f5-4f3a-b790-fe2b62d375a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdc23704-0f1a-439d-b3fd-dc85028845e9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc4dac5-0842-44e1-8982-8cbb0b9bf14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f511bacc-5c1f-4baf-bf8d-baa943037a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bf0605-f595-4e69-9484-fa595866e3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad268f9b-294b-425e-8462-7b96cd71efcd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d7541c1-c080-44e0-9b5d-a1c9f3000af0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d9df4e1-21dd-4ab6-a90b-194ce7315973",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c167a8a-0231-49e2-9e19-445bab48b249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "55516bb2-ab9e-4730-aa27-ecc2c2ba9aa6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f0344aa-3d0e-45ac-b7b0-fff26d0659d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ef4f860c-0e89-493b-b5d9-b226928aabc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3f2f91d-e767-416d-ba82-a1f8561bfacd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff0ae4b8-27e8-41c1-9449-5bece5f52598"
            }
          }
        ]
      },
      {
        "id": "467e25c7-3df7-4765-ab63-65971a380f13",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e9fecf0e-986d-440e-b4ea-1402a131c4bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ec0398b-5665-4380-8add-eeabe80c6bbc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "53c1a1c2-511b-423c-b3b6-4b48ab453563",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0290e8e-aa25-4b6d-8548-e0ca446c177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef976262-f000-4453-b9f7-92390d63d82b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ee7800-bebf-4131-a1f8-9e382a3fcaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f319b6a-94e9-4af5-b43f-625334e12d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae062a3-b2a2-471c-9755-492d27112e8c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2174081-8540-46b7-b90e-f8b20bf00311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563bcdfa-d41b-4003-a685-64fc6a8aec03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6020b379-53ff-4797-8578-b04d24bafbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18d04550-0848-4796-bb57-4b61fd90651a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb239af-ac6e-4bf7-8f60-81f0878df5c1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e1376d-e22f-421c-9ee2-1712a24bcf42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daa7724-1f5e-4a89-b09d-3d2851b18e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cfc73f-18b9-4100-9fbc-bf1ac05179dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94529d6f-a2ff-4d04-895e-e10d6e4f48e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11177122-a0b0-4488-8658-e76e5036edf4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff0cb79-5098-4c47-8cc2-5f156144bce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f348156-210d-40cd-ac34-bdc0c18ddfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e75106-f28d-4fc3-9ceb-0f4b4fd6ed2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ad3edb9-8ff8-4764-8367-963c7df48969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d40d377-68ad-4a9c-b74a-1ba06eb2e0ec",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59df3590-4b8b-4556-a6af-04a6bb4ef72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee25928-9d3c-41f0-8d46-567f07fdcec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35922b21-f3bd-40c5-91c6-42f83a0b6255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ccb5e1d-7dcd-4741-aca8-5cc413358578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8697d06a-dbd3-4ea0-95f9-cc69b60373f5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d71959-895d-40d7-8dfc-e753fe964d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3409257-8b2c-4259-8e76-671f616b656e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cd9b4b-1ede-475d-8098-47f3fbe7a5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60f615ca-d5cf-469b-9c36-62e20f9687a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cffa30-dd6d-4e87-813e-5ebef744ae0d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c534ae0-dc21-466f-a584-6e7afcb41c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e520734-6acf-4806-80e0-a2334053f7a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa88d12-ec7b-48c2-970a-98ce65c88b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19b0d12b-b89d-4735-af07-53e75de15233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129b839e-b39a-4c39-9fc5-c666a709c1a0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de83559-93c0-406c-8040-531ef147a520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87f9de1-1717-4bd9-93f3-fc1431f0db90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5a5209-2c5a-4288-8b4f-d1494062abbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35aa5d0b-293e-478c-958d-c525d244b480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531b632f-534b-49a4-968f-373883a317cc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e45d28-aeeb-4075-888b-4d1e7d7f12cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a5063b-6432-4669-95ee-35aa6afc7ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c83e35-2ea8-4a16-b7a6-41bfe5de6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4a24ebe-a0e2-4836-af40-b72a2abee51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a258b3e-a36c-44ae-8393-7b66e4d8cb44",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73f0e47-6cae-41a7-b0ee-7ddc8584e963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9387edb-8057-4e12-972b-5b8b1175bdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62bb61c-584d-4d06-89ab-831287594405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38f3469e-973b-4d11-9d50-4aad4579f6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e2ca56-49a1-4630-a3a2-696e80ced326",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b29348f-8882-40d3-8925-47c60df26f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3884d97b-8b8a-45ed-9310-3141b7cf8ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efc203b-f276-48df-91e1-ae44b799c65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c3b008c-ea74-4196-80ac-2bb8eb1b88e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3297d7b7-3514-4a31-8869-61d979dabda7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b78e33-d333-42ff-b54a-e1f403a2fdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ce492a-d937-4f7d-aefa-585c34c73647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ec449b-032f-4cd5-9e69-b3ae66fed65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db8999be-afa0-42bb-aefb-5be9454b8e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20cc5ecf-089a-4298-800e-44d93816ad2e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210ba1d6-177f-4f29-bec3-2f10e6edb259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5158bb-4136-48c9-a5eb-f7697ad5b186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce82b732-2cfd-4bbe-ac8c-4a3bbe6554af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00bf26bb-04ba-46c1-a481-f8eb980f0b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac282ab-ee4f-4326-a6b6-f42fcc524f57",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fec031-1906-46d6-815d-7c36c1bbaac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1cefb6-8a4d-42a6-9428-8b700051ae5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfa9963-3014-482d-8718-494d9219837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ec49c87-da89-47dc-bb7e-4c75f4fec205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7db20d6-d313-469b-ae16-3bdb185b702e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be85557-a134-4955-8d33-7875e7c0a7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e8e580-1661-420f-bcaa-fc53dea9882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a56496-9c25-4c33-9ea4-715e4c7911dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03fe6b11-2111-4054-9e37-a8ad557d7532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67b70ba-d787-465e-bd99-b1068cc6cd9d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dede22-574b-4c79-8567-110de7000630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e135f7-1046-4fca-b4d5-abff76a4a27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3001168-6071-4e26-a36d-15d67934b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e87db333-ceae-4769-a8ac-59c3f4934d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a3ea2b-3289-4a00-8ec5-4c91a0c6342c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ec3fc5-e49d-4757-afab-3fa4ffa8fad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94bcf16-4c49-44cb-8760-7e9069ae595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59869fb2-01ad-4108-82ff-62a698a0ef2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d838c484-f1fd-49f2-99e7-54b30c411d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c2ca81-0e3f-40ea-804f-9e2b23043fd5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bab8471-3c6e-45b4-87e4-8de98bd14b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9c1738-1b9f-4a4b-9988-2bc3b3771f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03909fa8-94f8-45d6-a049-f5e54e2f0820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "15293a8e-b1df-4fde-88ef-20fca758c1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a86f6f-1a52-4106-af2c-f1ecded09d93",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b45605-77ba-4ed8-a254-746e5558d47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abf79f8-5183-46c2-8cce-9137ed015bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dec3fd8-ec26-425c-91ec-3bc21db238d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc79c3c-0006-4f24-89f9-f70ae8ace47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abbff7a-1e15-41de-a5ed-820ad586cd32",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3f2872-d377-4d80-805d-7217334d3a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb39a4d-405c-46f1-880c-ff8136016e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a27f5f-f7b7-4c47-9023-da14f31aefef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbcfc44-0ba1-4610-941f-36ae6763a49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe52f34-d462-4b8d-ad49-dd06f643a6b8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c222298-f13e-4b22-97df-af157df17cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3834cc5-a1db-4824-89e0-f0a516061387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d831f5-9720-4f10-8b96-2d009c9be383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e412b98-5a8d-4dd2-ad45-8ae30ddaeb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64359daa-d833-45b7-8801-443ea538df74",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599d758c-bfd0-4a7b-af91-8ee42c12bb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5a0c20-9855-4ceb-a25c-1f8f830a8968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bf995c-8ddf-4460-af32-ad6ba7c897c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e54c89-ddbd-4cc9-a400-cf8bf66f6134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8fe0ed-8569-4703-a5d7-a2a7c0e1fd07",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8726a4-6ec5-4b37-9ff7-958555fd24b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b611bcdf-0c40-497a-83b5-e6cce45c0b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71df69c6-3284-4d5d-8490-df4b5cf6f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8e35f2-14d4-4f91-9ec9-f0ea2fd29348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7e78a7-5f94-4231-80e8-db95e498027f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c776a5-6ca8-4420-b581-4cef06335043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eaef87a-8b58-4ab6-a13f-ed78f0952beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309f3b0a-1742-4841-ab6e-1718947acfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d072647-d1ff-444a-b501-8c5844090417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c856ea7-e0e7-450c-b907-e34ca8384e27",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a044c1-67c6-43d6-a573-eec1f6fee9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a0cae6-5e47-40ed-a2fc-7e7cd90b073b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372df073-2863-4fe7-98a6-f0673ab1559f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d9fbb3-af66-400d-80be-e10fff905bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf00be6-71ca-462c-a265-836ca949bec6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1decf060-2fd2-4c7a-8fcd-781d3a4dba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70125cb4-5dd6-480f-97ef-9f373b0c6551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59160f1b-da66-4881-bc29-6b39eb054f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb16d74-4106-4ef8-85b4-7ba5542245f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d610476-d0cb-4777-b2fa-e3ec154afa18",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c7362c-f3dc-46f9-9209-bf9e6f9bf27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb07c88-7b97-4360-919e-c4cf420e54c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86107662-013d-436f-80fd-9166bd7f44f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c20545-a23a-477c-a98e-5308ee4c66e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6648e3b9-9250-44c4-8cd2-52c19dade27d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e79c3f-c306-4750-abf1-80dd877a07b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da6818c-a799-4cae-9a2b-cc87b0d97aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b2b4ba-c6ca-4905-858b-faf2c90980f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5209f0-2283-4964-9556-6800ea4d165f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d23d9aa-be24-4938-97ee-7aaa0726e4be",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c4af5b-4377-4f25-93ff-3838db886a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a806138-c740-4d63-bf3a-4af09b8dbe8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cd0b9a-6296-4189-ad11-f42311304468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4309e1b-5839-4294-b2ad-19ffad8e7507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd64405e-8472-4f63-94f7-5651eaa2b6da",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1790e5-5477-464e-886d-22d9f5cef1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57514889-dbe0-4241-be47-fa9aa9312516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac97159-2309-4d46-8e66-5b376787e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0afa092c-d5a4-43b3-aed6-d5a08102c59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326c3fd1-591a-4943-998f-65f6fe2577d2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef85603-5779-4164-b98c-bb9263dd834b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc13c91-65be-44d3-95da-2fe81b00ea5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9c6f8f-fbeb-4d69-8e3f-02a8239b4551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd2402a-c20c-4236-8cab-0010450f7519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0760053-8f6f-48e1-9b3a-9b83529442f3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7c1def-e076-4756-8de7-db6e2b37310d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74717a96-3970-4b8c-8e7a-6b36ad36cdca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78141c5-0ea8-4b0a-a9f0-681126409e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b038faa-8a90-455f-a0d6-c05b8633a70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3002724e-b7b8-492d-b1fb-063a46f7115d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cedb5e2-ea1c-4b7a-acc3-47ca6181eab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4c85e7-0f63-4aec-8deb-acec5d86774b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6512c624-9e35-46e1-9bba-24e270bcb25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e93b3d5-7bd7-40a9-b43c-d55737c45317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a596c204-7a44-4ee0-98ea-e7c332ed5ae9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06efcb4b-7370-4218-9947-4081da7e1a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cc5648-13be-43c7-8d13-afcfa9607cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adae316b-933b-4e06-9ee1-1992f5db826f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23564c21-dabd-4569-969d-92fd154a1d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ba6e13-8abc-45d7-b753-57ed93c14462",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e17bf9-eebc-47a9-8821-5a2fce3cf7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06848e7a-5a69-4e76-971a-573cbcf8e1f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1fb0e2-58f3-4aef-ab93-28c860ea9719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "075031ee-c43e-4ba1-b1d4-982a01213a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5fbe68-b622-4df1-9823-cadfa6b41432",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f7129b-0dfe-4cd0-9df7-401b3672a9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0fc8af4-1357-4e92-afff-b7a739bdf875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df84fbeb-bfd7-4c6b-aa32-d7d53b8e65cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e83a2909-90dd-4611-a52d-907e08949112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fb9d38-9d7f-4e7a-91f8-83cd174f8c1e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0275c95-e78e-47ca-80e0-3f35de9a99c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb019fd3-8869-422b-ac29-b47075eb88e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1251796-39b8-433d-8137-805eae854de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76618264-836f-4944-974a-5fb72327489a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3066779a-c8c5-45ef-a90b-c85fefce65d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db41769-1f37-436d-8bb3-018c27c5d315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09fe49a-7ecd-46ff-b1bf-505ee4ceda59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b48c6a-568d-417d-bfc4-58df94b6c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9da8a6-a3f0-4f1e-804e-ef701fa1db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1ead07-723e-4676-9532-9d72a7e442a1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8614f6-e8ee-4632-a00e-2b7e64991162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb144cf2-2234-45bf-b10d-9780257f95fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20c0880-c86a-412a-a017-a2c5b9bee897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ad5be5-730b-4f09-a17d-9a3a900b3bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cf129e-cd1e-480d-a5f4-da1c1c51beb8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f414b2-6375-4001-84c0-678ac0f97b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12752d3-b40d-4b8c-a3ac-cf2c285ed5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6918e1-8be1-46b7-9b62-0686d02e28e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa4ed21-7645-49c5-ad09-04746c9d7cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf614831-1d1c-4290-8497-c51906109651",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58514ce6-2487-4da0-aff6-982a852d04e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54dbf51-895f-4e11-b368-e3fef2d5d788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b075737-af13-482d-b165-85ce0651d23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f51dd8-b18f-4e43-bc36-0c292b9d3917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d180759-fbcc-4711-af41-946137da7b4b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08aeb37-3c0b-47b9-a4de-449ed140c47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae62082-f4f1-4067-8245-a3bf06be2442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baee55d0-22d3-40d6-8b98-23559e20bf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a43906ac-1898-4e1f-9b14-5c87fb45f08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73742d57-39a7-4c1e-bcdf-bdd41ceb0770",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d561e6cd-a44a-4ae7-b2c0-5143f62e3d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124e7abc-df6e-45b1-8b4c-3c60910825a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cf6753-3715-482d-aa94-eafd43f54086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "83a17aec-0681-4d97-8117-2a5e73e9bf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabd253e-33a5-478e-b092-1e748a637436",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276574ef-a083-4472-8382-c647eafaa384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe835bf5-a95a-44c0-9831-ed70b9b7e113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7953366-5f22-4592-9ba4-ee2ba0ca8d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "947ebc6a-a813-4be6-888e-c6a62c844f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50b03d-eada-41a2-a1aa-4e686e63e4e3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1576d5c-74c0-4c0d-9688-2eab7f8607a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e2f8ca-e30a-491f-aa16-2ba76aeff0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e79590-e20c-499c-b9eb-ca9a32c2bb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1514d43c-1360-4184-9c06-107b71571e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5539c87f-ec71-48b8-8471-43da195cf600",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5638bacb-828a-4a1a-9f0f-3d203a2a4335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7a0711-b86d-4a9c-af19-1297ad67b267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9936b61f-c717-49ae-9b05-ff82080463e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0148e8-eae8-4a01-ab69-9a2b26bee2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d866bd-6bb4-405b-988b-f5fc47fa01a9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909fa10d-3473-4845-b413-fea48e0732b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719cacd9-fff3-4437-beca-a65fcf607d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dcaf0c-364b-43b3-9858-9c3742b93dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb2f80e-4922-4574-8e22-e8a4a670331b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7a4398-44b0-4452-bf38-c693ea4119bb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5942d51-1bc7-41ff-9318-cb9539a12ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2322f0ce-475e-498e-be1d-0a59c5270a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dd5427-779d-4bac-ba76-d9ef894b3f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4223345-986f-4db4-9cf1-260eac3d73b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db98f7d-ea41-4bb1-b7ae-a1c6820f721c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f1b46b-dcd1-432a-bc28-1dc3d36d2e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab93df58-23b1-4471-a4b3-bd2e6d71b292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a1c192-a8e2-4139-aa9f-82089e249347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bab0f476-0f23-41e6-baf9-e4fc2734e4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a11d4f-63c6-4ed1-bfef-5b80a3705e64",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d28a093-77bf-4096-adb7-29fe3b6f6e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dcbef0-adb8-49f9-b566-665e923389ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4e6aad-612f-4552-9d84-89c34487dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9c7e49-1c13-49c0-b659-f2b6a0fc32db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7b2cc7-6224-4bc1-924c-add22420fbff",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61657cea-e8b1-4aac-a66d-e7d7186c1c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c3262c-047a-42c6-a788-c0feb6325cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79391b7f-5fac-4bf4-afb6-75099169f583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1271d29-1e22-449b-89b1-63562ffe3e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a8dd64-589e-4515-8323-600eda623ccc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33b4d3c-a696-4089-b805-c7348806b6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed85d9d-c2dc-4afa-adde-b5072b00c4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9893e437-ae60-4db0-b2db-0b84c4844f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbcce9ca-7a8c-4587-a28f-ba1398975ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bfefc3-3b08-4a7e-b559-d72ba2bcaf51",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c463f10-c193-45a1-9765-bcef93975f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b795630d-32ac-4278-a7de-4fcc711816ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7f4148-0cce-4e5d-be30-de974d01de3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "458ae95d-10a9-474c-8d9f-fd5b96042186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bafb697-0bf1-478d-8073-ce85fc139653",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf057f8-66da-44e9-a05e-016874fa87e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e31f1e8-561c-40a5-820d-268449d0c189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa3dfbf-9ad2-4bfe-889f-dc72ec1529a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3f0b99-cce7-4af9-93be-d60fc48d6fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d47a4c-275f-4e95-a506-17e32f14bd94",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec999a1-3bf4-4671-af01-c79730300d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fede4a-f3b4-4472-b0f6-8ead19873cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a838b203-487d-4a99-8b1a-28f28f8fae8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a317a57-d0b9-46a0-9cab-d630de3f8694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19a43ca-33a6-46a8-a490-11d5fba50df2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caeffb8-c384-484b-a090-5f7127b96e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9adda47-fcff-4f63-94f7-0989956019d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3582bc5c-8377-4efe-a91f-2562548e9770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7463e701-ca77-46d0-a30d-e045bc97b54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfba2b7-b324-465c-96b6-47a8413806ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f828f647-2973-43b0-a9bf-f9a6fcfb2e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979337cb-12cf-47ac-9ae9-29ff3e11cc51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffcb477b-7ab6-40b6-9fbf-632991251e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "17ebe2ea-df2f-407b-9c1a-909d2df0f3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af631fe-cf59-45a2-8143-1eda9baf7798",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99da116-da3c-46e9-b23f-9c73a4ba9bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93c3d2b-3203-42d1-a881-5ad00cc79fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb47cc93-c7ae-43d2-905e-cc882b8e24e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b19c4eec-b9be-4b7c-8534-a5972ffc1c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ec9b36-4524-424a-a570-3ad5ebc75a76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df7bd51b-5c43-413b-82ef-449ea28d9809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d168dfcd-1062-4478-a98e-3799366e8359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e60ae9-554e-4593-9ea5-e84ed8e61dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af421268-bfa1-483f-8a75-e3374f6ae129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fe8171-3b13-48bd-ba76-87ec4645a36c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa7a5a6-45fb-4c45-a6f8-ca7c5b388457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378be82b-c836-47ea-ba51-f021c25143dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a006cc-4459-4b9d-a631-76434595108b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "afc35e6f-2e7e-4a91-be18-163bf46d8946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e40c4f-f48c-4c09-b15b-3dbc77f93e8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97a33c7-a0cc-49e0-97fb-94c62d90ce81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d002e5c9-7c36-45e6-a3a3-20452efac41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f52dbb-2817-438c-9e29-05d52ac20e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1e2115-86ea-4884-9214-27ff2faff458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da155fc9-a164-4475-9401-40d369daa9b2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5a9b07-0c3d-4650-8c67-c80ab273cf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b2e138-4bca-47da-bf71-fde0d5dce806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3885223-0bb2-4f4c-9f19-eeae907eebf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2329efcf-fbac-41ae-a4d0-1b244ee2e509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845eb3dc-f5b4-4677-9876-889bcaeaa301",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be56b10a-9e02-4144-a378-cb997daf233e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76504388-40cc-447b-b429-21c1802becfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0b31c4-8b18-41f4-abeb-98b9c679c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18e54942-69bb-4c68-a325-6ae498b748ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5976dc2-2cdc-4c4d-b2d8-6314d8584385",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0585e7e-d59d-47b7-b356-c5bf41ebf008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928c8ed1-3e3f-4453-bf3b-05208127162e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f34dc42-ed63-4444-9612-539a07c5fa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "536539ff-2a27-4d78-b1e8-79f7c7bef678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd24d8c1-9d8b-4ffe-b3a8-bf489a92cb9e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1d0867-74a2-4be1-8936-4e17867f1f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac6a0d9-bb46-4cda-bac2-489ba9c8d77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e3e83f-f384-4df7-8ef9-ee558434701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2543162d-0656-409f-b532-4ca3312d4af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ecd97-58d0-44e2-98b6-cf575fc8613a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ef5649-45fb-4154-8e17-9b430d1e22d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e570cd-a892-4c94-9b30-c6b21ca8b0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405b2e8a-ea69-4f1a-94e6-8fccad76567d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26c26b72-bca3-435a-9ae3-c2c8a5b256f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bc400f-b2e9-4acc-944d-0c4b2171976a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff804f7-6cd9-4f1d-9847-dd847b2743a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d31c457-c312-49d0-8aba-0b29f584d270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2418105-414d-485e-9463-0743d72c1a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a79d1e37-8904-4ef2-8151-0d4fbce97bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009c6381-f071-42f2-b40a-6931301ca6ec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4633a7-95f4-493b-98a7-d6fb8700a799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b3b7dc-e70b-4bac-9704-bdb29b532676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1a6d8c-f30e-4b92-a627-89f6ec04a82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a0fde9-1945-4e3f-83ed-dd891b03ea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0b452c-6eb3-4039-9a4f-7b5745ec1a1c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcfe5ee-d0af-43b4-adac-7a899ae6ec6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98374355-2571-4589-8ddf-dc43007275b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcbf6e1-f48f-48b4-81f7-05f06bbf4344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb756228-cead-4c1d-8b12-8df93a56f8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9dc65a-63de-4e24-8e19-df5b45122f7f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d21970d-0525-4fae-ba0e-0688d9378fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e54256-76e2-4f9d-9ea3-b260e98a918a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bccd3e0-287b-4c35-98a4-8a78371f4f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f48e10-c6eb-46db-9dc5-af57f3c60c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca63cc5-88aa-43df-acb8-d10f46623afc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fd3eb2-7f86-4f64-afa4-c938522edb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf577d7-6ee2-4360-9fb1-554da1b772b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3904d12e-267a-4717-88d9-3e14423fda35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba70004c-36ed-4856-b566-ae0847c64c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc77f73d-65e2-4ab7-a24a-6abfc93f621a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda7e15e-d331-4a83-9ca6-390baac2f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5184853-58ab-49c3-b1d6-0e71acfe8281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7991737-405b-42fe-87db-9debcb8715bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5585563-5f77-4057-83d9-8bc3c791eb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ffca01-2c18-4536-818d-00b861d04012",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3bb3d1-9e49-4f50-9e7c-2e37ec8849f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f109f59-6623-4c73-a619-5e55221e9efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82349fa5-2ba9-4ea1-a88f-8952cce37082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2880c8ac-73eb-47ee-a5e6-045804a3f9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e04dc0-a8ae-4064-ade6-d998fb9aa835",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f154d689-6ab5-4889-b05f-cc10a77ec636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8cb140-0e23-4e09-87a3-70d36b964bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78ea62d-4077-4a59-87c1-b8a655bbc857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6bd72e-a51b-4d88-b1f9-ce058df6dd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14473472-9967-4059-a0ae-e6f63a53c58a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168233df-1b8e-4179-bf55-d863e5cfe93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "263dd2d0-a7fb-4063-90bb-961f37b55993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47a6a7b-961a-4c14-8d89-53ba2ca2b8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c79a1d8-2cc9-4330-9060-ce2774d8cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e97f9c-f51b-45fd-9861-dc185898e358",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55562d37-0b60-406a-8941-03a8a40feeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96bb77a-9708-4395-af36-93ca51d6c211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb04080-343f-4491-9565-4f737070dddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "673ea9d8-e35a-4539-8571-52142cef9f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2553fde-8eec-4f04-ba5f-238611027647",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bc6d52-1146-4bc4-aa50-58fc5ab5c490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f7df7f-d487-49a9-b217-5b888f500061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1086b240-dbdd-4d0b-b638-7fb45a00b074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0958e7d-4bb1-49f0-ad75-72f9a7a27d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584612dc-823b-4e56-9577-f09f1f720aad",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae23d443-b3d3-43c0-9e78-8f70e5a3e4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f9f00e-4bae-4067-90d8-2f4a2ae82fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b732334b-30bc-42fa-9fa0-aeb0350f3cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51edce6e-0d24-41ab-a753-e8d8f4894132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797a1b38-8f64-4cf3-8c93-9bb1c294920b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de8be74-bbf0-41c7-a22a-e999f55a0e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57366514-65f1-4528-978b-d7a0ecaabd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62b629a-9d23-400d-a134-4719134f347d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d19b4ee-6125-4a3c-b81f-cde4469b44d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173a0b94-69c5-47d7-8094-f4293685658a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae10657-e269-41d9-bd36-535cbe6463c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36c93f4-f36c-45fb-807f-38e6c586599d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0347267b-650f-47f9-a196-ff6d5ae6611e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ea8d76-f268-4387-9483-f7da9d17cafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a4dfa0-0107-4e2d-82b7-5c82b96a89df",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d16313-2382-40a9-99cb-d332520ce6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42844fb1-aa33-464b-9a2f-f562be3e4920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bb8b4a-79ba-4ec0-8866-fbbed9050bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7be8adc-05ef-48ac-8408-c2e9600c9f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c036770-eb9a-4276-b765-5c81b838ec5f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e034703a-7019-43fb-b9c3-e7a1edbd95d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef08af0-3d05-49e0-94bd-7174f9cc73c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2101fbcc-3f89-4531-8f58-5a77f50a7160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f587304-2903-439f-be58-d777c75960ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716adc8a-82f8-4fb9-92e0-c0e6eb642d1b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b963723a-aae3-4d89-8b84-3277aea9dfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854cc0c7-0a48-46cd-83e2-556db44aeab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5c2842-d0ff-481e-a263-7822f7c44df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f1c54e-88ec-4702-8a92-8a01bf01863d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8823c004-9399-482f-9689-5f52e10ab890",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f065995-4493-4f08-bbc2-f657157089bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834e6497-7727-4156-bc7d-ac3356e05236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08f5414-759d-4a24-aa37-477ebd6410e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "801de272-5feb-433c-b956-d326dc848c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549619d1-0cea-4eb2-8da8-eaf30f245070",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531d98fa-581d-4948-b943-41faebd61f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e29819c-f416-4c83-bfc8-c6a50fec5169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa6cd3d-3755-4b8c-80bd-08b3c01480cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40420f52-fa2f-4d5d-be49-6f46dfd243ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ae8acc-126f-4621-97ce-ad5f9d427009",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca91963a-62bb-4f56-a710-56e8c5c21586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18bd96b-b261-40c2-b87e-583ced0ca698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc32335-99ef-4bdc-9824-2e0f78b107d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d371b65c-92a8-4161-b62a-df1efa1e44b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d1a0bc-2319-4e6c-8686-356db796ced0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982b2154-9bcb-4551-9ecc-8462b7b1a143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054195bf-2df1-47f8-9450-8cd2886a22e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c09efb-6444-4947-ad1e-796c895ea908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7ac06c-3312-4fa2-b7f1-ce4dd67d0714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f757e8e9-b324-4814-8115-b54624f39c6c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a5c8a8-be89-48b3-b4cd-3b18ef3f3961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3bddf7-6b41-4ce6-bd6b-c1b6b9dc87f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1ea632-2aa3-44de-abcb-8404b7bc7370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff04a99c-830a-457e-a83b-a6c31388fb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7adf080-bed7-401c-86eb-4970c5e119ec",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5999dfc-3936-4fc6-a265-4d2427dcca45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb67836-0560-49b2-8ac0-944df986726a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fe379c-5f2b-4dc1-8d6c-69d55709c760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "063cc727-c50e-47a6-a993-746b857d7fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cd054e-d803-4a26-bf53-fa9e5244b714",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6a31d4-82db-4859-87ed-0a9c550ead90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3441ad-f433-4443-b6e9-00393860118e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5b05af-4075-4be6-baa9-9becc3394cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da981dad-2877-4bda-a4fc-2caad00a3f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9ec491-b50b-45e2-bd8b-6c6f5bbff20d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25137175-8052-4f2b-a645-d87c1346e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c4e904-f573-467e-9f24-667f6ce64f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82f1f87-8f22-4a4d-8be4-4db4337c2923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c52ed37-5fe5-4c70-8751-acd63eafc629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9954dd-5147-4ae1-b59f-c918a1ca6334",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f496d7-6288-401c-8f43-f15453e61e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e544006a-6789-4327-9154-408a1d830dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcd31bf-6d34-4bc7-a074-34938db6ea8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c016cbf9-468c-408a-bea2-5bb8d18da68d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a33aed80-ca7b-479e-94d2-b26e1e2255f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92be7c0b-f22e-48d1-9125-33ede82eb800",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1aec38-a266-4ae1-b6ad-6714b2a41e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96e9700d-80ed-4a7a-97bd-2915b35aa22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef3ffc-7f09-4e90-a4ed-d6bc778da813",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e96cad-8fdd-4dde-ae38-77e803cde8be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22836140-ddb8-4f69-8403-c14052ecf7ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dda14d0d-3be5-4031-9d9a-a4cd45bb8a50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65dddf68-a808-4b0c-b26f-c00a2d3bcc22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8861d66e-5616-447c-8ad2-748b98a549a5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e450c250-f3eb-4ca2-b8d9-c8192151b525",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d72e0cc4-87dc-4fa5-a574-45dc0dd22fa2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9862283f-f87d-42a8-93ed-7b8b5538d24a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b779fe61-b2ff-43a7-a756-6cf601c4e662"
                }
              }
            ]
          },
          {
            "id": "ea9683a5-4229-4279-b7e7-615af84eadbf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ced3b9ba-aba2-4f65-bfe9-8f0c23fd9864",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0e8ddd44-5c4d-45ba-986f-e2a4b85c520b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de90cb2f-4ba0-4344-be80-eeca3fda5723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "960060e0-1b3a-4dff-a8b1-4a4830bfc641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f440ea2e-0389-4356-a5e2-4c9dd76ba466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea60b912-920b-4ae7-9fd0-c78bbca2b444"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "429486a2-515d-4e8d-98cf-d16dc5d17ba2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b97c0986-2f1b-44b7-9f88-0140b8b26b03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "589e14bc-7d99-42d8-9f48-7101731c1dad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5113cb14-ef96-4720-a329-96848f9406a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24d9a185-4599-4ec4-98fa-595d8944a0ce"
                    }
                  }
                ]
              },
              {
                "id": "adaa7a7c-d392-4c98-9553-2f29fe4900d6",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "507d8e5e-e074-4961-a669-23c0e8fc1824",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5d99263-5bba-4475-a9ff-9cfa3edd42a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbc92d4c-30d9-46f6-b297-d396a421f66b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6971e05d-da5d-4c81-8611-22625ad0bc7d"
                    }
                  }
                ]
              },
              {
                "id": "f472659e-ea30-4a8b-8b2c-65d3976e71e9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45318a23-01ac-4e25-852c-756715dafe6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3c4ec55-fd96-4163-a023-3ecf407de93c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8c65eb7-4d0c-4e40-89ae-ad4a9fd6c27e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57319b55-d5b6-4d8e-86ed-22a0d4dcea4c"
                    }
                  }
                ]
              },
              {
                "id": "2e15762b-b23b-44b2-84e9-f0ceb0a3b8cf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23a2636a-0eff-4f87-a258-843a0c476303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f3088b2-5645-4598-b1f2-b5b02490c26f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0bd03cf6-92f3-42b1-b8e1-6687230025c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "398eae5f-7ae8-41de-a15c-835b3ebe24db"
                    }
                  }
                ]
              },
              {
                "id": "4b9111a2-5767-4909-912b-508370d1e8ee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f81db369-5a36-4422-94e9-8f19fce7abbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52c00cb1-5e11-44cf-aa91-a8bd491035cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2008a079-a442-4d3d-ab28-e62efcb6e41a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c6f9bf77-bacd-4b9c-bd5a-50fd0fe7f223"
                    }
                  }
                ]
              },
              {
                "id": "9caac095-d9cc-4e32-ab19-99b12c7f0fd0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f54a8a5c-9704-4c3a-b5da-9a442f753d49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99f70fbc-def6-43b1-9f61-a55654980f1f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25727c1d-1acf-46fc-a2b6-67d5f32f07e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "767dcb74-7683-4188-a2d9-25cd197495da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "728d0666-8751-4f70-b2bb-c87c02848c66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6055b47-b7a8-4350-a771-4b0a7e44635e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aac626d8-76f6-473d-9e5b-7214e160216a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c375568e-59c4-4850-99cb-b11432bd3a01"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61b8cf57-1a80-4e41-8d92-1253bd60ce05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6a9e92b7-f55c-4035-ad07-cbd737e13899"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf783fe3-89f1-4beb-bad6-0e27289f42a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19e69898-6e05-4182-a30a-57d8e15b0183"
            }
          }
        ]
      },
      {
        "id": "7b28ce37-87bc-4c94-a264-c88362cfd660",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8a1dfa4f-0f1b-4dee-9376-46d1d2353fb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cb47f77-83e2-4631-a91b-d0405f272447",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f350234-5879-4185-a352-62b885083885",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b58a99e-8b14-4b5d-9eb7-c65bf84d46cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21bdbd52-d36b-4338-8396-515a360eaba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a658f06-cd14-4813-900e-600daca023f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "51d7ca03-f930-4c28-83f1-800a4f19eba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db64d2f-d575-4568-b0ab-fdaa6efa6b65",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3804d11c-5472-41f5-99bf-4e76429a3a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e423ee2-2093-44bc-afc2-2579d6e60a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b139bd-afa5-4e03-82e4-0c99e92bbe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6967bd21-f533-4047-8cef-281efbcfc472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bff134-837c-4c2b-8652-78d691126749",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9740bffa-6c6d-4507-b15c-760c0ff4c1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a997415a-45f1-4bea-b1bb-5c69bf2403d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739c16cd-5e8b-4716-aa3b-c17b75afdf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c879bf1-06f6-4d2f-86d1-bc6832706491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b90d495-1b97-408a-93c8-bfcf432cdaeb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562233e4-3714-48a3-a49b-de41fca1007d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f7d0f3-112f-4619-ba62-9ec8def80925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ce935c-fcb8-471d-a6db-063c72fda7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccee6cce-feb1-4e78-b4c1-8bf5557db419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636b403d-24eb-4393-a4ca-a7fca152ff6d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3d581b-cc1f-4adc-a651-c00bf1000fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ef71f2-f5e2-4d47-a005-4efc8aadbf98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb31826-3999-47f7-a34c-824b7a7e9d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba987bcb-61f8-401b-9671-427a68a3ba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f69227c-117b-4a59-9793-141664c8104e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3291e095-8136-4b5d-9187-be772448cf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3ceb9f-7a70-4cda-a0e7-699f402d144b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1c3d03-4aad-4b74-94bd-c20ae8436d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa72d2d-6511-4087-be48-e0c887593fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41126a08-1163-486c-a61e-446d95fe93dd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddbc0ea-8a0f-47a5-84ff-3be0a0a89bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f96ac07-89d0-419e-a3c9-91756a183a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74337116-6f23-4dca-a91a-c30acdd0b68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45e8fd0-83b7-47df-b457-cb159fee07ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7d8f70-e15e-4fb2-a56e-cbbef250076c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3778f765-9b5e-4f31-87d0-7bc85dac40bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182f8e72-6cc4-4bff-aeda-25a9ad2c67c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff43a642-a571-477c-abfe-8f12c5daf94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e636e7d0-acbb-482d-b818-aebfd2a72ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477abb68-0c1d-4aed-bc8e-fa66e924f9d3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fc0ab9-60f4-4f3b-a9ec-12aacf1ab853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e54eab-b79c-4766-a862-984ee856f219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3963b8-1c66-4a22-aa3f-0ac8ed22d020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5919cd96-007b-4a58-808b-f7e7a2d8baed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d65512-212f-487b-a6a9-dfc44bd80d2f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644f91af-8af4-48ae-8dd4-45e8764eb6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb91759-11cd-4aff-808b-9f0bf495ed74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186fc3f1-6c78-420e-8b69-415e2f353674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bddf668-e03e-438d-9b9d-f2f92e15a920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6549479b-4845-4eef-a21a-6d060556e85a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7292ca-3bfe-42e1-9485-8b3db4c0e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9d6e73-30be-4e3e-96ca-9ab72aed8095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c0deef-f9c5-43b8-88d2-0c3ba4390ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bc9f07-8590-499f-92c7-3daa95eb0323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a508de6d-fc83-40d1-b196-4923ad281d19",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92799c4c-6ecb-42f8-8acc-39e95af86f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca1a5ba-122c-41c9-8515-6e1353543755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b62c35-989c-496f-b54e-8608c6955deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25e07f54-9bce-4f66-b916-72ce032d4063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f960159-bb51-43ea-8cec-54cbc822f69b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f72d214-1f0a-4af1-9166-340e120972a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9100ccd-0018-428a-ba6b-afd0a30090db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c82a6c0-d388-490e-b6bd-d734e2f312d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd0ae6d-3dec-4ac2-a41b-3f83aca9b61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a89751-f346-4502-99e7-37434bbad3b6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea31311-9b53-48f9-ad90-03f3c25cd871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4de6b1-26dc-484a-ae05-a28c3279e740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46bbc7d-6714-44b9-a11c-2ec57fc4c459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc25fbb-dcb0-4708-8866-ec7dd968742b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e3db72-c861-4d26-a6e1-69f98e479154",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1cb608-81fb-4340-b7d2-ceb69349671f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a787e0-f818-453f-a246-3e0f4e68e261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b87d938-7abd-44b1-829b-b0e63f0ec9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "25df5e94-ad68-48f3-ace2-cc50c054935d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f021dc7-c3d4-4f61-a8c0-442d62532f7f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf6ed49-1dae-4db4-88f7-d2e7977ed919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72979978-3685-4a49-913a-8efd7ec3f4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825b3872-c5f0-442f-beb1-b68cb21602c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fab0928-b32b-4500-9a1c-e865a1c6e703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d9bbd9-6189-4400-9a3e-dec0d2561163",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091590a6-4792-487f-88d6-b272fe22696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a396801-fd9c-4b8c-bb41-6b2de17664a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2e470a-97b8-498f-8873-399700b061f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3957a196-2279-40e0-8cb9-467986ca9372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567eee9f-0773-4a4c-b257-0a99cf4958aa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44284eca-1781-4ddf-ab93-52deca02ae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0963144-0108-4914-9877-3c21bd259f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33f3c4c-bb95-4c1e-b501-c9de8f1e7931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1576b4a5-a402-4e3c-bf17-0857ad5744f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a49c6d-cda9-4d8a-8c6f-447e7f3a656a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db66844a-5867-494b-bb0b-39d5015a6659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d7a5da-47e6-4944-aed4-556c1e3c37a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc8760e-7e4a-411c-bf46-42f95df7c985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8e6471-0b03-4595-aa87-55b87a4ade39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00f1417-a15f-426e-9025-1bb7217c32f8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cec95d-2b39-49e3-8390-140c37065982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39ba250-e62b-47b3-9471-60ff472a24bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4a9708-9c77-4df9-8a59-993d55183011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4edb93bd-bf58-4534-a8ab-3f77a90e9932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e863c4ea-34e5-4cee-89c0-b0d9cfec27e1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166b8ecf-dada-49e9-8eb9-2f2406c38b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0c4084-a3e5-4279-af20-7d48bd3714ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62773ac2-2533-4046-b86b-4ef84049bbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9896706-386f-43b7-aac2-7bdc64fbdd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d5ca1c-3a97-4d6a-82f6-1325838015c7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfcf45c8-97db-4a9b-bd93-9c4b9fb0eafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b322dfae-f2d4-4a1f-ae5d-ac6042320fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa0a7df-2f9e-4a92-8073-9dc4833a7650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1124f147-6f6c-4476-b5c7-9d743c712717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa1eefe-f3c5-41ef-b792-6c47dfa12ae7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f2df6-386b-4389-96ed-9a167aef6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be63b153-2181-495f-8ac4-a63d50b54104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19217d86-ec10-4df9-bbcc-d435ae6dc265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0371b9b-01c2-4ffa-8c82-99fab73482e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e78f6f7-a50a-4a1d-98c8-e27fd095262b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443439d3-d7a4-4c33-ae56-509469a95c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9098648b-214b-46c3-91d5-e08b0be8d642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d50804-7f05-4c5f-8be2-f287e8d4141e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74dc71bf-3232-4de2-a528-044cbc96dc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbdfde0-53e0-4b75-be7a-874b3e2c614d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97ecca2-2961-4324-b401-4c805013486b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641e128c-f045-44b7-a908-4f532753b086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448e92b3-c84f-411d-ab15-e3d88a57a479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffb53ee-a9ad-4600-8625-7be396d552b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e490f0d-cf08-403f-8be6-9aec0aa7c108",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7733f9-84fa-4852-bffe-f482a389f033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16feab52-9383-46f4-beff-84769b01d645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9cf360-5dc2-480c-98c8-1d7f5d8e4381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c63668-bfbb-4b25-b3e4-c59fe9d868c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85ac696-220b-472d-8d30-f4113a633bf7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1610161-38fc-4226-bdcd-64dafa6378a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d38780-4df2-4eff-be32-0b0a80d23114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2d4b6f-8051-4dd0-b04b-b1f7657f1046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe34c7a9-fa81-49de-987a-12d33e2dde7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b368e93f-66c1-4e96-8ca5-5ff99c97dc85",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67d1a72-4bf4-4192-89fd-0eeaa707d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d21ad3c-c1f8-4692-b616-92d51f979662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f291a4c4-14ae-4d03-a205-08850cfc9771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eadc1f78-e41a-42c9-865b-a52c69199a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bc7c14-39db-40d1-918f-d52ef3577d32",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0896dc-acd9-4de3-a3db-54c0758ddda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a502a85c-2cfe-4b25-93b1-5ac6edd4e8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6797524-244d-4302-8e40-13ac07d23ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bbc8a8d-a721-433c-9f4e-d46ad6549495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21d9eb4-a194-44ff-af28-7b301db326ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1f7053-3a00-4367-bb8f-7f71fbfa51d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9327d13-8e6f-4a87-a57b-ab562ccc5de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f1afd4-2a2d-4a77-98bc-bcb293cdf602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8978682-33e7-4cfe-bcc2-c824f68249ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2389a5-ed14-44f1-a8a7-1d946e42ec8d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5973da11-b344-424e-8138-a9b330f8eddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146f3caf-3ef6-49eb-aa43-55e8746fef8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa62d26-b160-4100-8fc2-8558f65efdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "520f1627-0202-469f-aca3-89da46c9e883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6663ce6-26fb-4d72-91ae-7ed1e1555c28",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db0fed-63ad-4134-a64b-c81ce1ae0e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395e34a9-12d8-4487-a5ab-ca0481557ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9207c74-47cf-408a-a58f-ca8681feb115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e664ddde-d3c1-4bb2-ad55-1206b7994185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe8616c-173d-41f4-a00a-e011b4765c36",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89acdbcc-7204-4150-b75f-916f515807af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7b927e-93b0-40ec-9351-ee679a392ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a63ac6-4feb-4ea2-86d5-b33152c7f175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "094f3f36-fe58-4701-bcf5-0bd2be80102e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e186190e-511f-4ec4-a26d-fd4eafcefff5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a9ba6-72df-4771-9c54-a31cccc2e575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92412602-3e8f-4083-b673-70aefb1f38a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d59569-c937-485a-9d5b-5d99dafaf542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ca2cbf-4b9f-46d8-9336-81fe4777de5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5217f22a-2757-419f-8071-4e3d872b98f0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e387d3e0-c79b-4e5d-bdb1-87f0ac6f2d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2627f06b-1956-4661-affa-37a2e2889910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bb0302-b236-42b0-aafb-6b66e73f6a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d896abf0-139c-4cc4-9ce5-f0be5a036f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f66743-8777-4e75-b7dd-1451089987ef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fcb121-c938-4f25-9aa5-ba90ec80ec21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8590cf8-5d65-446c-8b41-cd54be229956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd855e22-3cd6-43d5-aed6-049975e8d166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "016d19ff-9619-4772-8409-ef1ca9d3d838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4944ff3-d6b1-4a1e-ac04-bb2b3bf4ede7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0346e5a0-15aa-4cf6-b7fb-fd6f505f0adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6558dce-f29a-473c-b0bb-40db01df7800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7a2ed8-38bc-4f0b-af7a-6f60e593bcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "677b3404-f2bb-4abd-a91a-e9acc49f2aeb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4984fe1b-3ba8-4d11-87f6-31bff28c5bd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d855b047-27a7-4624-ba0e-35148aab5982",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281ab698-69fd-40aa-8913-3f3214db631a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f09bbe34-c69f-470f-abde-20c47fdc0340"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4071db-96ff-4346-8b93-e30ad1d5bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f88df5f9-5c59-4219-8b5d-b2d06daa3fad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80b52bf5-693f-4474-be92-c811f2fb0591",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f937f3a4-ca7e-4918-ac06-62b0a19f74ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "743e0f59-ef68-40f2-9328-cd9809cb91e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ae362e7-8868-40d1-bd59-94988ca5efbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d25b370-aee7-486d-b07c-99adccf3a3c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "150b6812-495b-4f9b-b913-12913d8db8d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dc327e4-d03f-4581-a340-07a651306374",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c0ca642-1127-481d-b73b-0cca019a0639"
            }
          }
        ]
      },
      {
        "id": "4febc5a8-d744-4b59-8b0a-be583fc0c8c8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6a2bcc3a-8775-4094-8c4a-0a0f96e66075",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64b9d2e9-fa24-4ec7-ab0e-f89948c4c62f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "690f6a00-937c-49b7-916e-af158acd67ee",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532390b5-a1f3-486e-a66f-d92313ce1f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d111280-47e5-4cf6-9749-28651cab2dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8dc643-3f86-47fc-bc05-c80df7e276ec",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6e82f5-ceff-4794-8f34-bc0a5efde889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7023533a-2102-4655-bf1b-876c8d6cc938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c29248-255c-4567-b6b7-f8a0f86aadf6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1181a24-a8f4-4f05-9252-d0d4f7faf8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8f9f6f-6a53-4ed5-8570-35dc572aa6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae149d9-d0cf-44c4-8e53-e61b78130537",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b64c3e-7134-4d5c-be9a-0f159c9ea99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acaaea94-c0f4-4bdd-99db-aaf69e96f4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79f1eb4-5a94-4e90-a932-e61314ecef95",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07cc663-f907-4b8b-8730-eefe98ebacf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed854b5-e955-4cd1-957f-d77afb1162f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79671fd9-b739-47d3-837f-f6dba446626e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b4237c-dd97-41f7-b5c1-ce4965ae4128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d187683a-72d5-4f38-bb56-1c4a33e349cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fb2746-35f4-46ae-a475-3076b2647a33",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80775ea0-4ed4-41a2-a556-43985eb9acae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baaa1b1e-6625-4d6f-8b2d-d207f9f60ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea46218-dd21-4845-8441-ca5627785364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b434029-1e26-4e8c-9604-7df3f881d7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335674e3-d1f7-4bfb-acb0-1e3e71b4459d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc873ee-d034-4190-a468-0176f17c45c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b641231c-2a78-4131-b6ac-63adafc5eebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ee2c3b-2a89-4115-b0ba-3c4247b7ad94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3680a9e0-c8c2-44e8-9df1-098378573de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c7ca96-a5d3-4b71-95eb-9782291885c8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cbe9e2-30b0-4b2c-8a2d-c3064cdfcc53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3090726c-72e4-41ba-b25d-f531969ae26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69867e13-2b00-439b-9dae-783d63e482d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6406d17-d9fc-44a3-91d9-406c21097288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04490e0-e8f3-41b9-9182-b7b24bb2ce51",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae893307-7d03-4d12-b208-924c83941cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c056348-7d82-41c5-8b47-d06390aa9318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013e09f6-c78e-44be-b63a-5f484e6e8231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ef20fe-8ae1-47cd-a695-a188467b50bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7516f7ac-9eab-48b0-8501-41915a656880",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb2bdea-12c4-4a32-a1dc-5f0736375e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "262a71e9-a74d-47ac-8a59-8b9d493251cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c73a76e-1516-4b68-8119-04689f7629af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3463749c-e5a0-42a1-9d17-47caccca176f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db2806a-3ec4-4c25-ae6f-da75eb9435ac",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b6f879-936f-4c8a-8cd1-810123e8f516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c865dd4c-3e39-4ae9-ae7d-899c702510e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1587e5d-2cab-4f03-bfdb-0ccfa0ab0eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc784558-a8d1-47e2-a277-3ab80cd9c14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213ba3ba-ee9f-44f9-9d97-203934056846",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b309971-9b32-4e84-aba2-3af0a3fdc045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dd569da-d440-4dff-9ebb-1611e483c1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9164b33-f361-403c-9cdf-6e4f0a54ca9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfbde99-2529-46d5-b1be-b526bfcc5dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f998ec-6920-4d00-8f6c-05ec17f4fcb7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab642d1-7a9f-4485-9163-d588195c86f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "712c417e-3ef4-4165-b357-5efbbce2bce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d00f48-6c61-49cd-bc32-00f73ea2b4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43485027-6b00-41d7-98ea-7b8f984a53f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91c5a2b-a3c5-4155-9b05-c0b8b413d0b3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85d43b9-7d62-4ad8-a7ed-aceb247d0882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddcc2e6a-cca6-40c5-9f7a-b39f952bad02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c43ea6-b3ba-48b3-b4c6-6100005dab6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20298b05-30a1-49f7-820a-8688d04486f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84001851-7c40-4a7d-82cc-af6c72f48af3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679832f5-d087-4afd-8e56-118ca27e8222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e32453-61ca-4b1b-a9a1-35d665f4d66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a558b45b-953d-473c-a5c4-9282f994eb26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a276a59-9808-478d-8fbe-c71049d883fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d49ce4-b475-4760-a0eb-5abc47fdaca4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a173150-16dd-4332-8435-3f25a8029af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b3fc58-23e7-4e89-bf49-97790d298337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90edbf8-61b1-46e1-80ca-63f72efe1e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f45cb7e-7d19-46bf-b8bf-66091f854b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0074564e-896f-4c1f-943e-b4da82bca202",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095cb2a7-057f-4563-81db-2360db9cffc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af457c0-ed16-4248-9f08-4fa9f8d81bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0bab20-ad31-485b-add6-911004bde4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67dd99cd-f11c-45bc-a491-c5f9f73ec06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58f772d-90ae-4074-b1c9-734bdbd015c7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18d7bb6-b117-4612-84b3-1ebbac53cb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862a3bdb-85e2-4442-8e18-0baf3d92072c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee312c1-e0d6-4c2b-937e-2c8320884377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08de03d2-394d-438b-b172-5c85ee7759e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e7dcfa-c142-4d08-8216-d119db5ba282",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e58ce89-5555-4c1b-af3f-9dd4660eed01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d471128-0764-46c7-9637-abe2e2592617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ac1ed-cd16-4f9e-b5f0-c5658c8c9a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b7bd3e-6254-4cf4-b1aa-1a75478493f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f9f2cb-4c02-47d2-a8e0-67beb5eaf902",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead5ad5c-a035-4785-9678-b5012ba6c24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff17445f-f2aa-4cfe-81c7-6669948df84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba36721-1a50-49da-84fd-8875e94fc5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54eef4f9-3d05-4a4d-8527-b2b380cca229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30e47b6-3f55-491f-b41e-308cdbb00abd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45bdf88-c291-407c-9622-3c5ce8d25820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e019fd-d595-4cdc-882c-fe9400570a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad0b9a4-d7cd-46b6-a10f-a321218a5b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3783dbba-2369-443a-95d5-aa2f46b41efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54b6df7-598e-4421-a501-3e2c2f3d49d3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85878f27-69e0-4133-8e4d-ef5328fca878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe5849c-4e51-4b30-8e47-a9d78162d84a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1509104-b465-4f5d-a759-ab254ceb2515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab58e9d6-3d13-4d05-9b8d-61e5da5196ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd202b8d-ce0f-4ee1-a4b5-5ad68cdc1d6b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c084283a-6c56-47b4-b101-a49431197349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5568c390-a5e3-4bba-b76d-3d765b3c42b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096cfc4f-325e-4ee4-b652-c282eae586dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7aefc6-fab3-4707-9a5e-cf1d4365be54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea954186-623c-45c3-991c-ca973bd3d20a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4900015-4fd8-4c8f-b080-0b215969fc6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcd89958-82bb-4944-9967-71bb13dc704a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5995205b-5e51-4ad9-8068-cfa96d224a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e940c81-c001-4f2f-be46-e3ded2041d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6495301c-66b5-40c5-8e75-414b4b73e88f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cee60b1-6477-413c-a18e-c55513060695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6263b0f2-e15c-432b-8d92-2c7d8fedb69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41c57f1-0f6a-40ca-9d81-877b40cb98fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061b168e-e23a-4e03-a4e8-67522ce165b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e741ca3a-59de-4dd9-b2a5-dbc7ee7c6c54",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c862ed62-7e75-4f52-9cca-def2b7d4e4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e67f4804-2e0b-4ad9-961f-d33ac7ea77b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e150aef-c41a-4f97-93a6-f9ebe9c9de86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6c44c7-40a3-4330-a5a4-142f4886fd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f374030b-3af3-4baa-8fe0-8ca3112fdf16",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4cd1189-ba7c-4cac-8767-b0e2ded2d264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67a2cd7-b6c4-406f-afc2-0f7093a48d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed60379d-b487-4263-8662-11cd917bd79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94a9477-2a16-4b17-9a94-5c61ba622fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4614c9-4790-488f-b115-8502ec53112f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0211c9-62d2-4ad0-8da6-15b6dc7fb0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b995f3-8871-404b-9028-0c82d4f9d8c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf9f013-4b0e-4d69-bdb9-12219d2ff1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a678bf0b-f46e-4f7c-b5f8-051f5eceea36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5565e397-54ce-4525-8206-991562533f68",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb61adaa-29f6-483d-927b-a7c727659033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756d975c-abd7-4747-b482-5699828c0eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e658fb2-665c-4d12-b533-295106aa1d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2f849b-7e6c-48db-9edf-f16ea9980bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de78fdb7-54d5-41af-81a4-2fd1aa31f3ea",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfdb560-3279-4818-8b4e-8e7b6553e427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b70426-105e-4c9d-8355-2d8e0fbd3c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8130aca-5cd2-410e-9405-f91802ee987b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e9f82e-8bfd-4c57-852a-14450606f8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf285a2-53dc-4514-a073-01f099807904",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6509680c-c055-49bd-a1d7-9e30b146cdf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da449b5-5823-4e01-bd16-fd919b2314b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9914abf8-8f33-4132-927d-0e5ba02464d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2cff33d-4913-49de-b174-70a458e9f9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7cf307-2ef5-4d4d-8caa-edce4024963f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfe262f-456a-4a73-9c21-d8f3f94c7d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5dc243-86bf-4af3-b08e-fd40325b7f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523f1f29-b623-4d9b-8711-fb8c27d08f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37d4f14-5a70-412b-bdb0-0ddf6a858e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1167880-5ccf-4509-82c3-4d64f396f319",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe846b1-3992-46c6-970c-7188feaab839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc918657-9a46-42a6-810e-c66d70561e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf334c4-6e27-4038-88d5-94b215ba5ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fed7e6-8308-4db2-8d38-e683e4382ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6485c62d-fefb-4307-ac06-271de6c8db64",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892c4729-528f-43fe-ad52-444d69b0556a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c605a940-dea9-412e-b702-4c8020107637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1bc914-5c52-47c7-876e-de3abf9962e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46656c54-6a0a-4779-863d-81c4dbeb7a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdffc9df-21a8-4d6a-a58a-52ea5bba9ec0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2b5713-6516-4312-9c1b-e683a522032f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f191b3-825f-40ad-94b5-adb021fbe000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3f2236-6256-4982-95a1-9dd3556893a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399d8b68-fd5e-42ef-b1af-c404662bbdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332d8d14-80b3-4698-83c2-d6b976336739",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72420da-9c20-4c7e-a411-08097c71fe96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd113a8-7217-4846-b130-e8e05bdebc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0ce3b1-23cb-4cd5-9a6a-c686aae3e53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa1a5c3-b403-4f1d-ad77-cba95facf384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7380896-4fd9-410b-9164-63a029aff332",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c7a654-57ac-425d-b19a-c1af81c817db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a594370-b24b-47d5-b07d-599567a0a8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d26c2e-74dd-42fd-9003-1a40505917cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b85a04d-7fa6-489f-95a9-76cff50521ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18021ba4-65e9-467d-a0d5-077dac1beead",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373238b9-f77e-4ddf-a66a-8b2eb9d02c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f803d7a0-639d-4ca5-be1a-bf5610e2b9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2628342c-c45a-4ecd-a884-7079e25803fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94339c3d-235a-41d2-a751-3251edda3769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e56c998-9c08-4664-8f4f-3ca52a87adc9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23335e29-85dc-4e83-9c3f-6b42d608909d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024ce5d9-e33d-4741-8135-3e8f97e6cc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23e51ae-649a-4d1f-9f67-9d3edc7fe247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97b5b52-f9cf-4533-bc93-71a35d863959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db84257-9ae1-4394-a985-5c1f98e659dd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434add70-bbc3-4fc5-8116-fd89853ca3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "689f696f-5d2d-467a-9ba5-3e8784197184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d23765-6e62-4bad-8bac-419d1a781981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70880da6-71aa-4711-abd6-b34a96f39f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881b70ee-0a8e-434f-876d-447892947be9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5338016-6fa1-4a72-8042-19a5c6865385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b0a6d0-bc96-4638-a14e-3b22012c5aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18690831-bdc2-4177-b9f1-404800c473c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9591a721-290f-4479-8cf0-ee982ae48baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e6475d-0514-4295-b200-4ed8e0a5d0e5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bd8180-fca6-4dfe-b538-7c141159b8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e80334e-c47b-446c-9b45-405960ec2523"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cf9644-cc04-47e4-a5bc-f181037811c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf5e179-de5b-4724-b18b-eaa481aec799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a97634-5ab6-488d-b393-e3d138d3700e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c22d29-c945-45ab-8728-2a86b850e533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec7b24c-26bc-4237-aa7c-bca48b778f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad22b0ff-9dff-4ab9-8cb0-929512845996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39837982-4302-4665-a479-70742c706adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9171677-3330-49e2-8148-ae29ee586a21",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81038eb9-89b5-44a3-b183-7700f2ed3f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5950b3fc-3cdc-4012-b3c9-c1d4de73b2a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb244c5e-d856-49b9-bcf3-a137a47be4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dee1dd-1f87-4f1d-8fa3-0ab3f57281a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d615cc0b-6fda-46a8-9015-472ce91370dc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3efa00-e802-43d2-8c46-22b7d5a6cf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6adc38a-c247-40b5-96b8-fdc9b553f5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646d283c-31fa-41a8-add4-2a45706c0edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b26a613-3ad9-4a8e-a804-72443912f567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccfb008-1814-4b03-b617-fd42977383f2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590ad05b-1bef-414c-9243-abba5fd74647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94305e49-9d4f-4eff-a9f6-3feea3127ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df5b96b-0401-4fcf-aa71-c8f8f4f9279b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dea199e-68e4-4beb-907d-01b624231ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a38bd0-8825-4fc7-86a1-00d18d7c416a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25cc4a5-a50d-4c1a-9743-2f7c6368e4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a896e39-fb78-4d59-bf26-e6be1ed35005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6578405-2ae8-4da1-91dc-51b3c63b55a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54e1d4f-6ff2-47af-8d44-eca88d94acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039ac5a0-44fb-4a62-9168-5bd705439926",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fbfd4d-0e84-415f-b80f-dd837a5526a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8944e258-4abb-4502-9be6-68700af6775d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90c8411-2efc-42d9-ab5f-c768e5818dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ea0c4d-18d8-44f3-87fe-146adb5936b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a9e491-34af-480f-a10a-3b350c934e91",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bef4be-69bd-4e4b-aef1-d0fa356f719a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6deb0b78-25c6-4fdb-b4a7-f622113e08fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06768ed4-7ee3-4f35-b14f-b6ee98b47973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2754fb-c071-4665-8d16-d7cbbd2dd91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806afa4d-e1a8-4eec-9824-17a93a6baef0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62530174-3ac1-49bb-aef0-e5481fc47b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b1ada1-ea4c-4668-aac9-6743caebda0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b8bb8d-8383-40e4-b693-d901b0b837e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2d1289-ffb1-4440-b628-60413155abe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f1bac1-7a14-4cd0-ab5a-29ddc4e42baa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bfb305-ff38-4edf-bb54-6be140995faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8419a329-15d3-4d24-8641-b09439f03093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32717800-394f-4775-a250-105a8172ca52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad6582f-d88a-4bab-af37-fa98e809085b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4dae60-75e9-4418-b1e6-36e9d2d4b435",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febb7fa0-f159-472e-8be3-2b0bd5a5fca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c90563f-aac3-4b08-909f-29ace492bf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd67d576-bb75-4575-a6ac-00ebd4df2465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc386e0d-0b04-4e90-9dfe-0cee153cc291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e5fa58-590d-4143-a05d-c1a42934617d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe29d14-580b-40fc-84f6-a1cc0e620b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028fc87c-62f2-4fa2-9ace-3855b69bd7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3521b326-a90b-4580-a944-6bfbe4833e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebcfe26-6fd1-43a8-aaff-61b8cf95444e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9baf65-9a99-4f48-b3f7-404afd759835",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a0ff1a-ff65-4c1d-b522-76df054cc147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4be4dfe-fab0-4928-905e-2511a809bc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585116e7-8899-465b-bc3e-85e0aaa7914c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82db35be-82e1-41d4-9c91-2d7402e9e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471e90c5-cc79-49ad-9f96-9c7bf721d3fe",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a91247-5f7a-4491-8163-0a7a387c2dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d2c2b5-a6b9-437c-b893-4bd9104871dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7f18d8-e295-4339-bf2d-d2a781cf1dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdaeb14-da88-46d0-888c-fa934e91e910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5461edb-2c76-4671-993a-eb4ecd613938",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4265b60-86ee-44ac-a455-48d1ac191ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e878d473-a3fd-4715-bfa8-124820a36050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f1c94c-866e-48bc-b6e3-2ad3b2ef2483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ce2e86-0b96-42f8-94c1-e1b827a43d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4492891-6441-43fa-a037-388f2de29a2b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abfa44d-78a6-4527-a3ca-299e6fccd5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e310e517-321b-436b-af98-dc9da2500bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64551b9-42b2-471f-95ba-6e36c9944db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b50f47-08cd-4eb1-b7dc-0210a036f451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f91057e-90e6-4eb8-9ad5-3c02c993c6fe",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ca600b-66a4-4486-9b30-2f2fdb321b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba45c06-ebb4-4eb7-92cc-b929692a58af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115aaa13-14cd-451c-b23f-338506bcb317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c3542d-d655-463e-9d32-efb6a58be30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285360b3-d509-42da-870f-b054b0dd0a39",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66edf9d1-f8fe-4e19-ac2a-bf0f6ca9cc71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98296a7f-0205-4270-9b6c-4ed8b8de1615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbaa165-5822-4cb7-a9a1-bb8b9bfbe141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1202015f-fe82-4850-bf59-7903d2bb3ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d43892c-eea8-4543-81b9-f75186e134d3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b350d6dd-d22b-4405-94ea-4d941f487499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ed6f2d-9541-4892-bc02-8ec0f3f2d239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9a4783-74b6-42a4-aba1-fd772b6ed9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349e158e-1835-42e3-a627-52990ec40811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42903595-ef80-4259-831e-c83d20fc8568",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907be9fb-ca64-49b8-8d35-9b39bdaced50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889adbdf-f90e-4f63-ac1b-36ef0c8259fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c81c57-df4d-4fa9-bd0d-1a97c28eb3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00989439-ce43-4e20-bff1-59961ac1dbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeff063-178f-42a8-98c3-31158617af66",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3982d0b6-8ad0-4080-9e3f-987d06341948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4434cb3-de05-47a9-a6d3-c2863b9e880a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c055697-2f0d-40eb-bc2c-f255de426090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeec0921-24a3-4498-aebe-d4d85cd82976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761b50fd-b293-45fe-9a56-747a1ec202b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf74bee6-ffd8-42fd-8abb-6d11625444d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db99536-8585-4663-8af8-acfaf18dd7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b434a58a-6656-4bfe-9ba1-43917efba77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961b3637-f427-47db-97a5-ef0b18418136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ed427f-49fa-498f-8eff-eee770252322",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a001d7-841f-4719-bcba-f1568e41a535",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6332a0-5a0d-4f50-989f-aa9e8629612d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cef473-845f-40cb-a712-db80363eadb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1a3ed9-2e43-4640-9e99-5c2425eedb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4193077-7893-46fc-8361-db9a82419cb5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd04dfa9-6fc1-4cd4-91aa-99ca9a3bcbf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682d4d8e-e8cc-4eef-ab11-1367451df786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70de54e8-525f-4982-86cd-3576687825cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c62910-9c87-4a04-ba32-3dc3d1670af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79501f98-3261-47aa-941c-f1535b7f5cd4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b7507f-fdfc-412c-bc77-7023359db6d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d6ccf3-b531-4e37-95ef-a7e42158625b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab61a771-d310-46bb-b42c-31de9c6c4076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66bf447-1695-4078-8bed-f1764badb208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26629d7-8986-4954-86b8-1153aa927119",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6f520c-fe15-497e-b327-a341d4c02e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b08255-5cf4-4f2a-9119-2df8d177c328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb1a2d9-4ea3-45a3-bbec-47ca6caa4de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981d3a36-0f55-4067-9389-51dba27019a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8818c2b7-0391-4afd-866b-73e71f210c75",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2eb6b84-01e1-4395-ba5c-896c1fd20b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df93e44-f365-4a46-813e-3b21d1b50454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd1397d-760f-4ce4-8ef6-710124303862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d53bfca-6984-4c03-919d-1a838f41a4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22174b22-d48d-4fb0-a245-57275802dabf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3a5db8-7f9f-43e2-8e14-3db829117c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df984d7-835c-4896-8b00-b956e3fb8f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ef7ff1-9acc-4af4-a1e8-14e86111a7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d40949-e5dc-4e4b-8d46-553017c6c553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24aa89cc-e535-438b-8771-77eb8e750477",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a10fa9-23d9-4105-bbf1-6ecbf1f232a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca6c352-6cc5-4dfb-80f1-7c8dee4acdaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20fa4b84-225b-40ab-8c95-24b5deff03fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8c2b6a-87fb-48fe-b25e-897c6d1ea839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9217982f-14eb-40b6-945d-a70106eea151",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5927f453-d25e-470f-b6f8-63ecd261337e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1864d9-9cb7-44f9-9048-218e20e469d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d524f9-1e50-465c-ad05-b2658da6eb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce39cf1a-f4b4-4233-8b60-8e94adfc0552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65699ca-b074-4058-a3f6-d157217ca1af",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b119cebc-ff7c-42ca-a980-df7e44e06df6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13b898f4-30c6-453a-b7e2-93a018aa1d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2382845-4219-4573-9bb0-ea55171ad5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053b5927-f036-40ff-98b0-3e9aae6dc4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b84dba-7409-4294-b4a8-4f0e93ef3b2c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28222e67-fac1-401d-acd8-3dbf56548027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a92cc15-4920-4cfd-8136-dd859f0e8639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a495741e-3fbc-4564-bb6c-e37e68ed623f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7687c502-2f08-41b8-88be-337e942e3c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c457aedf-fc5f-4294-b603-43f19445e210",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6207eab-51ba-483c-b9cc-c619a79057cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "372f405b-dcf1-4a15-8290-b743cd8b6892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09561fc3-b585-40fa-ba6b-d98f71b384ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7320ea64-f617-41a1-96ac-0cf11538b756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffcfbd8-e4eb-4471-a04c-9016e29d6785",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cdd297-72e6-4523-8ced-913ad64095fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89f2a4a-91ee-493c-a330-d5d47f3f9511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db478750-22c6-40fc-b069-c53c5a6723c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537d6527-4cbd-4126-88c0-b40d8440ea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eb86c9-195f-4ac9-a4e8-e62192af78ad",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef10633-1695-4789-92cc-0f45fb966121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79868993-eeea-452c-bb5b-450f8f17c50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c84021-75d0-4068-8318-d95973547c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ace6dec-4938-4e7d-a980-9f7d7c61ce1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96be486b-e6f1-49f5-af2e-8cea889e7a32",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de5217a-f59f-4bd7-87be-373e5401a46f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1e9ec09-c693-4e23-bf50-0d5feccfc909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c9f9ae-ac80-4e3b-b3d4-7d418085b21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0b463f-6a97-49ac-9b13-a82d54d3af1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a905cf5-3eba-4bca-b229-8b7f906d211f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62e3db4-9e07-4f5f-931a-3c99c54e23c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7e15c3c-d814-40da-bb85-727ddb7f20e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dbc55f-350e-4d7f-8e17-1634b5a6a3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67cfcb9-88cb-4ffd-bf2e-66caf1cba0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b171f4d-8776-4c53-8232-4929aa650302",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c8ad3e-7059-4ace-94d0-b572bda9585c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ad5166-7476-483f-a953-0480bb7e9cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b78ece-b7c7-4153-ba67-469a39dcaaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34ad540-97cf-45ce-8f39-fc9559408458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b7b649-56fc-4e77-bbc5-f2ee4bf3e4f5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bf560b-b9f0-4850-9261-f72991da2b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b73261-4671-4dd9-a679-a4cbf8297891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d2532e-ed80-4c56-9ad2-67e2d7c836b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2253f14d-e721-43c1-9c74-622124a6a41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b225860d-03a5-4f70-8443-6942fc8126f3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c98f68-5a85-4c17-8f20-cad72992e07c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fed53f2-eb18-4c19-9874-e3f0c9ac6fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba48670-0dfc-4e5a-92ce-268dfb5d8de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7f86c0-805c-4ca7-a885-5f092a4420be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207c8a49-da9e-4ddc-a83c-3b9501af211e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf326c8c-3d3a-4609-b034-9a3521abf822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af6dd4b-968c-40d3-b435-ff298f320513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809f36ad-54c3-47c6-8b8f-75666aaf92e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d2c0d7-f791-4853-9be6-6fe1229337d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac147770-3bb7-420c-be7e-0501c190cda4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf7e8d4-1829-4b9d-8583-0c0bd14ecb43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aaaa671-b176-49f2-ab2c-71fea52b2a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54042ff-de18-4636-9f96-83f9529da121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3da8846-6a8f-4a68-b060-f1b72af5fb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1ce347-8cd7-441e-b7a4-2f1288a04095",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe27e5b1-483c-44cc-a6db-402f3d2e5886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611711ce-7557-409d-8337-92430c00609a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c02a1b0-0fbc-4063-b90d-a2519d7de643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2efadd2-317e-47f2-98d6-ce7f982eeb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30104bc4-3bec-4db2-8f3d-8cf7a0dd4de5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e91bdca-200d-43cc-b3f0-205387f62f11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cfbd7c-8c89-4d96-aa54-8787755deb76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac39c999-b9e2-4953-9e60-42fecba0cf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfea8314-c500-4f19-ad33-c35497494798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17057444-4067-4442-b2a8-ef190be9f3cc",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb429f8b-bf30-4795-b548-ee7aafb705ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e102a28f-cc24-4414-a52a-e888f0abaf23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8901808-12b5-4a67-8800-5c2b5cafadfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27512e8e-48c9-4230-9f9f-233113ea5e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6740875f-e3d9-4d02-b3d2-75e1c320f7ef",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9fbfb7-27bc-463b-a297-8a1f004ace1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e986b1c7-8d0c-410d-8360-8c432409c65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafd0606-776f-4440-a133-62111c92072d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8e8932-8c22-4f7a-aab0-350c69020e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fe75d3-543b-45d8-99fb-433db8624420",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f9820c-0c45-4002-a890-5b709fc86d50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce82649-066c-4162-b81c-b221dc574f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e63ec61-6db5-4636-b0fe-397085abab25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a1422f-d0b2-406d-8e4b-b3e13b6337f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f8627e-d8b9-4a7d-a681-8484f1766e5f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e442b3e-1049-4801-b150-824c2f80e394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c9efdf9-611c-4a56-a9c2-177d305316ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766bbf0e-e1cc-491c-8544-b765b31512d6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bdbacb-b77d-44fb-bde7-8c66bebdc341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b100e8ae-ead0-4e0d-80dd-44b2ee87f351",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527a0796-172f-4640-94d9-609481a4537f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844cef60-4873-4183-b968-aa2e3f1e3adf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a98a88fa-0f68-47ca-b1ee-c76dfdd3ba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4e8095-185d-4fa7-bf79-7e4db2f3c586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24758141-3895-4d3c-b0a5-7fd5ab9c3c32",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c31c49-1e81-4304-b6c0-92d83348b14e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b2602e4-1f54-43ca-9319-74bc00c2fd0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d5075e-c0e6-47a2-ba8c-0a713c250326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4c0063-5527-43e3-8b22-3c7cd24d7906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6f9a0b-8718-42a9-8995-b123cfbc0c10",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc35f076-1410-4cbb-b9d3-275c2055c04c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5c1bf8-2af6-42a7-9e07-1fda23e1bb57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1d0497-d1d1-4a8a-a626-d5a0df65f576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce7f885-e541-4f3f-a43b-ad38653f0c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df37c85-9104-4a25-9333-5cadbc0058f7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9488a821-6aff-4527-9921-744ab88e7ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bb1a65-ab33-4781-9f53-7335a69f4ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73076231-deb7-4ce7-9264-aacd86abf3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e192631e-1a7e-4b2c-a53d-1af000b72553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55b3c1b-e582-47b8-bc41-8ede57d59160",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a18f7c1-cdfc-49a9-bd80-eac1af1151de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f0c651-ff2c-4544-8600-907cabdf49dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c026770a-16c1-4c0f-97ad-4e23cb3ff937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fe93b8-f00a-41d8-a523-eb345e9caaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d266caa-867d-4962-a305-7d49b8a5ab81",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55578cbc-d9c0-4f26-9945-c9eba2456de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9adcb14f-55a8-438d-9c7b-99d399aa9f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6b4e74-8038-458b-af85-35c49137cc9b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e82c5fc-e670-4513-b8f6-7e56cb09e955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db85b74-8671-468f-a455-4802b9fcca86",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a11dd0-d11a-47dc-bac4-2f63aa610402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c08e3a-43a5-46c0-8fda-3f19a9714e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79afd872-e08c-4d48-b31b-df62a80f7a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a6bf63-cc9d-402c-a134-d625d9a4ad07"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33f35e3a-92e1-4c76-893d-3b69cf2f5de8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f88c0d01-1df9-465c-bef5-fb11dfdae9d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e02480a-fbb2-4d9d-b703-36f9e336a41b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac71bfa3-762f-4546-bf10-3459f291493a"
                    }
                  }
                ]
              },
              {
                "id": "553cf973-9b61-4a0e-8fe3-afcd3f0979a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0ed9f7c-c35a-4f95-beba-3117cd5fc4e6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a090a9-4cb4-4fba-8e9a-4fea5c80a926",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d43be00-f5e3-4f16-83b5-ec0836e649a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944ccfb6-eccb-4c0a-a0f7-588bc5468716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3268792d-4900-4c41-890c-e99a604cefc7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5008e048-09ad-4c6c-90d8-cd559c337e58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3eb9136-bbf5-45d1-8334-37b90510ed06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe87c41a-1561-4388-9dbf-77776bcc192c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38ee45a8-9808-43ac-b81f-57c4f1778258"
                    }
                  }
                ]
              },
              {
                "id": "9160492c-2d5c-465b-8e0b-3fea323d185c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4d13fd8c-2694-4090-a507-0cdd654ba4eb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b1033a-35b8-4b2e-ade5-6e778b0009e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "165abb5d-7d2c-4500-a268-d7082c3f9235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b51b9b4-2ccb-4bde-9c9a-518bd907ed37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38c34ab-dda7-4ef8-a3f6-bcf3984f9d79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f9c0b1df-bcf3-4787-b626-f31fd7efcc78",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a571e65-90c2-4d70-a6a1-6a1a7bfcbfe2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed396a96-52ec-45cd-ab99-2b11c69703a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1e56d341-7878-45c9-b4de-51c058b4cc1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c9da30a-5514-483e-b3f3-109c361f934a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5373d86c-db71-4860-9036-879490661509"
                    }
                  }
                ]
              },
              {
                "id": "40a61525-2479-4890-a67a-16361f7899e5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd28b90c-2a2d-4d47-92d4-03553537882a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c0656d9c-aece-4a8e-8376-90e3a54e053a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76c727e1-56dd-4b14-9f11-58b64c4e5265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76e43248-e827-4404-85bd-40f4e28300ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d2d8726-fbd4-4909-897f-85b59a9c82b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "057936c8-e535-424c-8e95-d8abe1138871"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ec7e4bd-1063-439d-b591-16f77d174e7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca48a8aa-dd36-4fad-9bd0-3b21bbed414e"
            }
          }
        ]
      },
      {
        "id": "345d509f-8064-49f6-88ee-9f8075cbbc2f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "879bf065-b52c-4702-98c7-f50bc24f9397",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09e16427-65eb-48ab-a1cd-d2aeb04a880c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2ac4aa3-64fc-4d71-9aad-11fe27abd5e7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0f2fd6-5aff-4059-9e60-d612e3a63c87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "03a8eb71-9287-4c59-b9f2-d40dabfdd991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44a0211-b59e-46b9-8785-04d9af1fcc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e294d50-ef73-4470-b998-bd113e13e0a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "216e7a9f-ecc2-4b63-9094-558c8f15e46c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd6d72c-8850-4a06-a930-003945a5bdd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b0dfbce-173c-4c41-892a-20298061acd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f9c6cda-6535-4be4-9d9a-38805fffc21e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ed5422a-69d5-47ff-a96e-5c299f7fec16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b0c6965e-4ec7-4480-aef7-e9546ab8f75c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e13dce7-e692-4d21-a815-3a50df26befc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18a81b30-d96e-4291-92dd-c7d4024db2da"
            }
          }
        ]
      },
      {
        "id": "1706a159-3286-4609-8af1-8da2ac7ea55a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d640083c-1b7c-4873-925b-d2157f7af25f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e08e4589-a429-4db8-8c68-abec5acd53e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87d58d7b-42f3-4482-bb47-46edc470658d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8f9a6f-ce5c-4cfd-8e7d-251cc63f32bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "506c011e-c7dc-47df-8d03-d56a9a3e758a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a90063-d354-4a97-bf52-257746f93869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eeeb584b-ce8b-4268-a273-9751c2425e48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30cc6c00-e972-4dcd-84b5-82e59e82ea2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04841232-a0fd-4a1b-90db-e1e569872b6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70d65037-f342-4668-a5d5-f4d30e2bb8e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a307a3f-1d91-4bae-8877-019f9e45f74b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c13b7412-4cbc-42fe-a3f6-bee875e97935",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a83afc30-63b0-41f1-ad80-15dc48f94f24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9197edbc-e83b-4357-bb57-424c0793c6cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "691455f5-6aef-41a5-a8a9-86275026d2a4"
            }
          }
        ]
      },
      {
        "id": "d8503507-d90f-40bf-85b7-74a449f8b90c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ac3733ad-8765-4ce7-839e-eefd1a57f6ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02b5b7f9-c7d7-48df-8ac7-ea41526a4e1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0846045-e5c6-4637-97cb-f02338e3621b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb10070-3bc6-424e-bdd0-9b1b502ec60c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bbc0f62-0c23-4bc0-817c-35e79d2d91b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cd13ca-0ffc-404a-8cf0-65a6d56a7530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82a38868-541b-4788-9cac-ea104a576a8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "618c87dd-f763-4276-9998-71ab3c7fb598",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92d89f85-4f4d-4f3f-8eaa-1e98f310bc77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4725fae-4837-4fb7-9a4a-5315a58637e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b22a0583-4870-46c8-8012-4c564773e3f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17c089fb-bc45-48f9-bbbe-7ba9be9151bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de4d3401-2b27-4e84-888b-fc3d1e275a27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16695b12-ee13-4747-b643-6e5ca6b34587",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02933dd7-b869-4687-8dc4-4c6f250d5db0"
            }
          }
        ]
      },
      {
        "id": "9119a06b-297e-410b-bb22-fbf57dc4ddff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00fdac0c-8b64-4342-9b52-3d4ac1515ab0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6aa91cdc-d68a-4d0d-be85-827d6bf4ce0e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "479710ec-db94-430a-99a9-1dab13dcb0b7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34453328-a637-4d1c-b51e-b76745f35e0f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5bcc016b-fa46-4e14-bf4c-fe54962b8e59",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 148.11111111111111,
      "responseMin": 6,
      "responseMax": 12108,
      "responseSd": 803.3621633062509,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725496956866,
      "completed": 1725497002615
    },
    "executions": [
      {
        "id": "f01c1b48-a26d-45ac-aa36-eae514b7c943",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5c4d00e9-9fb4-4867-b4a5-dc0b7bb3ee54",
          "httpRequestId": "61b4f99f-ba3a-456b-81ea-aca8eeea2fc2"
        },
        "item": {
          "id": "f01c1b48-a26d-45ac-aa36-eae514b7c943",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "66f970d4-2be4-43b9-90e5-8886f66105bf",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "33610eb3-4f49-4318-88ec-6b5fe3c38bc4",
        "cursor": {
          "ref": "bf5cd91e-15f5-4aec-8fd1-2f86b9c70968",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "93196e21-aaae-4e7d-9daa-88852860d2b6"
        },
        "item": {
          "id": "33610eb3-4f49-4318-88ec-6b5fe3c38bc4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "10d81d20-90fe-42aa-b69a-ddccd0e9f9da",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "a6f36d5a-2ae1-4a5a-8a56-46a8a77d5fd7",
        "cursor": {
          "ref": "d3a5715b-245d-4d02-bed9-ed0bf68dd28b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ffcc156c-c989-43b6-9280-3e1f77c69c9f"
        },
        "item": {
          "id": "a6f36d5a-2ae1-4a5a-8a56-46a8a77d5fd7",
          "name": "did_json"
        },
        "response": {
          "id": "f3388f9c-e04f-46f3-9661-fd0114264cff",
          "status": "OK",
          "code": 200,
          "responseTime": 425,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96126afc-49ad-466d-a4d8-a8799095d437",
        "cursor": {
          "ref": "2d20a29f-8fbe-47de-8366-75a93f2391b7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28a9c59f-ad38-4e6d-844b-ef75639f05c0"
        },
        "item": {
          "id": "96126afc-49ad-466d-a4d8-a8799095d437",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c5e9e14-2e2b-4146-95ab-eeb2afbef58b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 459,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96126afc-49ad-466d-a4d8-a8799095d437",
        "cursor": {
          "ref": "2d20a29f-8fbe-47de-8366-75a93f2391b7",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28a9c59f-ad38-4e6d-844b-ef75639f05c0"
        },
        "item": {
          "id": "96126afc-49ad-466d-a4d8-a8799095d437",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c5e9e14-2e2b-4146-95ab-eeb2afbef58b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 459,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bcfc2c-1494-4700-a3b7-c4dbed8983d1",
        "cursor": {
          "ref": "d102c33f-c8b2-4d05-8779-5b97659c4ae3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "392eede4-49d3-4bab-8508-098b7cbb9faa"
        },
        "item": {
          "id": "e3bcfc2c-1494-4700-a3b7-c4dbed8983d1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "60f9f360-4b4e-40de-9678-1bf1d10c3a43",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c141bb-810a-4c64-996d-3177072a4f2f",
        "cursor": {
          "ref": "2d07f3f2-f4d7-4720-bc72-1e29f0af9835",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6653992-b5f9-4262-8bcd-bbd33a1cd76c"
        },
        "item": {
          "id": "80c141bb-810a-4c64-996d-3177072a4f2f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fd377dcc-a890-4146-a772-34e840990e64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc23704-0f1a-439d-b3fd-dc85028845e9",
        "cursor": {
          "ref": "054dc7b2-b557-4c24-ac72-cf7c96c8d72a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a05db3ca-c65e-497b-863d-d910c8ebe787"
        },
        "item": {
          "id": "cdc23704-0f1a-439d-b3fd-dc85028845e9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a4db5e50-bf76-4325-9ad5-9d34524822a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9df4e1-21dd-4ab6-a90b-194ce7315973",
        "cursor": {
          "ref": "63318f38-3ee8-496d-873f-ee6e2ff4b26b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "916c7f0a-78ad-4465-a6d8-243346544f87"
        },
        "item": {
          "id": "6d9df4e1-21dd-4ab6-a90b-194ce7315973",
          "name": "identifiers"
        },
        "response": {
          "id": "1a889716-4464-426c-81ae-b8c720a103b3",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c1a1c2-511b-423c-b3b6-4b48ab453563",
        "cursor": {
          "ref": "2681f36e-2672-40a7-bfdf-a02d69373f2c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8a39d061-07e4-4a2c-94a4-11b8ff882c83"
        },
        "item": {
          "id": "53c1a1c2-511b-423c-b3b6-4b48ab453563",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1c89edb3-3574-471b-b138-244bff19f8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae062a3-b2a2-471c-9755-492d27112e8c",
        "cursor": {
          "ref": "0868b2ca-0392-4267-b33c-86afc1204bc3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "93652b79-949b-44b8-aa1d-02635b60b492"
        },
        "item": {
          "id": "2ae062a3-b2a2-471c-9755-492d27112e8c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "19a8ed16-3631-4670-adff-bd922b33a380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb239af-ac6e-4bf7-8f60-81f0878df5c1",
        "cursor": {
          "ref": "22ed1424-1ba1-44ef-99d4-cd314865881a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c466b9c-b8e4-43b2-96c8-0b819ff84355"
        },
        "item": {
          "id": "fcb239af-ac6e-4bf7-8f60-81f0878df5c1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ad86ff63-8a3f-49fc-a369-d2e2844ade0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11177122-a0b0-4488-8658-e76e5036edf4",
        "cursor": {
          "ref": "e701f89c-9035-477d-a5c7-591b10050d64",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5eea809-4229-47c1-ac0c-e7bd4716b624"
        },
        "item": {
          "id": "11177122-a0b0-4488-8658-e76e5036edf4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "701ce130-3980-4f2e-80bd-a8ad4e8720e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d40d377-68ad-4a9c-b74a-1ba06eb2e0ec",
        "cursor": {
          "ref": "6e6c230a-e5e6-4056-ab4c-72c225ec1004",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "04b6558c-90ba-48f5-8997-e6a7a9474027"
        },
        "item": {
          "id": "5d40d377-68ad-4a9c-b74a-1ba06eb2e0ec",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cd404835-e7b9-43b9-bc07-a115309811d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8697d06a-dbd3-4ea0-95f9-cc69b60373f5",
        "cursor": {
          "ref": "2bc45b1a-c6d4-4cb1-a1fa-9e6d2d1428f9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bb95e125-054c-42db-8e4c-6871056840da"
        },
        "item": {
          "id": "8697d06a-dbd3-4ea0-95f9-cc69b60373f5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9aa61c5d-4dc7-4983-ab17-6836028ce20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cffa30-dd6d-4e87-813e-5ebef744ae0d",
        "cursor": {
          "ref": "2f00314a-aa99-49d8-afbe-b7c4c8503c18",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "38033574-70e9-4c8b-b9e4-753a196ccb3e"
        },
        "item": {
          "id": "e6cffa30-dd6d-4e87-813e-5ebef744ae0d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3f537148-beaf-4535-b625-073579d43d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129b839e-b39a-4c39-9fc5-c666a709c1a0",
        "cursor": {
          "ref": "fee8e3a0-b0fc-4b62-b81e-1285657eb345",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "390c399f-b4e0-457d-8db5-0e4770aadae5"
        },
        "item": {
          "id": "129b839e-b39a-4c39-9fc5-c666a709c1a0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "feaa6488-7ee3-4e8e-9a67-3d280c810cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531b632f-534b-49a4-968f-373883a317cc",
        "cursor": {
          "ref": "a83fd8ca-c68a-4b7d-b44f-c9b677dd58ed",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bce633ba-b867-4016-8a58-f7fe916b253f"
        },
        "item": {
          "id": "531b632f-534b-49a4-968f-373883a317cc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "913372fc-57b3-4a61-a9d4-b24782e8f69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a258b3e-a36c-44ae-8393-7b66e4d8cb44",
        "cursor": {
          "ref": "823bb963-960a-4eee-8023-679acf2bcbb7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4d1d3a3a-d28e-41d6-b992-e411e68dcb4d"
        },
        "item": {
          "id": "2a258b3e-a36c-44ae-8393-7b66e4d8cb44",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "49b9a4fd-59a9-4b4f-a382-46e916683e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e2ca56-49a1-4630-a3a2-696e80ced326",
        "cursor": {
          "ref": "dacb21b1-7ca1-4bfe-9183-697fd388f5c9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dc2ebec1-cc81-4b88-87ae-258c502031be"
        },
        "item": {
          "id": "55e2ca56-49a1-4630-a3a2-696e80ced326",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "38db19be-c09d-4fde-ad09-6d8a98b1fdca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3297d7b7-3514-4a31-8869-61d979dabda7",
        "cursor": {
          "ref": "41dc9d73-6b84-44d6-9671-3523b3d6c37a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c2edff90-c7d4-4d60-9248-0d1187b8e293"
        },
        "item": {
          "id": "3297d7b7-3514-4a31-8869-61d979dabda7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eda4785c-cd1e-4cd9-83e7-9858f3a84c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20cc5ecf-089a-4298-800e-44d93816ad2e",
        "cursor": {
          "ref": "9fabfc44-a04c-4cd2-aa9b-9087d5a948f6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a5e0184a-b1aa-4b53-b266-463205b60e8e"
        },
        "item": {
          "id": "20cc5ecf-089a-4298-800e-44d93816ad2e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "46f822db-4cdb-4d89-bac9-9c15bfb899b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac282ab-ee4f-4326-a6b6-f42fcc524f57",
        "cursor": {
          "ref": "8aa30f1f-59c9-455f-8720-2defb6480676",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e3e18243-fa5a-4d77-88c9-4de8fb9a322c"
        },
        "item": {
          "id": "aac282ab-ee4f-4326-a6b6-f42fcc524f57",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "13b8bc48-7dc7-446d-8232-68e75348c7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7db20d6-d313-469b-ae16-3bdb185b702e",
        "cursor": {
          "ref": "cc4ee7a5-1f9b-4052-afad-7dfbf601bcd6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cacb967e-7949-468e-90af-f863441a3e93"
        },
        "item": {
          "id": "d7db20d6-d313-469b-ae16-3bdb185b702e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2a15b948-6eda-4664-bb17-fff3e05028d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67b70ba-d787-465e-bd99-b1068cc6cd9d",
        "cursor": {
          "ref": "9c30fcb5-72c2-4081-81d7-0e2345297128",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "42341bd0-36ce-4b9c-9c4a-b6590ea31131"
        },
        "item": {
          "id": "c67b70ba-d787-465e-bd99-b1068cc6cd9d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ce5d57c2-f6c9-4399-aaa5-cc08df37926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a3ea2b-3289-4a00-8ec5-4c91a0c6342c",
        "cursor": {
          "ref": "9b00afa0-db9e-4bd9-993e-d1233391f598",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "43055a07-5161-4f02-88e2-a889eb008afb"
        },
        "item": {
          "id": "c0a3ea2b-3289-4a00-8ec5-4c91a0c6342c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c18b4d68-1784-4562-abb2-59b31065e5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c2ca81-0e3f-40ea-804f-9e2b23043fd5",
        "cursor": {
          "ref": "ad052084-a04e-41e4-9a23-67330b1dc79d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6f05f577-e7c9-48e8-8c76-adf62d2a1f5f"
        },
        "item": {
          "id": "49c2ca81-0e3f-40ea-804f-9e2b23043fd5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ca17416d-3d90-47d1-8f6d-52344421918e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a86f6f-1a52-4106-af2c-f1ecded09d93",
        "cursor": {
          "ref": "005f04e5-ef43-46bd-9008-c30c5c9a6fec",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "be5fa0e2-aaa7-460e-b8ed-dcedb913b609"
        },
        "item": {
          "id": "17a86f6f-1a52-4106-af2c-f1ecded09d93",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5963810d-59d8-48a2-8ae6-a761eb7543c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abbff7a-1e15-41de-a5ed-820ad586cd32",
        "cursor": {
          "ref": "368b483f-553d-4ee5-bb9a-20a498b25421",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c6cca6f2-8326-46b3-9c81-2e5fbd15a487"
        },
        "item": {
          "id": "9abbff7a-1e15-41de-a5ed-820ad586cd32",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c1b5f046-ca66-47c0-9551-8e08382a9609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe52f34-d462-4b8d-ad49-dd06f643a6b8",
        "cursor": {
          "ref": "cc12a310-3d5a-46ba-b5f0-54b7c9953a4a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "304465dd-0691-49c4-8f09-f2cc59df0506"
        },
        "item": {
          "id": "afe52f34-d462-4b8d-ad49-dd06f643a6b8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f8b04873-97ff-44ac-9261-8712206498ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64359daa-d833-45b7-8801-443ea538df74",
        "cursor": {
          "ref": "f0caa31b-6cbb-4ed0-85ce-d0e9873e2993",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fa06eeb2-6dff-462e-b209-90728440181e"
        },
        "item": {
          "id": "64359daa-d833-45b7-8801-443ea538df74",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b2f27127-774d-43ba-ba23-60b62be25e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8fe0ed-8569-4703-a5d7-a2a7c0e1fd07",
        "cursor": {
          "ref": "c0ab4731-8358-4469-a16b-6a90ddcda18c",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "32217189-62e7-487d-b0d8-5175506033ef"
        },
        "item": {
          "id": "4e8fe0ed-8569-4703-a5d7-a2a7c0e1fd07",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a743e779-1007-4008-b54a-2c8074a6e48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7e78a7-5f94-4231-80e8-db95e498027f",
        "cursor": {
          "ref": "9e883d53-b3bc-44cb-9426-184b7296c245",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b491dd93-1b5a-456f-ad38-46e394cf494b"
        },
        "item": {
          "id": "aa7e78a7-5f94-4231-80e8-db95e498027f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "599a0bf1-0e65-44a7-b2e8-0103b5202b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c856ea7-e0e7-450c-b907-e34ca8384e27",
        "cursor": {
          "ref": "f12bd9a6-c560-4780-9b31-5307f2b2c0b0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1a02f943-d1ec-4ffc-89bd-4050584feb10"
        },
        "item": {
          "id": "1c856ea7-e0e7-450c-b907-e34ca8384e27",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a14222a8-ed0b-4bd5-af6d-a37ed2301666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf00be6-71ca-462c-a265-836ca949bec6",
        "cursor": {
          "ref": "fcba6305-9cf6-4a75-9f9c-e90d3540eb33",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9b884eed-e163-43ef-bd50-26ecfe126f15"
        },
        "item": {
          "id": "9cf00be6-71ca-462c-a265-836ca949bec6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "62c6d528-355c-4eb3-b948-f2c9f046dab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d610476-d0cb-4777-b2fa-e3ec154afa18",
        "cursor": {
          "ref": "636b961f-0f94-4ca9-a1d0-67a08ec99ee1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "691b6303-3727-477e-b179-1923c932b229"
        },
        "item": {
          "id": "3d610476-d0cb-4777-b2fa-e3ec154afa18",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d06759bb-5062-4481-84ec-5ab7dbda9f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6648e3b9-9250-44c4-8cd2-52c19dade27d",
        "cursor": {
          "ref": "9f45081c-097d-4fcf-94bf-e30b77e31ecf",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "655b61ee-eff9-4d1f-9a0b-2635f5a4727c"
        },
        "item": {
          "id": "6648e3b9-9250-44c4-8cd2-52c19dade27d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9d2b3f4e-0711-45ad-8bcf-803ad84747d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d23d9aa-be24-4938-97ee-7aaa0726e4be",
        "cursor": {
          "ref": "097218e3-d16a-42a6-85de-5607eb2ccb29",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "14d906fe-b145-440b-a7cf-06c5391d4f2b"
        },
        "item": {
          "id": "0d23d9aa-be24-4938-97ee-7aaa0726e4be",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ecaf101f-b80e-4e75-a201-6a091490c2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd64405e-8472-4f63-94f7-5651eaa2b6da",
        "cursor": {
          "ref": "d971424f-37db-4d33-9ba9-fa22ab7cb663",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ac1482eb-98fa-4f73-ba4c-c9ad1dfd9e52"
        },
        "item": {
          "id": "cd64405e-8472-4f63-94f7-5651eaa2b6da",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ba52d0a1-5197-4a0a-9828-c31bf234ae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326c3fd1-591a-4943-998f-65f6fe2577d2",
        "cursor": {
          "ref": "f7740aca-4031-40b5-8eb0-86882fba38c0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cb458cce-b679-4e24-a608-980cbd99859c"
        },
        "item": {
          "id": "326c3fd1-591a-4943-998f-65f6fe2577d2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8ee068f8-527c-45ac-af13-eb9d962ff154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0760053-8f6f-48e1-9b3a-9b83529442f3",
        "cursor": {
          "ref": "e82f5f1c-c103-4240-a63e-47525dfe481a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b36005fe-161b-4620-ba0c-690b65486001"
        },
        "item": {
          "id": "e0760053-8f6f-48e1-9b3a-9b83529442f3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7e868205-a364-4f08-bf7b-87271389ccfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3002724e-b7b8-492d-b1fb-063a46f7115d",
        "cursor": {
          "ref": "e3a078c2-396c-46e5-9d14-fb189c03c9a0",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e5de4e35-2b5c-4bc2-b118-f8e66040ef78"
        },
        "item": {
          "id": "3002724e-b7b8-492d-b1fb-063a46f7115d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "67d4053d-0ba9-4343-84f0-0fbc2c014a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a596c204-7a44-4ee0-98ea-e7c332ed5ae9",
        "cursor": {
          "ref": "ffc3d9da-160f-4a68-b401-c6fdb80a178f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3f5f7d53-361a-4a80-b7b1-965f2bbc5926"
        },
        "item": {
          "id": "a596c204-7a44-4ee0-98ea-e7c332ed5ae9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c6857854-910f-45f0-9ca1-2c3515bf15b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ba6e13-8abc-45d7-b753-57ed93c14462",
        "cursor": {
          "ref": "d0894e0f-f010-4d53-9222-229daa688622",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "59cea4fa-bf12-4269-b6e0-2bdc8b2cb3d5"
        },
        "item": {
          "id": "69ba6e13-8abc-45d7-b753-57ed93c14462",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "05681d8e-0a85-4add-8352-056f043c0f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5fbe68-b622-4df1-9823-cadfa6b41432",
        "cursor": {
          "ref": "215eb3f3-d65c-4166-b836-1f725f721baa",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b1280962-b862-44a6-bad7-78b31b123a3d"
        },
        "item": {
          "id": "3d5fbe68-b622-4df1-9823-cadfa6b41432",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8754c43d-a8b3-4f41-9581-6eb07dc87d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fb9d38-9d7f-4e7a-91f8-83cd174f8c1e",
        "cursor": {
          "ref": "63332c94-8d66-41c6-9a35-abafd6205b9f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dfc5f7e5-d84b-473f-8f11-f5e3660e7637"
        },
        "item": {
          "id": "33fb9d38-9d7f-4e7a-91f8-83cd174f8c1e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "eee47d46-2447-4a79-bc16-5ae1bbc0df6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3066779a-c8c5-45ef-a90b-c85fefce65d8",
        "cursor": {
          "ref": "7174c1b7-a083-4926-9187-1c277bddccca",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "28222298-64ee-4b31-8808-58eea7903c85"
        },
        "item": {
          "id": "3066779a-c8c5-45ef-a90b-c85fefce65d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8fa98bd6-1454-40a1-bb23-cf8ea02ce6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1ead07-723e-4676-9532-9d72a7e442a1",
        "cursor": {
          "ref": "8b61819c-574d-4a04-9594-f6473d46192b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "10508a57-6977-40ad-84db-caef1c2608a6"
        },
        "item": {
          "id": "cf1ead07-723e-4676-9532-9d72a7e442a1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b006f09e-3bb6-4539-81de-b09271b282e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf129e-cd1e-480d-a5f4-da1c1c51beb8",
        "cursor": {
          "ref": "357eddf7-ed4c-45c5-ade6-773ada5d0202",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4effdc9e-2056-43f0-a41b-5e7355ef5cd2"
        },
        "item": {
          "id": "f4cf129e-cd1e-480d-a5f4-da1c1c51beb8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f99ba16f-ed8a-4aa8-80eb-f1d9d0c1eb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf614831-1d1c-4290-8497-c51906109651",
        "cursor": {
          "ref": "2cac9203-b9c9-4c57-95ab-8ade7e7c0ab5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5dc6749c-e13a-4455-a250-7a76304b3ef2"
        },
        "item": {
          "id": "cf614831-1d1c-4290-8497-c51906109651",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4dbd1d1e-bc2d-4886-ace2-369d7a2768d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d180759-fbcc-4711-af41-946137da7b4b",
        "cursor": {
          "ref": "aaeb90bd-2366-4473-9617-98938b44f720",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cbf6ddf3-d1f4-4a47-8c38-f861cb0a9841"
        },
        "item": {
          "id": "8d180759-fbcc-4711-af41-946137da7b4b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "986d0f7a-0cd5-4ab5-a9de-a5793f6b7b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73742d57-39a7-4c1e-bcdf-bdd41ceb0770",
        "cursor": {
          "ref": "3f4b9b61-f191-4e48-915d-7c04bc5d6157",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "204239b8-4a8a-49cf-b468-020b178c9909"
        },
        "item": {
          "id": "73742d57-39a7-4c1e-bcdf-bdd41ceb0770",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f0d87b1e-4e77-4cfb-8959-0e4b4c11ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabd253e-33a5-478e-b092-1e748a637436",
        "cursor": {
          "ref": "978fed13-11a9-4fa7-a600-8df38991f393",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a099a768-c672-48ae-b177-5e8c7b73dbbb"
        },
        "item": {
          "id": "cabd253e-33a5-478e-b092-1e748a637436",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "89626f62-515d-401a-8056-20e9649b6f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50b03d-eada-41a2-a1aa-4e686e63e4e3",
        "cursor": {
          "ref": "cfb3ac8f-19f1-45b5-82e7-80bde207c034",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "536ed0ab-2c5b-4e64-b117-09c3696eb872"
        },
        "item": {
          "id": "ed50b03d-eada-41a2-a1aa-4e686e63e4e3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a160b7cc-4227-4012-bb9a-3963fcc91782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5539c87f-ec71-48b8-8471-43da195cf600",
        "cursor": {
          "ref": "7c63224d-abfb-4e3f-ac10-8e1006caabf9",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "97f1f0d4-be56-45f3-ae6b-c7579748762c"
        },
        "item": {
          "id": "5539c87f-ec71-48b8-8471-43da195cf600",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e894685f-1c19-4288-b5ce-2a749dfaf64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d866bd-6bb4-405b-988b-f5fc47fa01a9",
        "cursor": {
          "ref": "d9043a2e-10d5-4e3e-96b1-536ba977d21e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a6c9632b-343d-4eef-8d28-79a318c10d15"
        },
        "item": {
          "id": "d7d866bd-6bb4-405b-988b-f5fc47fa01a9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7799868b-6665-4e9b-a765-90f317a7173a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7a4398-44b0-4452-bf38-c693ea4119bb",
        "cursor": {
          "ref": "fc7e8b23-d6d2-4a4e-be1c-ac6e43a202b0",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b47f332f-641c-49cc-b7a4-64b02f0120f2"
        },
        "item": {
          "id": "8a7a4398-44b0-4452-bf38-c693ea4119bb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b3371ae-5f10-4cca-b884-5b103330d1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db98f7d-ea41-4bb1-b7ae-a1c6820f721c",
        "cursor": {
          "ref": "3c3b3b49-7bc4-4912-8993-c6f227fc2e7f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c5e5ac3-0a68-43ea-bd8e-1af4a6972bcd"
        },
        "item": {
          "id": "3db98f7d-ea41-4bb1-b7ae-a1c6820f721c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed2e1c32-9fac-4bed-abbe-1d62c742605f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a11d4f-63c6-4ed1-bfef-5b80a3705e64",
        "cursor": {
          "ref": "b1b48af3-ebe0-405a-bfff-e1966135c1cd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ffb22251-3bd9-4d01-84ab-e8a1156cc652"
        },
        "item": {
          "id": "a1a11d4f-63c6-4ed1-bfef-5b80a3705e64",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e6804a0c-0fbd-494c-92d4-68b72da84ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7b2cc7-6224-4bc1-924c-add22420fbff",
        "cursor": {
          "ref": "ef4ee6a2-021a-466b-a531-963d337723ca",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "89fc749a-9693-4158-b573-0b9cbd613a38"
        },
        "item": {
          "id": "ee7b2cc7-6224-4bc1-924c-add22420fbff",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0c8a014b-7d20-40b0-becb-541c2713e468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a8dd64-589e-4515-8323-600eda623ccc",
        "cursor": {
          "ref": "29a4830c-85bf-4228-bff0-ecff19b874a6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5ce56d96-b780-4411-b55d-766b6741fe1b"
        },
        "item": {
          "id": "b3a8dd64-589e-4515-8323-600eda623ccc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "21e0220d-7ddd-4c35-9616-1ee7e3f3e313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bfefc3-3b08-4a7e-b559-d72ba2bcaf51",
        "cursor": {
          "ref": "2165225d-c928-4803-b003-56d169e199b4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "530378a5-347f-49c1-a2e3-46e2d4b8feae"
        },
        "item": {
          "id": "d2bfefc3-3b08-4a7e-b559-d72ba2bcaf51",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ba83467e-6a1f-40d5-b69c-ddb75409e5a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bafb697-0bf1-478d-8073-ce85fc139653",
        "cursor": {
          "ref": "5a1925ab-4c7d-4ebf-a4db-b9915572c4a7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "29a41d58-dcb4-473a-9293-9ab0f6e08340"
        },
        "item": {
          "id": "7bafb697-0bf1-478d-8073-ce85fc139653",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4c497503-2cde-4ea2-b872-85811da299ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d47a4c-275f-4e95-a506-17e32f14bd94",
        "cursor": {
          "ref": "cf74782a-27cd-40fe-84e5-239999ebd53f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ed0919ea-dd3f-4749-b8a0-65b4a75dce68"
        },
        "item": {
          "id": "21d47a4c-275f-4e95-a506-17e32f14bd94",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7c95e793-a24d-4dcd-b134-5159a38234d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19a43ca-33a6-46a8-a490-11d5fba50df2",
        "cursor": {
          "ref": "cd11ba0d-1f86-40d9-8641-955874087ad1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3f9c6ecd-40d8-4e42-b424-eff8b025146a"
        },
        "item": {
          "id": "f19a43ca-33a6-46a8-a490-11d5fba50df2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "962b4228-1c13-40ab-a091-83e7971339e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfba2b7-b324-465c-96b6-47a8413806ae",
        "cursor": {
          "ref": "4f663195-4dc3-4603-8a52-f88925e61b05",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "60f128c7-b3b0-4c41-bb24-393b8d062096"
        },
        "item": {
          "id": "4cfba2b7-b324-465c-96b6-47a8413806ae",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "20195818-7b49-486a-b70f-7f637f45348e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af631fe-cf59-45a2-8143-1eda9baf7798",
        "cursor": {
          "ref": "ae7b9768-db33-48c2-9ef5-c5f96c043448",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2a4c16c3-2955-4efc-a776-f96a9410f48d"
        },
        "item": {
          "id": "1af631fe-cf59-45a2-8143-1eda9baf7798",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec441236-07e2-4142-bf2c-5db695faa19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ec9b36-4524-424a-a570-3ad5ebc75a76",
        "cursor": {
          "ref": "cc3cfb4a-d47d-4504-adb1-280ff934d389",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "21ea2f44-e501-4115-8c89-d57224da30be"
        },
        "item": {
          "id": "05ec9b36-4524-424a-a570-3ad5ebc75a76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cad87fac-6650-4b73-8d8e-0533df149c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fe8171-3b13-48bd-ba76-87ec4645a36c",
        "cursor": {
          "ref": "58f31a2c-5a76-45bd-8b8c-a434f602dd25",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "44c09295-24aa-42be-b16e-20831e21a14f"
        },
        "item": {
          "id": "42fe8171-3b13-48bd-ba76-87ec4645a36c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3f43c075-1cc5-466f-a173-ac10ac74edda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e40c4f-f48c-4c09-b15b-3dbc77f93e8b",
        "cursor": {
          "ref": "75b27ebf-3896-49db-bc69-e7010a890ede",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "15e7ffd6-170e-4cdf-80ca-6413c71936fa"
        },
        "item": {
          "id": "14e40c4f-f48c-4c09-b15b-3dbc77f93e8b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dc4fe384-b2ab-4a37-8a3d-628d90dbc952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da155fc9-a164-4475-9401-40d369daa9b2",
        "cursor": {
          "ref": "32c988e6-5bb0-4127-8195-cd23006e6f17",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5c3447e6-e5ea-45c8-864f-3cdb46a53147"
        },
        "item": {
          "id": "da155fc9-a164-4475-9401-40d369daa9b2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4877f75d-45de-4e2d-bd62-5e0b090ab64c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845eb3dc-f5b4-4677-9876-889bcaeaa301",
        "cursor": {
          "ref": "54437bdf-cd79-47c4-8af5-3e0092fb3e27",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "29ffd8e2-eb38-4984-bd7e-51026bf5ab44"
        },
        "item": {
          "id": "845eb3dc-f5b4-4677-9876-889bcaeaa301",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "41e1108a-f4d1-4a5a-846c-765dd86c8677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5976dc2-2cdc-4c4d-b2d8-6314d8584385",
        "cursor": {
          "ref": "a458aba9-a6a5-439d-87d1-f4d9b787ff21",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "44c1d084-69c2-482d-97d4-22c56861f570"
        },
        "item": {
          "id": "d5976dc2-2cdc-4c4d-b2d8-6314d8584385",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a542c8bc-0859-4a48-8c4a-f4ba0d0dc8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd24d8c1-9d8b-4ffe-b3a8-bf489a92cb9e",
        "cursor": {
          "ref": "5ba0b7fd-5353-400e-92f0-d3bd51ff5ed4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d877ac8b-ed29-442f-b572-22bb2e63fa10"
        },
        "item": {
          "id": "fd24d8c1-9d8b-4ffe-b3a8-bf489a92cb9e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c02d5f00-c941-4c99-9331-18a7d5d57e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ecd97-58d0-44e2-98b6-cf575fc8613a",
        "cursor": {
          "ref": "5e9fe9f6-5603-4e27-afc5-b13d358d3a02",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9016957a-218e-44f5-bec4-578ce3eb0499"
        },
        "item": {
          "id": "de8ecd97-58d0-44e2-98b6-cf575fc8613a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "016dd3a6-7771-4f3b-bf09-99ef08b60349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bc400f-b2e9-4acc-944d-0c4b2171976a",
        "cursor": {
          "ref": "2d48b9c8-4064-47eb-89ee-899a06ef3ded",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9a69217e-c6cc-436a-ade8-ce1571fc9581"
        },
        "item": {
          "id": "c8bc400f-b2e9-4acc-944d-0c4b2171976a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "624e7828-9dde-476f-aa6d-619a47dac6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009c6381-f071-42f2-b40a-6931301ca6ec",
        "cursor": {
          "ref": "4e85f76b-4b73-4608-b50d-563c459e0ade",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed00d57d-ac13-492f-ae9d-4a8c21d246ff"
        },
        "item": {
          "id": "009c6381-f071-42f2-b40a-6931301ca6ec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "56a5feff-93e6-4915-b1f4-53d3eae6271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0b452c-6eb3-4039-9a4f-7b5745ec1a1c",
        "cursor": {
          "ref": "95ccbda1-50ec-4a20-a948-c5be6f828f8b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea42c935-5d9e-4926-aa0d-d3ea99a340f5"
        },
        "item": {
          "id": "ff0b452c-6eb3-4039-9a4f-7b5745ec1a1c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1ef857a1-04c1-4cfa-a1a8-780c9496667b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9dc65a-63de-4e24-8e19-df5b45122f7f",
        "cursor": {
          "ref": "bf2058b4-790c-40b7-a3f0-8aa997c53099",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a23a0b7d-9742-4012-9e97-ca36cdcac8ad"
        },
        "item": {
          "id": "1a9dc65a-63de-4e24-8e19-df5b45122f7f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6325b623-4642-4372-bedf-ad919fed15b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca63cc5-88aa-43df-acb8-d10f46623afc",
        "cursor": {
          "ref": "44ace637-ff04-4213-a3c2-efd4e5453bb1",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "49bc9367-b41f-4fbc-bfb0-7689da20581a"
        },
        "item": {
          "id": "6ca63cc5-88aa-43df-acb8-d10f46623afc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0cc08216-8e43-406d-9e28-897781f14c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc77f73d-65e2-4ab7-a24a-6abfc93f621a",
        "cursor": {
          "ref": "01a2b0f5-f874-4074-ae27-12f426ce4a45",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ee101238-e185-43c6-bda8-ec06c72c3b70"
        },
        "item": {
          "id": "cc77f73d-65e2-4ab7-a24a-6abfc93f621a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "be18cc47-c887-4078-a896-04392c35ef15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ffca01-2c18-4536-818d-00b861d04012",
        "cursor": {
          "ref": "63dbd158-b0e2-4395-a164-2dbc0312947f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2dd12103-7969-491a-8d4a-ff70b5a18afa"
        },
        "item": {
          "id": "f5ffca01-2c18-4536-818d-00b861d04012",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "87b175ec-9f28-42e7-a712-17e01f89626e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e04dc0-a8ae-4064-ade6-d998fb9aa835",
        "cursor": {
          "ref": "16b2bb03-9135-4228-b62d-5aa9bfee7e81",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e089fb3-7dff-4f5f-ac18-b4e61ea87ec9"
        },
        "item": {
          "id": "72e04dc0-a8ae-4064-ade6-d998fb9aa835",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3c315cd9-2c61-4c0a-9c4c-3eabe384b6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14473472-9967-4059-a0ae-e6f63a53c58a",
        "cursor": {
          "ref": "f3c739da-1669-4e52-b7c1-aef317eba1b0",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4659a804-86db-47f2-bf2f-0eadd7cc8c86"
        },
        "item": {
          "id": "14473472-9967-4059-a0ae-e6f63a53c58a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3288ab8e-26e2-46a0-9485-0d304202fe68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e97f9c-f51b-45fd-9861-dc185898e358",
        "cursor": {
          "ref": "44b1e7fb-bdd0-43cb-b30c-a1533897870b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "52a16caf-dfc0-49b2-b2d9-dd63b8f82528"
        },
        "item": {
          "id": "94e97f9c-f51b-45fd-9861-dc185898e358",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b94251f4-fb97-405d-bad8-3373a135c4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2553fde-8eec-4f04-ba5f-238611027647",
        "cursor": {
          "ref": "75d13fb1-630f-4c76-aeb7-3eb560b77565",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cfff5cbe-b087-4ea9-ba7f-a42c0f367c0a"
        },
        "item": {
          "id": "d2553fde-8eec-4f04-ba5f-238611027647",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "acdc8bd4-9b25-4bea-b1af-f04333d238af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584612dc-823b-4e56-9577-f09f1f720aad",
        "cursor": {
          "ref": "d35ab0a9-7ec8-49ab-ab28-f4c156aec2fe",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "50765803-20ad-49ee-b236-2a5c0e6a6756"
        },
        "item": {
          "id": "584612dc-823b-4e56-9577-f09f1f720aad",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f7482a0a-d674-4491-8644-dd2602829d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797a1b38-8f64-4cf3-8c93-9bb1c294920b",
        "cursor": {
          "ref": "e6a0c433-02e1-4b36-926b-6d4bda3cc4ea",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "64d0697a-250b-487a-829b-68270cbcc512"
        },
        "item": {
          "id": "797a1b38-8f64-4cf3-8c93-9bb1c294920b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c936cbf5-c6a6-4be8-abb5-3bc0f8ea174a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173a0b94-69c5-47d7-8094-f4293685658a",
        "cursor": {
          "ref": "b1eaba58-6960-4fdc-951e-42207e076cf8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "52795b92-8697-46d3-a28f-56a254b66d0b"
        },
        "item": {
          "id": "173a0b94-69c5-47d7-8094-f4293685658a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9fe1e757-cc6d-42a7-af2f-f2aab4c8dfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a4dfa0-0107-4e2d-82b7-5c82b96a89df",
        "cursor": {
          "ref": "1ad3293a-1626-407c-b8a8-3b693de26db2",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2c0c95a0-6e84-4826-9d9b-f0ee766dae6b"
        },
        "item": {
          "id": "93a4dfa0-0107-4e2d-82b7-5c82b96a89df",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fd95bf4e-7d05-4e55-8e2f-3fc7878f26f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c036770-eb9a-4276-b765-5c81b838ec5f",
        "cursor": {
          "ref": "458ae9af-2cd1-41c1-931c-81ebbf5fe19b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d4d9ba30-41bc-41f7-bcf4-53a6b339255b"
        },
        "item": {
          "id": "5c036770-eb9a-4276-b765-5c81b838ec5f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "966f514c-6f15-4bb1-986f-9bbd311e7d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716adc8a-82f8-4fb9-92e0-c0e6eb642d1b",
        "cursor": {
          "ref": "5c33f04e-9fa0-42fd-8a0c-af2f353a36f4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f1cebb99-17ca-460d-8e3f-191ba8a39d4e"
        },
        "item": {
          "id": "716adc8a-82f8-4fb9-92e0-c0e6eb642d1b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "489a9f96-23fe-4356-b63d-64a97bedc60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8823c004-9399-482f-9689-5f52e10ab890",
        "cursor": {
          "ref": "bb0b15c3-1142-455d-880b-bb736169730f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b0b15233-f3e2-49e8-b1bf-22d6613d7692"
        },
        "item": {
          "id": "8823c004-9399-482f-9689-5f52e10ab890",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "74a73500-f2cd-4bc2-aaec-66d5a7beefbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549619d1-0cea-4eb2-8da8-eaf30f245070",
        "cursor": {
          "ref": "d1f0b89f-3167-4c55-8430-30d61ed6c377",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fe86fe4f-1820-4a42-a71b-8543dbe3d45a"
        },
        "item": {
          "id": "549619d1-0cea-4eb2-8da8-eaf30f245070",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4af6baeb-734f-48cf-be41-273c486caaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ae8acc-126f-4621-97ce-ad5f9d427009",
        "cursor": {
          "ref": "0c726b65-404c-421b-bff1-9ad882f06c36",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "62278528-4266-425a-bfad-7e9f4cceb005"
        },
        "item": {
          "id": "f3ae8acc-126f-4621-97ce-ad5f9d427009",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0b7a2cab-85cc-48c6-a4bd-979e1a681b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d1a0bc-2319-4e6c-8686-356db796ced0",
        "cursor": {
          "ref": "7301af38-d5c5-432b-8b6b-a2eb5000e29b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4c8d04a5-ef90-47b4-9f89-2103d8bfcbf9"
        },
        "item": {
          "id": "55d1a0bc-2319-4e6c-8686-356db796ced0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2681d315-f483-46ac-9074-34e81685a2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f757e8e9-b324-4814-8115-b54624f39c6c",
        "cursor": {
          "ref": "451f62c2-db83-44c1-aed0-01edc0a83b5d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e9ddd4a9-d747-4205-ab3b-cd3adb73fee8"
        },
        "item": {
          "id": "f757e8e9-b324-4814-8115-b54624f39c6c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0642948a-7adb-4981-94db-20ddd15ed730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7adf080-bed7-401c-86eb-4970c5e119ec",
        "cursor": {
          "ref": "0ff4f8c8-b2bc-43e6-a7e2-4a395425aa89",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ae02fee9-c9d6-43ec-9537-bc3358f753bc"
        },
        "item": {
          "id": "d7adf080-bed7-401c-86eb-4970c5e119ec",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "89b9b7c8-0ef1-4b2e-9045-364841cf2b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cd054e-d803-4a26-bf53-fa9e5244b714",
        "cursor": {
          "ref": "9eeb3fda-a51a-4deb-b728-7ba7d89d4969",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f1311b81-c4e9-44b7-9dba-e54bfcb87577"
        },
        "item": {
          "id": "61cd054e-d803-4a26-bf53-fa9e5244b714",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0fc9503e-4f6b-4258-9e83-f47655c540c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9ec491-b50b-45e2-bd8b-6c6f5bbff20d",
        "cursor": {
          "ref": "f27e8513-db42-46eb-afb9-53883d1d37fe",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "965c45aa-f33c-4b77-83dd-7b1182a015a3"
        },
        "item": {
          "id": "4f9ec491-b50b-45e2-bd8b-6c6f5bbff20d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d3d6a19-b9f6-4c01-a67f-7ff285a79d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9954dd-5147-4ae1-b59f-c918a1ca6334",
        "cursor": {
          "ref": "2fb02a3c-fe11-444c-aa12-270e77fb513c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "58be503d-23c6-4e65-a93e-5d272253ba1b"
        },
        "item": {
          "id": "4a9954dd-5147-4ae1-b59f-c918a1ca6334",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b68c240c-71a5-4676-add1-24385dfe17f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92be7c0b-f22e-48d1-9125-33ede82eb800",
        "cursor": {
          "ref": "310ae81a-ee37-42d2-aaa2-ff8a5bc08cea",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "73726a8c-49d6-4373-8e89-80b0ebe6732a"
        },
        "item": {
          "id": "92be7c0b-f22e-48d1-9125-33ede82eb800",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "501e82ef-e730-4502-89ee-7509f147ad6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8ddd44-5c4d-45ba-986f-e2a4b85c520b",
        "cursor": {
          "ref": "b3dd1561-866a-497e-847e-0e90ee212acf",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "646c9247-9b68-42c5-8a35-d565b2866365"
        },
        "item": {
          "id": "0e8ddd44-5c4d-45ba-986f-e2a4b85c520b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "80b53654-603a-4523-8356-e273f6673c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "429486a2-515d-4e8d-98cf-d16dc5d17ba2",
        "cursor": {
          "ref": "250990a9-e798-4740-91f2-34df77e94b26",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b42fa256-ca41-4ebb-94ea-639ad694615a"
        },
        "item": {
          "id": "429486a2-515d-4e8d-98cf-d16dc5d17ba2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ae86fc4d-ba26-4287-a157-94d77566af47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "adaa7a7c-d392-4c98-9553-2f29fe4900d6",
        "cursor": {
          "ref": "8853ed85-33e2-49c7-8989-57bd9d326f28",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "23038857-c327-4fb3-ad08-8e5c8b59e0a9"
        },
        "item": {
          "id": "adaa7a7c-d392-4c98-9553-2f29fe4900d6",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0e3e84f3-7ed6-4eb6-a2db-60b4639af752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f472659e-ea30-4a8b-8b2c-65d3976e71e9",
        "cursor": {
          "ref": "8a7bee10-7b38-4903-bd32-e1f62c4fcf9c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f7fb27ee-1623-47ea-9b53-ac0250808fa7"
        },
        "item": {
          "id": "f472659e-ea30-4a8b-8b2c-65d3976e71e9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "25f2b5c2-a457-4375-877a-2b03d0739daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2e15762b-b23b-44b2-84e9-f0ceb0a3b8cf",
        "cursor": {
          "ref": "3cc86483-4a90-40f8-b9f1-6456470c2a81",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d73a7f96-5f59-4a07-9321-86f542e53abd"
        },
        "item": {
          "id": "2e15762b-b23b-44b2-84e9-f0ceb0a3b8cf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4a2699c0-a45d-4c2f-9206-0873ea194fe8",
          "status": "Created",
          "code": 201,
          "responseTime": 12108,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9111a2-5767-4909-912b-508370d1e8ee",
        "cursor": {
          "ref": "778ac0e3-a4a9-4fb9-a733-5db4fa0e5f6b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8d56aeb9-5a2e-4e23-a285-dde792e0d256"
        },
        "item": {
          "id": "4b9111a2-5767-4909-912b-508370d1e8ee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f4771ff9-4cd5-4729-947e-8b23a90b30eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9caac095-d9cc-4e32-ab19-99b12c7f0fd0",
        "cursor": {
          "ref": "89cf04cc-513d-4cad-bafb-66f6b6f265ee",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "95eb19d5-424c-4f1e-bdfc-6c72d4d2ce46"
        },
        "item": {
          "id": "9caac095-d9cc-4e32-ab19-99b12c7f0fd0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "088c6de5-586a-4078-8d98-df69e9413b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2f350234-5879-4185-a352-62b885083885",
        "cursor": {
          "ref": "11b0eea8-6227-4c31-b1bd-145e1e61de14",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "afce4eb1-2117-499f-bac8-fc98141e2b3f"
        },
        "item": {
          "id": "2f350234-5879-4185-a352-62b885083885",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3cd42998-9748-4910-b7bb-f6dda9809603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db64d2f-d575-4568-b0ab-fdaa6efa6b65",
        "cursor": {
          "ref": "73d8bdf8-1715-4f57-bb3e-c13ecdea029c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2713963f-3add-4266-b373-5dd6ec75f202"
        },
        "item": {
          "id": "7db64d2f-d575-4568-b0ab-fdaa6efa6b65",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b6e115b3-f924-46c7-ab2c-5be7641e75f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bff134-837c-4c2b-8652-78d691126749",
        "cursor": {
          "ref": "4e19072b-f97f-4db0-b2ed-510fd9e8a567",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9834de48-7fea-4d19-af77-4f42edd6802e"
        },
        "item": {
          "id": "78bff134-837c-4c2b-8652-78d691126749",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0d8b8433-56e8-4b45-b016-6481cd2489a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b90d495-1b97-408a-93c8-bfcf432cdaeb",
        "cursor": {
          "ref": "2a33c6dd-4c9c-4944-bc8b-cbc124c853cb",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "406b51bb-98bc-4d2d-9c96-1bf33b3ef0a3"
        },
        "item": {
          "id": "9b90d495-1b97-408a-93c8-bfcf432cdaeb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7ed30217-a890-47ee-a1da-c0e45220a03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636b403d-24eb-4393-a4ca-a7fca152ff6d",
        "cursor": {
          "ref": "eb9609f3-70de-4400-bc01-51edb81c5d35",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9c0fba51-1818-438e-be21-a094205a3d0f"
        },
        "item": {
          "id": "636b403d-24eb-4393-a4ca-a7fca152ff6d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a7b96ff0-a1a8-419d-8b25-64f1e8f79c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f69227c-117b-4a59-9793-141664c8104e",
        "cursor": {
          "ref": "f4489da2-966d-43d3-bfef-09f6cc067a8b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c34909f9-2541-4ad8-a225-b818b0aa2131"
        },
        "item": {
          "id": "5f69227c-117b-4a59-9793-141664c8104e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "728ea77e-a34a-4506-b0d3-bd0d51a835c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41126a08-1163-486c-a61e-446d95fe93dd",
        "cursor": {
          "ref": "9e6cf897-b87b-48eb-8585-317814467412",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d04f7e60-0e44-4271-a0bd-5a9de9fa147f"
        },
        "item": {
          "id": "41126a08-1163-486c-a61e-446d95fe93dd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "60018023-bb9a-4dd1-86d4-f0b70815ad0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7d8f70-e15e-4fb2-a56e-cbbef250076c",
        "cursor": {
          "ref": "f4ed08a7-9166-49c8-ab40-0d9e67cc0519",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a2f450b-ee92-4f03-bd79-42bf1acc2d87"
        },
        "item": {
          "id": "3f7d8f70-e15e-4fb2-a56e-cbbef250076c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9535bcd9-dee0-4ffb-9d71-56fec85db312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477abb68-0c1d-4aed-bc8e-fa66e924f9d3",
        "cursor": {
          "ref": "2d46f796-cfbe-4766-80f4-b632384e3139",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6e854898-b199-4191-abb0-876f1a3fcf13"
        },
        "item": {
          "id": "477abb68-0c1d-4aed-bc8e-fa66e924f9d3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bfa8bbf8-6459-49ee-8919-017d29d87cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d65512-212f-487b-a6a9-dfc44bd80d2f",
        "cursor": {
          "ref": "f6404382-e391-41ed-af94-ff77c8718fcd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "892f22ba-0514-4f77-baf1-64ec93b2d683"
        },
        "item": {
          "id": "75d65512-212f-487b-a6a9-dfc44bd80d2f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b7947bbf-c630-4c84-900f-e43e309d52db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6549479b-4845-4eef-a21a-6d060556e85a",
        "cursor": {
          "ref": "4952bb13-77c1-4d68-b35b-68da9a6e034e",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1b360917-b3d4-47ab-b229-1b990b897e40"
        },
        "item": {
          "id": "6549479b-4845-4eef-a21a-6d060556e85a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d4d6b43e-2896-4d87-80d3-c0da635e9208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a508de6d-fc83-40d1-b196-4923ad281d19",
        "cursor": {
          "ref": "8402450e-c7b1-4b68-92b1-9a1eef608783",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d26ee18f-26e8-491d-84ee-be685830aeed"
        },
        "item": {
          "id": "a508de6d-fc83-40d1-b196-4923ad281d19",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "09e5c2c3-5015-4728-a26b-65da8b7f5238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f960159-bb51-43ea-8cec-54cbc822f69b",
        "cursor": {
          "ref": "d85fa8ac-8e0b-41d1-b061-b8798cdaf943",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e0181542-8fcd-4ad0-ab54-a7cb96f9196a"
        },
        "item": {
          "id": "1f960159-bb51-43ea-8cec-54cbc822f69b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "677aa7c1-6f34-46f9-946a-23b31a0cef82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a89751-f346-4502-99e7-37434bbad3b6",
        "cursor": {
          "ref": "6de28acb-1476-41e6-adfd-3b8d96fde9d6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "810ac7e8-81c2-4d19-8ecc-29377aa907bd"
        },
        "item": {
          "id": "e7a89751-f346-4502-99e7-37434bbad3b6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c0ec7323-5dc0-4de4-ac5c-20c7d77703b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e3db72-c861-4d26-a6e1-69f98e479154",
        "cursor": {
          "ref": "4ae58e13-7c73-41af-9b66-edbe2acd1890",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f7d48713-c619-4f60-b295-1f9bc7c8f144"
        },
        "item": {
          "id": "60e3db72-c861-4d26-a6e1-69f98e479154",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2214afc8-478a-4157-80a8-41a91b5fad70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f021dc7-c3d4-4f61-a8c0-442d62532f7f",
        "cursor": {
          "ref": "1d113862-5766-4d4e-9701-8539fd633c8f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1011d54e-8e2b-4b6d-bdc5-faad5f8dae55"
        },
        "item": {
          "id": "7f021dc7-c3d4-4f61-a8c0-442d62532f7f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1858f88e-ed91-42ca-8f50-01187e7c6931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d9bbd9-6189-4400-9a3e-dec0d2561163",
        "cursor": {
          "ref": "73b28f30-1baa-4643-a2bd-8eec053baa50",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab1e0d49-37ba-40d1-93a5-a4f4fdf8477d"
        },
        "item": {
          "id": "97d9bbd9-6189-4400-9a3e-dec0d2561163",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b003c00f-9ca7-402f-b648-f73cf7fc165a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "567eee9f-0773-4a4c-b257-0a99cf4958aa",
        "cursor": {
          "ref": "fdfbcba2-160a-43c9-99dc-6afc794232ac",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9be2a592-b308-4a4c-a02d-db8fd923f14a"
        },
        "item": {
          "id": "567eee9f-0773-4a4c-b257-0a99cf4958aa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1cd9334d-619c-4630-8889-c406ab09085a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a49c6d-cda9-4d8a-8c6f-447e7f3a656a",
        "cursor": {
          "ref": "4d33f7e2-9401-4a95-b6af-84ed3489ac7f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d969e1ac-7510-4cae-8189-0638f4ae19f7"
        },
        "item": {
          "id": "d4a49c6d-cda9-4d8a-8c6f-447e7f3a656a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8685873d-462f-41ee-a36f-b8f10c8d582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00f1417-a15f-426e-9025-1bb7217c32f8",
        "cursor": {
          "ref": "d8036fa8-13c9-4201-bd12-72e48c8e5e8e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bf7b3dc2-a8c4-4df9-9e32-a70a81350a18"
        },
        "item": {
          "id": "d00f1417-a15f-426e-9025-1bb7217c32f8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "904b149a-2481-4855-ad69-68937b056a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e863c4ea-34e5-4cee-89c0-b0d9cfec27e1",
        "cursor": {
          "ref": "26101fa0-a0de-402f-93ed-63f6ab470636",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "481be2dd-43bd-4cba-9c1c-ebece8f60e80"
        },
        "item": {
          "id": "e863c4ea-34e5-4cee-89c0-b0d9cfec27e1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7492c37a-5b1a-4604-ada1-ee0effb6bd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d5ca1c-3a97-4d6a-82f6-1325838015c7",
        "cursor": {
          "ref": "6f70ce1e-b8f4-46d0-972f-00dbdeeba720",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ed56f772-5ffd-40bc-af2f-558f68810a42"
        },
        "item": {
          "id": "81d5ca1c-3a97-4d6a-82f6-1325838015c7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f2eff373-3dc4-40e1-aaee-aad2a871bba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa1eefe-f3c5-41ef-b792-6c47dfa12ae7",
        "cursor": {
          "ref": "00d92991-afec-41a7-be4d-764ae16183ff",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "255aee51-2f0d-4029-a85f-88108a7f37a3"
        },
        "item": {
          "id": "afa1eefe-f3c5-41ef-b792-6c47dfa12ae7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5e2af75b-86db-4c8f-9b24-60299534859a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e78f6f7-a50a-4a1d-98c8-e27fd095262b",
        "cursor": {
          "ref": "d7d4d0a3-5ca7-491b-95ab-e750d9b1eeb7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ca360623-3d5e-436a-89a0-45183e5ea41f"
        },
        "item": {
          "id": "1e78f6f7-a50a-4a1d-98c8-e27fd095262b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "968dfed2-4ab7-4d07-9004-b8c42ec93038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbdfde0-53e0-4b75-be7a-874b3e2c614d",
        "cursor": {
          "ref": "a6cae48f-749d-4bce-9268-879b4aba08df",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0dc35e18-7a97-4a7f-a125-1869750b9f7f"
        },
        "item": {
          "id": "5dbdfde0-53e0-4b75-be7a-874b3e2c614d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c76d71a9-fcbe-4100-a000-c6990030ee46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "7e490f0d-cf08-403f-8be6-9aec0aa7c108",
        "cursor": {
          "ref": "31cd2211-37fe-4de2-8c9a-467cdae869ba",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a8370554-8b7c-444f-a865-5eb3e1866f95"
        },
        "item": {
          "id": "7e490f0d-cf08-403f-8be6-9aec0aa7c108",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5223304d-beba-490b-8c11-ad785da5cdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85ac696-220b-472d-8d30-f4113a633bf7",
        "cursor": {
          "ref": "77cd7cb3-2e0d-46d9-95bd-ca7b6cef939b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d45e9766-2f7c-432f-9009-9d0f5d4811bb"
        },
        "item": {
          "id": "f85ac696-220b-472d-8d30-f4113a633bf7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9a5e6274-8d61-4300-8128-48cc47624d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b368e93f-66c1-4e96-8ca5-5ff99c97dc85",
        "cursor": {
          "ref": "ea9d2eef-e63a-418a-921f-cbc6da9bdf79",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "58b3da73-264a-4dc7-a2a7-0bd82de53657"
        },
        "item": {
          "id": "b368e93f-66c1-4e96-8ca5-5ff99c97dc85",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1566edb2-d8f8-4e57-8f69-670c09b41da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bc7c14-39db-40d1-918f-d52ef3577d32",
        "cursor": {
          "ref": "1dd3c666-5519-4f01-89f9-23a9e3a22597",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6264cbc2-77eb-4a4f-b65e-304da4fff825"
        },
        "item": {
          "id": "49bc7c14-39db-40d1-918f-d52ef3577d32",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5dbd1550-9d1c-4714-91e6-76b38310d429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21d9eb4-a194-44ff-af28-7b301db326ec",
        "cursor": {
          "ref": "b91f53c8-88be-4d7a-9b64-02d606617cd2",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c9c962fc-2e6e-4b49-a4f0-3d582063bedb"
        },
        "item": {
          "id": "d21d9eb4-a194-44ff-af28-7b301db326ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ebdd010a-5158-4d8f-bbb4-3ec7058ebe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2389a5-ed14-44f1-a8a7-1d946e42ec8d",
        "cursor": {
          "ref": "7561a7e2-9cdd-437a-8964-6ecc36efce8e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a3324156-34f7-4628-836e-66ef83dd1e91"
        },
        "item": {
          "id": "de2389a5-ed14-44f1-a8a7-1d946e42ec8d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "200cacd3-4a10-4ae8-ad50-9e443c701f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6663ce6-26fb-4d72-91ae-7ed1e1555c28",
        "cursor": {
          "ref": "b3df7c25-31c5-48b2-a74a-30887394952f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2aca2ae3-e16f-4d76-96f4-9e4964651eb5"
        },
        "item": {
          "id": "f6663ce6-26fb-4d72-91ae-7ed1e1555c28",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "46e7bbe5-ad92-4df4-835f-56bee535150f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2fe8616c-173d-41f4-a00a-e011b4765c36",
        "cursor": {
          "ref": "a23839c9-26d4-4256-9611-f03ff35b81c8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dd6a2e27-619b-48bb-8e37-f8044ae0293b"
        },
        "item": {
          "id": "2fe8616c-173d-41f4-a00a-e011b4765c36",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bafbdfcd-083d-49ed-bddb-cb1187387857",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "e186190e-511f-4ec4-a26d-fd4eafcefff5",
        "cursor": {
          "ref": "46ebfb35-5b02-4269-8593-cd1f1e198afd",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a2d7b3a9-2790-4530-bb6b-2230fe4eac6e"
        },
        "item": {
          "id": "e186190e-511f-4ec4-a26d-fd4eafcefff5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "77d96f12-9b1c-44be-970b-561918ff42e7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5217f22a-2757-419f-8071-4e3d872b98f0",
        "cursor": {
          "ref": "b0fbfb3a-0859-4282-ab6f-cd043977dd14",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "baeeef11-14f8-4341-8c24-c00a0f1ea6a1"
        },
        "item": {
          "id": "5217f22a-2757-419f-8071-4e3d872b98f0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e6c0227b-1442-4e4c-9c60-92dd404a4983",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "a5f66743-8777-4e75-b7dd-1451089987ef",
        "cursor": {
          "ref": "b1080f3d-eb81-4dc1-a904-3f524f976454",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47f50c32-611e-4d62-a466-b9a3ca994fa5"
        },
        "item": {
          "id": "a5f66743-8777-4e75-b7dd-1451089987ef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2091583d-3e75-4da7-a0fb-17d542cb2d78",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a4944ff3-d6b1-4a1e-ac04-bb2b3bf4ede7",
        "cursor": {
          "ref": "a6f79c21-c600-45c0-8ff0-b6a79b8276cb",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8816d19c-d974-4afc-b624-077e26276be2"
        },
        "item": {
          "id": "a4944ff3-d6b1-4a1e-ac04-bb2b3bf4ede7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5e662e1e-4847-4f96-8ff1-24d83eb61a96",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "d855b047-27a7-4624-ba0e-35148aab5982",
        "cursor": {
          "ref": "9f0a860d-c6cb-493d-817a-965edac88b1e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "16d212e3-8ee3-46ca-9aff-243ab18307ab"
        },
        "item": {
          "id": "d855b047-27a7-4624-ba0e-35148aab5982",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54b255d6-fc30-40ad-b641-3dcd11b77042",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690f6a00-937c-49b7-916e-af158acd67ee",
        "cursor": {
          "ref": "49f062d2-fae8-4eaa-887e-3a3aa4340037",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a2d41993-c5bb-41aa-af2a-2791ad44900f"
        },
        "item": {
          "id": "690f6a00-937c-49b7-916e-af158acd67ee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "aa11b020-5ad2-4b6f-bbe8-f35445ced6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8dc643-3f86-47fc-bc05-c80df7e276ec",
        "cursor": {
          "ref": "194c5366-6133-42e3-98d6-0a385fefaec6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "97531c4b-e871-4af3-8739-6a8fdb3bd16d"
        },
        "item": {
          "id": "6f8dc643-3f86-47fc-bc05-c80df7e276ec",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ea52c2b4-6fcb-4bb4-af60-99b87b01a792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c29248-255c-4567-b6b7-f8a0f86aadf6",
        "cursor": {
          "ref": "ed8c98b8-f293-4351-81f2-3de90a58fe0d",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "040c1d9d-aa81-4c46-ac57-4035bc41205b"
        },
        "item": {
          "id": "93c29248-255c-4567-b6b7-f8a0f86aadf6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ec206b83-06bf-4db7-aea0-d2241227415f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae149d9-d0cf-44c4-8e53-e61b78130537",
        "cursor": {
          "ref": "957f59bb-12bf-45b2-965d-dd86791af7dc",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "be99299b-1345-4bb1-9b4f-d6cdd3ddab25"
        },
        "item": {
          "id": "aae149d9-d0cf-44c4-8e53-e61b78130537",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7d43a324-bea3-4d03-baf9-d818bf909f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79f1eb4-5a94-4e90-a932-e61314ecef95",
        "cursor": {
          "ref": "1a9b014a-2b7b-4b9c-9abc-589a74e7c9ad",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5388e9a5-ef2a-4b69-86c0-16fb0ddb681e"
        },
        "item": {
          "id": "c79f1eb4-5a94-4e90-a932-e61314ecef95",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1bb805cf-e9ea-48a0-8082-2a0cd3cd5180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79671fd9-b739-47d3-837f-f6dba446626e",
        "cursor": {
          "ref": "02cc0846-f927-45f1-b3f1-e9b9012e5902",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a9435a61-9566-413a-bf0d-8d5a17197db0"
        },
        "item": {
          "id": "79671fd9-b739-47d3-837f-f6dba446626e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3cdf5608-d4dd-4c96-92f4-6e5c6fbf2eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fb2746-35f4-46ae-a475-3076b2647a33",
        "cursor": {
          "ref": "66418838-577a-4dfd-8c6e-914176cb9b6e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8c143cc5-3d04-4f73-8f05-d3c0c77d9817"
        },
        "item": {
          "id": "c8fb2746-35f4-46ae-a475-3076b2647a33",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4dda6ee2-2c9e-489d-a03b-a3e6d5ecbf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335674e3-d1f7-4bfb-acb0-1e3e71b4459d",
        "cursor": {
          "ref": "fc512f2a-f46e-4c76-81fb-f5bd86fa86a8",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6d0a5c4c-da00-428b-85e3-6e721f4ba00c"
        },
        "item": {
          "id": "335674e3-d1f7-4bfb-acb0-1e3e71b4459d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a62a968f-38cb-4317-8af4-80ab795301ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c7ca96-a5d3-4b71-95eb-9782291885c8",
        "cursor": {
          "ref": "50fa2899-bd7b-483e-98ef-504923a911e3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9b4f2847-67c8-484c-bee4-b92eb74106fa"
        },
        "item": {
          "id": "b7c7ca96-a5d3-4b71-95eb-9782291885c8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "be6509a5-2ae0-4a5b-b74e-dadfcda42c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04490e0-e8f3-41b9-9182-b7b24bb2ce51",
        "cursor": {
          "ref": "92479562-adf1-4275-9d0f-e2a0451401eb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f4dea1f9-0636-4a7a-86cc-7f85cc0ed540"
        },
        "item": {
          "id": "a04490e0-e8f3-41b9-9182-b7b24bb2ce51",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7ca7bc35-90ed-4daf-bd01-637a609e681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7516f7ac-9eab-48b0-8501-41915a656880",
        "cursor": {
          "ref": "cbc96c29-cb56-4d7e-9e02-46e3c0c7a618",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cb55a371-a97e-4b57-ba40-3c8366642956"
        },
        "item": {
          "id": "7516f7ac-9eab-48b0-8501-41915a656880",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "82a067e4-6f4a-4f71-80e3-8d815ad45e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db2806a-3ec4-4c25-ae6f-da75eb9435ac",
        "cursor": {
          "ref": "ed501e72-c9de-4839-8621-ee3910bc0eb8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ff6331a7-10c0-48e3-b3f0-ec28404dbe43"
        },
        "item": {
          "id": "4db2806a-3ec4-4c25-ae6f-da75eb9435ac",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b5ec0e79-b87b-4e56-907a-3fa363a94151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213ba3ba-ee9f-44f9-9d97-203934056846",
        "cursor": {
          "ref": "3e192c7d-d2b9-4947-9eec-10744558867d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "83f632ba-1b44-4215-8b9c-2ac0ebe41c35"
        },
        "item": {
          "id": "213ba3ba-ee9f-44f9-9d97-203934056846",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "64f52b67-b536-4e09-808a-15391c14b63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f998ec-6920-4d00-8f6c-05ec17f4fcb7",
        "cursor": {
          "ref": "7e0c103d-91ce-40e0-a7d5-5f4b06eccaa6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1271d8fb-19ec-4365-9b50-3e8fd10db11f"
        },
        "item": {
          "id": "d0f998ec-6920-4d00-8f6c-05ec17f4fcb7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "08436650-8017-49ca-9747-818fcb7a2e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91c5a2b-a3c5-4155-9b05-c0b8b413d0b3",
        "cursor": {
          "ref": "41be622e-f9a4-498a-bfe4-c891805b9292",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4622ab7e-bee2-4a07-9a2e-cf6d5d36d6c2"
        },
        "item": {
          "id": "b91c5a2b-a3c5-4155-9b05-c0b8b413d0b3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "32e424c7-e4ee-4943-baaf-b0835575e5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84001851-7c40-4a7d-82cc-af6c72f48af3",
        "cursor": {
          "ref": "80b0b347-22e4-4153-b7f1-d0ffb9babe1b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e4fb796-e506-410b-bded-1ad1367a3dd0"
        },
        "item": {
          "id": "84001851-7c40-4a7d-82cc-af6c72f48af3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8020454d-90d2-4333-b530-51a6f6931dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d49ce4-b475-4760-a0eb-5abc47fdaca4",
        "cursor": {
          "ref": "823edd2a-0733-4709-bd35-3b61ffe0dca3",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9b37099e-ed37-4007-bf85-1dee6a969660"
        },
        "item": {
          "id": "53d49ce4-b475-4760-a0eb-5abc47fdaca4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a221cde2-1525-4e75-9a66-1594bd1c1703",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "0074564e-896f-4c1f-943e-b4da82bca202",
        "cursor": {
          "ref": "98061264-4f85-4376-b479-a24121d06a67",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "90e5a6de-4302-4d0f-8168-891d5d9e5ecc"
        },
        "item": {
          "id": "0074564e-896f-4c1f-943e-b4da82bca202",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "04fc40e4-61ae-44c9-bfbd-d2044f4e3ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58f772d-90ae-4074-b1c9-734bdbd015c7",
        "cursor": {
          "ref": "195cf7c7-d743-4c9d-8e20-c521fe8f5574",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "084ae24e-5263-41ee-8856-699a1bbf5051"
        },
        "item": {
          "id": "e58f772d-90ae-4074-b1c9-734bdbd015c7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b5d270cb-1706-445e-b3f7-f60fae3b4000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e7dcfa-c142-4d08-8216-d119db5ba282",
        "cursor": {
          "ref": "da61dfa8-c9bb-4e7b-b5f2-330f0ddf5d71",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "68399ed4-1baa-4769-b7a3-2691d9a6cc4f"
        },
        "item": {
          "id": "47e7dcfa-c142-4d08-8216-d119db5ba282",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "862d8acf-216f-4538-bf28-09a28ff88790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f9f2cb-4c02-47d2-a8e0-67beb5eaf902",
        "cursor": {
          "ref": "825c3364-6411-4213-83a1-8ae4bd3cf5f8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cac5970d-cc80-47fc-863b-76bfe88e1937"
        },
        "item": {
          "id": "a7f9f2cb-4c02-47d2-a8e0-67beb5eaf902",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "24cbf64d-b47b-4b5d-9aa3-1a314db850e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30e47b6-3f55-491f-b41e-308cdbb00abd",
        "cursor": {
          "ref": "4fcea619-0cf5-4f9a-8081-94ad379eef95",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "bde6ca9f-3bff-4357-a811-1758a2b2b439"
        },
        "item": {
          "id": "b30e47b6-3f55-491f-b41e-308cdbb00abd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "576709c7-1d76-49a6-a6cd-bb1ce8440a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54b6df7-598e-4421-a501-3e2c2f3d49d3",
        "cursor": {
          "ref": "c44eaab9-65c2-47bf-8854-52519c2e7790",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e244fa43-1c16-4f42-ae68-e91105476cdb"
        },
        "item": {
          "id": "e54b6df7-598e-4421-a501-3e2c2f3d49d3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "644109e6-5dea-4fa2-af1e-db03be148e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd202b8d-ce0f-4ee1-a4b5-5ad68cdc1d6b",
        "cursor": {
          "ref": "ead5dd1e-bb36-47e9-a023-d5869281f1e4",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c09370c4-08ea-46b3-84ad-9875b3ce5cb2"
        },
        "item": {
          "id": "dd202b8d-ce0f-4ee1-a4b5-5ad68cdc1d6b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "91e87761-aace-4c28-9993-ea79bc20f86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea954186-623c-45c3-991c-ca973bd3d20a",
        "cursor": {
          "ref": "955a33ad-99e9-47de-a072-3f5e3958c355",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "843a489e-d26a-4a40-8c24-780c9e8ef265"
        },
        "item": {
          "id": "ea954186-623c-45c3-991c-ca973bd3d20a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5a9d68f5-d961-4ad3-ade0-75af91566216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6495301c-66b5-40c5-8e75-414b4b73e88f",
        "cursor": {
          "ref": "bd5d8bdb-f264-4340-af08-6c58832b51e1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a1015845-474b-4be4-a19c-b4705e7d8494"
        },
        "item": {
          "id": "6495301c-66b5-40c5-8e75-414b4b73e88f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fe758f6f-5482-4917-8ca7-7a9085d53551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e741ca3a-59de-4dd9-b2a5-dbc7ee7c6c54",
        "cursor": {
          "ref": "adfbcb3a-cf52-458d-8af8-85770cc43ee8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8f3f5ff6-265c-4b28-a6aa-29a5f019046c"
        },
        "item": {
          "id": "e741ca3a-59de-4dd9-b2a5-dbc7ee7c6c54",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f89a7ba3-d384-4cbd-9e09-34045e69e2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f374030b-3af3-4baa-8fe0-8ca3112fdf16",
        "cursor": {
          "ref": "35bc6259-c52a-4c30-b14f-4cc68c91ae9c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c700b382-0c50-4ea7-9197-d6ed87e67599"
        },
        "item": {
          "id": "f374030b-3af3-4baa-8fe0-8ca3112fdf16",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "84b5aa00-10e2-4358-8d35-f97939aa6efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4614c9-4790-488f-b115-8502ec53112f",
        "cursor": {
          "ref": "28ad75d2-0e71-4834-b8c5-350d0e59bee7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7ceb6f92-9086-4e21-a157-4f45e4d80cb5"
        },
        "item": {
          "id": "8f4614c9-4790-488f-b115-8502ec53112f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b8a11703-5d4f-4d50-8ed3-c200f86eb804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5565e397-54ce-4525-8206-991562533f68",
        "cursor": {
          "ref": "96ebd48a-127a-43ab-9243-61cd0ad08385",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4f86fa16-c19a-4718-a83e-eda4e1f189a3"
        },
        "item": {
          "id": "5565e397-54ce-4525-8206-991562533f68",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e75ed5ab-38ff-48dc-b78e-a436e2d27515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de78fdb7-54d5-41af-81a4-2fd1aa31f3ea",
        "cursor": {
          "ref": "719d819b-7729-4fde-948b-94276a0d18cb",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "72bd66bc-30cf-419d-b009-78a65b6cd748"
        },
        "item": {
          "id": "de78fdb7-54d5-41af-81a4-2fd1aa31f3ea",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c12acd7a-ce28-4473-be7d-8dedfd3caee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf285a2-53dc-4514-a073-01f099807904",
        "cursor": {
          "ref": "13ae96e6-ba2e-40f0-80fb-206e14b5efd7",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9093125d-1af7-429b-a908-0118e3a77c8a"
        },
        "item": {
          "id": "fdf285a2-53dc-4514-a073-01f099807904",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "62c5d647-9a16-4254-aa25-6ed53f8c175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7cf307-2ef5-4d4d-8caa-edce4024963f",
        "cursor": {
          "ref": "40853428-432b-4fc4-acbc-708171b8e230",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "377c77de-f524-4759-b724-d3c3d3cd3a8e"
        },
        "item": {
          "id": "4a7cf307-2ef5-4d4d-8caa-edce4024963f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d931c509-f577-4f9c-9e35-3b0c908c17bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1167880-5ccf-4509-82c3-4d64f396f319",
        "cursor": {
          "ref": "f769f720-41c9-4702-84e0-da795ef5a494",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "265993c7-cd3a-4901-bad5-fbd7dbc407e3"
        },
        "item": {
          "id": "e1167880-5ccf-4509-82c3-4d64f396f319",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "635aae72-8207-417b-b5a5-d6600a367300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6485c62d-fefb-4307-ac06-271de6c8db64",
        "cursor": {
          "ref": "261d0d1a-3ff5-4682-a6e5-dc089ccca12f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b2cea859-9022-4588-942e-b530fa084195"
        },
        "item": {
          "id": "6485c62d-fefb-4307-ac06-271de6c8db64",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "488b90bf-2126-485c-9450-a9f8bd84eb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdffc9df-21a8-4d6a-a58a-52ea5bba9ec0",
        "cursor": {
          "ref": "2bcc9e14-aa4c-47be-8445-6c1e74a52eb3",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "079d52b8-2550-4cc2-8ce1-8e8bac709350"
        },
        "item": {
          "id": "fdffc9df-21a8-4d6a-a58a-52ea5bba9ec0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5a490bd6-d410-4bad-96a8-e57e1cd61b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332d8d14-80b3-4698-83c2-d6b976336739",
        "cursor": {
          "ref": "6f73c431-82be-4bf9-b168-2a6691c9646b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "82058121-eada-44fe-8018-7e07491a2976"
        },
        "item": {
          "id": "332d8d14-80b3-4698-83c2-d6b976336739",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3a3d03dc-6bc6-4a2d-8754-a54a9269187d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7380896-4fd9-410b-9164-63a029aff332",
        "cursor": {
          "ref": "45314df5-4d60-47b0-af8e-a0d41da5c869",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "44f368bf-d886-4be8-9031-804f96d868f3"
        },
        "item": {
          "id": "a7380896-4fd9-410b-9164-63a029aff332",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f3b59a4b-543b-4334-a9eb-df744a07a794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18021ba4-65e9-467d-a0d5-077dac1beead",
        "cursor": {
          "ref": "341dab1a-7118-41be-81a3-30a8c20b1e42",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8133cfc1-1a2d-4893-9be4-c71377256580"
        },
        "item": {
          "id": "18021ba4-65e9-467d-a0d5-077dac1beead",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "092cd27d-4f17-4e3f-9803-19046e74d649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e56c998-9c08-4664-8f4f-3ca52a87adc9",
        "cursor": {
          "ref": "1645d407-3356-407e-aa55-f66e031bbd47",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9e02b9dc-88ba-4ea3-b3e1-fe155f25d3f2"
        },
        "item": {
          "id": "0e56c998-9c08-4664-8f4f-3ca52a87adc9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e40450d5-ce23-4800-ac4e-98caeac3b55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db84257-9ae1-4394-a985-5c1f98e659dd",
        "cursor": {
          "ref": "aaa41cf3-24f0-40f4-b28b-0c1cc9f945cf",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bbeaaa6c-38cb-47b4-9263-33d229874bc7"
        },
        "item": {
          "id": "2db84257-9ae1-4394-a985-5c1f98e659dd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "37935af0-fa0f-495a-ba05-26c1944c2592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881b70ee-0a8e-434f-876d-447892947be9",
        "cursor": {
          "ref": "d324493c-98b3-4fc1-be33-c7e01c388f9f",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f567187c-fa3f-430d-9058-c66d8b595b7d"
        },
        "item": {
          "id": "881b70ee-0a8e-434f-876d-447892947be9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "755ff5f6-4ba2-479d-b6e4-7a4017fe70e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e6475d-0514-4295-b200-4ed8e0a5d0e5",
        "cursor": {
          "ref": "69465318-b595-4476-8e55-7d5e1e28069c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6961e5c5-5337-4fc8-88de-672ebeaaa7cc"
        },
        "item": {
          "id": "72e6475d-0514-4295-b200-4ed8e0a5d0e5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cf040575-576f-4837-b719-d44d42d78d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a97634-5ab6-488d-b393-e3d138d3700e",
        "cursor": {
          "ref": "7aeaf654-8924-4966-9011-0442b6f85036",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "85511175-dd72-42f1-82e3-779a58d55566"
        },
        "item": {
          "id": "d7a97634-5ab6-488d-b393-e3d138d3700e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6ecce904-89e0-402c-bf95-1263662004c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9171677-3330-49e2-8148-ae29ee586a21",
        "cursor": {
          "ref": "ef7897c0-5653-43b5-a986-dd18bc39ca07",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f121ec5f-e207-467c-ad37-47525a763207"
        },
        "item": {
          "id": "d9171677-3330-49e2-8148-ae29ee586a21",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e443a0b4-c35f-42c9-93f6-9b602497eddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d615cc0b-6fda-46a8-9015-472ce91370dc",
        "cursor": {
          "ref": "e6f8bda1-27e0-4b89-b6e8-fd47684737b5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0bbc3315-57d2-4599-99c3-7cc9ba53ab1c"
        },
        "item": {
          "id": "d615cc0b-6fda-46a8-9015-472ce91370dc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c0f6fd1d-f10c-4e40-bdbb-365c1e88b016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccfb008-1814-4b03-b617-fd42977383f2",
        "cursor": {
          "ref": "9df5ece0-15d2-4f36-8580-1472869fc8d4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9e3f12db-5cce-49c8-a09a-8e4b116cd5e7"
        },
        "item": {
          "id": "dccfb008-1814-4b03-b617-fd42977383f2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cd9d9050-a384-4e0d-b36e-f94680a4391c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a38bd0-8825-4fc7-86a1-00d18d7c416a",
        "cursor": {
          "ref": "50e7b657-2e59-4a71-b836-92cf83de1720",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ae59e843-7b9d-4d15-ba06-7283a58e839c"
        },
        "item": {
          "id": "70a38bd0-8825-4fc7-86a1-00d18d7c416a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6b1eee64-345a-42d0-9e7f-6ce645a59857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039ac5a0-44fb-4a62-9168-5bd705439926",
        "cursor": {
          "ref": "dc432625-8b5f-43a9-b661-99e444816245",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "02b0d36e-ea25-4ccd-a145-4c0a52e8d6e2"
        },
        "item": {
          "id": "039ac5a0-44fb-4a62-9168-5bd705439926",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "05fd4ace-e401-4f25-8d4c-e71714cc5b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a9e491-34af-480f-a10a-3b350c934e91",
        "cursor": {
          "ref": "18e6d00b-eee6-4eef-802e-8868726cfe3d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ee7a7b1-8d9e-43a8-bbde-0c524dce2306"
        },
        "item": {
          "id": "00a9e491-34af-480f-a10a-3b350c934e91",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e19fec68-2e48-4c9e-adea-3a5e6fc2f943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806afa4d-e1a8-4eec-9824-17a93a6baef0",
        "cursor": {
          "ref": "e905361d-d8a1-451d-ad10-1643e6b0835a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "590d0235-be59-431c-8109-cd12b66c28c8"
        },
        "item": {
          "id": "806afa4d-e1a8-4eec-9824-17a93a6baef0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ab10e900-bf75-44b5-b576-bee03ee5b8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f1bac1-7a14-4cd0-ab5a-29ddc4e42baa",
        "cursor": {
          "ref": "f77da2bf-d4e7-4aed-8ff8-ab78f234e012",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4cb368f8-2baa-4f5d-ba0d-0a25f61f365a"
        },
        "item": {
          "id": "d8f1bac1-7a14-4cd0-ab5a-29ddc4e42baa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f3c9287a-21ed-45d6-9bdf-cca855e32e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4dae60-75e9-4418-b1e6-36e9d2d4b435",
        "cursor": {
          "ref": "c037e1f7-76f0-4640-aba6-a11c10fba800",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "00c5c482-e12f-4a83-9c85-b4911781c56d"
        },
        "item": {
          "id": "fa4dae60-75e9-4418-b1e6-36e9d2d4b435",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2452f959-3272-4f3a-8c9f-005592b8f3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e5fa58-590d-4143-a05d-c1a42934617d",
        "cursor": {
          "ref": "7482e7de-73b2-4431-889c-abaa1c78bfb8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f36725e0-6261-4189-ae57-f87f263a438b"
        },
        "item": {
          "id": "b8e5fa58-590d-4143-a05d-c1a42934617d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "492c6571-9e06-4a61-9108-f51d99444ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9baf65-9a99-4f48-b3f7-404afd759835",
        "cursor": {
          "ref": "af918be8-7bbc-4849-9f92-352ad8ae5656",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "98d90f5c-71d4-42d1-bd30-aee211b2918a"
        },
        "item": {
          "id": "9a9baf65-9a99-4f48-b3f7-404afd759835",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "30b1c2be-e9b5-4219-819e-749bb79072d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471e90c5-cc79-49ad-9f96-9c7bf721d3fe",
        "cursor": {
          "ref": "a998f72a-6ee5-4bc0-bd85-3204f8e99d64",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7bcf9e0f-37dd-4b7b-805a-185b5e4304bd"
        },
        "item": {
          "id": "471e90c5-cc79-49ad-9f96-9c7bf721d3fe",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cd767bfd-bc3a-422a-aa37-9f071c24e2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5461edb-2c76-4671-993a-eb4ecd613938",
        "cursor": {
          "ref": "72334cc6-9c6c-4149-8381-d7b8c58417f0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "55bce54f-414f-4100-af07-6975de851eec"
        },
        "item": {
          "id": "a5461edb-2c76-4671-993a-eb4ecd613938",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "93835b0e-09fd-4e38-803b-eea160011c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4492891-6441-43fa-a037-388f2de29a2b",
        "cursor": {
          "ref": "6a673bdf-4e49-428d-a8df-e9e36c1cf8bd",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "84ec20b3-318c-4d5d-937d-a6fe35e110ec"
        },
        "item": {
          "id": "c4492891-6441-43fa-a037-388f2de29a2b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6db58da5-00d6-4616-bd7c-b620151362a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f91057e-90e6-4eb8-9ad5-3c02c993c6fe",
        "cursor": {
          "ref": "bc464f94-c90b-42fd-b03e-b97ec0ebadc6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "94fe2743-ab80-4b1b-8c24-33e0871259f9"
        },
        "item": {
          "id": "6f91057e-90e6-4eb8-9ad5-3c02c993c6fe",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3b087631-1be0-4509-b0a5-a4f5d154ebff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285360b3-d509-42da-870f-b054b0dd0a39",
        "cursor": {
          "ref": "025c1f6d-2f47-4417-b990-8f690169cc3c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "53a08952-b38f-491b-9ffe-67838a2b2cd8"
        },
        "item": {
          "id": "285360b3-d509-42da-870f-b054b0dd0a39",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4cf6e2b0-15b6-47be-b068-c1e1bc379804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d43892c-eea8-4543-81b9-f75186e134d3",
        "cursor": {
          "ref": "6642547d-c619-4989-bbf8-534229c1d7ac",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9be22bc8-d1cc-4b22-bea8-2e6fed5a58ba"
        },
        "item": {
          "id": "1d43892c-eea8-4543-81b9-f75186e134d3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fa7cc578-3604-48a1-8641-3d2f328c4260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42903595-ef80-4259-831e-c83d20fc8568",
        "cursor": {
          "ref": "c268559c-a8e9-4ad5-861c-72c722124f7d",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b7e08e6f-e85c-4c50-b961-ebc03896fad7"
        },
        "item": {
          "id": "42903595-ef80-4259-831e-c83d20fc8568",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4029ef5f-5ce4-43b3-98ee-fd1e354f3b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeff063-178f-42a8-98c3-31158617af66",
        "cursor": {
          "ref": "badbec68-6194-44a8-ab5b-2b8434b28dcf",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "333920d8-7858-43ee-aedf-b78c6a9f9bd0"
        },
        "item": {
          "id": "cbeff063-178f-42a8-98c3-31158617af66",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "daa0ae17-ff5b-43d2-83f9-8f3b3c7d8639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761b50fd-b293-45fe-9a56-747a1ec202b1",
        "cursor": {
          "ref": "bec3ed2d-e339-4a95-8fa7-1adc7ab76110",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "fd5dea92-2dfd-4c95-8843-74b2e735e765"
        },
        "item": {
          "id": "761b50fd-b293-45fe-9a56-747a1ec202b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4296a640-d45e-46ab-b715-e56a0d0bafcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ed427f-49fa-498f-8eff-eee770252322",
        "cursor": {
          "ref": "81f1087e-6fae-42c1-8aaa-d72701736d09",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "70138d14-6246-46f7-9a60-26691f1beaca"
        },
        "item": {
          "id": "b5ed427f-49fa-498f-8eff-eee770252322",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7e606963-5c96-43fe-b337-f137e7c8a06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4193077-7893-46fc-8361-db9a82419cb5",
        "cursor": {
          "ref": "73160195-b191-4300-9a31-c1ee4663b062",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "823421ad-9109-4e9e-b41d-70021b70dfd4"
        },
        "item": {
          "id": "f4193077-7893-46fc-8361-db9a82419cb5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c2a15802-b8f0-4b81-8770-822a3b88d9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79501f98-3261-47aa-941c-f1535b7f5cd4",
        "cursor": {
          "ref": "8770f723-fe15-4e8e-a3cc-0b1dea32fbaa",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ebf9f737-235c-46b7-80aa-086589af3a5e"
        },
        "item": {
          "id": "79501f98-3261-47aa-941c-f1535b7f5cd4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "28588456-7d8c-4724-be6f-f21c87d6ba47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26629d7-8986-4954-86b8-1153aa927119",
        "cursor": {
          "ref": "abdf63d3-b886-4884-a5d9-5505ebc0ba0b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "509cdc02-2431-416c-adc6-156de1bb5e14"
        },
        "item": {
          "id": "c26629d7-8986-4954-86b8-1153aa927119",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "029ac33c-3292-438c-9c8c-ef3444cc4941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8818c2b7-0391-4afd-866b-73e71f210c75",
        "cursor": {
          "ref": "f35fb29d-db41-4bc2-b4c8-bfa95f50dbe8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c0bb565e-d903-459c-8375-a967a2b3792c"
        },
        "item": {
          "id": "8818c2b7-0391-4afd-866b-73e71f210c75",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3d3ba085-1daf-4da0-9940-c0d9e4251743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22174b22-d48d-4fb0-a245-57275802dabf",
        "cursor": {
          "ref": "c760761f-322a-40c1-9734-b20229ff0ac6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "01cb51bc-daed-4d78-91fd-952fbcfab953"
        },
        "item": {
          "id": "22174b22-d48d-4fb0-a245-57275802dabf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2f297b45-9113-4ff5-ad4f-879dd555fec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24aa89cc-e535-438b-8771-77eb8e750477",
        "cursor": {
          "ref": "348ea41c-bf5c-4a5d-a2ab-6575f7eb4825",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9485960f-adb0-49bc-9c1b-e8d86c59b075"
        },
        "item": {
          "id": "24aa89cc-e535-438b-8771-77eb8e750477",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e9b9cc9e-6fc9-4645-a2e5-67212374d02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9217982f-14eb-40b6-945d-a70106eea151",
        "cursor": {
          "ref": "0256c4af-2042-489c-a456-f492a625b048",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1e64e6ae-256e-45b8-9cfc-818a6a4ad535"
        },
        "item": {
          "id": "9217982f-14eb-40b6-945d-a70106eea151",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fed83b56-8e61-4e32-9d4b-aa33b25dbd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65699ca-b074-4058-a3f6-d157217ca1af",
        "cursor": {
          "ref": "09e501f6-4b4b-4d0b-8bf9-2766d571ecde",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c2922b40-4789-4873-8c9b-3bc0fe1c2304"
        },
        "item": {
          "id": "a65699ca-b074-4058-a3f6-d157217ca1af",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4a812330-6c6d-4423-9ff6-010d360a4455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b84dba-7409-4294-b4a8-4f0e93ef3b2c",
        "cursor": {
          "ref": "16560bdb-b6e4-4782-b53d-2b1ab95dd84d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d14285a1-973a-45ae-8fad-72482c0a8f97"
        },
        "item": {
          "id": "70b84dba-7409-4294-b4a8-4f0e93ef3b2c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3d836003-0401-45c3-b684-6ba24b0a3b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c457aedf-fc5f-4294-b603-43f19445e210",
        "cursor": {
          "ref": "17d85767-08a6-4d9a-85af-9e36a7ed8e03",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7b409b60-1a0b-48aa-bd10-6abe1cd4bae9"
        },
        "item": {
          "id": "c457aedf-fc5f-4294-b603-43f19445e210",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6f09ac2e-3a77-4206-8ab5-9fc1469a8e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffcfbd8-e4eb-4471-a04c-9016e29d6785",
        "cursor": {
          "ref": "10c45ce0-9d49-470c-ad23-bafbf4d89e16",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9f8e47d8-0710-4fe0-b095-5a57da5816ee"
        },
        "item": {
          "id": "bffcfbd8-e4eb-4471-a04c-9016e29d6785",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c2039b40-4f33-480c-8b14-4c79d262f026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eb86c9-195f-4ac9-a4e8-e62192af78ad",
        "cursor": {
          "ref": "9c6817d9-d45e-4c7b-9ef2-a073e9515c2a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fb95d9ea-fcda-467b-8cd3-1624ecf4f9ab"
        },
        "item": {
          "id": "83eb86c9-195f-4ac9-a4e8-e62192af78ad",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5d0ed706-a42e-41a1-87bd-6745e46de9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96be486b-e6f1-49f5-af2e-8cea889e7a32",
        "cursor": {
          "ref": "19479088-1549-4876-9cb8-236c3aa6b2be",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7e6469e9-1603-45ac-85fe-8e0354eb9f88"
        },
        "item": {
          "id": "96be486b-e6f1-49f5-af2e-8cea889e7a32",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "32990677-81b4-46d8-b385-0ffb781e16de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a905cf5-3eba-4bca-b229-8b7f906d211f",
        "cursor": {
          "ref": "e381c31c-b019-403e-a7b0-bb18d34e07af",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a9085774-ebbf-4413-a68c-c469394a6699"
        },
        "item": {
          "id": "6a905cf5-3eba-4bca-b229-8b7f906d211f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "46291c57-500a-4dca-bddd-cca3593a9ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b171f4d-8776-4c53-8232-4929aa650302",
        "cursor": {
          "ref": "c0d9ed6d-c5d4-4759-982f-a443175b132b",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a36dea43-c8b9-47e7-8cf8-73e8a818447e"
        },
        "item": {
          "id": "8b171f4d-8776-4c53-8232-4929aa650302",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c7274a50-4d6e-4f22-a5a9-14e84ff17c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b7b649-56fc-4e77-bbc5-f2ee4bf3e4f5",
        "cursor": {
          "ref": "e4ada921-55ab-447a-a2be-d0a8389b7ff5",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "51252805-46b1-4cc2-89db-4cd1951ef885"
        },
        "item": {
          "id": "c8b7b649-56fc-4e77-bbc5-f2ee4bf3e4f5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "231616a8-aa61-4ee2-b525-1ddbba13763a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b225860d-03a5-4f70-8443-6942fc8126f3",
        "cursor": {
          "ref": "3f9fd13c-3a17-45fb-8bb8-65f8a2f77ce3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fb8a8f99-ee05-46f2-9da2-6e8da55158b5"
        },
        "item": {
          "id": "b225860d-03a5-4f70-8443-6942fc8126f3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "95e5ab3e-c767-4754-9b6c-185fa92973ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207c8a49-da9e-4ddc-a83c-3b9501af211e",
        "cursor": {
          "ref": "02e0ad44-97d1-4cef-874f-fbeb195a5d87",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "691b6a1f-22d1-4831-9c1c-22daa769f97a"
        },
        "item": {
          "id": "207c8a49-da9e-4ddc-a83c-3b9501af211e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0afa2a80-d685-4e59-946f-2e4e10596a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac147770-3bb7-420c-be7e-0501c190cda4",
        "cursor": {
          "ref": "10fb0fa1-ef7b-4f3d-91c5-24a0d770fb8c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2753ff5a-ec98-4172-8c28-d1a7602174dd"
        },
        "item": {
          "id": "ac147770-3bb7-420c-be7e-0501c190cda4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cacd6d67-9d10-41f4-bc2e-c90057e08b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1ce347-8cd7-441e-b7a4-2f1288a04095",
        "cursor": {
          "ref": "3a1d7ea7-d14c-4a3b-b1aa-6c13db215a26",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ba5a0ce7-1086-428f-b781-93ecbbec8f2b"
        },
        "item": {
          "id": "7b1ce347-8cd7-441e-b7a4-2f1288a04095",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5153e3ac-9fa7-467c-bd43-3b8b92589536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30104bc4-3bec-4db2-8f3d-8cf7a0dd4de5",
        "cursor": {
          "ref": "3868a623-7559-485d-b80f-8964e9beb504",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7ad3a01c-aa53-41af-ae1f-23302acb5a21"
        },
        "item": {
          "id": "30104bc4-3bec-4db2-8f3d-8cf7a0dd4de5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "673742b7-2b0c-4716-8d89-e624df29bba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17057444-4067-4442-b2a8-ef190be9f3cc",
        "cursor": {
          "ref": "d1113d49-efc2-42fe-8974-b2e515914395",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "15a912a1-c37a-4482-83f0-71c24ae4a2d2"
        },
        "item": {
          "id": "17057444-4067-4442-b2a8-ef190be9f3cc",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5d0ad70b-48dd-449b-8697-3aad0afe7b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6740875f-e3d9-4d02-b3d2-75e1c320f7ef",
        "cursor": {
          "ref": "9f593565-3b50-4c6b-8b87-2d49eb251570",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "07240562-2507-43d4-b7f3-c81c3bca49f9"
        },
        "item": {
          "id": "6740875f-e3d9-4d02-b3d2-75e1c320f7ef",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7569cfba-c782-4376-9dc7-86026156a57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fe75d3-543b-45d8-99fb-433db8624420",
        "cursor": {
          "ref": "409996cb-505f-4b92-8960-38ac40874928",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3c147a09-9a13-4d12-9f95-a40ca1de1370"
        },
        "item": {
          "id": "85fe75d3-543b-45d8-99fb-433db8624420",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0f9bd56-669a-4077-b314-043fce045afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f8627e-d8b9-4a7d-a681-8484f1766e5f",
        "cursor": {
          "ref": "7a6ab66b-97a2-425a-a22e-adfc8bd96e5d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3b003f14-d641-4ec1-9473-9b830d13db09"
        },
        "item": {
          "id": "c7f8627e-d8b9-4a7d-a681-8484f1766e5f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1cc992af-98c4-4e7c-a089-1141d4175c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b100e8ae-ead0-4e0d-80dd-44b2ee87f351",
        "cursor": {
          "ref": "714d2526-5e41-47d3-8610-95f4c804cf7f",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "10746101-0f1b-4371-ac75-a3aea2e87a90"
        },
        "item": {
          "id": "b100e8ae-ead0-4e0d-80dd-44b2ee87f351",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c92b8669-7706-4bd3-a1da-fbee0e0499aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24758141-3895-4d3c-b0a5-7fd5ab9c3c32",
        "cursor": {
          "ref": "3359cdc8-97c0-44ae-899e-9ba1265f4511",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9fe32adb-bfd3-4e47-8d73-7697677989bb"
        },
        "item": {
          "id": "24758141-3895-4d3c-b0a5-7fd5ab9c3c32",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d359a1b4-c71a-47a2-92fc-9261f9529b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6f9a0b-8718-42a9-8995-b123cfbc0c10",
        "cursor": {
          "ref": "b849c3d7-73de-4058-ae34-6cd24591b0f8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "701ab6b1-cdec-472e-be9e-9371221613f9"
        },
        "item": {
          "id": "2b6f9a0b-8718-42a9-8995-b123cfbc0c10",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "510c7a2c-9f5f-4826-9608-49e5c2e33e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df37c85-9104-4a25-9333-5cadbc0058f7",
        "cursor": {
          "ref": "308c4496-b9aa-49d4-a0b2-42ff54bb3bc9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a7611afd-158a-4d26-a62e-a6a636c5d8cb"
        },
        "item": {
          "id": "6df37c85-9104-4a25-9333-5cadbc0058f7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "94b2fd8a-298b-45ba-8181-3fd9081c6b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55b3c1b-e582-47b8-bc41-8ede57d59160",
        "cursor": {
          "ref": "8fd7103b-fb55-44ae-a311-f191ca7febf1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c2a48543-7ae0-4602-b39d-92c5e406ad95"
        },
        "item": {
          "id": "c55b3c1b-e582-47b8-bc41-8ede57d59160",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e1e9b1a2-f542-4300-aa28-3c5a610ef6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d266caa-867d-4962-a305-7d49b8a5ab81",
        "cursor": {
          "ref": "e85d2716-60c2-49c6-9291-69edd9393f64",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4e5f8530-3cad-48c1-8c70-dd4ae243aabc"
        },
        "item": {
          "id": "2d266caa-867d-4962-a305-7d49b8a5ab81",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c3b02eab-228c-4eec-b86d-224fb588fa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db85b74-8671-468f-a455-4802b9fcca86",
        "cursor": {
          "ref": "ac5a6164-0585-4af2-9568-1464b745285a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "61d2689d-69f2-4ccf-8a45-132dbf42381a"
        },
        "item": {
          "id": "1db85b74-8671-468f-a455-4802b9fcca86",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5197aa6b-161c-4ee9-9250-7abeb5d133d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ed9f7c-c35a-4f95-beba-3117cd5fc4e6",
        "cursor": {
          "ref": "b4972b8e-e22f-4cd7-ae14-4e2cb985d05a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e6562172-c0ad-471f-a406-ffaffc29c0ee"
        },
        "item": {
          "id": "f0ed9f7c-c35a-4f95-beba-3117cd5fc4e6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c18aaa1f-a030-472b-b35f-a28957eed065",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d13fd8c-2694-4090-a507-0cdd654ba4eb",
        "cursor": {
          "ref": "00e0bf99-dc2f-4f68-ab5a-fd875513dc46",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "df847705-8652-491b-98dc-15f6a746b13a"
        },
        "item": {
          "id": "4d13fd8c-2694-4090-a507-0cdd654ba4eb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cf656bb3-2a03-4047-ad57-842b178df563",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a571e65-90c2-4d70-a6a1-6a1a7bfcbfe2",
        "cursor": {
          "ref": "5b63c9ae-649b-4172-9b5e-de2cd84276b7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4b488876-286d-4cea-8ac7-e7ae87fe862e"
        },
        "item": {
          "id": "5a571e65-90c2-4d70-a6a1-6a1a7bfcbfe2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f160d5a3-2d9d-4de0-9963-b2c91b83166f",
          "status": "OK",
          "code": 200,
          "responseTime": 2918,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a61525-2479-4890-a67a-16361f7899e5",
        "cursor": {
          "ref": "2603d657-996e-4f2a-aff8-3a7fb3c1122d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1421e278-def3-40ec-a7d2-db916995c992"
        },
        "item": {
          "id": "40a61525-2479-4890-a67a-16361f7899e5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5f447a4d-2947-44df-b0d3-c03c99444963",
          "status": "OK",
          "code": 200,
          "responseTime": 3004,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ac4aa3-64fc-4d71-9aad-11fe27abd5e7",
        "cursor": {
          "ref": "fd12601b-b5fb-4f0c-8597-f4d8071034ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e55b493e-9b66-4bd8-9f46-d3f45fec9712"
        },
        "item": {
          "id": "f2ac4aa3-64fc-4d71-9aad-11fe27abd5e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41c882dc-0192-4c52-8252-ae5b1784af6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ac4aa3-64fc-4d71-9aad-11fe27abd5e7",
        "cursor": {
          "ref": "fd12601b-b5fb-4f0c-8597-f4d8071034ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e55b493e-9b66-4bd8-9f46-d3f45fec9712"
        },
        "item": {
          "id": "f2ac4aa3-64fc-4d71-9aad-11fe27abd5e7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41c882dc-0192-4c52-8252-ae5b1784af6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d58d7b-42f3-4482-bb47-46edc470658d",
        "cursor": {
          "ref": "b2b40838-5cf9-4767-8a4f-14d598fb4125",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "72aac47c-e7cf-494a-b735-e271b0b92b0f"
        },
        "item": {
          "id": "87d58d7b-42f3-4482-bb47-46edc470658d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e94b00bf-9368-4215-af49-e73af590fc0a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0846045-e5c6-4637-97cb-f02338e3621b",
        "cursor": {
          "ref": "3c63f26a-f823-424e-868e-441f98beb6d2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c659a1ab-a7a9-410a-98b7-8c95660d9855"
        },
        "item": {
          "id": "b0846045-e5c6-4637-97cb-f02338e3621b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "90b6b410-7d5e-402e-9f6d-7a4e8fea56a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}