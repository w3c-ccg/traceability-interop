{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6a095d50-198f-402c-b100-90a6a9783093",
        "name": "Clear Cache",
        "item": [
          {
            "id": "daeb16fa-325f-4e17-8c4f-71605653ab5b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7375e8da-3b97-438f-a01f-ab760804b00b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa0719b3-06c6-4f4d-92a6-509689d856c7"
                }
              }
            ]
          },
          {
            "id": "b54c004e-c093-4399-b4ad-4c3bc648cf1d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9136bca4-3ac0-4ab0-af27-3e9623b4ef37",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e3b313c9-8182-4ce9-b0a6-046bb797f3fc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7954b11a-37e0-4e26-819b-2cbf25cc1920",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e0638850-ed63-4453-8cd6-f7ca1d1ec947",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1383ce06-8b73-4875-a128-e7d71a40af6b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e90758f2-d041-4a9d-bd21-17bc148977b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36412cf4-d732-4f96-8376-0102df9e3f0b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6996956-130a-4229-a504-1e5e9e43a273",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "71a5257d-5a1b-4631-b8bc-4248e6222f71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d84e8ebd-95f6-43ab-a70e-dc2729ea210b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7722ac2-16d0-4e0a-903a-8dd518e2d757"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e966229-08fb-4d45-b37b-5cbe141be461",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "34bb458b-65a2-493d-a29d-00720317ba38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f5ffe1b-a798-45a8-bb03-12469e85926b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7f1d97d-272d-4ebb-9728-8b26684586db"
            }
          }
        ]
      },
      {
        "id": "d11d902a-656b-4e08-80ec-5f2c28c3043a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dc5a010b-e1fd-4465-ad2f-8a8fdd357f2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57c19322-48a3-48f1-a8bf-06c6d655dac3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c07a3bb-ba9c-4a18-a465-a1d631377ddd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebbe77e-dfa0-44d2-b153-b0219c7bb243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "445dfe3d-735e-430f-ba54-07043f1c9f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0658689b-e553-40ef-be1a-9210831460e0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61815c7b-8c7b-4ade-baab-2cd315177f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9c699b5-4817-4784-889f-70a804a8db84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef975f1-e5fa-4a6d-bb5c-97425815336b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d2d9ca-02c4-4138-8dad-c0c50ab2f406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58015223-99ea-4ba7-9e31-eededce5c523"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b05c99c4-a6c1-4b4d-9308-d0379b9fce75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75aa8793-f94b-48fe-a499-a6a51ebcb3a5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7d3741-f77b-4c5e-9093-59ae492c6fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dda73cfa-1b20-4442-9b54-355913ceb80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964227e9-6496-4abd-89c0-f2f8aa908374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97226f93-f2c4-43b2-88fd-21ef9666d9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e27312-d6dd-40fb-8b9d-80256a315d7f",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd164eb-d1a0-49bf-8dc1-d8948c0ce425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4f01cdd-851c-4260-887d-4df5030c28ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d316b30-f284-498b-8660-86c4f8355c51",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fc0fe901-36a5-419e-8b3b-bd618c7154ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f198dbef-852d-43a5-8dc6-d2a0548d51f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d24743dc-0b03-4eae-b661-7b596ea2ca15",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3271b4b2-e858-42ea-8aec-c2e9b5d6e9ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c23c2074-86e8-40ed-a787-14666951ef26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7ad4da7-1b7e-4337-b488-4be45cc24efe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8473872c-5632-4094-acc3-bd71d53510ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fcbb28e-b7cb-4cda-b29e-1b1a1ff6042b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ee3d7e8-360c-4c32-b5f9-f9ead33cac96"
            }
          }
        ]
      },
      {
        "id": "d23fe1da-cec6-4525-ab57-78560545c473",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f595d564-cc6d-4965-a1ea-84badcb25a4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "302a2f67-bab3-414c-bcc4-fe9e7df41e47",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "684f36e4-39ab-49f7-a8d7-fa09935bdeeb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6808c1a2-5b79-4c11-a681-a8da61a885ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7eaafb7-b0c5-4e17-a461-d4215ac900cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a01bb12-001c-4887-b33b-06d2df937dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2fb12fe-9924-4560-a9e2-436d7917204e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c414ac0-d643-4ade-aaaf-53bc8ee68d2a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12fe601-362c-4d24-aa96-4a63728558db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868c3017-78c1-475d-a655-b2847b01ebaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c183354-cefe-4759-9f28-a27156969939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5e97a96-dc34-4682-88e8-d7dec7b004fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690476a7-2e55-41b3-9db7-aec98953a82e",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efd43d8-5ae7-4f87-be29-20c6ac6804cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5336f4-bb91-401e-af2c-7631305fca28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4031485b-f237-4d56-9c8f-b06318314919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7643a2d4-1288-47d2-a4dc-34dcb8e8cabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba73b9c-c4b1-4790-a558-5ea7e346510c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ebfbe2-ecaa-4bc4-84e9-7ea7709853fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8edf94-9166-4f2a-9e61-c7c963c9ef70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ac8064-0bbf-46ab-a421-c64b233ff1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "137caf72-216c-4435-a2cc-3a81fb1b4568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400c4b51-b592-4db3-a6f4-58441db1a6b6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8e320d-bfe7-42b0-999f-eb3470863d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9675f70-c2ee-4d37-9f7c-38c9e5cdbe04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece64456-d442-4cbb-a857-45e9d6190e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2202a5a-915e-49d0-87c8-cc3403dca330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b557cb37-31eb-4789-9cb8-c92a1fd9ae24",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f28440-9677-4ac5-bcaf-af90fc3b9099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714307d4-b638-4c4c-a412-87711dd6c291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff9fb0c-9c14-4fc7-bdeb-359b73fe76e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "254bf8ee-d2bc-4aa2-a5d8-202ddf914ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e32eb5-4031-4f3d-9db8-4e3092c428bd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67160bf-d08c-476d-bec0-4d5f52ffec6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3187fc5-6b50-4a8d-94a1-0b66ed26edac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cec28a-37c0-4678-863d-7c346faebae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a82fc9a-f99e-498d-918c-538db0f8ba22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae7f56c-f0e2-485e-b2c6-44031cdfb4af",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c064e96-4db1-4f06-a040-f45b1949ccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6149d0d9-e132-459a-87c6-0864e3ec7231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518ce640-e839-4362-bb3a-f6e5aea53ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "143fc909-9aa4-4c23-8191-ddea0b7906a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e208ed2-a13f-472b-8706-13eb2441b3c4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c50716-c277-4558-a7c2-ae0a64958fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b3d8f5-b2c1-4919-bd9a-d17d92f2e33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17ee5b2-8898-4637-89ac-48922bb38365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b889e28b-5988-4264-b6db-1ff8c84fb8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf98d93-d750-42be-8486-e204b9db73bf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3761a5d-0a4c-403e-9033-e4bca95e91ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205a7152-620d-446b-b4c5-706df255f1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb40209-8b25-414d-839a-9ba0846291d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9543789b-b0a2-4462-9a6d-af6faf6a08da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f289e603-7567-48b3-8aee-054ada9a59d2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab871864-8006-40b2-a41f-f49a72efa7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48782bfc-638e-4931-afaf-1870ad42e591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881e4dc6-5cf1-48e6-9af2-0706f1ebfe54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "409931b9-4354-458f-892b-c123c2a4833a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2d15df-75db-4282-9941-f1be6a46855d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5c2958-f8fc-4e69-a3e3-c60adb22b4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2597b810-c7f2-4dc3-8ee7-d0c98f9682ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b856ad-a1e3-4ffe-867e-090e7c880a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68be0c8f-d40c-435c-a740-490cc984a4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6512a1d9-aa11-4d5e-beff-43b78ed4a6c8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfedf8c-c135-4e59-9206-a0193f369e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248c1882-dca9-4cc1-b6dc-da98e36face2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaef5920-ee47-41c3-8832-1072c171e4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca51d0a5-c02c-4435-a61f-2a37c979efc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a947b65-7383-4e09-a0b0-615b8cdfca57",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62453e22-bc53-40d9-8f71-28e058fc7b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cca3978-c455-43c4-8996-9221179f1fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87617f5e-7647-4d98-92e9-378c1a2dbde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f4223d-dbd0-4f0d-a2d2-fb14657b408d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4b5a3d-fff2-4b97-81a2-20f76aee3199",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296c6d97-00ca-403c-9038-10ad3c4e85da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd372557-e06c-450f-a983-baeb658ee8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e6c407-ec41-491f-88dc-92ef161a7f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1af9f527-022e-4c67-a2cf-133e9edb22d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c1c70e-3d17-42d9-b6f9-dc4fe2f7bc25",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65c0de3-ced4-4688-9616-abc8680dbcce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b4e7cb-2bad-4a9c-87a9-f012a73d8d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d11b6a-62e1-46bc-b8f6-1d4522d5cfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d89bd60c-1259-4ab7-8374-00edc26a6e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9239d4-3d9b-40d7-a51d-721059a9e600",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1ba28d-8f05-4425-a911-171333a5c193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d0b201-36f1-4bff-8c7b-46608be571c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa68892-5dbb-4357-af6a-cd96d28767e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8f21f51-808a-47bc-97b1-d5a8aaa70942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5379d624-60cc-4dfa-b87a-079711d54ea9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40aeb32-ecf2-4705-8c49-2115b1fcd43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cf5a73-8a7e-4c44-ad3d-7a97a989601a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6adf4e6-868e-43e6-a515-cca877cae83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fa565ba-f35d-48fb-a4f1-f8a29fc1f500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cde9ec-f46f-4337-9150-b4580c64e17a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab47cd6-3ed5-419f-97f3-8941aded7ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0442a9ca-753a-4064-b039-7b955b71bc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c71591-c46c-4839-8bf7-973ba28feeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eba333e-c02a-4afa-bd8b-0244c274e2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ea6862-d11b-496a-85e2-73f0cc6c18e9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d554b8ca-30d0-4c7e-8fc8-6a100308f73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8570be-f615-48dd-8309-c98f5edf0ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c809f9fe-37ed-474f-bd34-7f421cfa6436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a58d7c1c-e05d-4a65-a84f-1555ca2a2570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b88ac05-9f46-4201-9c55-75e0ab3afff6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1449035b-e9cd-476a-b2e6-ca551441f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4179812-25f3-43c5-a4a0-da768d6eb980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81ed836-7563-4d4a-a790-0efbfeeb2dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4faf5773-c954-478b-99a4-58b7944331c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38255f6-f49b-4c01-8bae-eff30aaf1cd7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdb24b2-7899-4696-b3c4-c524443e253d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f472301d-23c5-4d1f-85f8-e54bf1f0eb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d855a2-ddf4-454f-a138-6e97ea0ffe4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0473b4e-0bfd-41da-8675-f0c81bc523d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943f0c1a-fa78-4f8f-93f9-534b8265324b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b944dc8-4a9e-416b-bcef-20d3b502c761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e334c3-b207-4e42-babe-e4ff03584577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed5e262-5de7-4825-bc60-1ea0ff97b6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ffe92b-75ce-4916-963b-de31f1ccb6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046e13f0-0621-4232-8d47-5bef6dd9a036",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e72866d-9695-412e-93b4-c2d035dffce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935c6e30-d80d-4b57-8bb3-0f7547638bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65df161-e091-41e6-a56d-be3810da4822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfd2362-0756-4d50-9a41-cab37b3fe813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811f53c1-83f8-40b3-b30d-6e1e799e92d6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd2280f-103e-4668-aed1-4533dabf95d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c174c9a4-4639-4dd6-b580-2f6749d0cf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a14cd69-83d2-4abe-9851-4423af6b7a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "993eebc1-8f35-439d-9926-3ef36568ade4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9bd5aa-eaba-4b9b-95a5-f752f847383b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634b0fb-8b1d-4e34-8eaf-8b8eea18558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2859fe70-0e47-4917-9bd7-65be386288c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f9d84f-8362-4b24-8154-3439d8de0fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "57501c8b-32f0-4658-885a-aea9dfde3bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c9f601-6718-42b7-a976-5682fb46b070",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae55d2b-c088-47cf-8878-7ddc92adf3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10daa341-3773-423f-856c-597c9987ce0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8a3498-e541-4a38-8b45-c47ed69d36f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ebfc3e-7de4-47c6-8c43-a98dcb01a600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f954c46a-aaa0-459a-9c45-05ee94c747e3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33569fa5-a618-4d9b-8bd8-bdd5241e76cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd256c6-9c7b-4689-acd3-649c39738f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf4071d-7941-40a2-9a83-6a33da806001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b4f06a4-8040-48d0-82cc-617bfe910bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4976af58-6089-4f57-83fd-2385c9e35b85",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb0fd70-097a-4dcb-b8ac-7f46f12589dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dda6afd-e4c4-4a3e-9650-94447bf4714c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fad1ee-3308-4908-aedd-a4065ac4bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "599dba0a-9ee6-45ff-af9c-c3a6b5f7400a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991ad913-6454-4ac2-8c6a-b3c7fa2f7b22",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184220e3-a8b5-4bf3-afc9-3a7bc36bea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec16fe6-8299-47b8-94f9-c12a05c60481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c8e92b-2b4b-4c23-90b2-71bb88ed196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a674b63-e9e6-4ed4-8ea9-7ab2e9f9d34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efefd7d9-db14-48de-965a-341f1ce696e5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4574191e-0b21-47ae-864f-037e38b455f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c9b088-d85a-4156-ab8b-6cfa19cce24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6962915-9b06-4adc-8c24-8c16b9b7e9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0855684-710f-485c-beae-f97331f0e203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d20d36-515f-4163-bca9-95dbf93aadef",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8ae086-189e-4d8e-a0e8-1daf94498c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760935ca-c4a4-410a-b850-31569b641507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a66ecf-1bb1-4caf-a34a-72f74d63eca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b2873c-49cd-47fb-9ce9-6005a595bd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02774195-45fe-4204-b359-08646e4dcffc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab91d27c-6a95-45f1-b1b9-f2ba69848f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc2cba8-25be-4e73-9962-cb532382c2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b5c7e1-56f5-4558-8906-ab8ccb472d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa49d61-1964-4fbc-aecf-d8a3639b952e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c67f876-8d50-4cdb-9329-95599e03841c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41ef0a1-9dc3-4a81-af22-54c562bfe297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4490e57a-cdbf-4c0b-b82d-fa9596a7d763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96998a1-3761-4b82-af5c-14036e4e30da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da13e1a-7f92-4067-9943-1b3087b51438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70904db0-a6db-4dff-94b4-cb0e2280c340",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fcfe10-68ef-4204-a630-60170e8a37d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b80711-ea0f-4a11-b871-88d2337d6974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90bbd8f-1d68-4ee3-bacc-4fcac2db9f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b00f4413-b8e0-4f4c-b7e3-dcfa9d3bef81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31260ee3-f85f-4330-bbbc-5f7816bbbb1a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ef13f-6ccd-41b9-81a0-8eb8929614a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0525e06b-453b-45e4-8851-98ac1d05a692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3d45bd-bbef-4a89-85c2-d174f0d63bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3766734f-27c6-4472-955c-845e0f84987e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee095e20-3227-43be-94fa-a36c7e9a7ded",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a77399-b551-435a-8eba-2e27d7c0c748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed47f64f-7fb3-4c57-bb2a-0fc0afb72d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6c3900-edab-490e-bd74-e474d73fa6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "789ee791-1c6b-4e85-86ff-0d315b85da4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3fd6c1-0a4f-4e99-aea4-1fdc61636692",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8bddaf-b419-45cd-ba75-36070a0c67fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b01df07-dde6-484e-9f87-195dd017bd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc0b6c7-688a-4d5f-8d8a-e960ba61e44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b35852c8-539f-47f8-a00a-0b57fb51763f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f9c040-3130-4ac4-9b14-c84bd4931b94",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afed96af-0940-48c8-8a4d-ff6ffbdb82ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bbdf92-8ed7-4e32-9416-967359515ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee9f6e5-0f66-494d-ba1b-55a74b3106aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "255951f2-654c-4f5d-b433-cd102171dfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848d48ad-6242-40d3-af43-29ae2845298c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beec642-e9bf-4fcf-808e-c8e9e721dd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47bffeb-9375-4d7b-a4fb-d1a2ff3b33b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685cb991-e369-4d5a-bf01-16be9054a451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "095eec0d-f0f0-409d-bf0b-b310d71a8822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d58ff18-3ac4-4add-9e27-8a8f0b5fa72d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d242f5-8c07-4291-871f-6b121d9c0d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5c584c-00b7-4c63-9a57-0b9cf59b6d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af8eff6-6057-4042-b102-f691451e358a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3ac307f-47ad-4a54-9599-c217cfceb09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee71f32-cb61-4ab9-81eb-904dce7fafd1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0d85d3-7f0c-4755-9354-7b381b9ca0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166ceb0a-527f-49e8-a0bf-a6ac8b9d360f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ab5068-47d6-4561-9737-89a947ca808f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73657fb-ac8a-4d41-8bb7-7df075e3f196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026716ec-033b-4a08-b642-33fe8abc23ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc1295-64c3-434a-894c-6e64aca80c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03d4d89-8859-4343-905c-2e3fc9f4b805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41267652-eb84-44ec-9e23-751e91a681b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc28c229-c4e1-4501-8feb-a4317f7f140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21993ee-2a8a-451a-a39f-61758b33505c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59a92ce-2028-4aa7-b7bf-58c9d0b7a1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cf9bba-df8b-46cd-b0a5-394eea784733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5419c7d5-7b5f-4417-ba62-14949ab33868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3b1057-0af7-413b-b79c-98fb73585478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b808fc0-ae25-4ad1-809b-f3e6e9f983f7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9811aa8-8f21-4fba-9e20-fc98c7676d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a08140-bda5-4159-8826-60bde7239ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3f2af7-64d0-43fc-a574-e0e2040a75ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "01e654ad-c7a4-400c-872c-167a17712867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9f15ed-66e8-4c2c-be6e-74321b926779",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac2681b-306a-48d9-b357-2dabd03aa30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e03b69-fbd1-4835-a753-7f0e736aa8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d896d96-7021-4702-a918-919a4662702b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1600624e-ccbf-43cb-bd6e-123f8053a153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfbebb0-f408-462a-9617-456294f64bd2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef574814-d3f3-4528-ba9d-39e09c5d28bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b31c30a-0685-4523-af3c-511645d1dc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a422b236-20fe-4249-bd2a-f9e0ccff8e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbdb813-9ae2-415d-a5d0-df22922dea44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39dabab-d410-4e94-b25d-6705e7b1a9c1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bad0da3-08c9-4369-8ebe-9971c6e6b9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24f1b0c-8b50-4379-92cf-d5eaa501af73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadb07bf-c3bd-4475-86dc-395d5e3c2add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a20359f7-9d2a-4b75-9fcd-0a1116058d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fac32c0-8ae0-4a57-aa2a-12ecc87575f3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b4d487-c379-43b1-9429-4af353a8f3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80efb84d-6164-4c2f-8e8d-52b51655dcf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9410c4b-08da-40b4-9eb4-1f859f591466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a08d9d-0f94-45a1-a7a3-7eee620c8a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e255c79d-ae78-44af-aabb-0e3a9e76201b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90b8ae1-9511-4db7-9a2d-f907509c43ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d732cb4-2b4b-4c91-a52e-02017b25fb1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9126639f-1c75-4486-95bc-3bf89ec308e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91769857-c580-4715-82bc-f02241a5d360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5a7ae9-408b-45a8-a26e-d1e495c765c0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0995b01-ce5a-4220-8a62-f5dba668f16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8158f9-dc73-48ea-9c50-fc96d32a99ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f2b998-60a8-44f0-9c1f-ac15e61880f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97417f15-7d2d-4418-a664-a1d6ab924fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec23c93-5270-4e16-8d4a-f79228194332",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e3a41f-5a78-4a64-b96e-a331d9504329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb85edd-0fa5-4b04-90f7-57e48e0396b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d633a623-b5b7-4b44-97a0-d490c9418365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfe7d9b-b8e5-4629-8ae5-2aadb9b2ee3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413fa5cb-df8a-487f-bbff-68ce6f039ab4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434ffe1c-fc8c-4588-b37f-bea4335fbbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4a6bd4-4882-4153-a5dd-911bdff92b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f748c49-b4cb-4de8-b7b4-ab5a26f8f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8e6e5e-35ca-4c66-9892-07bb48fc4497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0837e144-81ae-4df7-a031-535a32f4f778",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b87cd6-3a6a-4b00-b2da-f3e2e1305913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3120f0cc-0e57-41c2-b49d-5be68862a97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3965acfb-352d-429b-bdeb-61c7038f7d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45fbebc-86eb-47d2-bf83-8705cef2c83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faf6d4e-c572-4e0e-8b36-f33609a19f26",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d5fc81-0269-4619-8a11-49c333bcd10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8c8d21-b5d5-40fa-ac03-67f6e5dc3d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c04775-cc73-4dc9-afbf-5270d981c899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68138583-8347-4151-979b-67066403fb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bea2772-03da-44a3-8aa8-e6c866e0405f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daf1219-a989-4d7e-a4ca-113b8b2bd54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdf0d5c-1edc-4fb6-b8fb-bc36da1bc931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45e2ced-8b71-43ba-a182-debe874acdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8571b747-5343-4157-b82f-59c0f5b9d861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2031f0a-7f79-4a9e-bd79-05a318cf35cd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75c2125-f1e3-4cd0-9c97-3b37b455be30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7a1d57-c682-4dd0-8eee-738f99d82d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b09409b-bc5a-4382-870d-c4d54d03fa78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4461a3d9-4bf0-406c-927e-6428364c127c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01bbbf6-50a7-465f-987d-942d6659402e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60145e2e-c7e2-4455-9dee-0fe9e7240af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aefaca0-4130-4bc8-9709-c1016772e666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50374bec-e3cf-4e01-8a13-11c10b6336b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb4ee2b-0599-4094-b6b1-734f394b5c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363c2edf-e7b6-42db-96d1-4c1c73a2bdb3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358def83-21ef-4d90-9d04-0200c6688917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fc9478-6af9-4ec9-827c-8f56f5fd1d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240a4d98-d1f9-4d5d-a1cb-8cd982c7d55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "21f435c2-8c11-4d88-912b-2ba0045d2005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1be0076-f19f-4db9-bcf4-0350af795065",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954d3b75-faec-45ae-945d-7414ced4974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d0da3d-f593-4e61-895a-064f5576dcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a630fe5f-6ae2-4ca7-95d4-227f4c2280b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f41876c5-8e6e-45b7-bcd0-fe6571d70147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584aeb06-cf6e-4e9d-8861-37f412b26b33",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099defef-5591-4074-906a-97fcea17e518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057cdded-6e3f-472d-84a8-4e9c8587711f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dd7313-0c2b-4192-a2a4-66796775cd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "09188f97-ce6c-4549-bc9e-9e603941942c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3029e03b-aff7-4399-a5d5-3a5f79ed01cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb9b2b4-f85c-4eee-9cb5-7eb4a5062b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecc7621-6760-47d0-8a88-320dc7bb3940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1691b208-f7da-47db-813e-90e533a52d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e02ef3c6-9b59-4849-ad67-eb423abdc31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9d7d1f-8225-4c04-8d9b-bb9be33e9029",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f600b1ab-29ba-44b4-9764-00617a0ced7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6cd7d5a-623b-42db-806e-3eba97eedc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12d8fbd-b46f-4bad-82dd-c67d3270b626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0284de15-d777-4cae-8e22-d992f2cbcb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cf95cf-88bb-4ce9-aa13-94f58ba6f8f6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce70b21-1b00-4e53-be92-6b6b7ca56963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f59e75-e949-45f3-9527-b9c339f0e2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315979f0-b305-4436-a3a1-dd9c7a9a8ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc7e4c03-30a9-446b-a46a-3299062fce83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d68ed0-39e6-48c9-aaad-61923550618a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff4f793-3138-4989-bd93-9457322c2b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7571f46-9471-4085-b616-16abf41a9703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9f6418-5149-4133-955c-12722f04e97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c8cf81-fd0d-4e9b-84ea-75cbb1ae69ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b7182d-a07a-4529-b8d9-9e51d1453f83",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf16a4f-5b1a-45fe-b30a-4a50b128424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b33725-5ae1-42aa-8b32-e76f68e44d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625abaa7-58f5-40ae-8419-ddf10c3a294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2908aef9-082b-4511-9364-3b97e080c84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deaba3c-b2e7-400b-9202-ec942b5b9ef5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4d1d67-7b22-4eb0-aead-66de3bde1010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fda43d-d1db-49c7-8207-c1f5025affa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c865f5-77e5-4515-9a85-ebf2285b2935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b419d83-6382-416a-808a-9a6b2f0f1b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbfa77c-2a63-475e-a718-b1a01a977994",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8a3696-3f4d-44b9-a879-8a303aee87f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfe99eb-52e4-4a29-b732-dbd302c6cb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a646c59c-27d3-4c97-ba48-e4136d8c4549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e37210-d8a4-47ac-86e1-ff6e835a620b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52a1c1f-e735-4ddc-8c70-cfc4065c2c04",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93ef33a-e6b8-4d37-a82c-5014c5f91ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd55656e-3eda-445f-aad3-bf7360dba965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d260243-b597-430e-9036-0b100662ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce57d0af-c670-4485-816c-eb66b85fc7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057d37ef-954f-49cb-971a-f97e34b503b7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ff9d4f-eb55-4677-bc16-c0ba17dca067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327375c7-c6ee-4131-8028-1636e4dc4c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89396aa-90dc-48ca-930d-340d4f41052b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "07a7668e-a00c-4afe-b6df-1bdc9213c7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082b3cee-e5c6-45d8-8bd5-3748fab52ee7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865c93da-e7c7-473a-b6aa-2fdc16ef6b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad64c49b-db59-4eb8-95fb-f27fe5b7ef6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce6103e-c415-4809-b429-6bbe30fa10d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde12145-b90c-4883-8ca4-0dd8e49cbdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9151420-d2d6-4b47-a68c-3f146df91cea",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450537fc-5604-49e6-9e55-93f8b40a9f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d979df-387a-43dd-87aa-6ec32cce7c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1aa3550-32f3-4e20-b075-05841d9869e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2324f527-e11b-4c7c-9ed9-8d1853d37560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c31a638-da98-43d4-b376-12ce56b44443",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b6e40e-5467-424c-b62d-9b43cddd4fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac590e10-8f21-4e26-86eb-a5ed5c5778b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e4b82-8e90-4a47-aad9-2d037838e716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d603a25-2ade-48fe-9ebb-8141591ee518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673135b8-9782-44ad-9234-bfe151024828",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99083521-f19d-4a00-bd2b-61e06981e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fca06c-22b9-4332-995c-d0384c50c1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5198a35e-34c7-4cec-9d1c-f6e6c52307f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35b1cc2d-3bbc-416e-9c3e-e6650ccae9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb474fd8-cb9d-42a1-b077-3c3cc8f96713",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f1bec3-0fa1-4989-a7a7-8fbdb50989e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba42253-0ab7-4383-a988-19ce72eb7cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67eca2e2-4ae3-44a6-b48d-e1e3e33aba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f97cef9c-45bb-4255-9d87-b9aa1bc6929c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f552bb-6b62-472a-8b33-f9aab16f29a1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb7a9db-fc0e-4f2c-98f0-62cc32209589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2758c773-25ea-4481-a9c1-daf1b4aa89dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbfdd24-1d44-4387-9742-c2a7ac4a6f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ffb30e-2725-4d62-aa28-f1447ff8236c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23d30e4-4b96-4ef1-9df1-24aaaf02e49f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9063f6-2aa9-457c-ac92-32ef6231379d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d641917-c4e5-4315-a47f-7f540a65d85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cbdc6c-dd84-4af5-8203-3ada7db77c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f529cb6-256c-4eca-b93f-b20410e78319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fd11ec-4867-4e8d-ad41-17a819614d57",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60504aa-6345-48d8-9525-e53019eae5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b350f884-6a65-466d-8901-1d7d621c086b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473dc0c8-7f3c-4994-b14a-26ce74860139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d1c90a-a4ae-4556-913f-d5803b30d91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404ca941-016e-4858-9282-c12b18771ceb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14fe1d6-f48b-4bf9-826a-e738ad181101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c04b085-bf86-4671-9b6a-599fb410a8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8fcd8b-908b-43db-ae07-e0bbda5cc247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "429c4637-e18f-41d4-b7fc-a2f7ca7a6a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74b0a6-0356-409a-98fc-c7b0906d6e87",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693f503d-b3b3-4f08-be7a-b347dd174773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae861df2-c763-44eb-be0f-90325339b821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9009ca-c4c1-403d-9cc8-eb139fad4912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1089242-54ba-4132-b37b-49dc96224d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88365a92-4039-4c30-887c-dfa417e202fb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de3d7b0-b9a6-4aa3-9748-7261fd46ff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7c5388-ca48-4cce-b47a-cc66fed50297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d3a57b-9c30-4175-a4b4-4a73de507d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83708c09-e335-4f99-98de-2f6a00ceac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61cee66-237d-4b49-82f5-6bae88498ba8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0605b0b9-86d5-4ec1-ab6e-5c9c37a00b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d5527f-433f-4883-9fe6-297c46b0235d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb711bcd-f77a-471e-aea7-a2f33cd6fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd678ce-1bcd-4da6-bd9e-72c3f866fc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6614f9-0756-40da-b600-615acbb14ef8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585816ab-7b83-4067-9a4d-65106abaa43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ebacd4-9aa6-46ef-aa12-83ccef561d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc74936-a604-4220-b298-1718b21d0b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dce056-14f5-4efa-b5a2-9fc3a08769a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8f905c-ddca-4c9f-a64f-6395fc962264",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154f4587-4ba6-48d4-affb-743bbdff4c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0099b977-0c2c-4e8f-afd3-c968c3711be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76ca619-45cf-4767-a846-4ebb260a8410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cebf06d-57fa-4979-b1d6-b0a20dc2a3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97388e10-011f-4c51-a2a3-dc855bbfae4f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3bf10e-553a-4a24-b51e-ce267cbfab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9c425c-5674-404d-9ee8-a52602adbc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3399b24f-9c9d-4986-a752-c1f3f09024da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42979523-fa49-4adc-b525-c99ee6196643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da4d01e-29c0-4c9e-b7e7-5bfc28532708",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a05954-299c-4432-911b-1000d473b2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12758683-219a-4825-b1cb-53cf6eff66b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e5a20f-268e-4620-86f2-ef8e77d48fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ae5a5a-5846-44ef-9c0e-0ee86757545b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169b8dda-6250-4dd1-b1e2-3db96aadc32f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c020a81-100b-4f3b-afcb-1a7deaeeac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdfd966-5e18-4716-9609-f500858b77ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1842f8-63cd-4c1c-8092-9dda7d01673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "060c1225-d2c7-4dee-aced-2a3d34ad739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbad0ea-4260-42fa-9f41-6b9ee837570e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d053d703-34cb-4048-8190-dd713aacd42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ccbba73-97b4-4edb-8616-03319bf6b1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b422258d-d695-4d0f-ba6c-88e74719f4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fba21d-6b17-4011-ae81-13b11f2eb7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3db93a-5c1e-4bd4-876f-86a3bee6d951",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69ca56e-c14f-4913-9b39-3e0fdc13bc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c8b0f8-9c0b-447b-850a-ba8e467438e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa36ad33-6415-4f1a-8168-001809a93e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c107a1-c29b-42b6-8bd8-007bb3a109e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93be9d41-fd34-46f7-b40a-811c86ce654f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fde5bf-9a2d-4fc5-9f17-1420785dfb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6481e0f5-193b-4711-ae90-73681918bae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c44dfd-c4b0-4c01-abb1-aac5c756614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebd11bf-da41-4088-9ba0-bf636febf52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4e6c33-c3be-4c30-baba-173221f9cca7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf12997-a647-4334-80a1-501a50b3c309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53254ab5-e401-46f0-88d9-6663ea5b8c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91154e58-034f-40d9-8837-477ec4472170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53701d0f-ef6f-40d4-83ae-a72cca123a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c37a1c-555c-43ff-9ad6-fd64471af7fe",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff26d37-f693-4fe1-8f3f-90982d29bc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2961a683-0baa-4083-8042-837f7514f509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb60e900-135d-441c-9888-393684696348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b096dc-50e5-40b9-b111-1f5098c0df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b622dee7-9f2e-42a0-a12e-a9ef26b08ce1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023411e1-8f1c-4ab4-8f03-7cd5a5258525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7133fd3f-e288-4f55-9b40-96a9455660bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8f7329-229c-4854-90d4-9073181f1714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b8cf12-524e-4798-8fe4-72257c7fa47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c138fb3-3dd0-4991-a745-a8bbbac9a43c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962d2ee6-4c63-4cbb-a472-fe2f4f9951e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8cc18f1-2f32-4d37-92bc-9c25a806b6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9be737-07bf-4fdc-9926-6730890d0eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "65f69051-a0d4-4134-b794-be2846e3c544"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0b980d9c-a3d3-4d4f-998b-4b0e2ff9197e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5434cea4-599c-4d7d-b393-2ca1af8fb011",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39911350-3c08-480c-a566-23e9a839b866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32704a38-d1f1-4721-b9cd-1c696134d56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a2f666-709f-48ba-91b1-4310922cc94c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "71dc5d2e-156e-4cee-9c62-5b852a6d5526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6b3024-c189-4d25-961d-a101989e0e16",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03273c90-7d7c-45ea-86a3-e575ae152e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b42a7e02-be9e-463f-87d0-7cb3439b9cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b08398-1268-46e5-a435-55846f282d42",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "16dbbade-1d44-4d23-b798-17717ed8aaa6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b4552ce-a0f3-4e4e-beed-8bb805fe401c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4186432-872b-48b9-bf58-3a59315161a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f95cef71-8d56-4697-ad2c-1df57ea85a67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "218346a1-cd41-41f7-9985-e72065e0c62a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "53e9464e-764c-4bd7-af75-910bdda57623",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a137207-eda2-4708-bf72-9f9b30ee0102"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d117be1a-2627-4e25-8ff2-2f3017f03408",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f41b494e-4893-4b77-95dd-4e5bacc965f2"
                }
              }
            ]
          },
          {
            "id": "4d04f7e1-6e21-41a2-b80e-5321f7c55481",
            "name": "Positive Testing",
            "item": [
              {
                "id": "53d75cf2-925a-41a8-93ba-2e7903653014",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "809dc41e-fc1a-4c64-9160-5303e6039e9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "365db0b1-1423-426e-8b02-8d3ea073771c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6efd7879-061d-4cfd-baab-3f2164e4c0d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d26297a-8fb7-4689-bbdb-0c183150c2d2"
                    }
                  }
                ]
              },
              {
                "id": "7e541956-3df1-4224-8766-263975e2aeae",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32fe3357-dfe4-408c-a77d-b29705738695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72a5503d-395e-4012-8a03-34b4d6090bdf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a39ca1e3-5fe1-4184-9dd9-e3e1474cc6ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e31f562-a45f-41c8-9f7f-e286c0adc9da"
                    }
                  }
                ]
              },
              {
                "id": "015ae246-5418-4dd9-b8e8-1b43d0c08c0e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbd4dacb-e676-4187-9972-109e513a94b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cf0afa1-b2a4-4987-95c2-966e6a2307b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a62a799-241b-440a-a996-cf3fa91d596a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "05cd95d4-4ea7-4a1d-8e6e-4b08b30f8309"
                    }
                  }
                ]
              },
              {
                "id": "ec0f8aa6-817f-4e5d-b9b6-81f5bd38b15f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47cfb388-ae02-4d1f-a912-7aa1da801fda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11ab1bf8-7c46-4c43-aa0b-bc37e158d023"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5be8e751-ebc1-421b-bff9-3b21625aae51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0ff85f10-ec29-4125-8a12-1a733df33598"
                    }
                  }
                ]
              },
              {
                "id": "38aed690-7495-4d00-ab1f-10706060bc9b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0a4c19a-b2e9-4a7f-ad3a-fd36fdaedb21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b76cd7d7-4e41-4ea9-a23a-de592ff5ae0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d794bd54-59e2-4214-b5c1-045d37604e8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f8fcff5-2719-4198-ab77-c0fa798f9cf7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85af5c7a-6421-4443-bbc5-beaf080e4f29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf4ecd19-56e0-4f7f-9ce5-d2a97288ba86"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe6e4da2-7e8e-4f53-be8d-da4b62a01bef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9febc047-fd7a-4cd5-be70-785566b93e34"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "035be056-5fae-4411-b9c8-546a71a2b2eb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d1b92e38-0fc1-43a8-91f7-9b9ec74a3588"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df3d0bb4-4095-4fe3-9bf0-b1a9d19a7e36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13c7044a-5b5a-4402-aa79-90f61e81ac29"
            }
          }
        ]
      },
      {
        "id": "ece2da23-408a-417c-bc0d-457a66655442",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dd2dff51-81ef-4a47-a5cd-13834584feec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50e30341-f164-491e-9018-64e59943d005",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e64aa047-3ab2-4930-9230-774fc1ee5ea5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c3156c-fed6-44c8-bf19-8982fd34fa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f2dfdc-364c-487d-a76a-6472ca062ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6222461-4132-4702-aba3-d882538db77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "69180282-a3ec-43c2-a932-35e790fd64f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54146b3-344a-4316-9478-402c6d29577b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4c7fe4-1b73-41ff-a331-00fc173c2504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aff615c-ef60-4985-ae33-4d5c115dc81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5769073d-9193-4063-8916-6d72d4e9c6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43fc2675-ce61-47e6-8a75-403ec1c89ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7811b083-591d-4e83-b7c3-00bc6217f14d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59561c89-dcae-4b67-860b-3c8e7c19f758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fa953d-2972-4ea3-ad33-9eba7c041e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7372b9-ca49-4b2e-a03a-dfbd64e0f494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b21d3a0-a904-408d-aae1-c4d6a17a9f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f353a6-4400-4853-a539-08e3aad6c782",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273a59a1-0781-4e4c-b9dc-2d9176117674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1102227-4c03-43d0-b57b-c246d122a6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62e53bf-bade-47cf-9e4a-0407b3f846b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d963c4cb-79cb-4218-b968-0752710434b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0041cc11-21ad-44e5-bcc5-42b8366d9750",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d38b29-e0a1-4faa-8c5b-cb7e037abd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2824476e-a443-4968-89c9-c9bdab48ac0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ea1b24-a54b-486e-a44a-5f9f736ee905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb14f9e-52ec-40ad-8c3f-bd368c28d7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b21139-758c-4885-bb39-92327df3f137",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a5f3a0-549e-4ad4-a623-38af739436b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ec08e5-1162-40c9-ba55-d9781e5f31a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271d792b-8c4d-4e5c-b96f-84758265db17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "399e93f3-a139-4613-9966-35d4503876ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aed18dd-dfa2-4c8d-aead-60d1fb6479b8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b05870-f9c7-4bb1-963b-281b59950429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5fe83c-ba1e-4ef7-9579-03a6a66b53b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e22ef4-c142-40f5-8ae3-2391c5f482d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a2280d-60e0-405a-b178-706299537fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299b7932-3abf-45dc-82ce-ab041f6a58be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2615a63c-87c6-430c-94a9-6b49a2473198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c54f5746-3c56-4630-a93a-155f6bc075f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51f8a24-49e2-4bb0-9ca4-a26bb1f9b01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59e54a0-2dcc-4c3e-afbe-0793ed6dac34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da411f5a-c234-420d-9a81-3332a784b72b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4607dee5-8ed7-44b8-b05d-cfbaf6965769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60892ae-3e7e-4ddc-a7a5-6bfc45a9fb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cb4b9f-bd4f-43cb-893e-d7b6c80c2c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "756f786b-e5b4-435f-9d85-723a6fc407f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41a4eff-366f-4580-8e29-ab01227d6f1a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecd2290-1e5c-456e-baee-adb3afc6b698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c312cdac-f262-4ed4-9d99-bc1535bcb21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287c1def-2ac2-4177-9bc2-7e753be3a585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee810c6d-69f3-440e-89cf-4bc0c35ccde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d69c6c-0485-4547-a98c-11a705d63148",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c64b0eb-91eb-4f12-b435-dd39d9cc886b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885695ae-f7e9-48a0-92a4-8e9d1dfb04ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0bc607-6cda-40ad-860a-c0106ed2ccf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4deae93d-5d96-4803-b62e-2dbdae2370d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99707582-9fd6-488c-88b5-575dd3b2624b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5493bf61-f758-4ff3-b3ad-f6bee615c0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6ed682-c2bc-4493-852f-28da138137f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad897d4-13fe-4bc8-8168-14a709b2d527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffe2622-c9ce-43f1-956b-7bd0cc20f7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebec0604-e0da-4d5c-9668-3d5caac8e262",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d42c333-d531-43ea-bd56-61bb61fa0d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd386151-46c7-4981-92c0-d656a0a6b363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c55c293-b430-444e-b0de-3ed85dfed5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49348243-bdd9-4d31-82ae-0fed49375779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f977fb6-47c0-43e3-8a5a-4d9c16ea133b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30900cb-dcd6-4cb0-91e1-3cd8b40b4b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5caafa1-2629-413c-b837-882b388a7984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b519002-25ef-4652-9308-c6dc32b7d2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "681563ad-9768-4285-9732-d75b6b25e111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1c4a68-ed06-47a3-984d-e0cae9da1ade",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf17af44-7152-4eab-b786-daeb98d689fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d420169-c251-4550-9877-7cf5998423e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4737db90-9e3e-4e3e-a8cf-7210bd804db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b4d80a3-7105-4e90-8b2f-8339bcabf8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c59c484-413b-45ed-928f-bacda5029351",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a903115f-4991-4d8e-a23f-b0d2fc314465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff078e4-f68d-4800-874e-5aeee25a23c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1a6c94-ac4a-4cbc-b522-c523b8daba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2516d12a-17fd-47e0-8d37-0e90c34daf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a20122-c7d1-4fe5-85a6-822e960b9e37",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d8fc7f-8c65-4162-a4f9-28e92a3babc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbcded4-36cf-4ef7-aa26-ce85aa0564ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef5a81-112e-40df-a95c-9b17fb376665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb73b93-cd63-43ff-971f-b1d5f93e6930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799b4494-ade6-40e8-bc7d-74dee331b8cf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddfde0c-8a7f-4416-bb42-fd7eac8bb9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21883e3-d2c5-4854-b9ee-d42792a0e1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da92f724-d22e-41d1-a6fa-e2759f95aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a828e5e-925f-410b-b5ce-454623de1eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642d43f6-d53b-44ab-91e7-3e3a14445181",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd8c960-57fe-44cc-b24f-7a81a7821f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89827899-a045-411b-a02c-4967963a0823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08404bd4-af55-4089-adcb-5a590950eb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a17555d-0573-4ec0-9f65-50dddb013217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb9b97d-b07e-417f-ae37-d8cad0f12d40",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab525c89-5612-4de0-8fa4-a64388245bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722d6820-2aad-40aa-ad40-53e2f8ae8635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb08eb1b-4299-4f52-bb05-d3fd8289107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a1d659-c0fd-4885-8377-6200b6aa9b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d816f826-13ef-438f-a8da-1ea6ad97b741",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f68e4d-b59b-41a4-95fc-b92fbc7cbe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb27981f-1b72-4d2d-8c90-71ebaf710b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cef77f-a10e-40e0-9f58-c9f1b19f78ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c11272a-9d1f-46f1-ab78-486ec7788598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bae4489-be7e-4aaa-b61c-d3df0d0dd703",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4073c0a8-3dba-4e24-b9cb-ef728d1b9505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f252126-cee3-4090-8d23-fa49f03829b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e78dc4-587f-4d57-95a7-a2998ca7527f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6863af9-1473-44de-bbe1-9a5bb6e0fabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04cb76a-a853-45e9-a2a2-e356ea244ee0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b09f273-b341-4742-b7ef-fe13ac542a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497f8c55-bd4f-4dab-aa94-4044b8616bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7483881a-48ba-43db-928c-5f06a0105a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb5e080-dc93-4bbd-a769-fa014563313a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82df044-34b1-4e72-8c55-34d5825a09a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0821c32c-d294-4eb6-b11d-362c508fe47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43be133-92f4-46df-9a28-ac5c76c23950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb196d7-e57d-4a64-96e8-4716bc2c1e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4e5a57-8115-4c8e-a8da-3b2c7e131eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39686ad6-25f5-4b08-a1f0-2e813707dc07",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b191f9ea-ef71-49cf-a037-a5cd557389f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "141acd8e-155b-4b87-9d85-4a24136c230e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386d7360-f2e5-4258-8fc4-4ef830858cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a63bcd1a-44f3-4dd8-94ec-97b92279bf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee6c10c-f4a8-4cc4-8070-3b8699ce132e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7a4b8f-23f6-4e39-92b2-8e201b0483c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5feb0ce-b801-47ac-a681-28398abec3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909403cb-e006-4ed9-95e3-fc952763ba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02ffbf0-d29d-4e1c-b068-8dbe597afde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baa2447-732a-446f-b47a-0d8dc87a5e0c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44087ba2-fd4b-49ca-aa30-8b931193d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdc2ef5-fe1f-4e2a-85cf-556bf37dfcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0545dcd7-aed1-4c27-b1b0-d4a38a6e9d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f89121d0-b3e5-4190-9407-e98ad7d2551b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbf6415-9b6c-4305-a63b-273c76dcec20",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2905efa6-1ba5-4bb6-94d3-714d244eed81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce79d9b4-ac05-482c-8d38-d4590c79bc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b533d06-6972-4413-98a6-be630403acd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a016871-9626-47c3-a787-f5dcbd2e0639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a135bd60-6d32-430f-8df5-023ef3146d81",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59abcae2-7b08-4388-86f1-14005ffd2c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27329f5a-45e0-4cb5-9b11-ba9d73a7389e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126aa963-f857-4679-8199-9430c32515dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09757c36-8af6-4b18-84d0-cb21a2bcbb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4749d1-a827-471a-ae21-fad82c5fe328",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a83849a-0a33-41f3-bdae-68ff01bc4c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00650081-e2a4-424d-b0f7-4544e65feb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8266ce-ee31-4e82-928c-74c8f35f3c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ac189f-ca7c-4e0d-bc27-7ef67e2216e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac42647-5e29-4f9d-9b1e-1423e62645cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc8cef-124c-4987-bcdf-e4f7070e7cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fe5bab-f39c-48e7-8c70-1d65f5a0e0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58642e6-09c1-4a09-b994-959a59e7432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d7de93-ca7d-4b8d-9211-e2197b979195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1d9a66-de94-442f-9f2b-d3680fb7dfb2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9395116c-ffe5-4a47-9c00-a90541eeee91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58966fb-c18e-483e-86db-16449dcd3282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4013bb21-74f9-42fb-915b-e28c813c3c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ae6a32-158a-4c3c-83e5-daa3289c4cd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0a96d754-f13e-4bf1-920b-bdfc7d226920",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2306caea-fdce-4aab-bc4d-2b06e8647596",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c06683-7b49-4c90-a472-a56faad79db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee0c871-ff38-4953-add7-c70254425b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3475a5c-b6d6-4a10-b5e0-19034b5d0f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4106f9e-344b-4ed0-8e9f-5aa0b1f49dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b233d148-5cac-4b27-8f90-b3dc7d6cc79b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df575d-0bab-47be-9481-02c77d144e94",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "4055a8c6-3753-4802-b386-4d1c329ac591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7668d1fe-3a53-47d6-9e68-a5fcd2fcf187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1610d255-1d55-4444-a26a-df0503b99c99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c03a11b-c90f-41aa-85a8-1260f28922c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "792af181-f2c4-4560-8518-2cfd2914f369"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "341b077e-35b0-4ffe-95cd-1e73aacb4538",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb96fd58-9741-4f23-a178-fa5dba7d6246"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40a7939f-f1d3-4871-816e-2e75eda19b33",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4afa40f-c6de-4bf8-b543-3c4c9dfbe253"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58b66835-b1a4-4603-9202-bb54d150fb30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d743778-807a-41b6-9199-2f4594993bd3"
            }
          }
        ]
      },
      {
        "id": "8f29e4a9-d333-4de4-b6e5-83e526aed8e9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6556876b-ad8f-4a97-85c4-6ff348c76b1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10d9c32e-1c15-4d79-8c7c-06efc68eb7b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3062b4a5-2dcc-470d-b344-e4ffe0b9b5cd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1576f834-2318-44ca-a1e1-41a4924bced3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1dfeeb-9381-4298-9ec6-a94e6ea6be17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63ded7b-2e0e-48b7-b51a-897e677515ba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d4008f-f613-4a46-ae06-acf0b667e0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e5c11c-d241-4a69-b160-8892ab3f1819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95468044-dff8-466f-85ef-8638fa8626d9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211ee475-3fa3-4c16-90d3-9080b7739015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6faf9e6-a051-4088-a6ca-d3bea77ae166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7205dda9-8aad-423c-8163-14dffd9a0b7e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67a73a9-646d-4e86-a083-1649fa8f4daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865c2aad-9375-4c8e-8465-194f1ce4f2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9293c131-1218-418d-aa84-594f977854af",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6786b16-5cdf-41de-8e6e-9873f0d21952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd47a05-742e-4573-81f3-ffc74fbaf47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b93e0da-52cd-4ad7-a5f8-e948cd819c68",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904ce6e8-7e8c-4671-ae6f-f6956dba8426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "967f364d-ce2a-4108-8634-595183f4d5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6534454d-3d67-4d71-b991-3c11c66db9e1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01ae2c6-b6a7-48cb-88ea-902532a19dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ad164e-e05d-40b3-b276-e84a873d2eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ebfccf-6991-4c7a-b191-3f8dd6dcc051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ddd865-127e-49bd-85d8-1637ecafe5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcb30ac-ea08-4694-ac78-e3047c1a0c35",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce4c4af-f002-4a61-bb5a-f5b9b1645c2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf9c4c9-bd18-4f22-90d8-e6f98a4d0ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efd6085-4e7a-4199-b837-5b65c03d19d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2687d2b4-127d-45d9-a0e6-8c13dc7cb667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60eabf03-bb6e-4613-b381-68b3266791a7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d3033f-0d26-4bd8-86be-726754ce38db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aca72ca-91cc-4860-9140-cd20b315de05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404639eb-f233-4675-a1a6-eaaaa1819f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a332c62-9b27-4654-9e20-be06dc5a9196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d40901b-a5e2-4b55-999b-9489dd47cdae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f0ecfd-af76-4085-929c-9bbc4f01fb24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9a4c93f-ae19-49ca-b68d-90af5021dab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26cba74-09fd-4949-a589-31cbff58bf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25bac74-7868-41e7-912c-99b2a87856cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b382b9f-a95f-43f2-bbbe-928505b9b75a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb71f9a-7c59-49fc-958e-af8385950b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9476f646-c5c9-4dec-b2c8-c3882967a0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcb8204-e2d9-4575-ae72-393ea1ce289c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf96310-4f99-421e-9518-a5ee58373534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3126e7c-58fb-4f7f-9f43-eed55c4367a7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca23d342-5f8b-4a4c-9b2f-98b5e0c7cd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d91497-ced0-4c1f-bd05-8c7cbf2d1395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd8ee54-b709-45e9-9421-3f6352d263c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f4e4cf-8c95-4fbd-9f25-b3edb3aa19e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbff7526-1c84-4e4a-8bfb-007fcecbf23a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e101e4a-58c8-473a-81fd-baa923975a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e17906-6381-4cd7-b596-da131abcbadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df2528a-41ee-4f56-a3ee-f3f88e73a1b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5399d8-3d9d-47fc-9401-e09e0f70ea2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7f3fe0-89ab-4999-8c6d-3f6f791da34a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2634c2b8-b64d-48e6-ab65-c3fa31aade3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f627e0e5-fe3a-4896-8950-eb05fa0f42c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1d9b20-23ec-4aa6-93be-cc1afac59f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36516ae7-c262-488b-876b-73bb83ffcc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5c4d8d-bf8f-4922-b6ca-9a0218e347ff",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8d8859-b49e-491b-9288-e7e894a01057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51373b2f-c101-4232-a18f-41ff654a2b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de0854d-66bb-4f3b-a387-41ae9780d02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ff5445-6f87-405e-8b87-88ef8517fa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4d3652-44ed-45db-85a9-72574db1701e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dde01a9-bbc5-4d58-8107-d08e6d63ade1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03daff2d-01f5-4130-a33a-a637d6552518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c355a145-5d00-42e2-ad70-fcb9006fdcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db299b9d-5d19-43fb-97b1-405ac1fdfe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e68665f-56c3-4dc0-8fc1-a579c8f5114c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621f1c3e-9312-4518-ad1a-c283f69fc9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d350e0de-829e-42a0-a143-aa17edf19346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c9d861-6184-4dc4-b9f0-1a5ff47b54c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda1c5c0-2a1f-4619-90a2-4e34ea848605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a7afe5-8b51-4737-b552-985dd184cff6",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf1f097-e091-4a5d-8c0e-0cf34a68260b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e01111-e9a2-4b85-959e-47d04d57efa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17225387-3e75-4621-b571-32809c2a4e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a003337-5328-4f6e-99f9-08cd9ef4827e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a02d0dc-48d2-4a3a-9300-3120d2a49275",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333b0a93-2dda-452b-859f-30c8ba12a0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ea105c-6cdc-4b65-99e9-536ad9a2e578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654bc90b-b3ac-4599-b2ed-d3f7c84db2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b190c5c3-73e7-4cee-b018-2acffcc2fd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259ca92e-939d-4ad7-aa64-8ca23123c497",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8343cdc-980c-47b2-9391-92ad0653faa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61617123-423a-4f0f-ad90-d441f566d185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34333c75-310e-44bb-aa7b-5bc2a57ee456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3213f7d6-5665-44b2-a7f6-deb4f7efb01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfb094b-7d74-46d2-aaad-6a00f192a597",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e36d6b7-4296-4149-8570-e34c40bb2af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a05b53d-5877-424c-996b-b414429fdd93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0061067-9dec-4ada-ac88-a6b49e9d4b53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b332721e-3068-4631-83e1-6d630b365058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2a276f-468b-4aad-a1d3-4344365da9a0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788b0bec-b00b-49a3-a21d-3e8c9528d375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce8c6e2-85ae-48ad-b0e2-01b6d8160196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d7e082-3357-4cbc-b4d8-5931fdc4a8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9ceb31-e50f-4c90-be3f-5411e122a4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2806116-bd56-4089-a76b-e5e74cabd6cc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc4e462-aa7a-40a2-a586-b29a6f602b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f80536-5ca0-4a64-8a33-23de3529a53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd653d9c-cfee-41ef-aee1-3d5497b1c485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d963f5f-6fb2-4782-b38b-52e6156d05ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60f0151-a999-442c-9201-71f477f72b9e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38108eba-44c2-481f-bf92-3762f11356e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7691c799-0211-4008-bca7-1e4b770f43d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d6c5c6-ae03-4945-a749-4b273258f10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdfd4e7-6595-42bd-95bd-8ea7c6ab0177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5bc2fc-bec4-4d1e-a965-df7d3f48c317",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c01193-f8e8-4049-816c-5b7a3f3cfadc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1412b95b-bb50-4a58-ad5a-446f699a872a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd06c39f-2507-42df-87e3-a609337c97b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f21ba7e-4ff3-4acc-8910-2068783eae81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8e4db1-c8c5-47ad-8c08-a4c727a7391c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574370ef-be79-45a1-9797-1e968b4fa257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469f64de-93da-4f5b-a700-4b57c1c6ebfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c95575c-8af3-49dc-9647-20037c7e20a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072f965f-79ac-4c98-8f81-4339424d3a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871b6e3c-04b7-4977-9a6a-a8969dc66932",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67444ca9-6d88-49c9-865f-6ad2270c4ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3d61f1-b3f0-458c-8ea0-d2b8d9bd45d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d996321a-e941-4fb7-a068-a5d4fd82728d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca94c8a-a0b8-412b-a592-70ca2054cdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538ebff5-a92a-45ba-96bb-e4b5bb024c16",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eff325e-4ea6-4b19-8ae7-003db11d7d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d70c5f15-92ef-4f99-9d1e-3a513f3e3833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e81be6-eb9b-4b5f-931d-9c130282eed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fdbe908-77f0-4fd6-be11-9932374254c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2337ba6-8f7c-48a2-b32e-98a570bf93f8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22479a9-c48c-4247-9b6b-d477099f46f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d75540-dec9-4554-926b-7a30415522fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af934dfb-678d-4a3f-a025-0a5e9222abf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e581f5bf-8edc-4101-b4f7-e35cbf6fbdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb8ba64-7439-4fe7-8da5-34c0098bea96",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c113ad6-af52-4c00-ab00-5306a386e8b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d416700-500d-4213-b536-03b38b89b922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc04588-2a9d-4d97-a25c-59311e2b8cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d87881a-dca7-4aa9-b7c9-d7ae140fe739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ba3086-cbea-4806-8919-910d8de7ecb3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46660d6a-f066-4012-be67-cab60f580197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "303d475b-8622-4345-af7c-0fcad3e33c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b26eaa9-7352-4f41-98c7-f32ebc2cf184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3a2e98-020a-4b6e-9f85-f03f4997da5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6106a7bd-264b-463a-94a0-0a97ded878f4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4067e72d-ee81-4af5-bbe3-bfcf25d63e47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb460c5-99d9-4dd6-94f7-8704f3d875c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7afeb4-cecc-455d-a1e0-eba38bd89c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09843627-1eb3-4196-9d1a-79560f4385dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195af772-3f27-4e21-8d73-8120cdb0406e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b0bea6-7f9a-45ad-b052-a8955bdcf36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd13705-09e6-4cc0-a795-c726c8f36543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40622fc7-f84d-4558-b901-daa4cfb20ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7437e84-ae85-4b34-a265-8c8f2eea7ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2528ad5-9af6-4df1-8c6d-7b21c5877c64",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aed210-0971-4153-b878-159c96464d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63938c49-251e-4426-8bb7-afacc26445e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0498f3d-9520-403d-9ef0-58ab6a214587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed69b4ed-c0b1-4b8f-90be-5b99bcbd6c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5ae5cf-de7f-49eb-a8e5-56ea6d88df18",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1363cc9-ce2d-4ddc-8a0d-7f1ccbe72ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d6f035-0a44-435c-a8e7-4f8ef237ed74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e7b89a-4fc5-42e4-8699-df91050095d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca36b9f-aa85-43ab-a7c3-a9e060ef9b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2460e7fc-16d5-41c6-b9fa-48cc17a36bd3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46beec6-7382-4f00-8c19-9fa81c621ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43693232-2d26-47cd-ba3d-2e9d1fba40a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc35bc02-6a75-4e9f-8bff-8ba985ecfbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3b437b-d41c-430b-bcf4-9d4bcac89418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14de59b-43e2-4e3a-88ac-e9673dca72c0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816c93b9-f9cb-480e-9a1a-22af4bbe7504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a5d2ff-19c1-4705-b9ac-c02cdfdca90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7644fc61-6edb-4557-878a-4411ba4bbb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d720d0e-d2e1-468a-a460-b0a5cfe6f8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4a7ddb-51e5-457d-83f5-de2b19ee8acb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9ff030-3ee1-4dda-b738-606714c611fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ffd72c-caa0-450b-ba75-a7f7e7ba8074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80eb12f5-1ec8-4800-aacd-ca5bce94b4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c45102-f5ba-432a-b42e-1e235f95635a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447f645b-9e5b-4727-9e86-91d873eab6b5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2980322-3518-4593-8f1d-55ce49aaad48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc289ab2-ec56-438e-b614-84608bb22754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5524539-ef6f-4e63-aa68-a6d19d1e5811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1270804-77d9-41ec-a236-1fcb74310828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100f7f7e-3d1f-4728-a824-eeec51bac1e6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b82103-89fa-439f-85be-1d62ffec8268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6540f8d-5e3e-4aaf-8f81-71ed9b124d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adb1548-4ca5-41a9-a537-046a1e6bfa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dcb068-f0e6-4360-84e9-02fb28780b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8267372d-f3ea-4b99-8f71-63e5b22e1e52",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99947368-7a25-482b-ad1f-aaab6469772b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd51b704-b7a3-4dc0-95c5-044a385ab6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3673410-0fa4-46b6-9ef6-8f06b8904678",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc408fd-cf60-4d5e-860f-d474b42a0cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ef562c-cae7-479d-baea-6d43b07ae73d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f715bcfe-72df-44cc-98e7-1e459d7480ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc6f49d-e320-4ba7-908b-b6aba960319b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3504885-59e5-4c46-b7bb-7c7655883095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588b62dd-6196-4e0f-938b-bf4160d1905b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c045f9-3dad-4f28-9043-c173f5ca629d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1b01e6-d346-4486-a900-489beec7765c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d345239-b78d-43c8-8c57-e6bb7ec1c702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f467ba2-9028-424b-9399-fa9b4f7e3ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73f57f9-b150-4dbf-bb26-d669bfb54d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c169bc78-4a9e-4105-bc16-cc17beb66f7a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c001077-5de7-4c67-a6b9-0166662e9392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c07f6b-25dc-49e5-8fa6-7d593c15a70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad6cddb-e32e-4756-8aa9-bef7a0142237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b7d3dc-227b-47f9-9c2b-c3a4e00f982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2222a0fb-1042-45fa-8357-cd71196d689b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e434c02-270e-483e-9add-bb863f43bfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cec19d8-3db9-4396-a6c8-ebdfd6f931b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0f5c33-cf18-49e3-8c20-807de192ec40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5cb758-50e4-482a-a406-087c11540a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a72690-b5a6-42e2-a054-49bbe5302ae0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b4817e-9598-4013-b2c9-db05dadf86d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b12b84-0bd5-4e19-a185-1fc4b540632e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1e8ae3-0dec-44f2-9b7b-21928439c651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3093ee-57c2-42fc-a7b8-b707b9af324f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5cec28-ee6e-4394-bfbe-f500d33ea0bb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2784e8-1f19-4b30-ad81-42aa29028d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342a13c4-4267-4192-baa8-f2e140ae6dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57080a7a-fa17-44b4-9b8d-e9102dbad7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08168f9c-26e0-4a6e-bfc7-fb813e0f5a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5a5f08-07dc-4fb2-b4ab-92751e7ee475",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af73242c-af1f-48d0-ab6e-28d3b26b5ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526ef8a2-0ffe-4618-8d62-3cd0eedfb999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e4688f-280e-4f87-b854-36b39b4eb3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9c760f-b9fb-437b-877f-4ab95dec3271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa37b1d9-6a22-4743-87f8-9f30520d33ee",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4d99fe-3d7f-4a0b-b517-a2a13f04b9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd4c73c-bfab-4d98-a55a-1f0490a8431a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c7c656-e768-4ee3-b160-4b095da6d841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273cb494-889a-45d1-82d7-12a9df4c78f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7149d2d-6226-4cf1-ba7c-8c6ac3f8c90a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e774850-834c-4bf2-9fe2-f10838994c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98accb2-924a-459c-b401-7690a78e53c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36c1a27-49b7-401b-b66b-e9cfcd239865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82849c16-20f5-46ad-8c94-33a74db50756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6520f43-6363-47e3-ae7f-6998042ef4d1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be19c4fc-0b52-4631-a591-71620d38f47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cad9fb-5cbd-4cb7-8e05-5fcaeef930d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e2d31c-795f-4b54-85fc-5b4dca8ef386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac80fe2b-b719-41fe-9037-6b692b4a6551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6405b3b4-069c-4477-ba7b-2712ce89852a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a00eae-20d8-4317-96c7-a12eb766629c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b9672e-43ee-4e27-93c0-9f83d56064ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02930a12-2b7a-4fd7-85f4-57f84b6f968b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ceca36f-02cd-4e8b-945e-77271694b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c807aa0c-75ef-4b2e-a02c-8d75773cb6eb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9466642-1191-4828-af90-c6fd3274b897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fc772b-1c21-4518-a2c7-7592be63cc77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229d5282-ec16-498a-a5b7-09a3a9ca6948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479b2724-0e61-4c50-b9a2-e7970c593cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20269e29-bd1e-466c-a7e2-99b4bddb9bf3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bac8734-7249-43d1-ae54-d99d3bec3c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c814903-7934-4951-b072-0a57f880234f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a690160c-101f-4e1b-84df-fc3244929440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bf18a9-b91d-4afc-8d6a-0b7966f25dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a4af3e-fef6-415c-a1ea-c90a8ebce180",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a603e93d-bd98-48fc-bc8c-dd336bfa37a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f16d4c5-17e9-43b6-9079-b48e3f42154d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8a3c66-e44a-4dbb-b16a-5f93c4bf493e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7444d0ae-5af9-4376-bd96-82ce30e8ccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbed7376-f0e2-4fd3-bdf5-d8ba770946c2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024896bb-e188-4d62-9c52-3c5a6be0ba3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b11a8b-2233-41f9-932a-73f370862e7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4c3973-e078-4acd-bb20-c348a7c009dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42316592-e9b1-4d9b-9d9a-998d080021a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07baaf5d-ffce-457a-9465-e5213f630284",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a80f4a5-4e58-41e1-8f71-7ce2ac33be6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd222959-056e-4451-86f2-bd77d43d85a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48d765b-a95c-43fc-9aa4-381d0081702f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e257176-6b6e-4af1-a4fc-bbd9717ed69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98fb6b3-44c0-4443-9c65-ffe4d648ed67",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8162eb9-a50f-4331-b3a3-5aa4c2133bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7779ab-50e7-45d7-a8f5-6ddd30de5a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f5c0c2-41cc-4a3b-bbea-d4ff99809149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406b5fe8-c101-4af3-b9a2-23088cab30c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a3e4c-e067-4334-a7b4-116bd0584b8d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06129555-3638-4b8b-8f64-9d9a085b11c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0636c5b1-4cbb-4d90-8572-ef951efb9306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e68736-5dea-4bc7-82b9-7b133fe5631e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d461b7-f31a-471e-ab1c-51bcc3005b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df3d7dc-e53d-4830-8330-f1887296a8ca",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81527d80-3dd3-4ed0-a776-1b3344ce359d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f1c0e6-6655-4684-8bba-390ea94d0458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e34c7e9-9566-4da1-8f00-4aade1aa2d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf18b7b-a477-4e9b-8545-7b1a5bd53e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e313fb87-8004-4644-a2f4-7f2788d733e9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a42028-c85c-402c-8bb9-3749e555cf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa539d6c-ed34-4918-b76d-1fc37acc637c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116ce83b-ac4a-4604-a3a2-0c01edc9f399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46b2834-f87d-4f26-9ad5-f57e4405c115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2fc909-a674-4410-a072-9e41fc45ecb5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc04d1f-cb87-4a04-9666-379fdbbf3916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33b21f3-06aa-4d69-886c-5a6df5f1bb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48055e2f-1161-41b4-892a-5a8de6d4f05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7fcbb3-085d-4bf6-bd49-482ff05cf640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee081e76-0b90-4b62-8c5c-96f5c779df3c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d307a765-c359-44f7-a846-a9552e5e8565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf87e23b-ccd9-4f05-8d7d-c9d04a9da0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd66ce93-5d02-4465-af25-a4a7220c5cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa6b927-942b-433f-967f-80d725413381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf793efe-a2d7-4b2a-ad22-8af880ac58ce",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91532c7c-8e95-468e-86b8-fca306ef18b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b692df0e-fde4-487e-be60-5ffc21444675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7008d0a4-9ef7-4814-8af1-092c0a40d29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dce943-d42d-47ac-b7ae-42a1eae1b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82db2902-d15c-4f0c-977f-97fc9857232e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e29492-92e4-4605-96eb-fad87e3b3a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21d8dc1c-c980-4c52-809b-828518529cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e96c4ed-62a9-4e6e-9bd7-5d4a9387c41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3bf264-39c3-4934-a902-cec309d9266b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a031aca8-ac52-4299-ab43-9480ec2357e4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d037c5af-e434-42dc-abb2-c22a92e83ccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3358dd3e-af97-414c-ba58-f97379e94c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1159eb82-c5ae-42a9-8910-ec901bc78056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a72704-da84-4e2b-a544-357be612228c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f16da1-b9c2-4563-9106-fac63912dd0e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6d5405-babf-449a-8257-6915db4991f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09ba2f8d-0f8a-4994-9427-73dcbbe2c464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebbf7d6-e370-4872-8d3d-2c7c87f14ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d570483-0945-4d08-9e2e-cf8ae21db143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d552911-3d1f-4e80-8fa5-6470670c9101",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c203f94-668e-4c15-9b89-b041f9ee0a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f59e489f-2817-4840-98ea-2a408dbcd73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11f19c2-03aa-4ee4-9976-999e14a53105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc576bf-0514-46e4-a646-0a9e3fa119eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a512d2-e119-4b92-a87a-56f1100dfcdf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfee31f5-1bc0-403f-8d5f-03b13699f6da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d0a7128-f4de-455b-823c-b9837c97b36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b4285c-ef4b-44b5-93f3-d77eb7d171d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5679b3c3-c812-466f-a429-4d3956307471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1b503c-881e-4364-9497-e1d7aa0eb310",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b70573-9f34-461c-bea5-f9fb2325c5b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77ce43c5-8ba3-45c1-a818-7c826a7d9f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1cc5b0-9bbf-4211-9c10-3c43904a18c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd83c515-80cc-43d5-b96c-47be82d1ae0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3e14a2-55a9-48f2-bfb3-088f51e823f2",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb5adb-c148-47ee-8645-22c63764adfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8cb088c-f506-4394-bfe3-43e05817104e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01b757e-78b8-4c9d-835e-d0c37b4357c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b7420b-9292-4572-bc8f-a2b0fee105c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2464f75d-306d-4b93-b655-6e9545d617c0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833eec09-c077-4ce8-9c76-c6a8a969aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed598b65-dde9-4237-b64d-4caefe1ab670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cdabb8b-cbae-4d4e-bb97-b896d1343d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fdf47b-65a7-464a-b739-d8dc0fcc4eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4823fc68-9b7b-4d6d-913a-8b1aaa44db25",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62aeb54a-6cb5-43af-90a1-20290aa0ce70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b34a06-470f-4743-af59-5f2f452526bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acbad66-2f54-4176-a1fc-9b6e039af904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba34d77-9c0d-401e-81a1-9130a1fd9059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24579c6-f63f-42d8-ad80-f185b4d83b77",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f22765-bf9e-4bf7-bcfc-8a242ba6b4c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e22c32f-a2a1-4df0-af63-4b30a7f186d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b433c65-96ad-42e1-80e7-fe29c80f589b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3544f781-130c-4c84-b7c8-77aa3df42eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d118b836-132f-4d8f-a73a-cfceb51e5b94",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfb3657-743a-46cb-a511-44974cde6919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44cd5937-2715-4d09-b632-df78dba6081f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff74386-dd3d-4f59-a043-fabc73436294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735e7616-9756-4e77-a7cd-84e4d1caf36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f5dc9ac-7662-4a30-87b7-f9feee07c1cc",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5502343a-2e17-47f2-8d63-68db10399c27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02443b3d-a3bb-4c97-8958-0a83c906eb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b303cc8-93a2-4b5f-9f4d-9eed45aa64b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176669c6-c8e2-44f2-a205-a6f22aa8f828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd1591a-c006-4e96-887c-da8d72c2f914",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956f5555-82a1-4152-b21f-1f6139832a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb651a8f-c4db-4b71-9a2f-1c27e191eb3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6c4bb6-7eeb-48fe-8487-c4dbb245e7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ccc3cd-db91-48bb-b118-9a2380e7a17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc0410b-602c-4884-b9f6-20cf1d02d0eb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4eeb6b-9b22-4054-861b-c9faf21a9a9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3074c155-4621-493b-b053-b26b420c0b6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722d1ca1-306e-4d05-8d48-0441176668a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8dfdaa-bbc8-427c-989e-e695ebd138a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe2320c-55c5-4d45-b404-5c72049c3902",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46bba0b-466f-44e0-9549-89f94ddbefa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b51a0ef-d57e-48f2-8571-28d9b85fa5aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2865f01-6697-44bc-bba4-ae8c5fbaddb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac23f83-76c8-4701-a8e0-7237e1e9b529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb69108a-8456-49dd-981f-e383c095b652",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a55f999-2aaf-4279-ba81-81df952171bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fef4a6c-390b-446a-bfa8-6cc67dd45b1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1e9e4d-583e-401e-9242-e468a4cec505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0822d5e2-be42-403c-a22d-f2fd994e8cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56ba716-0361-4c06-8a52-1b7fd5dc7a28",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3670cf88-fa03-43de-aa90-c5d0cfb20f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13bf0a7a-af05-4181-836e-9284e10dc316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433a4bb9-8e59-475d-ad2d-8a85256acf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43673a22-3c5d-41c5-a158-cfdb39a525fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86479e5-1b4b-4721-80b8-3ce2e955ad39",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c37fa0c-a0fa-4c90-83f8-8b19cdc8a31b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411e336d-4548-456d-bdb3-b5f413c882dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756c9673-35c3-4652-b947-b91cb9c25d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aabbd21-31a5-46c0-ada7-323dd0d4d878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8074989e-70f8-4c6f-8939-92d0b6a24b96",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ee34d4-982e-4912-9a91-0c4012693afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d251b46a-0c38-48be-b59f-065490784bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bde565f-27e2-4873-90de-1bdb78bb0f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66ed04b-d7a3-40ae-856a-95bfc0266f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006696d0-8eab-425b-b7a0-898c5b46c252",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9665c2ee-cda1-4afb-92dc-9c8c5a8f2efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cea5dd4-b554-4d0f-bc43-b7754a60d8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e44160-3c95-4277-9ac8-9d96111d5995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e8dd01-fe6f-433e-a69e-25051d903bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b15b74-2164-48ba-a56b-5c1f56d698ab",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c72635-b6b8-4a44-9a46-78cfa1cfd6f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658fc3cc-4d1e-4a98-b763-2e15b8d6bda6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be378e5-1189-434a-816a-5ad7ce829319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cda8a0-a29a-4ed4-ad15-304da89b2501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1442ba-fee9-4d64-b89f-80cb69242386",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0b3eb3-597b-46a3-851e-c0ba81389edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df6223e-9991-4773-a143-e66c32085bd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb27697-3eb8-40b1-8737-8a2108f3fffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081a15ce-e160-4c32-8044-d61538dd1f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54932725-7cb4-4f8b-9dfd-90d881236b19",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1158b7-fd52-4e7d-9edf-3f76d69d7130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82b67c73-526e-4692-a220-787e3e3c9de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50ff4f0-42a0-4299-8308-b51e88168c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf2b966-478e-47a8-bbf5-1f33d05c9e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d25978-3a58-4ebb-b18c-8fc80a9dbcb8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577b6d19-3ea5-4024-90dd-c0c8ce90d525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005ffded-11fd-423c-9af0-5e365b4b4d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dfc39f-d3fa-469d-a0c3-c1a4c15cea63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f858e01b-11a8-4a2a-964f-f1fe7add5b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bcfb4ee-455c-4208-b337-a9c4b64d6626",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90991643-4ed5-4e40-818d-beec56c14498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82977ccd-c4be-4f29-b129-ba0b28661fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a67869-035e-4dba-8625-cf0ac4f54c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a4bc82-0bdd-4cc4-af2f-caed01ac1775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f83b9e7-a452-4832-ab46-d105bf4319a2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0723d393-f236-4cc9-aaa0-42342f2b14f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84acd938-38a0-4d02-8c74-68d62319aa3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b5cb77-8f34-4fae-89fe-d97a9c6985ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271fd622-29d4-49bb-822b-5646670828f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973593d5-400e-4273-9343-93a5bf64a37f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34975a4-388b-4a25-aa9e-73a50cda6b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65df609a-6384-48e5-a421-c641ca901555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e223a2-69f8-4088-95cb-5a9df42d5993",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137a6403-471c-47b2-9d65-0eae3caa5a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2409aa6-d3ff-4007-8187-dc2a20869a6c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28da5aa-02eb-4b55-9855-a815a5691e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b23f3b-87e9-448c-baca-cd5f61e39842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51325a65-1350-46a8-a496-50e284cb01c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c208ccd-1e3f-492d-ad3e-f36a81c2c19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104a5bf9-8832-4f59-9167-7cd4bf0552f6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5beb7e78-2528-46d1-b51e-e6114762555f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "469878b0-a676-48a8-872e-d6c9e0c0220c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cd416e-33f1-4d81-8146-e215868602af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b213482-c22c-44d9-b046-23894d249b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1676d4a7-118d-432b-bb18-820de9a5c818",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aa69ae-5639-46e6-8910-24e4929c0827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b177c2c-c7ea-461c-b1a4-ba58a9f90fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec5676e-1182-4cef-a93e-5c5ff89e42db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbc7a5d-f0ad-4e13-b85c-fa89b62945a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e111f48e-aa4f-4177-a0fe-cb1261f637c8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae069a92-15da-48cc-bf6e-214b620227b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf38b3d-1dab-4430-8690-15f74f63d528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4473f872-1b54-41e1-98ee-3411ff3763de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9b64bc-df96-4db4-b585-c4b46dc99337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7186d71-d389-4bd5-b7d0-54c0bbfdb805",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc556702-884b-4671-aa65-c0504d807145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ea88e1b-26fd-41cd-a272-4a41fc7ea6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbee1604-f248-42a7-92c2-c156bb7c0238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae07d904-0dc9-4fcd-9601-86f466cade7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0e3712-501f-4c87-a7a9-87c60a415d89",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcb0eae-93d3-4035-a501-f3c5433a7356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68cad7aa-7c0f-4f83-82f8-3f7439520deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04905379-42ec-4a4c-83b2-bf9456300c32",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472eef5a-86cf-4679-86db-af52b39a4687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485f572c-114a-4b7c-995e-85ca3e723c31",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90966777-28ca-48d3-962e-a09478489336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "643ddb37-bdd6-4559-933c-52d763b7c4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebffebcb-da4b-4c47-836b-e18f66662266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727de9ce-776b-4c72-a427-8d84be1e3e00"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1337075-e635-4c0d-a80a-956c33d16f3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe2769ee-cf63-47a0-84f1-01f31649ac0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "290a2426-3811-4edb-8da1-50224220f325",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a86a982-a6e9-4bc8-acd4-682d64ebbf0e"
                    }
                  }
                ]
              },
              {
                "id": "d8402f4a-b390-4ee4-acfb-511f9355b957",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9aaa5d8a-9f57-4c52-81a4-5523de824602",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00938112-3193-40de-b482-f05abd106ae0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05d5ef0e-1fee-4660-bed1-d87dfd46456d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5389fc41-56dd-4da5-8b27-0a1fe2710517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1c70fc4-ae4f-48ed-bcb2-18105dbe78f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d28ea3d-1fd5-4ca4-8f5a-0d6cf0392502",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61117ad9-0d09-4f6e-ba93-82c6c93fb6af",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6447f9ee-1223-4c5b-ba06-98eef390d52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7815ba47-b9a7-473b-a608-145f52b762e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b941fbfc-0d6f-40e0-bf97-337c8bfa3655"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "347cc353-4571-4f0d-85b5-2dd556b82f53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3cab681-3050-482d-aa76-9ecba8f583cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a91b1b85-c488-4ab3-8a32-5be6de8b7d88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5531e2-847a-43bf-9449-d5d9de86ab69"
                    }
                  }
                ]
              },
              {
                "id": "1266a094-732f-44b3-b78f-458cb55105a0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "78cf70ca-7eaf-4655-bfa0-3d8ecd3c9719",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ffd48c-5a5e-4c46-9c01-bc9089ed3771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "065a6f98-796f-48e2-b80b-859939c6236b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36050d5d-6857-487c-b1d7-41e66a678037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c805deb5-f0a5-4275-8f33-48438a2e544c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6c3168ab-4cd2-42fd-880e-da213ea03f66",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d0b006e-eddb-4c0f-8c83-97a15dbea119",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d1630c8-fc2b-4fb9-a689-ecb6fc2ece66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0369d0bb-b94a-47a7-9031-5b7866a0470f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66e7e498-c994-48f1-9cde-89133faf43a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79c0dc99-b7f2-42f7-b001-a6691523ac58"
                    }
                  }
                ]
              },
              {
                "id": "ede2c0ec-6eb8-47a4-9146-115956a5cf26",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e36c590-c2a5-4169-a2ca-9c5715dfba3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f8d9907-e46e-4af4-9f1b-d20b60731ce1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b407c97e-3d5d-420e-87a8-7c9678654f87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7af16248-8bbb-4f49-b127-6ff29ec53091"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9123247a-ec81-4e1a-90ff-4509ba73842e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "96236928-532d-4338-853e-cde2b0b79ed1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c85969e-3de9-461b-b061-6aa6b70dede5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8f2c511-68be-4b2a-9306-e40e7038b05f"
            }
          }
        ]
      },
      {
        "id": "3ac904a3-da5d-4a26-a106-12fa4e9f5414",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7dfae41f-07eb-4ffe-a749-e5c399c674a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "522e3078-0fa6-41eb-8bc5-e74f25af1221",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e51ca12-ac81-40cc-ae53-425d56481932",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7bb31b-fd65-4d15-a115-b4b89f6e5374",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "572cf261-adae-4555-b5b6-7a0aa84d61a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931b66d7-3325-4385-a04d-884dce6b548c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aff7044e-add9-4e9e-b342-f7e38f22b4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f57898-49a4-4973-b79b-9540a0692087",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc709f77-c00e-412f-a9f4-9f913db3fd9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "02914cf6-b6c1-4257-9a58-ba8b1189036b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5f8a8b-9cdb-430c-9b7d-26abb14e3408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e87100a-5704-42cd-997f-7091ec39ed76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40c63fb9-b5e8-4c41-8e80-ccb71a53d496",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "720daf6e-cd94-4540-8c7e-01a9f654eb56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88a66719-b55f-4e5e-a58f-8ed8a273d1b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98b365ba-bb7d-4aee-8f19-df3c2bc78f45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f5203d4-335a-4383-bda6-db900adbf0af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "68de6f05-2ae0-49bb-9eb9-1ae8d2879d42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb2b6c66-8218-4923-94e0-ed49f5e06525",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7e19303-f6bc-4649-a094-3e163b18ec79"
            }
          }
        ]
      },
      {
        "id": "c5202257-0bfd-463b-bfdf-8cbf3ab0f102",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "92f62439-1378-4365-ba17-d8a84c33ac5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a654cf5c-84e8-4e73-a3ff-c6bbe3561afa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f43e4dd8-733d-42d8-96ec-1219e794cf8b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d751f46-777f-4250-9284-2a52e5fa2551",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "234d2e56-0496-4b74-83c1-8a63073638be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5eb03b-0f83-4e7b-8775-a7ef57e26033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59eb8fce-cd81-4ce4-a77b-aa30a65d9928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b809cf23-d446-4460-9517-6b04e4f526f7",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce741b3-41b9-495c-9ffd-781019056786",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "305430a3-ac59-4338-8e71-e0aafc860b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5125b6a0-0751-4f75-956b-aee2e3caddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a87f8b77-e1d6-4f89-85e2-058c386c5db4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3802ef46-85fd-4329-9b4d-a505abb23f5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5888445e-059e-4b88-a74f-e6e419a7a37a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc207531-a988-4443-9669-94aaa6ec6dc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d769bf4d-10e8-4de3-8403-fe2c5c7d30b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c889ab4-b84f-4280-b812-d4b79958ae62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "77c8de1b-5b49-45aa-858e-002908420304"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9109509e-2892-440d-b894-5ee1f90f7c35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "378eba70-1192-48d9-8ef4-829a06527fe1"
            }
          }
        ]
      },
      {
        "id": "66587caa-d983-40c1-b0dd-7df18410da73",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "246e9b26-52d3-4b83-bfad-c8fca2020694",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c962989-0d5b-458e-bf68-ab01c79a31fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3fa2963-58ba-4aa6-9507-7d7e44d6afe9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5617e55-05cd-43cf-abd0-045438a3a92c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4986cb84-470f-4f1d-a8e3-3a38378fb32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d0bdd2-e792-4707-bd12-a61fa6e2b008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4a5eeed-0cc1-4446-a251-7f09f541d29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ccebf1-3e97-4126-ae53-e934cffb3e7a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9850cee1-17ff-4a42-98ad-33ee520da64e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ca0ceb6e-fa1f-431c-9541-574ea5cbc4d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6e25fe-aae2-4a89-b2ec-93bc91888ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "668dcf15-3a3f-45aa-a8c9-309e10a97fc8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16f2fcf4-f54b-4068-a45d-215034e82fe5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da45c25a-90a0-42bc-b46d-2c5ef1d9489d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18a11391-c500-44b5-a16a-72dba17ff2a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "707f6ed5-fde3-400c-a22d-44b401cd3a24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fb0fe56-5293-47cf-b74e-b94a33c69512",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3dcb135d-065b-4546-b21f-ad95ae8e93e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "603ffe25-be7a-4961-b2bd-1ce2f25c2009",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8bb9fc5-146e-466d-af67-674e86eef097"
            }
          }
        ]
      },
      {
        "id": "e503df61-8a23-46b7-899c-aeb17b233c9c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "271c194e-6bdd-40fa-908c-e35ebd53708c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85c43cd3-d049-49bc-945a-92e5097134cd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aebf41c4-6c60-45bd-b272-1afa7fea9bae",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3670a86-9386-483f-b62e-84c870135484",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2dba55e-7378-4c6e-81fe-8ad2382ad195",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 628.2900763358774,
      "responseMin": 6,
      "responseMax": 6262,
      "responseSd": 727.9895665361491,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675557809878,
      "completed": 1675557985303
    },
    "executions": [
      {
        "id": "daeb16fa-325f-4e17-8c4f-71605653ab5b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2eeebf5f-5a29-4c65-be70-112202c56f5d",
          "httpRequestId": "7492a4f6-6a17-47e0-8f9a-092c3078d198"
        },
        "item": {
          "id": "daeb16fa-325f-4e17-8c4f-71605653ab5b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6351d729-a2ca-4c2c-bdb6-78b7597389c1",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "b54c004e-c093-4399-b4ad-4c3bc648cf1d",
        "cursor": {
          "ref": "fd24189b-f450-4f83-bdd4-9ad47b376a56",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "33b33992-59b9-4b98-831a-16795ff71b93"
        },
        "item": {
          "id": "b54c004e-c093-4399-b4ad-4c3bc648cf1d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0f6c799d-1119-4b3e-9c5f-e2ad25596e6b",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "1383ce06-8b73-4875-a128-e7d71a40af6b",
        "cursor": {
          "ref": "1590c844-d2f5-40fc-ba95-89ed8393421d",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c7fe2621-442b-467f-8d52-b1b2c804b1d7"
        },
        "item": {
          "id": "1383ce06-8b73-4875-a128-e7d71a40af6b",
          "name": "did_json"
        },
        "response": {
          "id": "f74f9a89-4ba0-411a-9320-3f51de3fe181",
          "status": "OK",
          "code": 200,
          "responseTime": 711,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c07a3bb-ba9c-4a18-a465-a1d631377ddd",
        "cursor": {
          "ref": "adc6252d-b0a1-4a9d-aa31-23d6baf8aabe",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f5fe02ac-797d-4774-bbe5-ed6d9264e753"
        },
        "item": {
          "id": "5c07a3bb-ba9c-4a18-a465-a1d631377ddd",
          "name": "did:invalid"
        },
        "response": {
          "id": "7189807a-0740-4e99-bf3c-23fb8b8edb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c07a3bb-ba9c-4a18-a465-a1d631377ddd",
        "cursor": {
          "ref": "adc6252d-b0a1-4a9d-aa31-23d6baf8aabe",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f5fe02ac-797d-4774-bbe5-ed6d9264e753"
        },
        "item": {
          "id": "5c07a3bb-ba9c-4a18-a465-a1d631377ddd",
          "name": "did:invalid"
        },
        "response": {
          "id": "7189807a-0740-4e99-bf3c-23fb8b8edb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0658689b-e553-40ef-be1a-9210831460e0",
        "cursor": {
          "ref": "b6778639-9f0b-446b-894d-319eeb084932",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "836950a4-f201-4ee4-9ad9-dc8cd371df50"
        },
        "item": {
          "id": "0658689b-e553-40ef-be1a-9210831460e0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "60aae65d-ed00-4dc5-ab69-eca40612b964",
          "status": "Not Found",
          "code": 404,
          "responseTime": 582,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef975f1-e5fa-4a6d-bb5c-97425815336b",
        "cursor": {
          "ref": "adfb2b27-3ab2-4526-ac22-16ed131b2f2f",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5639cf38-6720-4029-bd0d-725c6c60e2b1"
        },
        "item": {
          "id": "eef975f1-e5fa-4a6d-bb5c-97425815336b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f997c2a9-ee25-4a84-8309-fb8d4bea15c2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 801,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aa8793-f94b-48fe-a499-a6a51ebcb3a5",
        "cursor": {
          "ref": "efa1aa25-845d-4bae-b363-50b730976885",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "41dff97c-5e2f-4af9-9d2e-47793a69cd15"
        },
        "item": {
          "id": "75aa8793-f94b-48fe-a499-a6a51ebcb3a5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cd5a319d-d6d4-4fb6-96da-f0a7f88e2bb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e27312-d6dd-40fb-8b9d-80256a315d7f",
        "cursor": {
          "ref": "9be29578-f1e9-4eb0-ad2f-9eba5d9efce8",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eca25dc5-d874-4256-b64b-c5eba8b5722e"
        },
        "item": {
          "id": "19e27312-d6dd-40fb-8b9d-80256a315d7f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ba7181f5-6053-4711-b1f5-072d392a097b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e27312-d6dd-40fb-8b9d-80256a315d7f",
        "cursor": {
          "ref": "9be29578-f1e9-4eb0-ad2f-9eba5d9efce8",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eca25dc5-d874-4256-b64b-c5eba8b5722e"
        },
        "item": {
          "id": "19e27312-d6dd-40fb-8b9d-80256a315d7f",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ba7181f5-6053-4711-b1f5-072d392a097b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 504,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24743dc-0b03-4eae-b661-7b596ea2ca15",
        "cursor": {
          "ref": "72b2962a-197d-4ca9-9700-0194911012a8",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec9fade6-9d06-4439-a6c5-a67204b3856a"
        },
        "item": {
          "id": "d24743dc-0b03-4eae-b661-7b596ea2ca15",
          "name": "identifiers"
        },
        "response": {
          "id": "d222cee4-a42f-464a-8b02-8ac5b9cb67d3",
          "status": "OK",
          "code": 200,
          "responseTime": 804,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684f36e4-39ab-49f7-a8d7-fa09935bdeeb",
        "cursor": {
          "ref": "9a26454d-32ec-418f-9cfc-4590e6359e5a",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fa1d006f-6df0-47c6-a656-d71703708bfa"
        },
        "item": {
          "id": "684f36e4-39ab-49f7-a8d7-fa09935bdeeb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a219fbac-2e0c-4188-a1d3-f98037389187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684f36e4-39ab-49f7-a8d7-fa09935bdeeb",
        "cursor": {
          "ref": "9a26454d-32ec-418f-9cfc-4590e6359e5a",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fa1d006f-6df0-47c6-a656-d71703708bfa"
        },
        "item": {
          "id": "684f36e4-39ab-49f7-a8d7-fa09935bdeeb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a219fbac-2e0c-4188-a1d3-f98037389187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c414ac0-d643-4ade-aaaf-53bc8ee68d2a",
        "cursor": {
          "ref": "b565792c-2794-4837-9b2b-7251b2e75753",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fb725f79-89a6-4711-ab9c-a3200e6ebe7d"
        },
        "item": {
          "id": "2c414ac0-d643-4ade-aaaf-53bc8ee68d2a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e8e38fd5-61c2-4900-a643-3e947c3d9b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690476a7-2e55-41b3-9db7-aec98953a82e",
        "cursor": {
          "ref": "a02c02b2-7f40-4775-9e89-713c6c5b8b8f",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "933b21ee-7f7a-4bc5-ae82-2dbbe1fdbd42"
        },
        "item": {
          "id": "690476a7-2e55-41b3-9db7-aec98953a82e",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "603c5df2-6826-4821-bfe2-ac0201f4b150",
          "status": "Created",
          "code": 201,
          "responseTime": 2416,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "fba73b9c-c4b1-4790-a558-5ea7e346510c",
        "cursor": {
          "ref": "ae7ed542-2fb9-4162-b831-99e0d375ae2c",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5a242d9e-4ebf-49bf-96cf-f07e54be8451"
        },
        "item": {
          "id": "fba73b9c-c4b1-4790-a558-5ea7e346510c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4ede1789-8526-4002-bda5-3c5fe851cee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400c4b51-b592-4db3-a6f4-58441db1a6b6",
        "cursor": {
          "ref": "f02a1b44-30a9-41b3-92c4-ce684a1281e2",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6098235e-1450-40de-870d-a207965078d1"
        },
        "item": {
          "id": "400c4b51-b592-4db3-a6f4-58441db1a6b6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f780c31f-0a1a-4fab-bad1-ca89896579bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b557cb37-31eb-4789-9cb8-c92a1fd9ae24",
        "cursor": {
          "ref": "d525abb7-65f4-4981-a41f-e10902d1dea8",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "311263b6-7a0b-4ea8-9fc2-3aee8748be58"
        },
        "item": {
          "id": "b557cb37-31eb-4789-9cb8-c92a1fd9ae24",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f595b631-cc12-4bc2-b271-1f036d9be670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e32eb5-4031-4f3d-9db8-4e3092c428bd",
        "cursor": {
          "ref": "6ebe3d8f-bba1-48f1-a2f8-f1458c917bdb",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ec397fee-9eea-4a73-b00a-d002959b3228"
        },
        "item": {
          "id": "b0e32eb5-4031-4f3d-9db8-4e3092c428bd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ed77b0c1-4847-4234-bb42-e4302570ff87",
          "status": "Created",
          "code": 201,
          "responseTime": 2432,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "bae7f56c-f0e2-485e-b2c6-44031cdfb4af",
        "cursor": {
          "ref": "6dde7c5c-a6da-4950-86b1-45fdbd001551",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ad33ccba-a825-41ad-8b04-699a2635f32c"
        },
        "item": {
          "id": "bae7f56c-f0e2-485e-b2c6-44031cdfb4af",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2bf1b532-cc3e-4c3e-8b4e-3138d374ccc2",
          "status": "Created",
          "code": 201,
          "responseTime": 2471,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "9e208ed2-a13f-472b-8706-13eb2441b3c4",
        "cursor": {
          "ref": "3537f964-617a-44bf-a625-8e9135a1d3ec",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f62a41c1-a1a4-4fbd-9a9c-c591afd4ad0f"
        },
        "item": {
          "id": "9e208ed2-a13f-472b-8706-13eb2441b3c4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "637f262a-18f3-49a6-9163-bbef20006ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf98d93-d750-42be-8486-e204b9db73bf",
        "cursor": {
          "ref": "566d122f-0ffe-4b4c-9b42-c7cbd3f916b7",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8882c239-74f3-4b68-b9bb-a3cb1c3c3240"
        },
        "item": {
          "id": "4cf98d93-d750-42be-8486-e204b9db73bf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c413c543-9a3c-44e5-817a-2393f413bef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f289e603-7567-48b3-8aee-054ada9a59d2",
        "cursor": {
          "ref": "2ece54f5-f1aa-45dc-a5ad-8c5b1f6654f8",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b2f8867-72ab-450f-8139-d658d4606a4d"
        },
        "item": {
          "id": "f289e603-7567-48b3-8aee-054ada9a59d2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b3a34ec6-0c76-42f5-9b11-d6c9f73c40b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2d15df-75db-4282-9941-f1be6a46855d",
        "cursor": {
          "ref": "a9ae97a1-a883-45fc-9ba2-b80e774ba2bb",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9a1ed0f5-f1c6-4cfa-a92b-6078d4f60810"
        },
        "item": {
          "id": "9c2d15df-75db-4282-9941-f1be6a46855d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0d81309d-2813-4ae4-b170-4f3a773a9104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6512a1d9-aa11-4d5e-beff-43b78ed4a6c8",
        "cursor": {
          "ref": "0128bfb7-1b58-4b08-b652-f3342dbdec10",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "075ccf34-a7ab-4cec-8aae-4a66d04f22de"
        },
        "item": {
          "id": "6512a1d9-aa11-4d5e-beff-43b78ed4a6c8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0f9d1dc1-f3dd-40d0-b659-1fd2a1967db0",
          "status": "Created",
          "code": 201,
          "responseTime": 3689,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "6a947b65-7383-4e09-a0b0-615b8cdfca57",
        "cursor": {
          "ref": "71864eed-8190-4203-bc14-aa9c9fe5d414",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7aa220e2-2f50-471a-a614-e3da77ffd7a6"
        },
        "item": {
          "id": "6a947b65-7383-4e09-a0b0-615b8cdfca57",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "d1784a1f-b0ba-416d-a802-4eef6983d5d8",
          "status": "Created",
          "code": 201,
          "responseTime": 4409,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "2c4b5a3d-fff2-4b97-81a2-20f76aee3199",
        "cursor": {
          "ref": "f2da0123-32c3-4480-ba0d-32061c4ec328",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3e3ad709-615a-4ff3-81a2-3316d9f26f16"
        },
        "item": {
          "id": "2c4b5a3d-fff2-4b97-81a2-20f76aee3199",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f586b55e-646c-47d1-b1aa-ba317239dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1c70e-3d17-42d9-b6f9-dc4fe2f7bc25",
        "cursor": {
          "ref": "35e8b175-de8c-4ca6-b3ce-5274f17ab123",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "48ae7d95-b274-47bc-bb5e-50f51abdfd9d"
        },
        "item": {
          "id": "e7c1c70e-3d17-42d9-b6f9-dc4fe2f7bc25",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5a56f2b4-f22c-4a25-a226-ac3e321dba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9239d4-3d9b-40d7-a51d-721059a9e600",
        "cursor": {
          "ref": "c0364d1d-e5d7-4e3e-92e8-58662ed682a1",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fe3bc90b-3b1d-42a0-b2cf-6dff9d1c355c"
        },
        "item": {
          "id": "7d9239d4-3d9b-40d7-a51d-721059a9e600",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "16d240b6-d6bd-412e-baab-c314e97f18b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5379d624-60cc-4dfa-b87a-079711d54ea9",
        "cursor": {
          "ref": "adfd69e0-2775-4829-998b-9befa7f2b023",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3d7d0564-ef22-4d14-9bf6-e4c46b0172e0"
        },
        "item": {
          "id": "5379d624-60cc-4dfa-b87a-079711d54ea9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7a56386f-9cee-4d79-b76b-7ba21141153b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cde9ec-f46f-4337-9150-b4580c64e17a",
        "cursor": {
          "ref": "2885ec9f-62c6-418d-b81f-af2c83533e3d",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a1d0f447-e100-443c-a899-451a0d2d883f"
        },
        "item": {
          "id": "f0cde9ec-f46f-4337-9150-b4580c64e17a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "517d5e93-1524-43ea-84d6-bbf9b89af8a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ea6862-d11b-496a-85e2-73f0cc6c18e9",
        "cursor": {
          "ref": "3b48594d-5c6e-43a7-ada6-4c929a60ae73",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1cf443b3-fb6e-4caf-97a7-ebd646a466e5"
        },
        "item": {
          "id": "01ea6862-d11b-496a-85e2-73f0cc6c18e9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a427b295-99aa-49d6-8fae-e21eed794392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b88ac05-9f46-4201-9c55-75e0ab3afff6",
        "cursor": {
          "ref": "b2dba7d4-0a6f-4897-b4b0-33cc9bac7b3b",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "451e51f0-4fe1-4bf4-8e62-cd42148d4df1"
        },
        "item": {
          "id": "2b88ac05-9f46-4201-9c55-75e0ab3afff6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "303dd1e4-2bff-4900-b143-7e9034900035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38255f6-f49b-4c01-8bae-eff30aaf1cd7",
        "cursor": {
          "ref": "f5713bc8-384a-42f6-a59a-1cadf17dedc9",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0990ea16-0d24-4f42-a31a-f3d8dd44d76c"
        },
        "item": {
          "id": "a38255f6-f49b-4c01-8bae-eff30aaf1cd7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a8018b04-d5cc-42ac-8ef2-49949355662e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943f0c1a-fa78-4f8f-93f9-534b8265324b",
        "cursor": {
          "ref": "97c9f7da-4a2b-405c-869f-af1eb244a3de",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c23cdd19-9f69-44a0-89f2-db66bbd1743b"
        },
        "item": {
          "id": "943f0c1a-fa78-4f8f-93f9-534b8265324b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6967a4dc-487b-414f-9fc3-852f0cfedf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046e13f0-0621-4232-8d47-5bef6dd9a036",
        "cursor": {
          "ref": "9209a0f5-f7f4-48c9-9ac7-8656f6dec6ef",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "87c842b4-7fe4-43bf-a26f-a466755c67e0"
        },
        "item": {
          "id": "046e13f0-0621-4232-8d47-5bef6dd9a036",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "276c8702-679f-4074-9e77-7d09a6867497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811f53c1-83f8-40b3-b30d-6e1e799e92d6",
        "cursor": {
          "ref": "92db176d-acc4-455b-8afe-6f19d9b4f709",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8b8effe2-5d9e-4aa5-8bb8-0e925ba28657"
        },
        "item": {
          "id": "811f53c1-83f8-40b3-b30d-6e1e799e92d6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f3aebd5b-eda7-435d-b73a-87a95e947951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9bd5aa-eaba-4b9b-95a5-f752f847383b",
        "cursor": {
          "ref": "cad6da7e-2576-4305-8d16-f0010738111f",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0c3ba794-5e63-4382-a5d9-6e4051f15470"
        },
        "item": {
          "id": "2c9bd5aa-eaba-4b9b-95a5-f752f847383b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "573ced32-abd8-4112-834a-fe2a45fb5003",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1933,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "a2c9f601-6718-42b7-a976-5682fb46b070",
        "cursor": {
          "ref": "2c21d95b-5568-4bad-b515-551fe1118980",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "40b761f1-7b4a-4f46-938d-ee4fc4d715a5"
        },
        "item": {
          "id": "a2c9f601-6718-42b7-a976-5682fb46b070",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e94c573c-ba3e-4909-a5d5-a19024cef9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f954c46a-aaa0-459a-9c45-05ee94c747e3",
        "cursor": {
          "ref": "125e1355-9ed6-4105-8202-01c34cb30701",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1f3170d3-34f3-470d-a827-de22e88abf38"
        },
        "item": {
          "id": "f954c46a-aaa0-459a-9c45-05ee94c747e3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "de2a58ce-a868-4d34-85f0-4f2265790458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4976af58-6089-4f57-83fd-2385c9e35b85",
        "cursor": {
          "ref": "b52dba45-d875-4070-893b-ffb5cf1a4f85",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0b42540c-34c0-4fa6-bed2-286693a6468e"
        },
        "item": {
          "id": "4976af58-6089-4f57-83fd-2385c9e35b85",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1c00aefa-e424-4ed7-a238-8e3e3e2a357b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991ad913-6454-4ac2-8c6a-b3c7fa2f7b22",
        "cursor": {
          "ref": "13163e6a-b05d-4d86-b2e8-3d27cba8ac0b",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f8431938-6bf3-4b1f-ac72-4ccf30d8fa96"
        },
        "item": {
          "id": "991ad913-6454-4ac2-8c6a-b3c7fa2f7b22",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9db8155c-b9df-478a-ae1b-0b2d788f6ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efefd7d9-db14-48de-965a-341f1ce696e5",
        "cursor": {
          "ref": "2f9e1219-8011-4fe4-b45c-a8dd400acac8",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3e3c1000-2f1d-4069-b407-93f6a6a637fb"
        },
        "item": {
          "id": "efefd7d9-db14-48de-965a-341f1ce696e5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bceaa688-2152-4a4d-88d2-b9be3a6c50f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d20d36-515f-4163-bca9-95dbf93aadef",
        "cursor": {
          "ref": "2efd6b70-7a9f-40f6-8d4d-29b98b578cc1",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0ada2d28-76ad-478c-a49c-183bd9fc982e"
        },
        "item": {
          "id": "e2d20d36-515f-4163-bca9-95dbf93aadef",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2da085f2-66dd-4405-a83c-8d57e7936e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02774195-45fe-4204-b359-08646e4dcffc",
        "cursor": {
          "ref": "d87f9c93-ba40-4e84-91e2-addbfee076c0",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3048a287-72b2-470a-87cd-d566d8513c1c"
        },
        "item": {
          "id": "02774195-45fe-4204-b359-08646e4dcffc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "474784a1-4d0b-45a2-86a1-9586e53239e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c67f876-8d50-4cdb-9329-95599e03841c",
        "cursor": {
          "ref": "92148c13-dddd-4347-981a-5d75b9610d06",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dc62b520-9a33-4288-858c-016825c3b105"
        },
        "item": {
          "id": "7c67f876-8d50-4cdb-9329-95599e03841c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1aed201d-60b4-42c1-9631-14ef020ec40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70904db0-a6db-4dff-94b4-cb0e2280c340",
        "cursor": {
          "ref": "b98c855f-3f2d-4e24-aedf-b4813d648743",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3aee5d5e-1501-4cd7-8345-3d3c4066c702"
        },
        "item": {
          "id": "70904db0-a6db-4dff-94b4-cb0e2280c340",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8450dd57-7253-4983-8e59-5258fb4a1e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31260ee3-f85f-4330-bbbc-5f7816bbbb1a",
        "cursor": {
          "ref": "4feee87f-49ed-428a-be67-d87cc0c47348",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6b4b72ad-b0dd-4e3f-9cf7-08122ab1c029"
        },
        "item": {
          "id": "31260ee3-f85f-4330-bbbc-5f7816bbbb1a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "acccd25a-3f5f-4c63-a54a-d50e8781afa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee095e20-3227-43be-94fa-a36c7e9a7ded",
        "cursor": {
          "ref": "9975b52f-aa66-436e-bb96-e9ed8258e009",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dbd608e7-3599-4b57-92e9-f2cabb6dc262"
        },
        "item": {
          "id": "ee095e20-3227-43be-94fa-a36c7e9a7ded",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "32e30da5-6277-48bc-b161-8392d4c524fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3fd6c1-0a4f-4e99-aea4-1fdc61636692",
        "cursor": {
          "ref": "4201851b-5d21-4192-a6d9-95bcb244eb61",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "43260c0b-db5f-467f-b0b1-cf54e98b4896"
        },
        "item": {
          "id": "dd3fd6c1-0a4f-4e99-aea4-1fdc61636692",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "51842d89-f1f3-41b2-8151-cd35077ec98d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 794,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f9c040-3130-4ac4-9b14-c84bd4931b94",
        "cursor": {
          "ref": "cd0fa15c-e2f5-4613-b981-ce6e111ff1e8",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b05f357d-0f56-4f8e-a37f-f7d9b52018fc"
        },
        "item": {
          "id": "c5f9c040-3130-4ac4-9b14-c84bd4931b94",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ebc1bc91-0f2e-453f-9732-75d4d392a989",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 521,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "848d48ad-6242-40d3-af43-29ae2845298c",
        "cursor": {
          "ref": "fead9e22-5d6f-4be1-8d79-4db8e41f35c0",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "212fc7ce-0c00-42d8-bc40-a48bcd302458"
        },
        "item": {
          "id": "848d48ad-6242-40d3-af43-29ae2845298c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "923a5d08-c139-4f9e-b1c4-a8ce8d8bfe71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d58ff18-3ac4-4add-9e27-8a8f0b5fa72d",
        "cursor": {
          "ref": "00c0c238-fe48-4f60-865d-b4b1ed9d1f0a",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5274865c-7cb2-4921-9826-108521ea3710"
        },
        "item": {
          "id": "8d58ff18-3ac4-4add-9e27-8a8f0b5fa72d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "85adfa84-38ce-4dd0-a0cc-acb894437c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee71f32-cb61-4ab9-81eb-904dce7fafd1",
        "cursor": {
          "ref": "7e8793bc-0ac7-4afd-8998-c498a9773462",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fd327eed-1a2a-44c3-8809-f14865573c2f"
        },
        "item": {
          "id": "1ee71f32-cb61-4ab9-81eb-904dce7fafd1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7f28a0ce-419e-4202-93fd-69a6f1d01237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026716ec-033b-4a08-b642-33fe8abc23ce",
        "cursor": {
          "ref": "cc7abe16-0aa0-4797-996a-38a283633da0",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fc7a354b-2c8c-4e08-8ebc-ea40613b5be0"
        },
        "item": {
          "id": "026716ec-033b-4a08-b642-33fe8abc23ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6069d977-5483-4ea7-b39e-8a9dbfd4813a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21993ee-2a8a-451a-a39f-61758b33505c",
        "cursor": {
          "ref": "8195dff6-d0b2-4508-8688-d01347e634f3",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "57914768-dbe6-4e0e-a4ba-501163dd65b2"
        },
        "item": {
          "id": "a21993ee-2a8a-451a-a39f-61758b33505c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "da61f45e-d1ae-4716-8b2a-90c857f8b843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b808fc0-ae25-4ad1-809b-f3e6e9f983f7",
        "cursor": {
          "ref": "5c119d2a-dd01-4509-9046-6baf52b0c8b9",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "269571de-c35d-4731-b8af-9771629fe5e7"
        },
        "item": {
          "id": "3b808fc0-ae25-4ad1-809b-f3e6e9f983f7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "986e9980-8320-47d8-b830-968ceb363d29",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 562,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9f15ed-66e8-4c2c-be6e-74321b926779",
        "cursor": {
          "ref": "3772ef56-27c5-476a-9e4e-f0ffc97617a8",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5603b86e-99a1-48f6-8aa7-1f88f2289586"
        },
        "item": {
          "id": "9f9f15ed-66e8-4c2c-be6e-74321b926779",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6a0a7545-abed-4e31-aa27-5a4453131439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfbebb0-f408-462a-9617-456294f64bd2",
        "cursor": {
          "ref": "2f057b8d-782d-42f4-a3d2-4b74a1d21784",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "44d20934-091c-419d-b61f-fc3611e540fa"
        },
        "item": {
          "id": "8cfbebb0-f408-462a-9617-456294f64bd2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6c5108be-2fed-43a0-895a-c2daeef52e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39dabab-d410-4e94-b25d-6705e7b1a9c1",
        "cursor": {
          "ref": "09267361-a484-4e06-821e-48c2aee4f4c4",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "85e153a9-6830-47c3-abf2-89f798a06584"
        },
        "item": {
          "id": "b39dabab-d410-4e94-b25d-6705e7b1a9c1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8a0efd59-0db0-44a7-899b-e8e56eee0db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fac32c0-8ae0-4a57-aa2a-12ecc87575f3",
        "cursor": {
          "ref": "d6231acd-832f-478c-be06-5f163a29a2e2",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ba7dbdb6-22ab-4c0f-ab0f-a92fe6348362"
        },
        "item": {
          "id": "4fac32c0-8ae0-4a57-aa2a-12ecc87575f3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dea48c0f-27e1-4af2-a720-e626bba2a1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e255c79d-ae78-44af-aabb-0e3a9e76201b",
        "cursor": {
          "ref": "ac3decd0-8135-490d-b11d-b2c96b7a5c9c",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "684abace-9f0e-4769-a361-70c67545f541"
        },
        "item": {
          "id": "e255c79d-ae78-44af-aabb-0e3a9e76201b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bcfb56ea-1fbf-4f32-a4f5-ee2b41a86598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5a7ae9-408b-45a8-a26e-d1e495c765c0",
        "cursor": {
          "ref": "6427cf92-3db3-44a3-8645-c1166b9ca61d",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ac59eee8-9c7c-4df7-9e11-37c1ddb9b907"
        },
        "item": {
          "id": "8f5a7ae9-408b-45a8-a26e-d1e495c765c0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e877ac84-6e05-406d-a4d9-485fa0ac870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec23c93-5270-4e16-8d4a-f79228194332",
        "cursor": {
          "ref": "948634ea-67ab-4e93-aba7-e8ecb877f03d",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b1de828a-486c-4d73-b229-29300d7e4d66"
        },
        "item": {
          "id": "6ec23c93-5270-4e16-8d4a-f79228194332",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "623632ed-92f7-4770-bee6-fd42e8d901f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413fa5cb-df8a-487f-bbff-68ce6f039ab4",
        "cursor": {
          "ref": "03b486e0-57be-4813-bbdb-0ab7a1ebaf73",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5fed6a26-3dcb-4af4-a65f-dd81fd8673d5"
        },
        "item": {
          "id": "413fa5cb-df8a-487f-bbff-68ce6f039ab4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b68fa36e-2ae2-42a0-b085-d7902165e265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0837e144-81ae-4df7-a031-535a32f4f778",
        "cursor": {
          "ref": "309a8284-454b-46b7-88a1-fea96dd26389",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e3c1e662-c4b6-4498-835e-d72c9f0b6b02"
        },
        "item": {
          "id": "0837e144-81ae-4df7-a031-535a32f4f778",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1e43fb0c-6ef1-4a0d-a252-c43606e34b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faf6d4e-c572-4e0e-8b36-f33609a19f26",
        "cursor": {
          "ref": "2503a681-8b1c-420e-8b92-f787bffdd8f2",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4663906d-16fd-4aad-b119-3487930af3f2"
        },
        "item": {
          "id": "6faf6d4e-c572-4e0e-8b36-f33609a19f26",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0443b486-df2b-460f-b82f-64d76a857e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bea2772-03da-44a3-8aa8-e6c866e0405f",
        "cursor": {
          "ref": "db4188a8-7bbe-49d0-97c3-e235a2992029",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "864b6a2d-4464-4525-87ac-d8fa58cb1bab"
        },
        "item": {
          "id": "7bea2772-03da-44a3-8aa8-e6c866e0405f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2c67867e-9d56-4bcd-a892-c1cb39d4127e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2031f0a-7f79-4a9e-bd79-05a318cf35cd",
        "cursor": {
          "ref": "45193303-63db-4940-8e49-7074dae1ccd3",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0fd77d5d-0b42-4e7c-a8fa-6d6026864e95"
        },
        "item": {
          "id": "c2031f0a-7f79-4a9e-bd79-05a318cf35cd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ada38d76-e5a2-41b4-951e-566e1b64059d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01bbbf6-50a7-465f-987d-942d6659402e",
        "cursor": {
          "ref": "0eacc464-cfb5-41e1-81c4-1ec7f982ea2f",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b93ccd6d-5c92-493c-bc90-79f02f7b3d39"
        },
        "item": {
          "id": "b01bbbf6-50a7-465f-987d-942d6659402e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6a0567fc-d3cb-4d38-8356-2b6a37e95e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363c2edf-e7b6-42db-96d1-4c1c73a2bdb3",
        "cursor": {
          "ref": "bb9feb1e-d5ed-4565-9474-40728a50b0af",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a8a50de-e08a-4cf4-a6a4-0f2aa150446b"
        },
        "item": {
          "id": "363c2edf-e7b6-42db-96d1-4c1c73a2bdb3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bca3daf3-27e3-40f5-a19b-ba15c68d5903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1be0076-f19f-4db9-bcf4-0350af795065",
        "cursor": {
          "ref": "ec788fe5-9f8b-4879-ac65-43a79a6d1281",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6f0da773-c145-4559-bfdb-f7b94b8a362f"
        },
        "item": {
          "id": "c1be0076-f19f-4db9-bcf4-0350af795065",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8aa6e2e1-d3f8-4ef4-b669-ef31ae6710e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584aeb06-cf6e-4e9d-8861-37f412b26b33",
        "cursor": {
          "ref": "3b88dc12-b92f-4d6d-b2cb-30d81567163a",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2d569848-dc9a-4ec2-b11f-76c0b14af7dd"
        },
        "item": {
          "id": "584aeb06-cf6e-4e9d-8861-37f412b26b33",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "16a5a2b7-30c0-4580-89e0-0775b1a2b8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3029e03b-aff7-4399-a5d5-3a5f79ed01cb",
        "cursor": {
          "ref": "bf38db5d-d75a-4b9a-a9e0-cf0a3195fd7c",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7148c56e-bfba-4b6f-b0e5-6c0300580917"
        },
        "item": {
          "id": "3029e03b-aff7-4399-a5d5-3a5f79ed01cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "84edbcc3-86a9-4460-841d-c8e38a99b79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9d7d1f-8225-4c04-8d9b-bb9be33e9029",
        "cursor": {
          "ref": "aceb99e6-76ac-44b6-a8db-f175d43319d6",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f9461bc-1fe1-4a45-8ee0-bfbd88fc9f17"
        },
        "item": {
          "id": "af9d7d1f-8225-4c04-8d9b-bb9be33e9029",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b9b7354c-adc8-4f7a-8a62-0d5e5532d718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cf95cf-88bb-4ce9-aa13-94f58ba6f8f6",
        "cursor": {
          "ref": "fa897c92-443b-46d0-986b-15edafd21619",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ddf8e8cf-9bc4-4875-8bf1-d26713a4508b"
        },
        "item": {
          "id": "c6cf95cf-88bb-4ce9-aa13-94f58ba6f8f6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "221407b3-628a-42ad-98c9-355aecd689fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d68ed0-39e6-48c9-aaad-61923550618a",
        "cursor": {
          "ref": "f21dea8f-6bcb-4f77-b69e-8b2994dddf77",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0b2c52ea-f72a-458a-82d1-b26460172b98"
        },
        "item": {
          "id": "b2d68ed0-39e6-48c9-aaad-61923550618a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1c6178c5-cfb8-45ac-8936-b55ec69e6645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b7182d-a07a-4529-b8d9-9e51d1453f83",
        "cursor": {
          "ref": "6abf2f0b-edac-4a4f-b5fc-4fc221e5fefb",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ae74738a-b295-4069-a7cd-1f39a694a3b4"
        },
        "item": {
          "id": "e7b7182d-a07a-4529-b8d9-9e51d1453f83",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c75d458b-0c22-430e-ab5d-8c77a57ad635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deaba3c-b2e7-400b-9202-ec942b5b9ef5",
        "cursor": {
          "ref": "8dc02d56-922c-42c1-86a3-950f99815db6",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "98e0d38d-9752-483b-ba5d-762ceeeac66e"
        },
        "item": {
          "id": "9deaba3c-b2e7-400b-9202-ec942b5b9ef5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ce7a1d6d-481f-4a1d-a04e-e32c475ed9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbfa77c-2a63-475e-a718-b1a01a977994",
        "cursor": {
          "ref": "4e2a9933-9392-4570-9dd8-cab70505c23e",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "af3f2fd6-d667-4024-b257-18b4f573c3bd"
        },
        "item": {
          "id": "9bbfa77c-2a63-475e-a718-b1a01a977994",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0e8e0d2e-affb-48f9-9d20-58902558da16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52a1c1f-e735-4ddc-8c70-cfc4065c2c04",
        "cursor": {
          "ref": "6d488e43-7603-4e6c-9c12-957ac2ab1423",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d7e0f93d-5602-4952-875a-805b1baedeca"
        },
        "item": {
          "id": "c52a1c1f-e735-4ddc-8c70-cfc4065c2c04",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e0bc1ba1-1c03-4eab-9816-ac55a9e5ec5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057d37ef-954f-49cb-971a-f97e34b503b7",
        "cursor": {
          "ref": "23e4ef45-5440-4e1b-b1e9-19acb44f3768",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ae97df91-ab57-4888-8f44-296acfdd98c9"
        },
        "item": {
          "id": "057d37ef-954f-49cb-971a-f97e34b503b7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9280f21d-aa36-4797-afe0-1448cead217c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082b3cee-e5c6-45d8-8bd5-3748fab52ee7",
        "cursor": {
          "ref": "f8f5facc-cb93-410d-b754-a09c2dfca699",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5527458c-b6f6-4c1b-989e-31820c590d45"
        },
        "item": {
          "id": "082b3cee-e5c6-45d8-8bd5-3748fab52ee7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4c36e68f-ba2d-415a-9ee7-a5ecfb7e9777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9151420-d2d6-4b47-a68c-3f146df91cea",
        "cursor": {
          "ref": "257c21ed-8204-40aa-af8d-fd2002079cb1",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aab2b4d7-7741-4148-b601-c7e9470efffc"
        },
        "item": {
          "id": "d9151420-d2d6-4b47-a68c-3f146df91cea",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a2b00ade-395b-444c-a0bf-f0669a854eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c31a638-da98-43d4-b376-12ce56b44443",
        "cursor": {
          "ref": "5c89a41c-2a95-497b-b0ff-812d8ffd5a0a",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a5ff1a69-d4d3-4103-aa09-fe8f5538e80d"
        },
        "item": {
          "id": "1c31a638-da98-43d4-b376-12ce56b44443",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2733ab33-0617-46b5-9689-445913842769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673135b8-9782-44ad-9234-bfe151024828",
        "cursor": {
          "ref": "d95d6a05-a750-4b2a-8b06-cb90ea73a813",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "239449fa-a6d5-4fe9-b7d9-db59924f7e54"
        },
        "item": {
          "id": "673135b8-9782-44ad-9234-bfe151024828",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b1aaf34b-ddd5-42fa-b695-b5925b1950b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb474fd8-cb9d-42a1-b077-3c3cc8f96713",
        "cursor": {
          "ref": "47e2c355-3d6a-4650-bc48-e9019f179180",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a0d59196-8eaf-4cec-9b11-6807bac95f99"
        },
        "item": {
          "id": "bb474fd8-cb9d-42a1-b077-3c3cc8f96713",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e3878b7b-5098-41ca-b17f-08a8ebbca534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f552bb-6b62-472a-8b33-f9aab16f29a1",
        "cursor": {
          "ref": "74f0aaf9-d38a-4754-8b2a-51fd0425ea10",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e28cc6fb-236a-4a6d-a607-f52fb1e381aa"
        },
        "item": {
          "id": "04f552bb-6b62-472a-8b33-f9aab16f29a1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7a1f2c00-5293-458d-9cc7-5252a529ed57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23d30e4-4b96-4ef1-9df1-24aaaf02e49f",
        "cursor": {
          "ref": "6eb8708f-f066-4672-b96c-48983615bf66",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "15475709-42a3-48d6-bc0f-855ad6effc80"
        },
        "item": {
          "id": "d23d30e4-4b96-4ef1-9df1-24aaaf02e49f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3df5d603-a928-4fec-92db-13fac55c70c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fd11ec-4867-4e8d-ad41-17a819614d57",
        "cursor": {
          "ref": "e33e8f5c-23e7-47bb-9e2d-d962489ce08f",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ac362036-4949-4999-8d66-1aee7467fb73"
        },
        "item": {
          "id": "66fd11ec-4867-4e8d-ad41-17a819614d57",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e76c0de2-7e34-439e-8b7a-e9110233d459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404ca941-016e-4858-9282-c12b18771ceb",
        "cursor": {
          "ref": "f37d70ab-9e83-4d7b-a318-1a2061a15323",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b30a2a8d-9003-49b4-b92b-5643178f166b"
        },
        "item": {
          "id": "404ca941-016e-4858-9282-c12b18771ceb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a215f27b-35d7-4b5a-8ff5-41a76462cb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74b0a6-0356-409a-98fc-c7b0906d6e87",
        "cursor": {
          "ref": "7b23f9d5-479a-45f8-9aa9-cfa4fb750ac2",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5d92d15f-9d79-416a-8c6d-8795e78033ca"
        },
        "item": {
          "id": "bd74b0a6-0356-409a-98fc-c7b0906d6e87",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5ad4785f-2e70-49f4-bfbb-bfa15ddd4427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88365a92-4039-4c30-887c-dfa417e202fb",
        "cursor": {
          "ref": "3391b8a5-8d41-4f21-94c6-c5339855a35f",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "27400fe2-4416-4589-8b96-34fc986cffce"
        },
        "item": {
          "id": "88365a92-4039-4c30-887c-dfa417e202fb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8f39b8d9-d2c3-4184-8055-cd4e9f80fde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61cee66-237d-4b49-82f5-6bae88498ba8",
        "cursor": {
          "ref": "ed54ae1b-931c-44c8-a067-9f582f6a242c",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "23977f2c-f6aa-41e2-88d2-3d7bb6463232"
        },
        "item": {
          "id": "d61cee66-237d-4b49-82f5-6bae88498ba8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "07ea6e5e-32bf-4176-a85c-475d6fb33adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6614f9-0756-40da-b600-615acbb14ef8",
        "cursor": {
          "ref": "b858d14b-eaf0-4786-a791-c3233c88b128",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "71e65b7f-57f7-443d-9863-b5e01b66703b"
        },
        "item": {
          "id": "1e6614f9-0756-40da-b600-615acbb14ef8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2922edfa-0d8a-4425-a77e-609d4a9b7611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8f905c-ddca-4c9f-a64f-6395fc962264",
        "cursor": {
          "ref": "970dc61a-011a-4aac-8ecf-2868ee85413e",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9768873c-6926-4d0f-922c-acd8d8e2accb"
        },
        "item": {
          "id": "5d8f905c-ddca-4c9f-a64f-6395fc962264",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2c224206-b6f7-4cfa-a0f1-e79effee3cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97388e10-011f-4c51-a2a3-dc855bbfae4f",
        "cursor": {
          "ref": "60e25332-d1a5-4598-9a6f-f162ec67046c",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9f548b1f-48c5-4621-81e8-8bdb5cac25d7"
        },
        "item": {
          "id": "97388e10-011f-4c51-a2a3-dc855bbfae4f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "53ab5620-f33d-4379-917c-d55cee9c475f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da4d01e-29c0-4c9e-b7e7-5bfc28532708",
        "cursor": {
          "ref": "fe818deb-f767-4be5-9b73-a823654bba69",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fe268526-37f0-47eb-afb5-86077d7f8ece"
        },
        "item": {
          "id": "1da4d01e-29c0-4c9e-b7e7-5bfc28532708",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c54bdae6-95af-49f7-a0b8-2251e231375a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169b8dda-6250-4dd1-b1e2-3db96aadc32f",
        "cursor": {
          "ref": "c7d2e195-4afe-4029-827d-e1bdf7a4a244",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "17f3f016-77f1-4a57-a627-af50e3420296"
        },
        "item": {
          "id": "169b8dda-6250-4dd1-b1e2-3db96aadc32f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "862f14cf-cc3b-4a8e-8429-7b91ffcc994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbad0ea-4260-42fa-9f41-6b9ee837570e",
        "cursor": {
          "ref": "c595698b-58c4-475f-a95f-61bf4f43f862",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2f7f6939-85d0-4ffa-b669-ac3927659cc3"
        },
        "item": {
          "id": "cbbad0ea-4260-42fa-9f41-6b9ee837570e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2f48ebd2-29c9-4d3d-9755-c2bb9296c662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3db93a-5c1e-4bd4-876f-86a3bee6d951",
        "cursor": {
          "ref": "659ea453-43a6-4fcf-9b41-2ab148314eda",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "612cfc44-269a-40c0-b43a-78513131607b"
        },
        "item": {
          "id": "6e3db93a-5c1e-4bd4-876f-86a3bee6d951",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d803c5be-5e25-4a84-83de-c5f357110282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93be9d41-fd34-46f7-b40a-811c86ce654f",
        "cursor": {
          "ref": "f0f94993-0a58-42cd-9d9f-85c0533b7478",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "926eccd7-0f94-4cda-b46a-0f2b6918f679"
        },
        "item": {
          "id": "93be9d41-fd34-46f7-b40a-811c86ce654f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e5ca7572-ddc1-46b9-bf0a-608b5b53f66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4e6c33-c3be-4c30-baba-173221f9cca7",
        "cursor": {
          "ref": "e991b1cc-783f-4f7f-9770-fd202f5027d5",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "964e90f4-cb76-416b-add2-8173a77d1838"
        },
        "item": {
          "id": "bf4e6c33-c3be-4c30-baba-173221f9cca7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cd0d8e49-bc74-48ba-86f4-ffe76ad34c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c37a1c-555c-43ff-9ad6-fd64471af7fe",
        "cursor": {
          "ref": "1d9e91ef-f0ff-4f0f-91bf-53ab84ca749c",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e74c81f4-e539-4548-82cd-50daa446486d"
        },
        "item": {
          "id": "36c37a1c-555c-43ff-9ad6-fd64471af7fe",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0dc17a0c-32e1-4cb8-b512-7d80dfc7830f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b622dee7-9f2e-42a0-a12e-a9ef26b08ce1",
        "cursor": {
          "ref": "3a80acdd-cb7f-4a10-a7ce-454d6959febc",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1d6b864d-38b7-4107-9b38-4ffb47b44fc4"
        },
        "item": {
          "id": "b622dee7-9f2e-42a0-a12e-a9ef26b08ce1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d6649ca6-a4d2-494d-a884-dbe7c3c350ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c138fb3-3dd0-4991-a745-a8bbbac9a43c",
        "cursor": {
          "ref": "2f4f61f9-d709-4f87-a2a0-378867a8572c",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "81b9d9b5-3162-403a-9164-2cacf70c9418"
        },
        "item": {
          "id": "9c138fb3-3dd0-4991-a745-a8bbbac9a43c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fc2dd9cf-8a98-41f3-8e9e-fc304c9057a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5434cea4-599c-4d7d-b393-2ca1af8fb011",
        "cursor": {
          "ref": "ff468135-4f28-4993-b1a3-0afb4d6ecdbc",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7cad6989-5cad-4f18-913d-0750ad0fd1d4"
        },
        "item": {
          "id": "5434cea4-599c-4d7d-b393-2ca1af8fb011",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fb20c59d-0958-4285-a6de-781c1db1afe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6b3024-c189-4d25-961d-a101989e0e16",
        "cursor": {
          "ref": "a9466e51-ca90-4e73-a1f5-46ef304dc9e7",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ea900db3-baef-4882-825d-8e3076ac28ab"
        },
        "item": {
          "id": "fc6b3024-c189-4d25-961d-a101989e0e16",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ebef02bd-28e8-4236-acfb-bbe2fadf7fdf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 571,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d75cf2-925a-41a8-93ba-2e7903653014",
        "cursor": {
          "ref": "737e051f-34f6-4008-a6d1-1442339b1c96",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d4f8803b-d007-4d7b-a045-4c2011e39474"
        },
        "item": {
          "id": "53d75cf2-925a-41a8-93ba-2e7903653014",
          "name": "credentials_issue"
        },
        "response": {
          "id": "88659fa0-f94b-4f61-a94e-a2ab0875a7a2",
          "status": "Created",
          "code": 201,
          "responseTime": 3968,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e541956-3df1-4224-8766-263975e2aeae",
        "cursor": {
          "ref": "58119dd6-2ce3-4b2e-aff2-061da91631ef",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e105c732-3f28-4c86-9c0c-9fd022b7ce1a"
        },
        "item": {
          "id": "7e541956-3df1-4224-8766-263975e2aeae",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09dca049-d54d-4714-bcac-c668c7bf85e3",
          "status": "Created",
          "code": 201,
          "responseTime": 3715,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "015ae246-5418-4dd9-b8e8-1b43d0c08c0e",
        "cursor": {
          "ref": "52c5ac74-446d-4839-a7b0-7e05d3e7f3b8",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a3379854-f6ce-4f3f-8b29-8b718eacb4e7"
        },
        "item": {
          "id": "015ae246-5418-4dd9-b8e8-1b43d0c08c0e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e8df5528-0016-4064-9f93-7e3c53a89c72",
          "status": "Created",
          "code": 201,
          "responseTime": 5350,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f8aa6-817f-4e5d-b9b6-81f5bd38b15f",
        "cursor": {
          "ref": "3937e0ab-2844-4404-8063-d408d1bb958f",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ecc13277-ad55-4506-8f62-c428c6ac14b1"
        },
        "item": {
          "id": "ec0f8aa6-817f-4e5d-b9b6-81f5bd38b15f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "58c3d618-eda5-435a-8838-556856debb98",
          "status": "Created",
          "code": 201,
          "responseTime": 3779,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "38aed690-7495-4d00-ab1f-10706060bc9b",
        "cursor": {
          "ref": "d80b8666-12d4-4e67-b946-3e21d92d7b80",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a5f4b47-a24e-479e-a9cc-3775604539b2"
        },
        "item": {
          "id": "38aed690-7495-4d00-ab1f-10706060bc9b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d65913c0-448c-4a56-9fe9-c38195b80bc0",
          "status": "Created",
          "code": 201,
          "responseTime": 6262,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64aa047-3ab2-4930-9230-774fc1ee5ea5",
        "cursor": {
          "ref": "aa23064b-dc6e-4fef-a2b4-d794881c0a89",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dcb4a7a9-116d-4302-a8ab-7577d4ce5cb1"
        },
        "item": {
          "id": "e64aa047-3ab2-4930-9230-774fc1ee5ea5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cf2ecb51-31dc-4ba4-bcd0-c20c886afe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64aa047-3ab2-4930-9230-774fc1ee5ea5",
        "cursor": {
          "ref": "aa23064b-dc6e-4fef-a2b4-d794881c0a89",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dcb4a7a9-116d-4302-a8ab-7577d4ce5cb1"
        },
        "item": {
          "id": "e64aa047-3ab2-4930-9230-774fc1ee5ea5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cf2ecb51-31dc-4ba4-bcd0-c20c886afe21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54146b3-344a-4316-9478-402c6d29577b",
        "cursor": {
          "ref": "98efce36-8434-43e2-9fe3-7228ec37a109",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5d4a3adc-ee02-4572-9eb3-336bfdce2deb"
        },
        "item": {
          "id": "e54146b3-344a-4316-9478-402c6d29577b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0114f8f8-d1ac-4e28-a8f0-9f17b4472523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7811b083-591d-4e83-b7c3-00bc6217f14d",
        "cursor": {
          "ref": "29cdff8e-f390-4736-bbf9-de5bf4d16934",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4f71cc4f-a0a9-4212-bffb-be2c9b0beaa4"
        },
        "item": {
          "id": "7811b083-591d-4e83-b7c3-00bc6217f14d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9ea7ac4c-13fc-4397-93cb-e861fcf9349e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f353a6-4400-4853-a539-08e3aad6c782",
        "cursor": {
          "ref": "e520c734-0281-4401-a3c8-3a3e386eedc2",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3d31aaf1-340c-4300-a3a1-89bf32ceaefd"
        },
        "item": {
          "id": "f2f353a6-4400-4853-a539-08e3aad6c782",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "00b03704-9042-4022-bb6f-dc7a773b1675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0041cc11-21ad-44e5-bcc5-42b8366d9750",
        "cursor": {
          "ref": "9d94b7b7-ae1d-453c-bc06-3dbf5d64e82c",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "92d728fe-f31f-4db8-a4ef-ea38fd873511"
        },
        "item": {
          "id": "0041cc11-21ad-44e5-bcc5-42b8366d9750",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "87528785-d5e7-45af-b864-46d978b310f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b21139-758c-4885-bb39-92327df3f137",
        "cursor": {
          "ref": "12d2ce18-f714-4533-a956-57ec71b84a4e",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2ad00ef4-311e-4aae-b950-a839da2ba801"
        },
        "item": {
          "id": "91b21139-758c-4885-bb39-92327df3f137",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1a0fe8b8-4cd1-4cea-a90e-cc4e56de378a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aed18dd-dfa2-4c8d-aead-60d1fb6479b8",
        "cursor": {
          "ref": "a37ed863-4f6e-4a39-a083-cc090304aced",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ce9bdb07-ac30-483b-83d8-69a069dcefeb"
        },
        "item": {
          "id": "9aed18dd-dfa2-4c8d-aead-60d1fb6479b8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "91924312-8af3-4a68-adea-02c146dbb6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299b7932-3abf-45dc-82ce-ab041f6a58be",
        "cursor": {
          "ref": "e902a948-d6db-47c7-8693-21597b428647",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1fdbd7d7-74ea-4eac-aab5-83f9ce623afe"
        },
        "item": {
          "id": "299b7932-3abf-45dc-82ce-ab041f6a58be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5912615a-7493-446d-b4a6-bb8c75f27e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da411f5a-c234-420d-9a81-3332a784b72b",
        "cursor": {
          "ref": "c8eb92d6-7767-4c7a-9425-39318207232a",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5b96c32f-b27a-465d-a5a8-e64bcf661290"
        },
        "item": {
          "id": "da411f5a-c234-420d-9a81-3332a784b72b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69588356-fae5-4de4-85d4-5840cd085a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41a4eff-366f-4580-8e29-ab01227d6f1a",
        "cursor": {
          "ref": "4b9a3ba4-01bf-42f2-b56c-b44ca8208e14",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cf75fb64-2b9e-4c7d-8b7c-e1e4d39e23d6"
        },
        "item": {
          "id": "b41a4eff-366f-4580-8e29-ab01227d6f1a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "aa731780-9ac6-424e-b5fe-ec4081d312df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d69c6c-0485-4547-a98c-11a705d63148",
        "cursor": {
          "ref": "3b769030-224e-4ed0-896d-8135430a2d31",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5d73e44a-1521-47b8-9ee2-3387145dee61"
        },
        "item": {
          "id": "68d69c6c-0485-4547-a98c-11a705d63148",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3a3df1df-826b-4ad4-9b6d-ab9de9b300f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99707582-9fd6-488c-88b5-575dd3b2624b",
        "cursor": {
          "ref": "0a33f7ed-c71e-4380-b747-363dca9a5dc3",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "114a1f92-64d3-4656-98a9-a5fbb64f00a3"
        },
        "item": {
          "id": "99707582-9fd6-488c-88b5-575dd3b2624b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "96ebd5b8-8066-4d5a-ae63-1ded49279055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebec0604-e0da-4d5c-9668-3d5caac8e262",
        "cursor": {
          "ref": "6f52a2c7-40a1-4712-a4fe-96c7670e990f",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4cd05e90-38dd-4eeb-a36a-aca41502eacf"
        },
        "item": {
          "id": "ebec0604-e0da-4d5c-9668-3d5caac8e262",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8101630d-8c3f-4a74-808c-447e967e803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f977fb6-47c0-43e3-8a5a-4d9c16ea133b",
        "cursor": {
          "ref": "3afd4808-44f1-4d51-ba59-7e62674241e8",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "625a4140-dcca-4c0b-abc0-c9306ba3bf2e"
        },
        "item": {
          "id": "2f977fb6-47c0-43e3-8a5a-4d9c16ea133b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "33be1312-b345-47a2-817c-53a13656ca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1c4a68-ed06-47a3-984d-e0cae9da1ade",
        "cursor": {
          "ref": "2319f9f7-98e6-418c-a52d-56a0333934de",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a3530799-12db-4ae0-94d4-5234ebf3f56b"
        },
        "item": {
          "id": "da1c4a68-ed06-47a3-984d-e0cae9da1ade",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "76e59247-51e2-4090-b46c-d60692dda36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c59c484-413b-45ed-928f-bacda5029351",
        "cursor": {
          "ref": "aa757882-413a-4c29-8d65-f0cc3372cfac",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be0b77dd-0430-49c8-963a-fa80774a69d0"
        },
        "item": {
          "id": "5c59c484-413b-45ed-928f-bacda5029351",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7ec36ba8-abf4-4230-b0f6-39d8b14e8d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a20122-c7d1-4fe5-85a6-822e960b9e37",
        "cursor": {
          "ref": "d1f76486-4f1c-4269-a57c-eb88aafd9626",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "252cdaaf-8249-404b-89a6-54c20f3815ee"
        },
        "item": {
          "id": "55a20122-c7d1-4fe5-85a6-822e960b9e37",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "11f77bb7-39dc-4f06-8fa6-9a9d8fa87be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799b4494-ade6-40e8-bc7d-74dee331b8cf",
        "cursor": {
          "ref": "0803e793-725f-42c8-aee3-f1c637909126",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6362a020-5a21-4eba-b19f-a97e3a2598f3"
        },
        "item": {
          "id": "799b4494-ade6-40e8-bc7d-74dee331b8cf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80d2b018-fafc-4047-9131-f2d46a1f6c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642d43f6-d53b-44ab-91e7-3e3a14445181",
        "cursor": {
          "ref": "56661856-ebc3-4e45-a7e6-b92eb7291fd9",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "735107dd-c515-4b79-8e1e-f94ede569f43"
        },
        "item": {
          "id": "642d43f6-d53b-44ab-91e7-3e3a14445181",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a725aa9d-c071-469e-8368-1f92875175ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb9b97d-b07e-417f-ae37-d8cad0f12d40",
        "cursor": {
          "ref": "db11ab92-cb16-428d-8f49-64f9fabbed10",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "36bfea1d-595d-4256-9898-b880196700b8"
        },
        "item": {
          "id": "7bb9b97d-b07e-417f-ae37-d8cad0f12d40",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5cb09029-0eab-4f0b-bd07-0b167bf540e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d816f826-13ef-438f-a8da-1ea6ad97b741",
        "cursor": {
          "ref": "ed79ea6e-0c83-4407-bd4f-1128f5e6b089",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ecb73ff7-8b61-49a9-a63d-9e1d162f4960"
        },
        "item": {
          "id": "d816f826-13ef-438f-a8da-1ea6ad97b741",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9a992777-2069-4f83-a758-16efb984518e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bae4489-be7e-4aaa-b61c-d3df0d0dd703",
        "cursor": {
          "ref": "35667838-b52b-4716-b49f-1e2f3bab2a06",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "580e320d-22d5-48c1-8245-c732d09ba86f"
        },
        "item": {
          "id": "3bae4489-be7e-4aaa-b61c-d3df0d0dd703",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2a99698c-121d-43db-95c3-395174dfd529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04cb76a-a853-45e9-a2a2-e356ea244ee0",
        "cursor": {
          "ref": "fe4703f0-b69b-490c-aa6f-8d72d45fedb6",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f2f83a37-becb-4f4a-bfa5-012c43450ab4"
        },
        "item": {
          "id": "d04cb76a-a853-45e9-a2a2-e356ea244ee0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b62900bc-326d-40d4-a168-01539f89c037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82df044-34b1-4e72-8c55-34d5825a09a1",
        "cursor": {
          "ref": "240645b7-e52d-4629-a260-84cb6e19f530",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d55111dd-b1cc-4ae4-a11d-903ecddec854"
        },
        "item": {
          "id": "d82df044-34b1-4e72-8c55-34d5825a09a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3e2051ec-0595-41ad-887f-047fe35667e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39686ad6-25f5-4b08-a1f0-2e813707dc07",
        "cursor": {
          "ref": "25eb0667-97fc-4b6e-b0f5-7a4dde776861",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "98d90740-5126-4002-9560-5d91eed321ac"
        },
        "item": {
          "id": "39686ad6-25f5-4b08-a1f0-2e813707dc07",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8092172c-1835-4730-b54c-202935925c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee6c10c-f4a8-4cc4-8070-3b8699ce132e",
        "cursor": {
          "ref": "02687ee8-fcab-4c85-9e38-6c4767e864da",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b710a81e-6aa2-4d29-a8ca-d13cf3859311"
        },
        "item": {
          "id": "1ee6c10c-f4a8-4cc4-8070-3b8699ce132e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9051a87b-36aa-46a8-bd99-bf57be8982bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baa2447-732a-446f-b47a-0d8dc87a5e0c",
        "cursor": {
          "ref": "6a8e96c5-2362-4e96-8f6c-84b5d9aedf2c",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "67d485ac-9fde-4605-b59d-551222031ae3"
        },
        "item": {
          "id": "1baa2447-732a-446f-b47a-0d8dc87a5e0c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8db5a9cd-bfad-4efc-b26a-76145311a12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbf6415-9b6c-4305-a63b-273c76dcec20",
        "cursor": {
          "ref": "da376e70-362e-4cd8-9470-c1c2bd83577c",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "03a830d7-4ed1-42ff-831a-ec1baacf0f81"
        },
        "item": {
          "id": "6dbf6415-9b6c-4305-a63b-273c76dcec20",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17a514e4-bb5e-4bf9-8426-ae4e6aa59c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a135bd60-6d32-430f-8df5-023ef3146d81",
        "cursor": {
          "ref": "ac19b457-2b65-45a9-86f5-f670239fb2a7",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4a1010fc-1211-431f-b300-b2b63de3af01"
        },
        "item": {
          "id": "a135bd60-6d32-430f-8df5-023ef3146d81",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "33d3bfda-f6dc-493c-b6e4-60aee88ffb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4749d1-a827-471a-ae21-fad82c5fe328",
        "cursor": {
          "ref": "587c4b7b-0c4b-4c99-b142-ff7536a24d78",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "645b4ed3-f609-4a58-bde7-a5ac747e319e"
        },
        "item": {
          "id": "fa4749d1-a827-471a-ae21-fad82c5fe328",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eb95ba7f-42eb-46e6-ae29-9919334e2669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac42647-5e29-4f9d-9b1e-1423e62645cc",
        "cursor": {
          "ref": "27cd0c7c-86b8-4a44-9540-54d28a0fe856",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d1563a33-6b85-49db-8a3a-04cc48f69e43"
        },
        "item": {
          "id": "7ac42647-5e29-4f9d-9b1e-1423e62645cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d242570c-3dbb-4049-ab64-baec0ae5fbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1d9a66-de94-442f-9f2b-d3680fb7dfb2",
        "cursor": {
          "ref": "12c8df79-ed27-4bc8-a6f2-279601cf4cc8",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "baa7e820-2439-44d0-b4e8-9fa328029ebe"
        },
        "item": {
          "id": "8c1d9a66-de94-442f-9f2b-d3680fb7dfb2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7f953e47-b5a4-447d-95c0-39b785665df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2306caea-fdce-4aab-bc4d-2b06e8647596",
        "cursor": {
          "ref": "6a4d85e2-eacd-4fb6-8e1a-6d0f34658f28",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "64a12e1b-0ca9-4e78-88bd-5cf74bb7e070"
        },
        "item": {
          "id": "2306caea-fdce-4aab-bc4d-2b06e8647596",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "baefb2b5-7779-4087-bf52-f63eb2f9edd1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b233d148-5cac-4b27-8f90-b3dc7d6cc79b",
        "cursor": {
          "ref": "6d92dc10-62d2-4305-9b9c-75531ba1f125",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b5e8659b-4bbc-4094-a210-3d5f7a8be1d6"
        },
        "item": {
          "id": "b233d148-5cac-4b27-8f90-b3dc7d6cc79b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ddf4b87b-04fe-4697-b621-05c4ca44ac76",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 515,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3062b4a5-2dcc-470d-b344-e4ffe0b9b5cd",
        "cursor": {
          "ref": "27b4a427-6d78-4ab7-ae59-c4f6dcb4e831",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9d15f1d2-e911-4b75-ac7a-5b89408c09d1"
        },
        "item": {
          "id": "3062b4a5-2dcc-470d-b344-e4ffe0b9b5cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7371f4e7-d4f9-4c85-881d-e2012219fbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3062b4a5-2dcc-470d-b344-e4ffe0b9b5cd",
        "cursor": {
          "ref": "27b4a427-6d78-4ab7-ae59-c4f6dcb4e831",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9d15f1d2-e911-4b75-ac7a-5b89408c09d1"
        },
        "item": {
          "id": "3062b4a5-2dcc-470d-b344-e4ffe0b9b5cd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7371f4e7-d4f9-4c85-881d-e2012219fbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63ded7b-2e0e-48b7-b51a-897e677515ba",
        "cursor": {
          "ref": "92848c90-fab8-40e8-9cba-830a104a9841",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fe6a840d-701c-4847-85ca-c69f2229ccc7"
        },
        "item": {
          "id": "e63ded7b-2e0e-48b7-b51a-897e677515ba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e19d655f-7292-4417-a243-3fcbbc2dc115",
          "status": "OK",
          "code": 200,
          "responseTime": 309,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "95468044-dff8-466f-85ef-8638fa8626d9",
        "cursor": {
          "ref": "5e1182d1-ac2c-4483-a4aa-9a82197e79ae",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0d8fb991-70d3-42e4-963f-f6be7a7cf949"
        },
        "item": {
          "id": "95468044-dff8-466f-85ef-8638fa8626d9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bad432ed-0fc1-4002-b4a8-e3355ec218c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7205dda9-8aad-423c-8163-14dffd9a0b7e",
        "cursor": {
          "ref": "6e32e8b1-2071-42b3-bd11-855a7471d2ec",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8345006b-2c68-41bf-b31d-ff79d98a503d"
        },
        "item": {
          "id": "7205dda9-8aad-423c-8163-14dffd9a0b7e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "94ff401c-4070-4ffe-adde-d4c57f18680a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9293c131-1218-418d-aa84-594f977854af",
        "cursor": {
          "ref": "1c8ae156-dd88-422f-97ed-263254a30432",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dae3764c-f3a4-4295-bb78-e1e3ce31f1b7"
        },
        "item": {
          "id": "9293c131-1218-418d-aa84-594f977854af",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d63637fd-90ce-4702-8c14-8175d34bd1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b93e0da-52cd-4ad7-a5f8-e948cd819c68",
        "cursor": {
          "ref": "c56a5c4c-566a-4532-a70b-45fc64e7707f",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a32b65d8-0ca6-401c-b695-d26ed7b4c6c4"
        },
        "item": {
          "id": "7b93e0da-52cd-4ad7-a5f8-e948cd819c68",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c0c688ef-7156-4031-8a65-1c5a23c4188c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534454d-3d67-4d71-b991-3c11c66db9e1",
        "cursor": {
          "ref": "1ba2d585-3487-46c8-9c32-43cda52d68fe",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8e66d9c6-7a64-47c6-af88-e3e9f4ea7994"
        },
        "item": {
          "id": "6534454d-3d67-4d71-b991-3c11c66db9e1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6c087c16-b251-4ae2-80d9-dafdae091972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcb30ac-ea08-4694-ac78-e3047c1a0c35",
        "cursor": {
          "ref": "0b102865-fad6-44fc-b386-156200941ea8",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "05383b66-2eae-460a-93aa-49ad98bcfe90"
        },
        "item": {
          "id": "dfcb30ac-ea08-4694-ac78-e3047c1a0c35",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "352f7cf6-9669-45c5-8ccc-5a68c7c99031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60eabf03-bb6e-4613-b381-68b3266791a7",
        "cursor": {
          "ref": "304d629b-e2c8-42dc-9608-a2363c769d14",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6336f322-fd9d-4179-bfcf-f24c9f6cb380"
        },
        "item": {
          "id": "60eabf03-bb6e-4613-b381-68b3266791a7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "24300f90-d084-486d-8957-cb990784996d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d40901b-a5e2-4b55-999b-9489dd47cdae",
        "cursor": {
          "ref": "876cf7bc-ef43-4361-9633-980f5e7eb688",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e0998e5d-f0a3-49ea-ac93-76110e772cf2"
        },
        "item": {
          "id": "6d40901b-a5e2-4b55-999b-9489dd47cdae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b52f767c-7434-494a-a09f-147dfee7a57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b382b9f-a95f-43f2-bbbe-928505b9b75a",
        "cursor": {
          "ref": "3d4b59ac-e0bf-4f58-86cc-19676ca77cbb",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4bd59baa-86bd-4c89-b29e-bdd83fa76523"
        },
        "item": {
          "id": "1b382b9f-a95f-43f2-bbbe-928505b9b75a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "09b9fd12-c8e1-43c7-bccd-1e1331b8a1c2",
          "status": "OK",
          "code": 200,
          "responseTime": 325,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "c3126e7c-58fb-4f7f-9f43-eed55c4367a7",
        "cursor": {
          "ref": "8abfff5e-c5ae-45bf-bf55-2caf2cfd5818",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c458817b-3b8f-4ed7-9c4b-5eaf9ceaa5da"
        },
        "item": {
          "id": "c3126e7c-58fb-4f7f-9f43-eed55c4367a7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b65d6955-a00b-43ad-83a3-54a924418c21",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "dbff7526-1c84-4e4a-8bfb-007fcecbf23a",
        "cursor": {
          "ref": "c07d1596-d37c-43e3-8412-cca5d16f647b",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "125e2498-9b61-4a86-ad8b-dcba17f8e0aa"
        },
        "item": {
          "id": "dbff7526-1c84-4e4a-8bfb-007fcecbf23a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "209d56e4-b43d-450e-aeb2-11b8e8c932bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7f3fe0-89ab-4999-8c6d-3f6f791da34a",
        "cursor": {
          "ref": "370d2c06-4a4a-446b-80fd-7f8d9059bbbc",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "786f7a20-f06c-48c4-8f87-acc3bc68e3d1"
        },
        "item": {
          "id": "1b7f3fe0-89ab-4999-8c6d-3f6f791da34a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "722d9374-a7b7-46d8-b0f8-2fc5082f946c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5c4d8d-bf8f-4922-b6ca-9a0218e347ff",
        "cursor": {
          "ref": "712f98f6-d83c-489a-bde8-7b91a91acb9e",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2253254c-c495-4c7c-8d28-49f896a4d464"
        },
        "item": {
          "id": "9c5c4d8d-bf8f-4922-b6ca-9a0218e347ff",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f0024acb-86eb-4363-896f-2fab7da601f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4d3652-44ed-45db-85a9-72574db1701e",
        "cursor": {
          "ref": "81860170-f043-4a9a-95a3-d44229e66e51",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "18905abd-f6d7-4131-b933-49db95874528"
        },
        "item": {
          "id": "4a4d3652-44ed-45db-85a9-72574db1701e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "828803cf-215a-4b78-92cf-5f190de92011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e68665f-56c3-4dc0-8fc1-a579c8f5114c",
        "cursor": {
          "ref": "de533d28-bc78-4243-ab29-33efa6b9c931",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3de3ac65-c177-4d44-b063-093a932abf77"
        },
        "item": {
          "id": "1e68665f-56c3-4dc0-8fc1-a579c8f5114c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "738a4919-5384-486c-b3dd-7d3183ae271a",
          "status": "OK",
          "code": 200,
          "responseTime": 337,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "05a7afe5-8b51-4737-b552-985dd184cff6",
        "cursor": {
          "ref": "b16be4ce-0c98-4b92-be76-082631fd89f8",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ab414a6c-581c-45ad-94dd-84c3d13a6b13"
        },
        "item": {
          "id": "05a7afe5-8b51-4737-b552-985dd184cff6",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "9171f63b-1118-4959-a477-74f1cbb44223",
          "status": "OK",
          "code": 200,
          "responseTime": 1906,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "9a02d0dc-48d2-4a3a-9300-3120d2a49275",
        "cursor": {
          "ref": "301cf56f-eb01-4738-812a-a1e500dc742f",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "bc429ad8-6ec1-40d5-9428-be77ca340ccd"
        },
        "item": {
          "id": "9a02d0dc-48d2-4a3a-9300-3120d2a49275",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5447f107-e8c0-4130-bdda-0dfb0f48e46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259ca92e-939d-4ad7-aa64-8ca23123c497",
        "cursor": {
          "ref": "eba7df23-da5a-4c99-a35d-37a8b6184f0a",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ef6af12-6ee6-4406-97dc-e69580d09e14"
        },
        "item": {
          "id": "259ca92e-939d-4ad7-aa64-8ca23123c497",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d03a40f9-aaa7-4ef6-bdb1-9c29e78e6846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfb094b-7d74-46d2-aaad-6a00f192a597",
        "cursor": {
          "ref": "c1f12e79-46cd-4aa1-a8f7-b1267188da22",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "818d2386-6a59-490d-9798-bca4835ec738"
        },
        "item": {
          "id": "3dfb094b-7d74-46d2-aaad-6a00f192a597",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9ca31fea-7a7c-4a5f-9ddc-958c5b7505cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2a276f-468b-4aad-a1d3-4344365da9a0",
        "cursor": {
          "ref": "06247e9d-5a6e-4d86-8b71-e3cddfabdd17",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4b4211aa-125f-4c6b-b16c-1e9f534300f7"
        },
        "item": {
          "id": "6e2a276f-468b-4aad-a1d3-4344365da9a0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "edb9334c-76df-4e0a-8e47-f75f92d5d3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2806116-bd56-4089-a76b-e5e74cabd6cc",
        "cursor": {
          "ref": "917cbf95-c9a3-4e4e-8a7f-c9cd5b156fbe",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a2472b93-643f-406d-a239-8b1007d04014"
        },
        "item": {
          "id": "f2806116-bd56-4089-a76b-e5e74cabd6cc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2b4900ea-c172-4eda-8e4f-b6ced4fefcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60f0151-a999-442c-9201-71f477f72b9e",
        "cursor": {
          "ref": "96e02f0e-97ef-4047-bcb3-17f78aaadfbb",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "542fdf50-24d5-4a12-acd0-dd1529c0d322"
        },
        "item": {
          "id": "c60f0151-a999-442c-9201-71f477f72b9e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ef26de6b-d02f-49a0-8136-b0bfedc82bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5bc2fc-bec4-4d1e-a965-df7d3f48c317",
        "cursor": {
          "ref": "09090051-da12-4ab9-a0a7-1352a22013e2",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4bcf74fb-aa00-4016-a71b-c6717b4ae355"
        },
        "item": {
          "id": "9d5bc2fc-bec4-4d1e-a965-df7d3f48c317",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9950aa73-c988-4402-9b50-60037a19194c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8e4db1-c8c5-47ad-8c08-a4c727a7391c",
        "cursor": {
          "ref": "695c1a1b-9d83-48d9-ab35-f5d235648d52",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a4c1dcae-ca71-49b2-b536-272c861a00e0"
        },
        "item": {
          "id": "fb8e4db1-c8c5-47ad-8c08-a4c727a7391c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d2a1581c-da4e-4f68-9c81-c7d6121570b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871b6e3c-04b7-4977-9a6a-a8969dc66932",
        "cursor": {
          "ref": "ff78cada-cb3e-4da2-ba32-e0077194136d",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a0e74e3c-5f1a-4212-be5e-d360d707cf1f"
        },
        "item": {
          "id": "871b6e3c-04b7-4977-9a6a-a8969dc66932",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f01f6307-c7e1-4a67-8ee5-5dced1289c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538ebff5-a92a-45ba-96bb-e4b5bb024c16",
        "cursor": {
          "ref": "86ae6fd3-ad0c-4804-a6f0-366424527a63",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ad85c483-778c-4555-abb4-bb0f1194ace1"
        },
        "item": {
          "id": "538ebff5-a92a-45ba-96bb-e4b5bb024c16",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "67059e17-ead7-455b-90d9-6ce0b9b89128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2337ba6-8f7c-48a2-b32e-98a570bf93f8",
        "cursor": {
          "ref": "38095ca9-531d-499f-8725-8a146d5851dc",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e19a0921-172b-4bc0-bdbf-d42cc0f5bf8d"
        },
        "item": {
          "id": "c2337ba6-8f7c-48a2-b32e-98a570bf93f8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "16718502-1477-4b7c-b540-dc5e07522e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb8ba64-7439-4fe7-8da5-34c0098bea96",
        "cursor": {
          "ref": "cd3539c8-867d-43c9-911a-762d9df79309",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "783fa90d-9bbe-4e30-b453-88eb5785cc0a"
        },
        "item": {
          "id": "beb8ba64-7439-4fe7-8da5-34c0098bea96",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9328b345-1efc-4a12-98cd-6227677fd35a",
          "status": "OK",
          "code": 200,
          "responseTime": 281,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "56ba3086-cbea-4806-8919-910d8de7ecb3",
        "cursor": {
          "ref": "17aaca5b-46e8-4415-a35b-dee6ec57c85e",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2305768c-ec51-47e7-8120-4bb711ff7a44"
        },
        "item": {
          "id": "56ba3086-cbea-4806-8919-910d8de7ecb3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "df035d70-aa0e-46bf-bfed-658315c6cc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6106a7bd-264b-463a-94a0-0a97ded878f4",
        "cursor": {
          "ref": "b0398748-ad50-421b-a202-adbfd2831b26",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "82bdae4a-1a4f-4dce-bd4e-42e5c284573e"
        },
        "item": {
          "id": "6106a7bd-264b-463a-94a0-0a97ded878f4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "450aabf9-eb83-4b8a-b9e5-96d5c459bd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195af772-3f27-4e21-8d73-8120cdb0406e",
        "cursor": {
          "ref": "8d712a28-213d-40b1-b729-5fafa028c292",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "06345738-5e54-44b2-a172-0f969e1e99b6"
        },
        "item": {
          "id": "195af772-3f27-4e21-8d73-8120cdb0406e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a56b58f8-8eb8-4654-8ca7-72f4577de886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2528ad5-9af6-4df1-8c6d-7b21c5877c64",
        "cursor": {
          "ref": "bcfc4423-8991-418b-9e56-d470a638b1d0",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a9e6ba55-72eb-4d69-ad2e-87552d471a28"
        },
        "item": {
          "id": "f2528ad5-9af6-4df1-8c6d-7b21c5877c64",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "47a5df6e-00ea-483a-94a3-bd0a6e90bb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5ae5cf-de7f-49eb-a8e5-56ea6d88df18",
        "cursor": {
          "ref": "d90105f9-f0c5-46cf-a021-9a5caeccacb4",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "65013ec5-937f-4426-a0b7-3cab8e959c77"
        },
        "item": {
          "id": "ac5ae5cf-de7f-49eb-a8e5-56ea6d88df18",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "44874e55-cacc-425c-a02f-25b251613c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2460e7fc-16d5-41c6-b9fa-48cc17a36bd3",
        "cursor": {
          "ref": "7bff33fd-76a3-4250-a0c1-2e1f64a7d0f8",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a5a0ec27-7082-4356-a1df-abab1213c04a"
        },
        "item": {
          "id": "2460e7fc-16d5-41c6-b9fa-48cc17a36bd3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d4373cd6-135f-4f52-8f16-7814e2b4cf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14de59b-43e2-4e3a-88ac-e9673dca72c0",
        "cursor": {
          "ref": "e798f081-e6d1-4049-8553-9f395725adae",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "df1022d0-a2a1-4685-99ff-5b26cdd54211"
        },
        "item": {
          "id": "a14de59b-43e2-4e3a-88ac-e9673dca72c0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f4e14ff6-4b4b-497e-b62f-71e5f5dbd3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4a7ddb-51e5-457d-83f5-de2b19ee8acb",
        "cursor": {
          "ref": "7bd32492-372f-4d7e-b555-3056b4d31b17",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "df757bca-346a-4171-be8d-5e5a1a8d894a"
        },
        "item": {
          "id": "2f4a7ddb-51e5-457d-83f5-de2b19ee8acb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a11953c8-c929-4caf-800b-db89baa8865f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447f645b-9e5b-4727-9e86-91d873eab6b5",
        "cursor": {
          "ref": "d6fe103a-faed-4655-bc67-a71a04fc3cf5",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a359107c-906d-43f6-95be-36f2a6b0ba1f"
        },
        "item": {
          "id": "447f645b-9e5b-4727-9e86-91d873eab6b5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9e9a5d83-d7fb-44da-aebb-a322c9374ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100f7f7e-3d1f-4728-a824-eeec51bac1e6",
        "cursor": {
          "ref": "0a976f11-93a8-44d3-8f98-a8a6df9d137c",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eb8e8d4c-1944-4575-9e58-47d182e2b150"
        },
        "item": {
          "id": "100f7f7e-3d1f-4728-a824-eeec51bac1e6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c23884bc-4dc2-4aa4-9ceb-e9aaf6358095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8267372d-f3ea-4b99-8f71-63e5b22e1e52",
        "cursor": {
          "ref": "e0638533-2979-491a-b162-c13b78013525",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "261e322a-d714-45b7-866c-d86f0f6ad839"
        },
        "item": {
          "id": "8267372d-f3ea-4b99-8f71-63e5b22e1e52",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5e49c9c0-784f-4afe-83bf-a09949169a44",
          "status": "OK",
          "code": 200,
          "responseTime": 294,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "43ef562c-cae7-479d-baea-6d43b07ae73d",
        "cursor": {
          "ref": "2f74bba1-3b6a-4ee3-adaa-a1ff15325ae1",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e098f461-20cf-4287-98d7-72b51694e75c"
        },
        "item": {
          "id": "43ef562c-cae7-479d-baea-6d43b07ae73d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8d1b1809-7680-45c2-a50e-cd71f5fd87a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c045f9-3dad-4f28-9043-c173f5ca629d",
        "cursor": {
          "ref": "bdda95f3-abcc-45c7-a15a-e219f862dad9",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "530a28ba-c4b3-4d31-8545-0d27bbf19fde"
        },
        "item": {
          "id": "a2c045f9-3dad-4f28-9043-c173f5ca629d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "24428d96-9692-4bba-831d-1bea6c43d1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c169bc78-4a9e-4105-bc16-cc17beb66f7a",
        "cursor": {
          "ref": "a74810a6-1dfb-4923-826f-1326df4fa86c",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5f624a54-36c9-4516-a6a9-309997d46e8c"
        },
        "item": {
          "id": "c169bc78-4a9e-4105-bc16-cc17beb66f7a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "aaf2c8f4-fe70-4346-89be-907e7df2cc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2222a0fb-1042-45fa-8357-cd71196d689b",
        "cursor": {
          "ref": "89098ed3-e240-4bba-af18-a0b0d4524aa0",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a2161fd6-efb0-48c0-b32e-eeae48082eac"
        },
        "item": {
          "id": "2222a0fb-1042-45fa-8357-cd71196d689b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fd417b97-0bf6-4f7a-b211-6fda03529dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a72690-b5a6-42e2-a054-49bbe5302ae0",
        "cursor": {
          "ref": "504da66a-4ad4-4c5d-a228-5a2c4a3e798f",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8886762b-5125-4c72-b4e7-cb5816e1fcd2"
        },
        "item": {
          "id": "00a72690-b5a6-42e2-a054-49bbe5302ae0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d7fae414-3dd8-48b6-a217-2a058bd5ef03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5cec28-ee6e-4394-bfbe-f500d33ea0bb",
        "cursor": {
          "ref": "8196fa6f-83aa-43a8-9220-06b8c1768a7f",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9ea6e06e-0f5c-4b76-acf6-4fa58a2e213b"
        },
        "item": {
          "id": "ad5cec28-ee6e-4394-bfbe-f500d33ea0bb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8802c253-382f-4243-a00e-f762263fae3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5a5f08-07dc-4fb2-b4ab-92751e7ee475",
        "cursor": {
          "ref": "2f94110a-5541-4a2e-b0f2-49d8f873815b",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9913b8b7-6731-4efc-9b46-dd4c9c22ee9c"
        },
        "item": {
          "id": "ed5a5f08-07dc-4fb2-b4ab-92751e7ee475",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "694566a2-5a37-4f70-8e7f-e893019230b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa37b1d9-6a22-4743-87f8-9f30520d33ee",
        "cursor": {
          "ref": "fdc9b300-c8b4-4ce1-bd2f-52c0e27013aa",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "05efd678-f48d-4929-bb2b-115bf7b1e232"
        },
        "item": {
          "id": "aa37b1d9-6a22-4743-87f8-9f30520d33ee",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "acafe01f-8292-444f-a4e5-bb71dd4d4485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7149d2d-6226-4cf1-ba7c-8c6ac3f8c90a",
        "cursor": {
          "ref": "97aa8ed6-d3d8-493f-b8ad-d64d8386053d",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "63c9a279-4885-4fb9-b7b4-542210a426ab"
        },
        "item": {
          "id": "f7149d2d-6226-4cf1-ba7c-8c6ac3f8c90a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4df9b54f-eaeb-43ee-bac2-616f64197780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6520f43-6363-47e3-ae7f-6998042ef4d1",
        "cursor": {
          "ref": "21e41e20-28f9-4361-9c94-b8de6981ec91",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "55d3bff1-33f1-4447-82aa-821315f0df5b"
        },
        "item": {
          "id": "b6520f43-6363-47e3-ae7f-6998042ef4d1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9c263ba7-5dc1-4b44-988e-6ee4d371118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6405b3b4-069c-4477-ba7b-2712ce89852a",
        "cursor": {
          "ref": "6d77ed8f-a528-4f25-ab93-75e7187a60be",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bfe04d43-13c0-4abd-a7f1-71093491271c"
        },
        "item": {
          "id": "6405b3b4-069c-4477-ba7b-2712ce89852a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a3c3692e-638c-4463-bd43-34d8eb1e87ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c807aa0c-75ef-4b2e-a02c-8d75773cb6eb",
        "cursor": {
          "ref": "6dacb7dd-5f6d-4ced-abe8-f60ff5c2460b",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0f9a9c6a-ce24-4105-a059-b5c71179609b"
        },
        "item": {
          "id": "c807aa0c-75ef-4b2e-a02c-8d75773cb6eb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ac3f5dbb-e2f5-4a95-a160-b112c1aab210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20269e29-bd1e-466c-a7e2-99b4bddb9bf3",
        "cursor": {
          "ref": "b8da33b4-b19c-4b05-afa3-4446d4011a46",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c1f46527-2440-46a7-94c3-1cb59f52023c"
        },
        "item": {
          "id": "20269e29-bd1e-466c-a7e2-99b4bddb9bf3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "226d02a7-2475-4bf9-87b3-857e2b817808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a4af3e-fef6-415c-a1ea-c90a8ebce180",
        "cursor": {
          "ref": "6e8c3eb1-d1b9-4e1b-91ad-3570988bc2d3",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "86e787e2-9359-44f9-b429-a3a6569d0466"
        },
        "item": {
          "id": "53a4af3e-fef6-415c-a1ea-c90a8ebce180",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "37de2224-1912-4e4d-b537-1886916ed3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbed7376-f0e2-4fd3-bdf5-d8ba770946c2",
        "cursor": {
          "ref": "af265eb8-0d50-4e12-919f-ab6e50cae41d",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f4e7b507-647d-4644-a69f-e63232ac9dbd"
        },
        "item": {
          "id": "cbed7376-f0e2-4fd3-bdf5-d8ba770946c2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ff4147aa-1cbe-41c1-beb7-001a9b07204a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07baaf5d-ffce-457a-9465-e5213f630284",
        "cursor": {
          "ref": "cdd062b8-df0a-4c87-ad07-9166b46af60e",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cdb95174-e417-4425-9e25-02468456097d"
        },
        "item": {
          "id": "07baaf5d-ffce-457a-9465-e5213f630284",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2b434c39-9dc4-4eb6-b488-d18a1f295588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98fb6b3-44c0-4443-9c65-ffe4d648ed67",
        "cursor": {
          "ref": "d11274a7-99c2-4870-8efc-0a9c4c91e45e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1b071f50-e917-4e51-8eb5-6d6e8001fa22"
        },
        "item": {
          "id": "b98fb6b3-44c0-4443-9c65-ffe4d648ed67",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1d0889c7-d053-43f6-99a0-8eadac311734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a3e4c-e067-4334-a7b4-116bd0584b8d",
        "cursor": {
          "ref": "9bf041c5-f5ff-400f-9828-2a54fcedf28f",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dc35955d-959e-49f8-b80e-0605ae74b9d6"
        },
        "item": {
          "id": "910a3e4c-e067-4334-a7b4-116bd0584b8d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "36de26bc-967c-4cb2-a209-78831a036f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df3d7dc-e53d-4830-8330-f1887296a8ca",
        "cursor": {
          "ref": "c4f5e62e-e5a4-4a1e-86c3-cc2e19496431",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "639593a8-c2b3-4113-888d-25bc30d336fa"
        },
        "item": {
          "id": "9df3d7dc-e53d-4830-8330-f1887296a8ca",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "81186343-05dd-41ea-ac36-644d4b0eaac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e313fb87-8004-4644-a2f4-7f2788d733e9",
        "cursor": {
          "ref": "44203ef7-7e50-4f4b-88d3-13ea38c41510",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "62ec8b80-1f1a-487e-b63e-0f3f08497338"
        },
        "item": {
          "id": "e313fb87-8004-4644-a2f4-7f2788d733e9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "041f931b-f174-481b-a3d7-a72bcbddc05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2fc909-a674-4410-a072-9e41fc45ecb5",
        "cursor": {
          "ref": "d5e05f5e-b827-488f-bc4f-9ae162f7ca03",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5df551ed-01d4-44b8-8ae3-0b63b432b69d"
        },
        "item": {
          "id": "2e2fc909-a674-4410-a072-9e41fc45ecb5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "26f959ab-c49e-418b-befb-470f73694591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee081e76-0b90-4b62-8c5c-96f5c779df3c",
        "cursor": {
          "ref": "f2ed200a-f87e-49dd-842e-af0181bfc655",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "71c1eb0c-ce20-413d-a442-f0b6c9e3175f"
        },
        "item": {
          "id": "ee081e76-0b90-4b62-8c5c-96f5c779df3c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5b248360-9733-4c70-b589-c54fb2d95a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf793efe-a2d7-4b2a-ad22-8af880ac58ce",
        "cursor": {
          "ref": "652319ee-f328-482b-bfc2-4221b533ad33",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9d5739cf-61dd-4231-a373-c86628f1458f"
        },
        "item": {
          "id": "bf793efe-a2d7-4b2a-ad22-8af880ac58ce",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b4697619-683b-44e1-836a-60b6ae3c0d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82db2902-d15c-4f0c-977f-97fc9857232e",
        "cursor": {
          "ref": "40f541a1-dd59-4bb1-b944-ecb61a777a3f",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "57e8f4c2-e970-4728-84e4-8c72814f2080"
        },
        "item": {
          "id": "82db2902-d15c-4f0c-977f-97fc9857232e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c8b00d12-530b-4069-90c0-4d569519add8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a031aca8-ac52-4299-ab43-9480ec2357e4",
        "cursor": {
          "ref": "21dd353f-9cb7-438e-88e6-065d53fd21a4",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4059482b-8bfb-4fe2-93c0-267163f33d0a"
        },
        "item": {
          "id": "a031aca8-ac52-4299-ab43-9480ec2357e4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7b190c9c-3cb6-410d-85e5-ac85fbcc00e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f16da1-b9c2-4563-9106-fac63912dd0e",
        "cursor": {
          "ref": "411fa33a-282d-4a92-a79e-904c55e12f24",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "010fac7f-2243-4893-8d7e-1a1bd352c428"
        },
        "item": {
          "id": "38f16da1-b9c2-4563-9106-fac63912dd0e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2a1a865b-9522-4bb0-9925-445cf3c52127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d552911-3d1f-4e80-8fa5-6470670c9101",
        "cursor": {
          "ref": "a65710d1-1249-41f1-8609-bbd5831c2a3d",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e1676a78-eecf-4c75-83b2-a26337d5a65c"
        },
        "item": {
          "id": "7d552911-3d1f-4e80-8fa5-6470670c9101",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "51760ffd-aebc-427a-83d8-71969a3e7925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a512d2-e119-4b92-a87a-56f1100dfcdf",
        "cursor": {
          "ref": "9456993f-2291-4f38-afea-72ec2a187272",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fa23725d-cde8-49f8-a850-8a347760dffb"
        },
        "item": {
          "id": "28a512d2-e119-4b92-a87a-56f1100dfcdf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "38040557-c1d0-4044-8bc4-bdd7e2c30afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1b503c-881e-4364-9497-e1d7aa0eb310",
        "cursor": {
          "ref": "441bcb2e-0003-40f2-ab6d-e023bd1e3a7f",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b42bd501-863f-4c91-a808-949778029941"
        },
        "item": {
          "id": "4c1b503c-881e-4364-9497-e1d7aa0eb310",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "979dc1dd-52af-466c-b76d-2c3aefd92822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3e14a2-55a9-48f2-bfb3-088f51e823f2",
        "cursor": {
          "ref": "57e62688-461a-4e5b-ab62-39fb83344da9",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1fb9c2ba-090b-4a98-8b5b-2ae89020a327"
        },
        "item": {
          "id": "1e3e14a2-55a9-48f2-bfb3-088f51e823f2",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0c2475b7-d2be-4a1e-a912-81e5b1d26dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2464f75d-306d-4b93-b655-6e9545d617c0",
        "cursor": {
          "ref": "78c0faba-1d72-4fb6-afa2-c92817fbb94c",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "dcdf8f4f-22d0-4039-b6d9-7c3dfa261c57"
        },
        "item": {
          "id": "2464f75d-306d-4b93-b655-6e9545d617c0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2b06d120-3da0-484b-970e-b177ded4da1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4823fc68-9b7b-4d6d-913a-8b1aaa44db25",
        "cursor": {
          "ref": "6b124a50-71d9-48bf-9617-ea33ad0c0ba0",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f5635827-1560-4cd4-8b55-c30816f870b5"
        },
        "item": {
          "id": "4823fc68-9b7b-4d6d-913a-8b1aaa44db25",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5965dc8a-2bd8-4300-bf1e-ce4634aea6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24579c6-f63f-42d8-ad80-f185b4d83b77",
        "cursor": {
          "ref": "942d9f1f-0dc1-4cce-8699-84a634f0e2b6",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8ae90e10-dfad-4dd0-a46b-6ef90a2693b4"
        },
        "item": {
          "id": "f24579c6-f63f-42d8-ad80-f185b4d83b77",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c4765a13-c730-4c04-91b0-6cd17835ba36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d118b836-132f-4d8f-a73a-cfceb51e5b94",
        "cursor": {
          "ref": "26e570f2-ef1a-4378-9e9e-31a0c85f8f5d",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a8dd7ddf-82ec-445b-92e0-a02518905e2c"
        },
        "item": {
          "id": "d118b836-132f-4d8f-a73a-cfceb51e5b94",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dcacce82-5993-4a43-86d7-4d3fa985159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5dc9ac-7662-4a30-87b7-f9feee07c1cc",
        "cursor": {
          "ref": "38955073-dd0e-4755-8a8f-523a92e187c5",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5d764fe3-4be2-430e-9bf9-708a66a3f8f4"
        },
        "item": {
          "id": "4f5dc9ac-7662-4a30-87b7-f9feee07c1cc",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e6450154-84e6-4763-89bd-45ff098bf437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd1591a-c006-4e96-887c-da8d72c2f914",
        "cursor": {
          "ref": "143b3628-6308-4704-ac71-4d781899cff8",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7c314b89-da84-44ec-a82c-752e7f10636b"
        },
        "item": {
          "id": "9cd1591a-c006-4e96-887c-da8d72c2f914",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b6a5ef83-e93b-4d35-959c-df39b0712c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc0410b-602c-4884-b9f6-20cf1d02d0eb",
        "cursor": {
          "ref": "8ab4aded-55b3-4dca-a540-f177b3ca6b20",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ee544a54-e297-4de9-a669-d85b631746fd"
        },
        "item": {
          "id": "2fc0410b-602c-4884-b9f6-20cf1d02d0eb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "af63727b-ef34-4671-8d5d-6e251a9914ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe2320c-55c5-4d45-b404-5c72049c3902",
        "cursor": {
          "ref": "eb6976ab-de4a-4cf4-a17d-7a403a1b2b10",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3b569664-8cb2-42d9-b2c8-807757f49b7a"
        },
        "item": {
          "id": "3fe2320c-55c5-4d45-b404-5c72049c3902",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7d799214-de2a-4291-b799-094546975e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb69108a-8456-49dd-981f-e383c095b652",
        "cursor": {
          "ref": "5d5c9fa8-1d0b-476f-b35b-19221908b85a",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "251121d7-31ce-4270-966f-e7bd5b5b4131"
        },
        "item": {
          "id": "cb69108a-8456-49dd-981f-e383c095b652",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dc773c75-19ca-4b11-8c80-91f11c6fc599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56ba716-0361-4c06-8a52-1b7fd5dc7a28",
        "cursor": {
          "ref": "1ee52841-1025-4509-8c6c-405701b7135e",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5167d957-671d-4f8b-941f-b4c53a2eec1f"
        },
        "item": {
          "id": "d56ba716-0361-4c06-8a52-1b7fd5dc7a28",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4e0c6e3c-df6a-4c68-95a7-e864eb38b77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86479e5-1b4b-4721-80b8-3ce2e955ad39",
        "cursor": {
          "ref": "808dcccf-5bdc-44a5-8513-d70dfbf08c29",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "834379c6-f4d2-4128-a367-69ccdb90284c"
        },
        "item": {
          "id": "f86479e5-1b4b-4721-80b8-3ce2e955ad39",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "93b8fafa-774a-4ebe-9655-84b47a7b9437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8074989e-70f8-4c6f-8939-92d0b6a24b96",
        "cursor": {
          "ref": "846997b1-b290-4f71-ba42-c0cb8c54f1be",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "93f0524a-1dc5-454a-b235-f9e1141a0ce5"
        },
        "item": {
          "id": "8074989e-70f8-4c6f-8939-92d0b6a24b96",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e00e1a72-da83-4b03-9444-f593eb3e3725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006696d0-8eab-425b-b7a0-898c5b46c252",
        "cursor": {
          "ref": "f7ce0e82-cf6e-41f7-9e26-b41c1ddb1408",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1425ce42-08f1-44e6-bd5d-67e392ba72c2"
        },
        "item": {
          "id": "006696d0-8eab-425b-b7a0-898c5b46c252",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "56a7f541-beab-475c-9dcc-86eba4664883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b15b74-2164-48ba-a56b-5c1f56d698ab",
        "cursor": {
          "ref": "4119b7e2-b482-43ab-848a-bc191ad43d8d",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b6d3a317-983c-49d4-bf54-3edf957fed8e"
        },
        "item": {
          "id": "60b15b74-2164-48ba-a56b-5c1f56d698ab",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "68aa0d07-f26a-4497-9345-950847a488f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1442ba-fee9-4d64-b89f-80cb69242386",
        "cursor": {
          "ref": "fb83e506-b305-4709-91a5-a8f6176f72ad",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3943daca-449d-47c2-9a9d-07d4a6a0758c"
        },
        "item": {
          "id": "ab1442ba-fee9-4d64-b89f-80cb69242386",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e7f37202-8b86-4068-9c01-31c9d0ef79a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54932725-7cb4-4f8b-9dfd-90d881236b19",
        "cursor": {
          "ref": "b3d0d963-6a19-407b-949c-f2e051a082e0",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6b400d1d-7616-4013-9d0d-d66ceefb398c"
        },
        "item": {
          "id": "54932725-7cb4-4f8b-9dfd-90d881236b19",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7458aecc-46f3-4db6-bcc8-5e141fd9356b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d25978-3a58-4ebb-b18c-8fc80a9dbcb8",
        "cursor": {
          "ref": "b0647f5b-35ab-4626-b15b-6f9239055f5a",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2fcb52b1-c342-4bf1-80c3-0998951671b4"
        },
        "item": {
          "id": "16d25978-3a58-4ebb-b18c-8fc80a9dbcb8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a2c1d0fd-4dc5-458d-8bd7-0b11c2218afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 942,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bcfb4ee-455c-4208-b337-a9c4b64d6626",
        "cursor": {
          "ref": "1c0c179c-ec82-4051-9a58-00ed389b0d93",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3ebda0b7-a181-47e2-a965-2c9474dda2dd"
        },
        "item": {
          "id": "1bcfb4ee-455c-4208-b337-a9c4b64d6626",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d57186f2-8926-4080-8e72-f51149604b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f83b9e7-a452-4832-ab46-d105bf4319a2",
        "cursor": {
          "ref": "7d6630cc-00c2-4ca0-ba6b-fc9f766ed26f",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e203c22f-57fe-4fa0-b3e4-94ac814804a1"
        },
        "item": {
          "id": "9f83b9e7-a452-4832-ab46-d105bf4319a2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8725d7bd-d4f6-401b-a10d-cb6ef1f9d7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973593d5-400e-4273-9343-93a5bf64a37f",
        "cursor": {
          "ref": "3fa2a47c-512f-4907-a95f-6a8d97351b3c",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3800fef6-79f9-4788-95cb-3ea33142f75d"
        },
        "item": {
          "id": "973593d5-400e-4273-9343-93a5bf64a37f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a5ad7aec-df97-423e-b9cf-2380edd1747c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2409aa6-d3ff-4007-8187-dc2a20869a6c",
        "cursor": {
          "ref": "00e0dcb5-dd34-4503-b5b1-6dfebaa696d9",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "74cc104f-d414-4d88-b184-16fd2c904b4e"
        },
        "item": {
          "id": "a2409aa6-d3ff-4007-8187-dc2a20869a6c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "edabf787-9cec-420b-8d24-0a9229da7826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104a5bf9-8832-4f59-9167-7cd4bf0552f6",
        "cursor": {
          "ref": "d25a3ffc-0f72-4ceb-95f7-f69f459095c6",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc21ec23-ee92-48ad-a4a1-52fb37b1d374"
        },
        "item": {
          "id": "104a5bf9-8832-4f59-9167-7cd4bf0552f6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "da61f24e-3ac5-4464-9d60-00b1d371edb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1676d4a7-118d-432b-bb18-820de9a5c818",
        "cursor": {
          "ref": "5cb72e19-4415-49c0-9ef0-f5cddb000d9e",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "29b6355e-fc82-449a-b356-cdb48e146e38"
        },
        "item": {
          "id": "1676d4a7-118d-432b-bb18-820de9a5c818",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e21c7fd0-a7bd-408d-8c6e-fb60b8fe06c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e111f48e-aa4f-4177-a0fe-cb1261f637c8",
        "cursor": {
          "ref": "e870beda-278f-44fe-8ce1-69652a84f0e9",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "310fbce3-66db-4b46-b444-e495e20bfccd"
        },
        "item": {
          "id": "e111f48e-aa4f-4177-a0fe-cb1261f637c8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ca2829e6-2d98-4221-91ac-fe7ef29de7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7186d71-d389-4bd5-b7d0-54c0bbfdb805",
        "cursor": {
          "ref": "64741bb7-6b19-43f6-bbe7-d0b6567215c6",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c7357be7-a852-4b8e-8d7b-0a8f5bef25d4"
        },
        "item": {
          "id": "a7186d71-d389-4bd5-b7d0-54c0bbfdb805",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5427b8e4-f21a-4d44-8ab9-8849a34c8303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1101,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e3712-501f-4c87-a7a9-87c60a415d89",
        "cursor": {
          "ref": "d4163488-c7bf-46b5-90d6-8d953fced058",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1d3c69c3-22ff-4ed4-9675-b5a9410f5f5e"
        },
        "item": {
          "id": "5c0e3712-501f-4c87-a7a9-87c60a415d89",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0ea67d8d-c9e4-45a4-bf45-a715584f4f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485f572c-114a-4b7c-995e-85ca3e723c31",
        "cursor": {
          "ref": "04399676-ac94-46e0-8dfe-3ca6a2d17f49",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "92bab6e3-03e6-4124-be4b-812b47e4349d"
        },
        "item": {
          "id": "485f572c-114a-4b7c-995e-85ca3e723c31",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "264a6cc6-a2f6-4821-9ca5-cddec16804e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaa5d8a-9f57-4c52-81a4-5523de824602",
        "cursor": {
          "ref": "ceb82520-40d3-41df-b802-ff5c9b7b6e11",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "5bade379-0176-4470-a68e-c2a9b6eea745"
        },
        "item": {
          "id": "9aaa5d8a-9f57-4c52-81a4-5523de824602",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "962468c6-bd85-4a1f-ad7a-cd70ea281138",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d28ea3d-1fd5-4ca4-8f5a-0d6cf0392502",
        "cursor": {
          "ref": "b25236bc-ef67-4414-b0c2-bd2363e6b568",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "988019be-07b5-4c53-8168-46cd214e9a02"
        },
        "item": {
          "id": "2d28ea3d-1fd5-4ca4-8f5a-0d6cf0392502",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7c611b1a-2b40-49a6-ad79-a984aac2a023",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 723,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cf70ca-7eaf-4655-bfa0-3d8ecd3c9719",
        "cursor": {
          "ref": "b5b2c471-3aef-4f4e-9c19-9199ca1cc1ae",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e6731d71-2a1b-494a-88c4-72337f531a08"
        },
        "item": {
          "id": "78cf70ca-7eaf-4655-bfa0-3d8ecd3c9719",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "19927dd1-47e2-4327-a5bb-0d17cc5945d6",
          "status": "OK",
          "code": 200,
          "responseTime": 596,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0b006e-eddb-4c0f-8c83-97a15dbea119",
        "cursor": {
          "ref": "5023743b-1367-4672-9e27-c160a85e42ba",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "285e0cd1-1122-4331-92e2-8e57ca2f04aa"
        },
        "item": {
          "id": "7d0b006e-eddb-4c0f-8c83-97a15dbea119",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d81d6c69-be09-4f77-a0dc-fb01802fce3e",
          "status": "OK",
          "code": 200,
          "responseTime": 1970,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede2c0ec-6eb8-47a4-9146-115956a5cf26",
        "cursor": {
          "ref": "2f3470af-2550-427e-a447-9817f04cb066",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6140738d-eb08-4e5f-a7cc-7e8d84399ce2"
        },
        "item": {
          "id": "ede2c0ec-6eb8-47a4-9146-115956a5cf26",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "10132c7e-811b-485e-9988-bf59f22c4287",
          "status": "OK",
          "code": 200,
          "responseTime": 1544,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e51ca12-ac81-40cc-ae53-425d56481932",
        "cursor": {
          "ref": "9faece1b-73e3-4aa8-920b-01d6d88ae8f0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5681b630-93ea-43e2-81fe-cfacb84af06f"
        },
        "item": {
          "id": "4e51ca12-ac81-40cc-ae53-425d56481932",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed5abd92-25c2-42a2-bc55-edfbddf882c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e51ca12-ac81-40cc-ae53-425d56481932",
        "cursor": {
          "ref": "9faece1b-73e3-4aa8-920b-01d6d88ae8f0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5681b630-93ea-43e2-81fe-cfacb84af06f"
        },
        "item": {
          "id": "4e51ca12-ac81-40cc-ae53-425d56481932",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed5abd92-25c2-42a2-bc55-edfbddf882c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e51ca12-ac81-40cc-ae53-425d56481932",
        "cursor": {
          "ref": "9faece1b-73e3-4aa8-920b-01d6d88ae8f0",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5681b630-93ea-43e2-81fe-cfacb84af06f"
        },
        "item": {
          "id": "4e51ca12-ac81-40cc-ae53-425d56481932",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ed5abd92-25c2-42a2-bc55-edfbddf882c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f57898-49a4-4973-b79b-9540a0692087",
        "cursor": {
          "ref": "ba4c4619-fe95-4d39-bdf9-7361970c872e",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f3426727-8b5f-4594-a900-226d5cb4e581"
        },
        "item": {
          "id": "66f57898-49a4-4973-b79b-9540a0692087",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4418facc-68d4-4c93-a69b-1a1fc118ff12",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 318,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43e4dd8-733d-42d8-96ec-1219e794cf8b",
        "cursor": {
          "ref": "08711af5-200b-4e87-abca-988acca6a32a",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d0457403-1c9b-4710-b39e-44484acd499e"
        },
        "item": {
          "id": "f43e4dd8-733d-42d8-96ec-1219e794cf8b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3051b5f5-9928-4aec-bb7f-dfd4a094537a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43e4dd8-733d-42d8-96ec-1219e794cf8b",
        "cursor": {
          "ref": "08711af5-200b-4e87-abca-988acca6a32a",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d0457403-1c9b-4710-b39e-44484acd499e"
        },
        "item": {
          "id": "f43e4dd8-733d-42d8-96ec-1219e794cf8b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3051b5f5-9928-4aec-bb7f-dfd4a094537a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b809cf23-d446-4460-9517-6b04e4f526f7",
        "cursor": {
          "ref": "5f66aaeb-dcde-4be3-9f74-2845a068cce8",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "68c23bfe-b149-43f5-b2fa-c95d6567f980"
        },
        "item": {
          "id": "b809cf23-d446-4460-9517-6b04e4f526f7",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "60093f63-41d0-4ab0-acbc-83307386deea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 505,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa2963-58ba-4aa6-9507-7d7e44d6afe9",
        "cursor": {
          "ref": "7b0299f9-41e9-47c7-b15f-fdf3d8771cad",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "da1eb8b8-d6ea-488e-9fb1-3a56f474d0b7"
        },
        "item": {
          "id": "e3fa2963-58ba-4aa6-9507-7d7e44d6afe9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "58ac9303-f92a-4262-a38d-56db7775d3c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fa2963-58ba-4aa6-9507-7d7e44d6afe9",
        "cursor": {
          "ref": "7b0299f9-41e9-47c7-b15f-fdf3d8771cad",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "da1eb8b8-d6ea-488e-9fb1-3a56f474d0b7"
        },
        "item": {
          "id": "e3fa2963-58ba-4aa6-9507-7d7e44d6afe9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "58ac9303-f92a-4262-a38d-56db7775d3c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ccebf1-3e97-4126-ae53-e934cffb3e7a",
        "cursor": {
          "ref": "2f0c04d1-86b5-46c6-8196-2352b01d4b01",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ea1750c5-8177-44b2-8a81-0c00172768f5"
        },
        "item": {
          "id": "f4ccebf1-3e97-4126-ae53-e934cffb3e7a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e2b3ba56-10d0-46f6-9104-1a6cbf9d244b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}