{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7e737838-626d-4e29-935f-8ced19826038",
        "name": "Clear Cache",
        "item": [
          {
            "id": "253ec52b-4c00-49b4-b507-6741dd863336",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c7759aa-d8d4-4663-86a6-a7d6678a6760",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6077bf65-a6ea-44f0-a416-71ffab36e47b"
                }
              }
            ]
          },
          {
            "id": "1c9fde2c-6502-4b6f-bf74-e941286601e2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57331835-1583-4542-abbc-22adee285a67",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9085b2d0-0985-4372-b95b-ad0c447e1e0a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1aa52732-a3c7-4b10-991b-b87491aa40ca",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4ba692ea-099d-4d59-8455-1224d53a8e7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5045059a-7127-4c98-b99f-05dde65f2256",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b510cdbb-c9c4-4674-ba65-7c82193b4ce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2e9cff0-2c11-4159-9436-7c35c520496e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c08bc7ee-ce36-4893-8d94-0c306ac8f157",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc79f463-7277-416d-8be6-2211b62193a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19f0ba66-cabb-4515-9444-439a6c5cca0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a954209-f459-4a6f-93f1-a0ce2182b024"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebc8a847-6c8b-482d-ae5d-0b7fc3318b9a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6fb13dc3-1cd0-4d89-b778-636481655f93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3658cfc3-c864-41b6-ac97-bb37c6c12919",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "840511bc-377d-41ad-8c0b-7518bd980d2c"
            }
          }
        ]
      },
      {
        "id": "3c96e6ce-78ce-4be6-8c22-c7bca425572a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "60bf492a-d21f-4e3c-8957-05843885f1ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adaf2f73-9e04-4d0e-8321-1fb9d2d0ec57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "204346c1-5b1a-4e74-9201-c7ce8afff5d1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2602c34-719e-4a63-8b69-57239edaeffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b3634f1-0fa0-4016-90af-b9f9857e83a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868bdc8f-d734-45ba-917b-48fd5317896c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbc8338-6fb4-484d-b35b-c017d8582d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc87bf6a-da9c-4607-8b55-03ea05854dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3d4693-55e7-4014-8a5f-dfca935cf407",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5a73e2-c5f6-4f8e-a72a-dd38edfbf8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82dbe7f7-4179-4268-a393-a9c0adf37d88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a00bba3-fd85-40bc-bd89-2a7ed775c1dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b7afd3c-c1be-4b30-b235-5e74de9bd173",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e64af8d-a94b-4905-9bb2-84ba06e3396d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "475c20ee-47bc-43ea-8995-08e08f3ebec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cb3a07-fbbb-4574-ba33-1616e292380c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b4aa95-267a-42b7-9ca4-bf44ce3a658d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a82da655-34cb-4e63-a155-577eb9554b5a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b5c678f3-4d19-43f0-b99c-7235fae1db90",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98171c6e-0d46-4a66-9df2-34a9b9c8c543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b5168528-b389-4b2e-aab3-817cbe6699f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7ed028a-c9bb-4218-a9bd-91fe9d9fbb7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5f093505-97f4-4aa3-a11b-ad8e2d617351"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82ed6d9c-65b5-4884-8e33-b5768d34d400",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04ecb11c-1144-45e9-8a1a-f80a7ba19eda"
            }
          }
        ]
      },
      {
        "id": "391ef738-99ee-4800-b98f-01d5cad38cf7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c0c45398-50b3-4c5d-974c-f2fd5a3ffa59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "32f3eddb-dadb-468d-bbe2-0910d54c9c77",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cac40504-902c-491e-80b1-cec40cc7ff90",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f628b3ee-34fd-494e-a60f-497852bdbf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabe79dd-92e9-40c5-ad31-82a0d9f12d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08e16d7-85d6-4256-82a9-f95fb5a511de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed3f95c9-e8c5-4a1d-837f-58bd66390933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1731b8d-e77c-4ac5-9aaf-3ce0c62ca9a2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1435a19-25d1-434b-961d-8747bc3ed2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26f6a6c-0ab2-4caa-8537-0b6e877a6122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7094edf1-7afe-4b4a-8b72-5e6b6a9257bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb305689-752b-41b4-934e-05979dbbb100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb303d79-10df-4f02-be96-4f5f365074a4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e405e95-58b9-48c2-9ee8-38d2d5bcd657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4514e188-53c1-47a8-bda0-086637f88146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2138cbe6-eea0-4814-8a6f-6dbeb4b455fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "029f5cd3-0164-4919-9157-de41a082c4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec34c4c1-86bd-4c38-8f66-df4067563e01",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c58a969-8b3f-4011-8d35-61496157141a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc74108-7ab6-4bbf-ad3d-b7f18cc614fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a125c4-2205-41f1-a929-0d513a285316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dd25c82-a5c9-43f7-9c58-5eeef8e6cc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e02d85-e7d8-40fe-8354-4080152ffea7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88178438-264e-4ab4-a9a2-1400d32a257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4408b4-da55-4191-8af7-0de8565bfe0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26da323e-33dc-42db-99e3-fd6274f6b812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "006d6e32-dc20-4ded-8739-52b966b6568c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7496a01a-67c5-4523-85c4-bbdb51e7dc48",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8616d9-467d-4266-87a0-aed5959f7b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b78aa54-5a36-4fce-8952-01f506065b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ecf68f-adb8-4e55-be8a-2427f2a0faee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18394ded-3e63-46b1-b8ef-afce505f0a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4956765-955f-4339-ba85-74f74e8cdf92",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee585c5-4d5d-4254-8446-a3c69aea166a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb14e7c6-0016-468c-97f8-27af9fbd0fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675fc1b3-5bf2-4e25-ace5-21634fea5a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ee8958a-476d-4108-99c7-6948b2c06dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9496ae52-f6cb-48ab-9194-331833b92c35",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba93c8a3-9450-4cb6-8dba-0761eecc5b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c374aa-305a-4166-b02a-417284e11b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df673c74-e6e4-4679-8a98-22ec85fcdc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73ce3fef-5a69-4dc2-b4bb-30956ce9392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc5aed01-c9d0-48c5-86ca-0c509d447afc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd06f9a-2590-4e54-a387-c0cbb80dabf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d213440a-279f-49f5-8de0-0cd79e12c469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a7d1f8-d16b-436c-a938-d3cb9d2c2031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e76b57e5-0ca2-48d3-b92e-74f38068ed9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c41fa3-00c4-487f-831e-8a8ada08440b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca6eb18-3b9e-443e-b484-4356e649d803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fce5af-892a-488d-88f6-3fc226b55dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ca8894-95ba-4281-a0ae-8c017c52bd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e580724-4ba2-48c2-8d19-5823556059b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1961f4d1-800f-4c5d-b24c-6fad42fa33e7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54664b91-25cf-40ac-8d48-7499dc20b570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b812d70b-4a86-4a41-8749-7f8be74554c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cba3b1-32f9-4c10-9fe5-26151689d235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83d67a91-bb5c-46de-b82e-251a16c4eb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f010777f-fc95-4b37-98b5-fb795c480c2b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abadeb5-a87e-4244-834d-872dcde54663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7057d058-63da-4728-b9ff-fc6e3f0261b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bf0bb8-840a-4cc8-8687-b7ab92a935ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33fc83ad-95e0-4355-b055-df9fb7cc1d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d69688-0f1a-4e89-a077-426752877a5c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845f7921-8030-4d5c-81f3-888460ee82c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0c7452-fb83-417c-a024-ae7ea612c6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12eb0049-0fc2-4df6-9f74-36811a3c478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d07bfbf-279d-47c4-9136-eee0e9740196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd20232-1749-40e2-ae72-a4b414324dfc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f087df9-a1ea-4a7c-81bf-6a0a6c4e6eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1d2e07-153d-407d-a018-512024b6b1bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c638e843-5b35-41cd-9e0c-e3e59b60c515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56063531-1ca9-46d5-9393-9b37929c0512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f24e6fb-3994-4a77-87d6-73c8a251e5fb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e6fc05-3d13-4157-894a-7f5a07831e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46a1073-67ef-465d-8ac5-6f0fd12c356e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3200c7f7-2a0e-4c4d-b145-5f0ac106d58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d2ae329-ae49-4186-9df2-82ed8a96f91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb65cb22-c25d-4bb3-8e26-17f9a1d26a50",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bed55c-655f-4412-94e8-89845e13e031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d86478-d97f-47f6-b613-fd25dc0677e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b728dc11-045c-4890-872c-7a90f9c5449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0bdd0a3-dbe1-419d-9e56-1b884057b361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f067326-f4d7-4f02-b16d-52234a00058d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab1bcda-02a3-4b01-aa57-b585b6638c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daff2a9e-338d-4971-bd6e-4b59b2095f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dda000-9137-40dd-b8cf-041a2bd99ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37bfa055-01d2-4eb1-9128-253beea84f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baa68a9-4c2f-4c2b-b857-f6bc1238b282",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa851361-838d-49a3-82d0-211365316795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be69ec4-aaec-47e8-9d1e-a50c1fc42825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a924fb7a-79df-46d5-bff8-a392eff89eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f636bb9-f1e2-4625-8963-f6c21e15c609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d388dcc5-7262-4597-afed-6a27f5252ee6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a99db2-0375-498f-b161-7a29e69690c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592704b7-309c-47d9-b2e6-af69eacd38de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ed939-624b-4cb2-a25a-a9eeb3a7a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43d52c33-ef9d-44be-8229-d5a5bf1aa049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a57b233-473e-4a8c-8e6e-1c970627b62a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a46972-19b1-42f6-8c9c-e50e1f93cdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0c8996-afe1-4476-9c1f-751d4214b3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5becd85d-5f0e-454c-9c16-a492227846e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8900d5dc-547d-4a18-ba58-e6b64255dcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbadd45b-8173-45f1-8b3c-456ce4229939",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd6c346-0daf-4b4e-bc12-6d0922e2d35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b6747c-2b68-478d-a19b-0c235ae5d60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b457b5-e6ec-44fc-a0b0-8b2ae5c6dba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6c0a04-2866-4494-80b5-d71a0aca6778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62db8b03-aee6-4293-8c42-3b2c9fda1f3a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8f4d3f-2cdc-456a-8b42-94992773f38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b896ade7-b623-4c14-9b57-aac6daaee213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7cbea9-b054-4993-8b71-9fd9433a1156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a283edc9-a5ab-4c66-b9ae-695daf67b40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50bff41-80a4-42e3-8940-51b4a11aa49e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff7f323-d557-4408-be43-596733de682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa645360-e7c3-494d-a6ec-965133ff1ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb37231-75a8-435c-905c-7173ac30e60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1af6c35-bc85-4ba6-bebb-06d8d2484f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55480d5-5daa-44ec-85c2-7c0b1a481037",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d56a876-4827-4dd1-8c88-4861618ddb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b02bc8-6727-455d-b3a7-2427a124f8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6647acf-f12b-4672-8fbb-6aed5d653673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43d5952-4427-459d-9eb4-7582ba880d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd325e0-ba7e-4552-bcf9-291f4d1b2ba4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ca472-8eac-489d-83b0-8c8dc5e73a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61eecdc-2ba0-4f36-8775-b12bc75ae228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224c2060-5366-4a91-868c-899d88d26064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bde7d29-aa8f-415a-98b1-27230660103d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b07b8fc-48f5-4191-be03-0aeff0144000",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fc8bef-c336-47f5-bdb6-b3c638a68a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea693ea0-813d-483c-9a36-41b26062bec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337e37b0-f7b6-418a-9d60-360fea3b9771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca76b788-c70c-423a-af38-43c53cfc0052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad85dd4f-f0dd-44c6-b530-e09a8ff671b6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e980dad5-bc51-4ed8-b1d8-49bb10acfa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16795961-e079-4e01-a858-91d9d5e49502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c857490e-d3d8-4077-aacc-1dcfa1af7dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f28a97-50c9-48d0-8288-7b940c26bdce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a452e0b-7ece-49df-b248-ead896126d73",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f318c101-35f3-4f2e-99f4-da2ca333b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ca56fe-f0e7-41b9-9b44-f907fef03d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41703553-0b33-4b3d-88a4-78e067dbdd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5d9f2b-12b2-4ac4-a2cd-a77d314bdde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173df6e6-1226-464b-8a57-0131c223e2dc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bac06b9-96bc-4c02-b0c6-5f9ab1312427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1558c95-b425-4f20-82c0-527b8d3c64c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb655de-5f6c-467a-aea5-799137792685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa1b0a8-18d5-458e-bc0f-e71656510e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b18a478-e522-4550-80ec-6c36fc2d4654",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55561b09-caba-4ed1-b5ec-280dfcffc492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb12952-dfca-4e9f-a90d-29412ece16e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18c2f33-a981-4b3b-8e20-81dea59500b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad3aff8-e5ad-48f8-9fb2-35e289c18406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403adc27-732b-4cb3-a9f9-cb80f42da43f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7e15d6-e7a6-4658-b37c-13ff3dc30e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffbba64-06f4-4f5a-8915-b86ee3f425b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ee8710-fc38-4c3a-8a2f-b5175ccea59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b64c8a4-0623-4eda-b502-e40eacad7f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9314a8-7576-4d00-8c25-34cff1b03835",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04601587-2f05-4013-b78a-22548247ebfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbd2087-0239-4c9a-8b26-11218378901a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8843ad-016a-4414-bb9a-cbffa5f03c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "399d8748-6ca0-4416-bb00-e6ee9fb4734e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a76d53d-841d-43bb-b48a-a7a0b0bd57e0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d1ab31-c1db-4b09-ba48-c8b86cc61eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ec0429-02d9-4234-8c8a-b1896c7169c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c42b837-47fb-4ab0-bcfe-5f279082b2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2251dda9-fe47-429d-a92f-2636a9925de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ba5200-1e8f-4879-b276-71edfba8f134",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe86dd8b-5800-43d5-a699-174de77c6385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ec1245-c696-4e0b-95f0-67700705ccff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371a85a9-3315-46d6-99a4-4b4624490226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cddc461-6d09-4c5a-b49c-b693f41bbc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fd7f70-449e-4aaf-867b-11d00eb4eefc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc10e7f-cc8b-462a-9f01-486c2d810c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b337b78-89e6-4d8b-8181-be2fc9b2dd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472e3b75-f5f2-47cf-87e0-8ba2c9924264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "68f83930-042d-4f8f-937e-d9a173288480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe05ee3-1288-451a-83ce-312c1655cb8a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec69dd08-7459-4356-930d-c70606fdf210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1a46e22-e195-4391-bc41-5360338123a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c891acc4-c43d-41e8-a81f-c8ba4a982e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85fc0445-877b-4295-89f0-779bbb56f0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4543d37e-8f50-4dce-9204-b5464131f051",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce6689d-2194-4c80-b3ab-692ff6bc2c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e516e126-aa20-44ae-9c39-032071ffe136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59eaf082-e299-41da-aa20-917132b633ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b947ad76-fba7-49f9-a404-0b7060741f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346b4679-d673-44fe-b47f-2dafd77d446f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cffe4a-95e9-437f-a74d-b9e0a91b0067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc22027-6f8f-4612-995c-16badb372867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76639b0b-8b3a-4f54-a4df-2fcf1997947f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "73b61ce6-0d27-46ea-bf66-a97128f5cd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0cec72-7bf3-4aec-817c-ee6b87ff71dc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d3276c-a43c-47ac-a4af-49cef46ef45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4188da6b-d496-40d1-ac96-ca0ee2ae2d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1897c588-e3be-47ec-861b-913c32e19775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b91134e-bb7c-4092-8c0a-bc109c532033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9659d990-59cc-4e70-8d4b-d3b221c40fa5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e8f573-f558-4cf7-87c8-77891f8fa4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bbf55f-ee7a-498f-8126-9f517ba01a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631d614b-f843-4d6b-bcd9-d098fd9b3e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4787369f-7818-4ab6-af6e-5efba14295d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17123586-fd37-4826-88be-ebf13fca6d3d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44064b51-c598-4c41-8e73-9b0214ef4cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87350767-aba2-4b8f-a7eb-27dda1483048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32892bad-dab4-468b-bd33-ed00e9a7fc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8299b44a-64a6-4862-afe0-1c61ee9bbc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190a858c-e1e4-4c98-bba3-1d42e9403124",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea7d864-2441-4199-a010-53aac004b060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f984005a-8a4c-450a-80dd-c82a18ab9a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aa222e-89d2-4eaa-9d95-239aadf059bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "369ed68e-b260-405f-9c9e-127158ad368c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289142d8-1f26-41a0-bb82-778154db891e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be10a42-cd21-4faf-98ee-7318c4cff2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb563e9-fd02-4b81-9e2f-8ffb505e05e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48cbe2b-9da6-4ad6-8d24-946b176c9bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb09767c-3274-421b-be16-c102e90fe9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c08cefc-173c-49a8-9bdb-30c3546d4517",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b6680b-f483-4c97-82a6-a9d262a80cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a27bf23-0352-48e9-8b08-9ceadcb34397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f19e4f-47d0-4274-a477-24e450260d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd1f729-af93-463b-abe6-88a92095dbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb08060-a1ae-4bfc-9ba4-c308e36312c8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a1d76e-b53d-4fa8-aa86-b960ba376fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d89c47e-2e71-471e-ba18-8ea56242ee3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83e1161-d8fa-42af-9285-bed1d6bbb928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe369a09-c790-436f-a42e-731e1f16ce6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0d5ad0-a2ac-4585-a3f1-782d209d5cd6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae318c0-9afa-4d25-9c7c-8cb4ad9b904f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff4c982-ffba-4edb-8b39-8bf1ddbcfa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1dc32c-09a1-47ce-83ea-8bddb1bd2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94cf2b3f-82eb-44ce-b9ef-93192e565bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181a7058-8a14-499b-b6ad-f324517dc42f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858c574c-74b8-46ba-9761-f4652ee7696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447edcd2-3450-42f3-b538-ee79579bed36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a30c11-2123-4179-a5b1-3525fe347a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b47a6c1-77c4-42a9-be9b-df6305c7a1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720373f3-c8bf-4785-8824-92b278caca8d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8893163b-6456-40e5-8479-96c0512a3501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2765ee7-710f-4585-aeaf-add755655fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472edef9-925f-42b0-b8d9-f65a470ddc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b56b53-de0a-4746-a0a4-8371242fc2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15893a18-1093-4f0c-aa82-e3bdf306c520",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101bef84-46e1-4253-b460-6a5e57148167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a30e86d-66f1-4c5b-9444-53e3b504af06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038bf606-1fae-499e-a418-050b53949a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a23218-3b30-4461-b463-6523746940bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86687d2a-c90c-4e4a-be82-67a9cccb5800",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4636b40e-23ba-49e5-8156-ac1f05339ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9a85a7-cfc0-4df3-a620-d03ea44beb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d529f586-8d41-4aa4-b2e3-5e61aa3d410a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c14173af-a4fe-4623-be49-e111c8ed5117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6d1d6a-f44c-4506-b40a-2423edbce0ab",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356c24b7-b201-4fbd-9544-3bfafd4b5767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044994bb-6ff9-44d9-8051-92ef54526912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583e3569-ba8b-4718-a21b-75d6594e37d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fea7914c-0d52-4d49-b9c1-e712cd71ceb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9dd21a-99b9-4c90-b4fb-f9bc6ec31fb5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40c4c10-8627-4ff2-8ac4-775f16a92700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811420fb-884c-448c-ad9b-d73e89de5b14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477482bd-2f62-45a3-9e64-c1b77ab7dc33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b74aa4d3-db47-4e7f-b8fc-efac1a2fb139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80625d1d-6020-45c8-806a-90fd5a2ebdf2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fbef31-4290-4c89-8186-7ded8d838956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cfc111-39dd-4ca1-97f2-73284b7c1a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635f10fc-1d26-49f0-a8c5-1cb2e2f4684e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99ddee76-95b9-4b14-8ede-a5bd1576435a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafcc6d1-a4de-4b0b-944b-3fc8c11c9866",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d5d522-7c72-49aa-9f0a-23c85e3e79bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9ad99b-43f3-4788-8437-9ba267d7f630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be956e64-423d-4522-8c23-748b9b160d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48ae2cdf-3e43-449c-8daf-1452b2afdf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c860ba1c-20a4-40bc-94e6-020e0721eb09",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bb21de-5ab8-4496-97e8-b62e55784800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa157b9-0f7a-4374-98bd-8fac66a5f656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1dc2ec-8382-4a8b-8301-d05ab96247c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2daf1d60-869a-4b34-8fa5-d3add39ad604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8d5687-4cf1-42b0-901b-faef124a3d89",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5275bc-edde-46e0-b0ba-4df9e15a9a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e706d49-f453-4dd5-8aeb-5865e5c5de3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90baaf16-2305-42e5-b710-8e4c0a500394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "65de74eb-f588-438f-b1c7-dd29a1de73e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d20fbb-0463-483c-a24b-fb2aed5b5a99",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e935d97-8620-4da8-aeeb-d96baf6cd9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71de4c39-8473-4ae7-85e9-7dd02f24483d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9166bfa7-e05f-4386-959c-aa52fc9283be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "633b3a1b-4add-488b-a59a-4c12f8c1f783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b27c71-01f6-41d2-978e-ba141f16aa14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcb8c12-b003-4e02-ae55-afcb13d67733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b83b2b05-75af-484c-b12a-60478bbad455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7f6e6c-c23a-4f15-bd10-25af6256c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84f7b7a6-b436-411d-a0de-5a521e15ee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb932c9-b5c4-4c37-933f-09e1719e04ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c144b67b-4c33-4cc1-8797-020f573838aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108640f6-f4c6-4dc2-afe8-2b6f165578eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0328d6a-7b74-451e-bc8f-b91fdd287134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c87934-a377-471c-862e-088ec2a1a151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1967e61-c365-49ba-acce-b9dae1d7e8b4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04bbdc5f-fd92-4760-a87a-c68dedf05e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee539253-b20b-4c6d-9965-da79370abf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6b9eed-38df-4f2c-87e6-f9b03072e4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "08a0d4fc-ed21-4990-94db-7607c5799033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c051b71d-9a43-4fb6-99e8-68a78bd6ebad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e9d6cf-1f9a-4b81-9079-0ae890e7b48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef461dc-7302-4b2e-bd06-fc210e6a81b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8a7305-e551-4056-91c4-41ed23433692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "11bc2a21-576b-4269-a626-039310b12678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d8635b-aea4-4fed-9e7b-d6d9ca354d67",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8ad332-f781-4df1-8774-562c92aec0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64417310-2301-4f45-ad06-322270814ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046e685e-8687-43ff-b190-22570c039b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "edced0c4-a13e-466c-81cd-893b29d3f584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707ca7aa-754b-4115-93ee-04b40a0386a9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5fc55e-8094-4ee6-931e-9e7b65dc44c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a081dc94-c0bd-4076-a292-106989fac9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2ebedd-6212-462f-bec1-55670fa364af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdbde42-c837-4058-a222-c318b7e37d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334eaef1-e8db-4b69-8792-9f4c28497998",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4772e149-13a7-49bd-b4b8-4fd34d355eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb0aed5-1a4a-4954-9b6d-b10ad46b4fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb871c9b-b6a7-4a6c-b97a-d2a79860c3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1195eb3e-04a5-4f79-af0e-8950c2ad875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3fa09a-bc54-4830-9ec5-f0dfea6a1431",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f56b9b-9e8a-4014-b7a2-9f4247148cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd81d2ce-f8d0-4b94-bf72-d6454bfb97e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce11f8a4-6853-4ef2-9d7c-f8ed069e98f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b848ddd-7de3-4d07-a6bc-90427e48c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16884dd6-10fc-44b1-a38a-9fc01a18a3a6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c3b82f-e1e5-443d-bfa0-00a7ff6df757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa37f144-0522-4a4b-a7f3-36968a54343f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026fba1d-1ac2-4697-bad7-82af82cf0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1298937-5224-4b83-b862-0524aae8259d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cfb715-5e68-47bb-bd90-c9b648e4a89d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea17eda7-2ff8-4b48-9e09-392897bb83b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e26cd0-e487-47f6-9c8a-4feb5b4a4755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c07201d-3734-4db9-979d-27e7f36c1970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6747d9-1fe0-429b-af22-8b5bce82ff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de28eaa0-3e8d-45ff-a8d1-9d68e798a767",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b2fdf5-4b70-452a-a213-930ace2a9349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c48458-3735-4ec8-9111-d89a92d44a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119a472e-6ace-4987-95ce-cd62589cdcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "940163b1-e627-404f-8b2b-cba4a0b74a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aae6bda-a7cc-4b04-bc67-7a50adce4fd3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec995880-0ce1-4f4b-b7bf-88540d4a0614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967193cc-2895-4966-b320-c5ac9e12c0a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fca518-3eb7-4f7a-984f-d62b078c35c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9b3f6b-236c-4c8f-aec3-883fe1dd46b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e06e87-aeb7-4f77-b807-fdd6935bee15",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8e96d5-7ff0-4def-b32d-0609910fd694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816656d6-25e5-4408-be6d-b009a4b86b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc347198-f131-4a25-98e0-959938a516ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "334e853a-5224-40ec-bbef-acfe7c5b2244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d438f9-af6b-4883-920f-ee3071101512",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c32f91c-26c9-4eb6-97a4-962e4e830647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9f55f9-537b-4190-b24a-dc972f79c118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767e85e7-8602-4fc5-bf47-52d6aca03e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80f33007-bdf2-447d-a632-4f5795be1a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fa9928-8538-4bca-ab02-d0f335579305",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660ac9ba-4ed8-4670-b94f-5d6e0a826e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c3ae1b-bdba-4fa5-b04b-97120851f249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071cda5c-b775-4df2-93e3-2e062ea8f694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed077499-fd0e-4f57-ae0b-ae8b0369b4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30391f7-2eb0-46d5-8f04-8613949f910e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d76c3e-6020-42db-94b0-e3c9a5b997d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "796c57f8-fedf-4566-b014-a637f827be08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c1a337-11ba-4007-9aa0-3698d8a5eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eabd2e1-614a-4064-9921-b5745f6a5dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41318b5-db60-4b63-9b42-702577af7d9a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16e9855-8b06-474e-a728-82cb3e2f5273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95abe6fc-0a96-4ca7-9348-04c8a4754973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6e7aec-9fd6-4877-85c0-4641aac35f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d362b179-dbdb-49a5-bac4-06b7e18898d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c3bca9-c902-4627-b550-7665e4829650",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb948db-def3-4922-a101-6a199f6e8d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324aebc2-e18e-4a83-933a-46737261d9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771c3ed2-c315-4856-a1f4-fc77128e8057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8c4015-13db-45af-a86c-5a26c6644d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcb6e06-1f26-479c-8610-3c898c89f4ba",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c3b16c-09f2-4ff8-a919-ee6d8f13950f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88591800-0d1d-4b1f-8744-7e0c08448878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e47562-d14c-47aa-92e6-e3aa7fa6e2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd334602-a611-43d6-9b5e-79854753f5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e129f61-eaff-42ce-9a5c-b1a1a9f50161",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be014ed5-2eca-4761-96db-371e83d7417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5db22ae-0350-4d8a-949f-b6dbc383b433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73465eea-339e-46e3-b4c7-b95f89be426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84dd4090-eeb4-42ab-bc8c-4cf063a2f87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1dba4c4-d28f-4ec0-b23b-5772defc25a6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e978e0e-6be8-456a-b676-e36af329e889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8db0234-8565-45ec-9cc0-a2325cd69eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae3127d-a435-4991-a5ac-7f6f5b6e3385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc72a78c-cbb9-4850-82e5-18a63fb02c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2e10fb-4be1-40dd-9489-a01e7fe0aac6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463657c5-961e-4606-9a3f-7bf77ddab90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5530e0f5-92d4-4e30-a288-b73e9b5a679c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c6698c-4672-45c3-841b-b5b2ad5c3075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aff5f9f2-3816-45ad-8aef-4c1f280383f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc18da19-faaf-41c6-8ad2-0eeecfdfea52",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d45024-ad5a-4351-8636-61b2aaf3953b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5540aa-896a-4862-936a-a05732d3d8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f27f94-a03e-41f2-b309-4f7af656c040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24443650-87f6-4d63-9121-d8591f88d73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39662210-02a1-4e54-abc5-d832d6601772",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2fb7b73-d434-41b0-8c41-ec88bc3dfd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffc0de3-a05b-4397-a859-5207fac2ecee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e09142-4cf2-474f-bedf-d7f24cdf63f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c4bcf1-cec1-492a-9de0-fb6a20a2b340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204c3ae9-635e-4892-9c2b-6305e24f3477",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac7b538-838f-459f-b3d6-bca896eb9cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ded451c-a6c4-4929-a8bc-2b07af3a1a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07749f5-b1be-4fba-b58a-ba7c1380fbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0399c558-6394-4322-8299-d1ace6bb2869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9de652-b806-4135-9319-cbc65137441d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39429bc4-3c38-4f61-a76e-2b19bd3e69e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba702a9-0ce0-450f-8612-648bc9a41d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beac767a-87ae-4d4b-8b5c-0c1054a81cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "339667ad-8276-43c5-b4a6-e17a1119673e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b94407aa-ed29-42b9-9a12-0eb62795c837",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750f3455-58e1-43bd-a474-78c54f477fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df4c1e05-cf5d-48fd-b58b-86bbedea5cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69d7267-9fa7-434a-9dc6-069de39bfff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "456b497c-1292-4591-ad3c-98a9a57c4a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535bee65-3191-4241-a362-a488711a191a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8a338b-9a21-469d-9e49-4e478b44887a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e98a046-e3a5-4842-b6ae-e3629ab746c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee809ed-615a-4d14-8500-9179912717cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c831738b-0372-46c4-b33b-e9e4c8ad3202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3a30a0-7d72-4f97-9c86-5bc16873b045",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9c2806-e6a8-42aa-8d52-1ae1f3ef733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c82e95-44fd-4325-959b-dfc028e90893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc5a43e-b7ee-47ff-ae2d-cece4740fa07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65961f40-ef79-421b-8f1f-3df0b610e23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed6e34d-227a-4404-a77d-ac9aa440cf19",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf704f6-d2c6-4b7e-95f5-1ceb78f1dfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452413af-f51e-4827-9dc3-961cfe613f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2aa6493-4a06-4b96-9f70-afdaa20799e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c29bb7f-c86b-44f4-b081-41274aeffb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56bdc7b-0d01-4ae9-9364-da0d3ff933e7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d07c11f-7879-4941-bf9c-2f272c674576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da0c60e-4d5e-4b35-84c1-a415f1a3276b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8a8599-38f3-4562-9b78-36b29202f1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba984141-a527-4fd3-afdb-3c3424bfe2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c80e34-1969-4428-8ad8-7e5e94fb193f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45cc82f-cc53-4ce3-b8e5-bd4ff51ca345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599ec280-8299-4d46-a5c8-930d1dcd4491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0489ef2-ac2e-41fc-a8e4-ecf418d2a538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11a7d745-2e34-47ee-9d40-8e01c9abb4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2901aedf-6f62-4004-8e97-7459c2d2c7b1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b836895b-0e37-4d76-9961-25cc4616dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9031d84-6b1b-47cd-9c46-90c0c98f6309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9990b624-cbb9-442f-ae0d-bc3cd65bb066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f3bd2b-1f13-4508-a37f-4c825029e785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c5ddfb-8c9a-4e34-affb-dfa0d693a505",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b91217-4b56-4b54-b621-3e8c6f37ba8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041d050d-e089-42a9-85ea-51c7f3291aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8869ccd1-46ef-4a78-93d5-17fa0dabaab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ecc6ff-f1c7-4e46-8950-ea9b47643761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6378d1-32a6-4fd6-8834-2e42d347c5ec",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060b6e46-bd89-4119-b231-5d8b2088be5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "66ae7847-a518-421f-b868-ef735f39cdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fe5463-6d7d-454b-bf2d-82a1d56f53e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3bf9c1-fb8f-4207-aeed-78aa09c4108e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55d78835-b1c0-4bcf-862a-44c08b1e30a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08d3bd54-ec4c-47ab-9c76-77846048cfac",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f1b56d-65a6-4565-b4ac-acc5c34d9b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dfa027b-abc4-47ce-991b-ec6e49b10788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fa70d7-b601-4f65-aa5b-aaf7d63d2ed8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51deaee1-5af7-4486-85b8-f10937d24110"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e8ec586-e63a-4ae8-adcd-f061565a657c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9887bc0e-0553-4800-9f0f-f8e9082ae0a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "642910e5-043a-4ce1-bcd8-e585958f864b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e41e7e89-3995-48e8-a712-4341728bd007"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0eb0a32e-a1d4-4618-acb0-df197297652c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a53669ff-8dcb-489b-a891-f2f237225637"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd6358c4-c428-4b18-a2ad-3df5217f40b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b585706-1ff8-45c8-bdb6-5ff7dd922c4b"
                }
              }
            ]
          },
          {
            "id": "c68cf89b-f8e1-4b80-8cc9-39b7da6b5c09",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1165a1d4-d405-4696-bf85-895bb6996969",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0ba78cc6-2523-4358-abdf-befdbf40658d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ee95e8-ab40-478a-9cc8-bbdc5259d8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4292666-9dfe-4ee4-a7b1-dca72f1b2409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b2066d-bf56-46b5-88e1-66c58a0d5213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4dc8f8b-79b9-47f6-9bdd-5dc06b4a1cdc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19b22910-020e-4f43-ad66-749f3daca1fd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77108d14-1c19-41a9-95bc-56204b086fe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "843219f6-6ce9-40e0-ad80-27e1726e19e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe3b8153-c0aa-4586-bdff-79163e104606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "796c2e05-c652-4b83-9434-42b0ad1cb1b1"
                    }
                  }
                ]
              },
              {
                "id": "b6699a6b-79f4-48a0-a049-7ca862e05a63",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d267b813-191d-4485-83ab-33638fdfa308",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "621d0f12-e3c9-4b77-b4c7-48942fe7cc58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a824c301-dba1-4bf2-9e17-67b9db3f9728",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a99e987-788e-4941-a7bf-e7de68a471d2"
                    }
                  }
                ]
              },
              {
                "id": "fb70a31c-cbb0-40ef-beb4-4fff3e7d70a7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d30b056-c3ec-4304-a186-6ed0a922ffe5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47676d21-b0a9-4942-b24b-b273d7d2d954"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91f055a2-bbf5-4ba2-83e4-deaec30c5a56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d08bd56-88c5-4173-9e6e-e0291ba5d4b6"
                    }
                  }
                ]
              },
              {
                "id": "11bed2e4-bbeb-4d32-80c6-13a5472751d9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25d0d7d8-3847-422a-8c5c-b8442fb0ec3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d42d62f-e07d-4bb3-b92f-2f3017ee23e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08a9de4b-2549-422e-9881-ad91940d2e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "92dc3181-0903-42cc-815d-275aad21bbcd"
                    }
                  }
                ]
              },
              {
                "id": "f7fd3d26-0b6d-43ca-943a-86851df4b757",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d44f7d3a-58ac-4380-b9da-15b9ae4a29b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7328599-f27f-43f1-af6f-ac052e6323b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fedf1359-2d5c-4bfb-b167-26f81ced19fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c3a48bc7-16dc-4b8b-b253-40f25b5d1d92"
                    }
                  }
                ]
              },
              {
                "id": "001e9065-64c0-4df2-a018-a62d74b3c5d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d90fc0e-6da4-4b7e-84e1-b4e08ca7e26a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02f9354b-b370-4c6c-98c6-594f015fcfb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71c95e77-da70-4a9c-bb91-2cbf642d3a64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28bd5855-cd8f-4719-b930-c66595cf5507"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "faa68467-5b1e-41af-bab4-e33271dc9c9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b483cca-e884-47c2-9027-09f3212ad77e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9fedb10c-b39e-4cb2-bfc6-9ab6b93a0180",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "878cf79e-df02-4d4d-8779-3c5f77056d92"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04032bd8-00e1-451a-afd1-5d0490821585",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ff5c6276-9e1d-42e2-8d71-d65d83a29950"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cc6240f-2395-4515-887a-cb54d65ed70a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "315b7722-ca52-42da-b9aa-0c5d7e4caf00"
            }
          }
        ]
      },
      {
        "id": "c0dd30b5-60d2-4cc1-a187-389bd705131e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d2200b01-bbd0-47c5-95b2-1fbb6c8d8ad9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12f8a4af-f9ed-4070-b0e8-d6e3a58ee004",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82058000-9143-4009-a22d-d5d028296a10",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112aeb17-f6e1-46a2-ad23-9d39444443d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47287bb-054d-4560-b2af-d646a72b3250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e20f7b-8be7-474c-bd81-86a5b786bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "19236b30-6730-4ad5-abce-4d1adf8216b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dc2be4-ab78-4670-9d51-ad2d60aa22d5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871da318-83e6-4717-ad73-2b0bf6de5f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0985da-3b8b-41a0-89c2-fd6207e1657f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cd8b3a-efae-4b32-8fca-cd150ca4a3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f012c9a5-2739-4980-bbfb-394cf118a368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef703287-1e9c-4673-ac92-63363822a55c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18d03ea-5774-4daf-b7c5-abf23f14d72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485f7dd3-d2e4-495d-8812-4eab39e1c814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a774e-f01f-4602-98d3-2d2de6719356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21413904-6ca1-47b9-b9e6-d23c093cea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bec0de-b650-4919-a82c-5c122e03f859",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b169188-0191-4645-a4d8-c0f8c40fd0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ba358f-2645-4791-a6b3-1cd7a5cb197a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f91273f-2236-4339-99ac-6c0f59940de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79c5c6fb-4241-4b53-ad4d-4e62b930b5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f7ed2e-7945-423f-a01e-0a0fdd157681",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7c3a4d-79d5-4ea3-8fc2-5935b0b70dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9bdde8-65b1-46a0-82b5-98ac885d3141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71260a12-79ea-42c1-8dcb-35d4daabed6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ce4a33-d718-4939-a478-292895b79dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562a55c9-0b92-41b0-ae4e-f5d238ac4cad",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174e60ef-5870-4045-85a5-14b35df0af83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ae52b4-a0b4-43c8-bf87-13133b7de5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc1cad2-35c7-481a-9b6e-692a36b66f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc8d482-e007-4929-8966-89a295d8c9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ca1a05-23da-43e6-bbc8-e031065f6686",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa5eccd-7312-41c5-8d52-ec67ecb211e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c4ef7f-e53e-4ab0-8723-cd0509912467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5148695-2f2a-4002-a736-b9f19a1366e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd8821f-8e2a-4b82-9863-024a6736f641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b465af-85f5-4ade-b310-88b01b8fc356",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78a7919-8461-4dd3-916a-c8ba12eb6d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8830c9f-2e96-4f16-9f78-45b4497fe6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9676de8c-aea2-466b-ac09-9add742a6d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea8507b-6570-496c-b55d-0e27bc4b533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a577340-2ca4-4b75-af6a-da7034eab2fa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91948c0-a68f-4119-b8cb-e84b005f29c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c98180-c822-4356-98b3-3221212d4472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992fd995-0ac5-4d1f-90e9-86fc6a94a037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d99588-a133-4e4a-afcf-0a0ee4957b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb9b2b2-1df4-4faa-abbd-b5134520c381",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3a2428-0232-4ca7-8919-7d15537dd3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a06d3c-ae29-465a-842c-416568061375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b143f55-2df7-4b6c-9d50-1053e3ffeef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72de88f2-8169-45fc-b667-6508c9097283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a2a156-bee1-49c0-8ac0-41e84e8026f3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2125b155-a124-46dd-8f20-33716045db5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3d7deb-43ff-4776-b01f-183e8a8365f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cca209-ac8f-4ed6-98c0-1d60046b896a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbb62bf-6cec-48a1-8539-272289ac2a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af44350-8788-4751-8780-8e016824e5a1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5898f68-88ff-4f6f-9a2f-c4a2c7054111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1387051d-53c2-4d2f-a769-415ebcc09d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380d9526-e01d-4c9c-bffc-f7c1bdb69614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "762ed075-5a75-4f55-9eb1-d5ba5ef9eb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa2e14f-17fe-49f0-9b08-358a517d2147",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb1ba21-16f5-4e07-83db-87d7fd8a0170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b668bb-8562-41dd-9d1a-7e193e1aa9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be81e3b1-9394-4ac9-94bc-d1f65ce6cfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "001845be-a4a0-4b15-8c2f-4b4279756cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9a7082-bc77-46aa-83fe-c2afc6abb1ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1379ea-6f84-4684-a3c6-d45a47627133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25383d52-d2c2-4c4e-824d-fe841b52e36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3cf678a-f5cc-4e18-b639-1d1df1aefb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8edb67be-24d3-47b1-930b-19b12538b6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc70e39-185c-4d1f-8996-be42bceb599c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbab8985-18a9-41c7-aa1d-143ada40e896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7c011f-da09-42b5-8e2d-0ebf9af4854b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41e47f7-703b-49f8-9852-d6319ff7832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac3eaa1-77c3-49c3-9ff5-c2a54354c766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6debd6a9-6511-48ea-b0b0-cb91eb69e125",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca46263a-cf53-4908-a589-4d55bd08e1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20ff2b3-5687-4835-956c-9cb59f66ff0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78264b12-a48a-4b0c-8406-bbb2e3dd0e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d879bb-79ff-4f3b-bf70-1c61adfdfc32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f6dd34-fdf1-4d53-ada5-f50379aafc46",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30837704-0e6d-4693-be3f-e7903711280b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0192e2-188d-4210-bf2b-783325be5371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a631bd-c60f-41d6-824d-40de905f2c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a974bdfc-a108-4f90-a576-c68df024fe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5201157c-878c-480a-9264-2f957779c489",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683a74cb-b3a1-4be1-85b6-c8c380e16d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e299afbf-8220-43c0-8189-5b422b0880b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb69bb0-3459-40ef-9a06-3a81173678a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5133b4da-24c3-4829-8028-0f00478836c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320cb3b8-0db6-4a0f-bf60-a0fea0d1ec1e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5add1da2-2dd0-4bb5-8396-d334da4f6e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61ef6e2-319e-4f65-a544-0c3a18ad1e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ead5f2-9316-43be-91a9-664f98f3975c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e482c7-3dac-42d2-96eb-5c96a4b0162b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e303f23-b27c-4334-b155-70ea235fa574",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adeabb2-5405-4afb-a442-ac27ddec3313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbefda8d-ade6-4695-8abe-04903f7e0477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb90ee0-5518-459e-9ac4-21cd00e42036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29612f3c-583c-4be6-b63b-4affc3f16793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78effae4-d674-4157-afac-16a5bebea2d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08110eec-007b-49fd-87cf-dafe6a6c5d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6ee378-95dc-4716-9345-5d88cd7bcfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba37c636-bf95-4b00-b1e2-1ba317391335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22f02d2-bd04-4caf-b25c-5d822931e68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caf9295-c23d-4152-adea-7e4029d00a7a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ec6a2b-c955-4824-a32b-043a41538472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db76255-accc-46a0-aa2e-80d36f23eebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31236ebf-0e23-42be-8ad5-a94f2ff4cbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adab20ce-1ecb-4d6a-a294-cb4ab1caf29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd639d6f-6f4b-4719-86b8-a9aa518261b5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b9af9b-745e-42a2-b640-fc252b3ba975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a48aedc-3b2f-4796-8ea4-a6b810fe77b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e84be7-ea9a-4b19-aa8e-050bc23bb320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f46815-b107-453c-aa9d-ebebb47e1a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720cccdc-1be2-477d-8546-64c834af7a68",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2515f63-9471-486d-83d6-36e70779875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31de2208-8783-4174-98e1-c0d3f90ae087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da51d442-bcd1-4bba-99e7-c920febd9ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad545859-0ec1-4450-a912-85122e35bd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca2e94-23cc-4de2-93db-d1803eab6c04",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88387411-2045-42f1-8749-43f2bf0e918d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bfffe7-bf2d-469e-ad6f-3b96e37e5088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d256d4e-21bb-4891-b620-dc53378a8f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad403ab-d50b-4bdf-a96e-b42847e3e670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7870e82a-ce5a-435d-be0d-96495a4e93d2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe76540-1bda-4620-aee4-eb3e185c2d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f40654-6911-4a00-b99f-d2a8e49be5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb80c42-44d7-4167-9cf3-3fcc359af210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "253484fb-f1b1-47aa-80fc-e70c02f519af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cb22f8-b08a-40ad-b534-4e05deac3179",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de66d6d-cb1e-4fdd-967f-74696a7ebc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f44975-ee7f-4d86-93c5-c9c4ec1f97d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bad9f6-95de-45ea-9fb1-3cbaa833aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "789164c9-3791-40e0-adb4-dd5a05213c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdf306d-0d5a-4808-88d9-272b14326644",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb23b86-e182-418a-955c-f4d4a9390b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d24965d-993a-4ead-a010-a070fecba7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965541f7-b786-478c-a48e-e25ab3120b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebdcb58-1dd8-43f1-a89d-b7964a60b4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b9bef5-b301-42ef-9050-ac541930ed46",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10e1b86-c192-4759-b877-e7f09d23e0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e637eb5c-ae7e-4b88-b628-6ebbea20b268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2693c8-6415-4c94-909c-3eb4f7b2836b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1522511f-1fb6-44ac-bd1a-5e6ceb94030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6834c32-ed63-41ae-9323-93c324333f0e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b05576-a20e-466a-b2ca-c2702dd1bd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ff4b31e-0da6-43a5-a336-4d13b7581e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2636df6-3cda-4659-a590-c3bc5096219e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6381702e-5643-4e49-b784-9e539b8debd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e3912a-f316-4690-8511-c2457f3cffab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bfca9c-b77d-4468-8d12-8c1de8e0ef92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d74c8c-9971-4391-ae64-3c08e3b15b57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8e032e-de33-4721-b032-6b1b54b53a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af0dfd9c-fffa-4b67-9d7b-c6058707cd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17708ce-3bf8-4a67-9083-6bc277e6cbf7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfb33bb-8370-4dc1-a980-8ef7c0e51d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4acdb7c-6333-48c5-ac3f-867428d9d50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e510a4e7-06bf-42b2-85ab-08d447bf9433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b852010-bee0-4c89-a52b-8f5885982269"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b7bdfb4-c7aa-4a64-90ff-2d1ecea418dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76504240-956f-497c-925f-9023baa82f7e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04cd394-96c7-4f93-ae15-2923aec6142f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b93f9baf-4290-42e0-9148-2879c60d7f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c99134-e6d0-4bd1-9aef-c0e3e2743221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54f461ba-94c2-4c1f-be3e-22c7ba40871b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbac78f3-a5cc-44a6-990d-fa3616b4fd05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4212a175-efce-4873-9014-a4f0d040663e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e01cef71-4811-471b-8e44-688b67e408e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d473efbe-20b0-456a-bd4a-d2105faf070c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42529e80-cde2-4621-aa78-0e7fef18558f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4738da6-8e85-47b8-aebc-b3205d644f9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a125845b-dd67-4237-8241-433e73998743",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36a6b770-1132-42c8-aa91-25c0950a9b0f"
            }
          }
        ]
      },
      {
        "id": "32a73ae3-098e-4756-bc27-f225b36eb279",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a1e90e7c-0458-4f20-9c00-123d3af15dae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "95c5c2a6-9338-41b8-9b8e-5a4896b0a279",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "323ff6f3-0f66-4968-a6a7-2a87ed0126ec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb810cf-cc73-4bbe-ab8e-2c9ad91c194a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb13489-b144-4735-887b-a7f1378de0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d2b4ac-61ce-4046-ab16-0d254cbb8fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7341eea-3fcc-410f-b1b2-441ea70cbb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69de64d-4238-4822-9fb9-e58192525388",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de78a2ad-7e75-4630-b424-d721cfaf8c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8594681e-987f-4bdb-af9a-b1b23df15e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb62c087-3e04-4861-acba-f291ba9b44be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6b38c3-b70e-45a8-a39e-9dd658d396d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd2f585-d72d-4514-8fa5-232e830d1d0b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f19672c-f149-40d8-b8e2-cf00678a6a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06bccf42-41bf-4ca0-b6cb-1b71bda94157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c545121e-597e-44ca-a5bc-298843ed0b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e720e17-c7e2-465d-9290-b71d6a30303c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806409c4-5e41-427c-bb98-3a7f7ca2c60a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f796bf-69c4-404e-a1f4-b51ab27a2d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee64377-eb7d-4eac-8fba-4f877d457be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5cd01f-cb1d-4cb5-ae8f-9877efdd6ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b48ce64d-eed1-4b83-bb3f-c615df2027e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f67766a-536e-4132-96b2-bf139bb195d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574680a7-15e5-49da-bdd7-62cc529c4123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0389bcd-8a32-4ad2-9eb0-bab4fa5f6d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9745c4a4-af58-4be6-a6a5-99eb20d6183c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ea4343-1e0f-4d78-b1b7-048d8739e4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef24467-7d92-4a10-b9c3-5afd44ce426e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082fe4aa-31c6-4700-af71-ce0b3bc4b2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c40ad78-8036-4fb7-97f4-d53014595671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9ed5b6-757c-48f7-8dff-8537903e2716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "227c167a-ed64-4520-badd-69f8b1de48c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8613ff-e2a3-482c-a303-97c95716a0d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce5f090-5374-4aeb-9464-bbc6e28f1b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f0571a-b07a-4935-b66c-df0e1c79f3ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8d6840-116b-4b7c-9399-dfcd5a2d1594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de4447f8-6121-49e6-84fb-2345aee789aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5f90a5-fcc3-4f27-b34e-0232690450cf",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d03cbf9-0ea5-4dad-bd97-805995e45610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6496eb42-56da-42d4-b90b-d6be86017a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6206afbf-a4c7-4b72-9c7b-7d533d6ad4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21f89dc5-9720-49ef-9c94-10e9f89367dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecf0c33-6314-423f-a4b8-ff5eaf216c98",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cc3bc0-d048-4cdc-a44c-ad6abca7be07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb833f7f-e667-42e7-9fa1-4bce3627c4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d49a6b9-006c-4bc8-865d-d1345a62638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "906558eb-b29c-4e65-921b-d0100ae98496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9441bc2a-085a-4162-98ff-08ec5f620e6e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d884ce3-18f5-464b-a41b-144a12ddf426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58a3d05-1b80-4bdd-90c8-42743eb3f99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f31dbe-18fa-4830-ad05-3f88fa0b09f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98222bc7-429d-417a-8408-121464153b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f223f62-6d61-4721-ba1a-b0fe3ea16ee8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d585332d-afac-4856-92d1-81750cf7e508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9524ca5-c91e-413c-a08d-215a088a6320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ceb74a-8011-468c-8831-00e7947f9221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f440662e-4abf-43b5-85fc-9b01c34ce1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ef9a61-79e6-42dc-b5e2-6e6213783527",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d6b820-9e7d-471d-9051-089be009458a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde03258-998a-4b08-bf97-9297747fac59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7543ca43-138d-4664-81fe-eeb65c0045f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b98f7574-2eee-4e85-83af-cb8d2abbccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7bf938-ea4b-4f19-a362-65336868ffe0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7c68a4-50b4-4844-bbb6-62e34f2b9a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b76a6528-e29b-4779-841d-a921810ab711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef120c17-562e-44e6-b084-3bb5f7fea0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74fe94c3-c9dd-42c7-9c93-7437860a36b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593e2167-7468-43c5-8650-da831ff101d8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f83fb8d-f8aa-4352-831a-66caf4cafc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72410aef-ea8d-42bc-8efd-9e2aeeb6af9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f57c29-4f08-45d1-a30e-1b2215824925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ca3663-5281-4408-91c6-8a857fc0640a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acaf1e2-40a2-43ec-b2e6-6bdedcbbaaa5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0710b95-d5fb-4846-b4f8-0de24548828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193c2f75-beec-40ef-bc74-936695941601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0171fa-a975-4b3b-be6c-c9ba67d85c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee836a34-ba12-46ea-8e70-b6211ec0c26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e942de0a-381c-4a0e-b650-d178d7a06121",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacd9b3e-d6e1-4e71-b47a-323e7612f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d55583-60b3-40f1-971f-9b24877ce796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c5cf32-f29b-499d-8d91-f93108645ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3494ac-f257-4ebb-9f12-a0ad8cb3f68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6db9c04-4bf3-4b08-af7d-f04423cebd61",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81225122-c563-4e85-8f30-3f68cf6a9167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a94d23-4904-4f55-bc8f-d9b9d32afacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcda7a3-4c82-421b-9f03-4263cb079987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "82a1d48e-f0d6-46c2-a924-bfcae4c692af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79b5b46-8fe7-4e88-8a45-8b69c8874968",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ecc5f3-b963-42e6-baea-9f61fc4117ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd80f0a-d23b-4a2b-86e9-c4c36144a604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef74dfa5-1658-4974-a7b7-ad28d82a4fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "146700ab-ab48-470d-acec-90e315a42844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4165c652-21cf-4af7-82a1-b2de956167f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ededf59-07b4-4c06-96e2-36b513fbf904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff9ac91-e4bd-4ac7-9d3b-b34153879a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a044b49b-e9d0-4c2f-8e7c-8e4ac8a84826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "676f7c37-a86a-4d58-a153-5c1666c44599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc8cc34-bc05-4c39-bdbc-c5de03246250",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873b3069-be8b-49e3-ad70-d42aec4fa5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94f3f5e-1373-4682-9b4a-4d0d870e60be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1a59d7-6946-4520-9124-c2084f5e3792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f618395-42ad-4bfa-b828-f17a531c9c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e3053f-9320-4023-8a26-8416da1b277a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb65ff4-7135-4b20-82bd-ae2729e3df8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aacec35-0e5e-4da3-b68d-ac6ad057642b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293c6578-8461-4eff-a896-3d2c7946b95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5824b835-7101-4ec5-81b3-f911189fa670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c722fb2-8cf9-4546-ac3e-76204f2c1f47",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cfb9bd-1fbf-4252-a2c8-3a2a909f2396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4dd5779-4217-4d17-a1b5-1045c5b4da19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9dafe3-e6d1-4ea6-8a32-e48a343d3eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0922b6-e2d7-4772-ae49-15d5f8fd15a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f27a5fd-c2ba-47ea-a5f9-bb6b108a6e93",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5852e12-7098-41e1-83f6-e6725b373035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce1f3e0-b984-49d2-b552-48dc72d0a98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46562d3-2fe9-45ad-b44a-2c1da67b8a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1e1a2a-61c2-4085-a0b5-b8d8b23376f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c11794e-ec6b-4e52-aca9-172bd789b892",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475a7332-03df-4732-8a21-c8057a8bdb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94bfa1d-0371-4d6d-a17c-08e5becd25aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8b74be-31d1-49d4-b8c3-64ca3416371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f413049-7cdd-4803-b59d-e4b22b12b71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d62e23a-8e79-4c0e-b241-969423af5bbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe624612-0370-4de4-a389-b4de9b7e8dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214ffa0b-2807-4255-bd00-68f2c0611b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1763d027-c1c5-45e4-97b6-e8b074f78267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3995e3aa-f55b-4438-a331-8819e049e239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf4f514-6946-427d-a51c-57f6a44f9525",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b219644-1278-4ae0-a4eb-0afd6a71f50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b858d0-fe0e-48b6-b3e7-d90dc6ba01a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0559bb84-54a9-4aa4-b051-31afe379aa50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5657b84c-793a-4986-b757-abab11beb14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0213d5-0c59-4831-a7cd-f819342c3f04",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effb8c73-d4df-4d2a-92db-bbce21c5d984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c51fde-4f49-430d-9edc-398143ae5dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d2e663-66db-4f50-bf6c-017e64731ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c6a5b0-291f-4fa5-b9c7-e130b4bf3234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaaffef-5be1-4155-9fe3-f585b0bb5dd6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34fe484-e7cd-49fa-bf55-f875d4e4ffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9d752d-c3e5-4578-88ae-e31e85fd1ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584dd2e4-bdfe-4026-a22a-5627d9fadc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c64b98-b71b-4366-bc41-3c19bbf97371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c44434-7d6c-4891-ac26-d05bf94914c0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fd38c0-b7cc-46d0-88f8-3a9eea2b4234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7424edd-4328-4f06-93a1-f99b3a5a3046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed61d144-3a7c-4d8e-b992-b0d395de206c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83be1ea-e00d-4480-9f7f-a961464a1c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770060d8-f5a4-43f7-8ceb-fd37014e2a81",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4b9342-44d9-490e-80c9-2f9f7b7e2597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7ed3b8-b8e9-4716-9c6a-a048ba870948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f8eea2-6f0f-4ff3-942f-7bef41cf6a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4da0be-33de-4237-8b5e-db5767e4510b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a73afd1-4fef-410d-be44-0cb79ce250a6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bd425c-9242-4503-8842-2c584d1b2e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5e5dcb-c608-4961-9e2f-b130aff8e4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a17825-dbf8-4f51-92b3-91021fdeb80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6c291f-64f0-4a42-a896-5e8eb639659b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acde1afb-c7df-449f-89b4-be630635680c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4350cce7-390d-4047-bbc9-a1f2fb0e57c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e705d4c-0a8e-4593-9233-820d5b6c2821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e9973b-e942-4059-af29-330ebde8d4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "471f51c7-6e3b-4e82-b518-26cf90e4fd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edf9fb4-5b2a-4c96-8701-4f928ed80937",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3c5784-fd6a-4d2e-934c-2d970359481c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8e944d-67a8-41c0-aa47-5384694b4bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d8187b-7123-44b7-8f6a-df01dea10e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a17332-e5b3-4f80-8bbd-96f88b3c45a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6ff82f-370a-4d7f-b9a2-8f24f9d9b4a5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9177a08a-3b27-4ac9-b4ed-e2c11d850040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd32bbe-34ec-4a94-b8be-afacb726612d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f74574-f67e-42ac-9a19-8860b3f1277a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f222a300-a873-4045-9464-62cbf68c0f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7584c154-3be0-49d1-83e4-3841f899bb86",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0153e7-645e-4ff8-a0e2-9b033d248608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4f2f68-0083-485b-908b-968211846354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c66f618-2868-4e94-ad18-16776524632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfa36a7-e386-491a-a0d5-e07ddfb19b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e334ebe9-4931-4f12-848a-a97cc685295d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2814d5e-7da1-474e-add9-d33a98a08a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6a96c8-ed23-486f-8382-6aa0b8cb1673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24c5706-e2fe-4556-bea0-1aa8580cf334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "703be6cf-397f-49ad-af54-c1ea43076bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b983b-b4d3-463e-97ca-c890a2c758a1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8b8d12-aad1-4e0c-b539-fa5a08a4be98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e93c90a-c660-4f28-806b-e5a9c4197250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41ec2d0-7dc3-4a4c-a221-434c3817dec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be238faa-e4a4-4ae4-be15-353130493584"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a29f95a-41df-496c-924d-45b27313dcd2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d915bb88-0ac4-4451-89d6-4b4ad168b141",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35fff30-b717-4ffd-9901-b7250e293297",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "75c70b56-f150-4626-8256-a300a26a2777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9d9cc1-9fbc-4d4d-a5f7-a417e91c4c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ebfbbff-33f0-4f5d-b917-c6a6456c5b5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29ef45a4-4b03-4401-b59b-1b4a23faabaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82870555-8f08-4df2-8eb1-9f312b9ba789"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a6778d-c101-48c7-839c-0f32ecc33768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c318714b-80b9-4ef7-9ef2-a34eefd6e2e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee2038ab-b242-4a29-b13d-362012e3be73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3eecb83d-86ea-44a3-970f-9120f4d236fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b32489b0-f3d7-40b9-ace2-eddf1b9f6e78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30e931cb-508b-4397-944e-9765322089f3"
            }
          }
        ]
      },
      {
        "id": "a31eb5d3-5023-47a1-976f-2edf90995e15",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "25648043-b4b2-4eb5-af6c-7bd648d8cf17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afbd1251-a575-405f-bb67-64bd5ab0bb92",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f73c889e-00d6-4fa1-8cea-ea8c3ef5e2b6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c8cddf-2f6e-444b-856c-06e2bbb2285b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0684043e-8516-42b3-ad45-74439583d4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff393cb-b9d6-41b5-9381-b1203eae3d52",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec2f213-3cdc-4dbc-9a82-1fe652cd9a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb62e32a-57fe-4120-adaf-c4fb4a77a970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0940663e-1521-4775-9883-ed4188a77312",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2ed682-38b7-410a-86dd-0e0f7e131e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a03ca3-c0b8-4c35-866c-ab31a8eae293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b610ba3c-6177-4008-a663-3ccc99f82fcc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42ee7d8-237e-4616-b6f6-6a9e140330fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b8f9a1-1348-40a8-bfb5-a46fbac2a581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f448e8b2-4762-4a45-bd9d-13c3b396d095",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a04cc4a-cc02-41f1-8e75-9c5b674f3df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa4ea2e-8f58-4b65-86ab-af01afbac34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ea7e4e-e626-44ea-bc86-6690c4c41d85",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a89626-cf39-4c3b-846e-874fd06ec007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48effe03-4707-4e96-b2cb-e97ae2a57895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2f228d-2a08-4ed3-8558-d36e234bab66",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e97a1e-5bd5-4a92-a0d2-326c5c09c46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49e16c9-8955-4f34-8d7e-7c0050123b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef2e03b-7321-4ab4-b637-6be9fc06026b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610a1a0f-c352-46d9-bc23-4d90b1b20124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c614c4-b74f-4344-838f-d92f4e2f787a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b380489-4d13-4a3c-bf64-ef3cb3410ae6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce7e981-247d-44ca-acb1-cc2a60e4d869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa0ed00-91f4-4421-ab46-89531d8bc26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a98526e-6b59-4a12-9825-a1075bc39692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71232309-4c1d-4964-ac9f-7026a04bfff7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4694a7-68c8-418c-86d5-f941b376d1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ecbaa1-451c-4668-b363-93e77baa8069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7809c040-7dcb-4b3b-9bf9-d2ac5cd8dee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265f064b-5c4a-429a-9385-65542c77bcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983428ad-ba16-45b8-b40f-acfea9f47172",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff64137-d7ee-4865-92d9-94dd20a8e07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3258dc6a-51fa-46c1-a043-eee72b70f902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e8422b-72f9-42e2-9a84-2ec30baac951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1cb899-0345-412e-ace6-768cbcc4c430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2da4a9-3468-46ad-8bb0-62b77472873c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98878b6-bbc3-4c88-917e-3a7152eba36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ccf233-06d0-42a6-b09d-d4dacba9d26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2eaca9-1972-4ea2-9e01-9bfce81ef71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86b2e3d-cf35-44f8-a4d5-04901cd947a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a36fa8-1caf-400c-b0dc-26a4f3bc4d60",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4da4372-fe87-41a1-9517-5eaf9f16ee71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9b5994-8d68-48d3-a93c-19c0aa999caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cb2085-0835-45e3-bb82-6c91de2418dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bd3af4-55df-4528-bea4-852059df9293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37565d5f-79f3-48cd-9a6c-3dd4be537eff",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f57ce2-c3b7-40ae-8828-a37c305a98c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5f2e47-db48-4ba7-9af7-711bae260ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f03e021-45d8-438b-a0b7-814a5531d0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7201d592-a9c0-4005-b4e2-80aecc3216cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be52a16-3e9b-4523-a03d-1213a1ef639d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e9553e-d983-4fb9-94e7-0b564fb41103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00afdc64-dab0-4fac-8d79-179be1739efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66052ee2-3ed0-4258-8d23-7b2f6cc3ae0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363d062e-1ca0-4026-98af-4843b6b952c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220c1435-4901-42ec-a114-8aba76bb3a7b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3371c54-8782-4a9e-aedc-911c634de568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a44cbf-5d20-40f7-bd83-b6f2ec688c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22bcc80-c26b-44d0-b1d7-7dd7bb190deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8636a9-3a8d-4af9-957d-dd3e20634395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6d477b-ca1c-4ee6-b799-6d114e45c3fb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4ab666-e0fc-463f-ab6c-f9c1bbcc24fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59f7b06b-61b7-4bea-90e0-b231e7104ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e2c38-995a-4b6b-bbf1-df72d307d68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a0a94f-6996-4f73-82e5-46c1cdc853b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0607a3-27bd-4564-ba7f-0aceb176fd4d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed96c5c9-d282-4ad1-acb7-f5ec81d45358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e1043b5-2f87-4ff5-add5-b98fc62750b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc43bd1-17cf-4497-af5e-c27016a13c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0f7ec8-8864-40bd-8118-51a6a6265543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57074d8f-0f78-4864-8a08-d24bb94c05cb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf21385-2fa4-4a21-894f-cc56f0ec0512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7df3b9-023f-4a2f-a7ee-b8e3b7a71ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e0310-f9b2-476e-a5f8-45d9857caa84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "535ca474-6b15-4636-be11-3860df2e4d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46689543-7ed3-41d2-8923-4aabb6696e91",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bf1517-e482-4c37-82f3-2439f60ee809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec55bfaa-a2a6-46c8-9aa6-6081066269f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b01de36-8765-4344-9878-b48e7f268931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89034645-914d-4633-b62b-2b59a71e183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b493cb99-8429-4035-8b40-f9dd8c4cc5c2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9bba35-66e1-4c4c-a097-9059fbd95a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a08582-6750-4007-a389-81d3a371b9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79a5a2-ae3d-4e68-8971-e0a0815019bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cb5fa6-71e8-4649-a12d-fec0d7acfc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147e2188-3219-4831-baca-8298233890ef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9355b2-8a93-498a-8188-bce4e747e4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82209641-734b-4a48-b235-544049c7369e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b15ec35-bade-452a-b988-5daf2af22fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4d9ee4-1f37-43cf-aa08-4a190ca7f8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330290b9-b8fc-4f66-8ad3-f6d2595451a2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c57c75e-3c48-4549-9b18-5f1c3060a23b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740ce6c2-36d6-4158-af4b-e4a3df2797d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff43def-704a-4073-a97f-e82f34ef1eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbdc53e9-47db-482b-ab75-7e79b3066845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d13382d-ca14-44c8-a114-cc48da3568c3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9078ca5-f810-44ad-a3a8-749237209efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba41c8b9-e397-468f-be58-8ca86b1db5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8a698c-61eb-46c1-8078-a047412e074b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa20af5f-70b8-4b55-82b5-5f1e5ec8b557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6392f1-ba64-4d1d-a616-aa3f86809722",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf5859f-437e-418d-91a4-6af3e39a995f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aebe35f1-e187-4280-8fff-ef023be1eeb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c919c3-eb2d-46b4-bf29-b4bd9e428399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30847b40-1d24-46dc-8d10-6e7b6e2c75db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065c477d-f3e6-4252-8b4b-c03e2ee50947",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d1536f-449f-4a82-8a46-5b46d640bf73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38d3981f-28cc-4b92-9544-4057ab4d5879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1163837f-0bc3-4c07-9a94-048f4fbefb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432e6dfb-c696-4f73-a94e-f39c640c5a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3e397f-a1e8-4079-a322-5a8f931c7823",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d53b22e-4a38-4eff-b2a2-83a5ea911cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9174c29a-8297-4121-b61e-78553c599ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac4c0a0-5f4b-4023-bd7f-da1febfda045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d7bfd6-a83d-4f8d-8134-47bf288400ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dda374-bf55-4835-ae3d-53f3f121d614",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6822c91c-372f-48c5-bd1f-05ff75d03644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b76736-9ffa-4c9c-82ac-3a748f5b2a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33b9c66-5b58-41b1-b15b-96e373891c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35556983-b7e7-495d-af1f-36077fbcbcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3fa875-1c7d-4915-8771-4354cda86199",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a222af3-e3fb-4ef5-b035-5ddbb659d0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89eb79e-c5f2-47f7-bb94-6b68d0195ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a763f2a4-ba3c-4ac6-971d-5148f30b58f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf8afa0-7730-4acf-8ebb-7467ade7dcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afbddf4-6dfc-4c8f-94a8-24e25f88e094",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdcc6f0-d952-4558-8f5b-241645b0cdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6417b054-289a-4c09-a557-912914010b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219c101d-ff92-4c85-a300-adbac34e9f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51161a08-0434-4b94-abe1-4e2500991c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7496a18-bfa2-4f33-ad37-3abfb3037322",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0151cb1-3b11-46c4-a2ce-d009ab1397b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fec1166-8593-40e7-953b-f6ba5abfa1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc861b3-386f-4c6f-8263-e4bbf483d44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0cf979c-51e8-458f-8b16-72e537195878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d284548-ccc3-4b10-ac8a-1ac4f4efc19e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fa0f24-a4cf-4b55-b303-2504a47550ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a270e2da-79cf-49a9-8207-b11e1a38ba03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ab597a-0310-453f-b81b-53175dbfa2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1963ba96-cb46-49dc-bd11-9774d1b7a892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d73061-45d2-4b6e-8d73-a56692334acc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d3016e-82e5-44f3-8adc-c94f5afe1b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e3195c-82fb-4b03-b239-99656a5eec81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc6e626-93e5-42f1-8025-2dc436b3f5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a5c7778-f01a-4bb4-b749-77f617a30330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98475a3-5108-47f2-875c-77b5ebdf10d6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f77829d-6b89-4bd8-987c-479add526e97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e06f2ba-fa8c-4e29-96ca-ad1fbc242d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cdaeb9-6b3c-4f90-b981-6b77fde71864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f6ee07-8328-4f90-a43e-5cc2766aabe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868ab4b6-a1dd-4ac0-aa2f-6edeb648187b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed424d9-6408-4d95-9bf9-125fd2943f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f828a35f-e1cc-4a85-a34e-a88cb875dca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a426ef4-228f-46e7-8a5c-43fa9e28629d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f7073e-903e-4ae7-8ccb-eb436b2c2612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03842d3-1f32-41eb-b3c8-a520cd6116b2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f7ce8e-182b-46ef-8eca-58b8d26f888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c521763a-3b5e-4a0c-b883-9a6a3af26af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de46d6dd-b5dc-4bc0-9958-aec76393e834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f71c242-8853-412e-8be6-4aab4e81af7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f5120-ba1f-4c52-9a5e-455504cfdcfd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f878294e-7936-4472-b2e8-557864a999c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd296b9-9f8d-4047-8087-d33c74e5457f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a580f67d-5dc1-4cb8-8fcd-3cf34f95f2c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7fdd12-adb9-4563-bc88-902e16c3ede1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca23784-d1c1-404e-93f9-7fed686f3578",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e288068e-1204-4f08-8aa1-f31d6aa94b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1265c7a8-5f97-4c3e-ac27-a7028862f847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc67e1d-4831-45af-95ae-3b5804bff7c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329ebe71-fc01-49ad-a35d-dc79c90f63dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd388c88-9d88-45e2-a199-281723db9533",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496f8e62-38b2-4c4a-a1ed-f20864cd97d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbefd488-772d-4116-8ed6-8e0bb09b1e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbe991e-3e95-4caa-bdeb-071f7b9b4a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54966163-b99b-41f2-a0a3-11bfa926e6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44b78ee-a034-4604-bf19-a8c82958717a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97afcea-a721-4d9a-a35e-6580bc9aed75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc7f8e0-a636-4bfc-ad03-f252d0c5e00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68d57db-aa11-4886-b8cc-a34e9d1f73c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbb57c4-b822-40bd-9889-85f4ef4e82e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fc8783-4b99-4572-bcbe-1ad7e116bfb8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7354017-2024-4e98-abda-4eecd01ca93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7170e82e-a265-40e3-ba0a-d9d698fbd58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86806b5-ffe0-491b-a2f5-e6a7a5ea7da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4695296-b494-4c0d-a5ad-22972368e272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f35296c-48f7-43aa-9467-6935f3e04c93",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea2852e-192a-4c50-9af8-d245a8a498a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308e6f3e-683f-4b48-a355-d290c13dcf9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13620437-e88a-4d7b-a9ef-fde4ffa6bfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d482b1-3862-4baf-8b49-18ee18268524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f2e0b0-3ca6-4720-af17-8033ce76f68c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f2345c-8933-4fdc-b1ac-972ac7cd4350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc221b97-3b2d-4c82-a657-db668170c053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abd6f5d-72be-4ec1-ac9b-965eaf77934b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa5b7a8-33e8-4ff6-9294-378f11777e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134f86f3-06c3-4206-a5e2-e1b5cd1a31ef",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919cbf4e-92dd-462f-8170-a4c10ed83156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a015cf0e-9c4d-47f6-a3e4-d33ca9c2e03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec03c2e-3194-483c-81d7-6c60f2513e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0e9a59-5c88-4305-bf97-fe26498b7dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fbb431-29d8-42e5-8f2e-78e5b88ba219",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73869fb-d1bb-4b67-a5b2-6b0dd648cf0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3a224f-4610-4fca-a41c-8d99c99bbdcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ef346f-771b-4e80-8b32-75f6bbb70138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134dceaf-301d-4cc1-a5fa-99d1d5e4d4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ba5ff8-4fc3-465b-ad3e-495d1234d6fa",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4430bfd5-83b3-416d-9806-7913bf30e14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21bdf65-781c-443f-bace-04ac72d08154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1afe98-e99c-4571-a12f-6ff2a707468c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987b5aac-281d-435b-a75e-7bceb14c5a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2360777-7d1d-4704-ab5e-4a3eb8f4927b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aca004-ced1-46cd-84a9-720067194932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7391f514-aa59-44a4-91a5-aad70da1033d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c8449b-02c2-4299-819f-c6dd178c5d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb583cb3-ddbe-478b-a558-1c40a8cecf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7f4735-f61b-4dcd-a839-994c14ddf4ea",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58062f3a-694e-49fe-a714-1a37bc3aeb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b63743-f425-4197-9fef-cb5558c5d7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d3245-2f6b-4fba-b48f-b4522af41011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfe3a70-1149-4eb6-9eb1-0aebc1cac84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834e9634-6425-4b63-8293-1977a30782b3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6627ab93-3dfb-4944-bd0f-5aac33c82d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6b367d-726c-46d0-ad35-d551aa98b0ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aefab7-b1d6-4172-9928-303cd208c003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db39ee8c-0844-4a69-9488-e9dcab361726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd85577-d1af-4f31-9675-4c91e2ad27c9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37604f6-df33-460b-ac93-8e0e6520378a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f726c2d-7d87-4e56-987e-4f6e1ffebc78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee61e66-f6ba-458f-a526-27723811d8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6c1aec-87e0-418d-aa29-61d3b11d8f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504749a4-8188-4a4f-aefd-aced5c4e4d0d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85aeb163-20d6-4a0c-bd9e-1cf61dd9ffc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aefaaea-f09a-4950-896d-c0f95853cad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218d09a2-c99b-43a3-8d4d-9d87de187713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2df63b2-614a-44ca-af5c-1a15ca385ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dc32f8-bcc5-43c9-b8b5-537614e38063",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e908cdd-e0ba-48a6-a28a-795790d69c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dd17a8-594d-443e-a299-f631bee80f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd3d464-8698-4006-8131-acb89bb938ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35623781-27df-4e65-9e7b-f2bbbeb722c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3f1914-b854-4bcf-8100-548a7d6edb4e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4dc025-ea9e-4d96-8a99-2fdbe5bebbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6a1737-5e4a-4273-803f-cd1411ff5a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c188cb0c-0c2c-4907-8647-2aac8295785e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7627f1-4b9c-4dd7-8c58-cc63195181e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7d22b8-b4a9-475c-b032-a0ec817a7e14",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06457050-89c4-4407-b0a7-4c9c1873010e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fd2194-f9c6-4212-8031-b18f5079213f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c100e352-ba7b-4eca-a391-f868f67a6af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dce43d7-97c6-44bc-b56f-6e93d78b21a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c398ac21-86f2-4015-8fda-c29a40cc2a1c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81ce171-01d8-4459-a9a5-e56078d66794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbecf6c1-312f-49ae-b3fc-fb3618bcf0e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8274fd-029a-41aa-9504-55b3bbbcbca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd371a54-adae-4e88-a835-850c516835a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4c3356-0a73-49cc-9a2e-f4f8ef73762e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c9fd67-3d2e-423a-9f04-53aeb54e729b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02cbcc02-68ac-40a9-8942-62e8dc2ae89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761f2b65-c86b-40bb-9749-47cd3893e83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a30c17-bd2c-43d0-96fa-a0e2e08a968b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14192996-e249-4670-894e-1e56b7888e4f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbee7387-ec4e-4b7b-9ed7-01a44e67c99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29276773-169a-4539-b7f9-223d669d7406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a387a7b3-a358-4e13-9aba-daad328441bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca8d02d-eb05-4008-89c6-f379dd1ff22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa059479-8bec-4d9d-b23c-d69cab4e3154",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d75aa8-c476-4261-b37e-43fc36a04cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fafe93-ae06-4988-a0de-77383dd0cf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce3be1b-26b0-4050-b959-588cbd7d914f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593847dd-feb3-4ed8-8174-a1c465d20d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38cf4d7-9e6a-4c70-9f5b-f7618e377015",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1993494-1f9a-4426-bbfe-3137adf1a8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32deda4-0e1c-4827-bbbf-d1723440fb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c29ffc5-8242-4a8b-b2af-7f3590667de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed6acdc-93f8-45e3-b0f3-053554ed8ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b5c967-05ce-435a-9234-f50fec6f764a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bc1e1b-8da4-46fe-b55d-29ac4a5d5a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c95eca-34cd-43b0-aee8-95c54edbaa67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734ba443-77f5-41af-83dd-87ca1ccc464d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269f5b4c-073e-4ed0-90cc-b6c6a99ed475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9667a83f-5857-409b-8f67-a44633d7e59a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8ae436-c3eb-4c23-abb7-b5c1eeb66436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700f306e-6c26-4ce5-b393-a6fbc3645946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5833d2-892c-4377-8e74-7e36eb1adc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3587b2-631a-4d12-8001-4ffc3d6bb027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf03fcdc-3af4-4514-b150-0cc28d9669a4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85eed288-fdb1-437d-8ced-a34be475d5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9fe5cd-faef-4e29-b2b4-e477eada0ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51342a87-3dbe-4b39-be2e-19f22c5ae09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625745e1-34bf-4726-9349-27df9a5b81d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95254a18-054f-4616-ad51-eadb932ed8e3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa78f9c4-bc7e-4b3b-a6ab-34508e247c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f176bbe-423c-4b76-a672-c716637b2f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12a3da0-a177-4618-9f5a-78ea7c14d9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be32c12e-723f-4d3d-b1a5-90ab2b0478e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4309b7db-6b38-4923-8cfb-449322da6c03",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101e6a4e-c1dc-4156-933f-0c8814a57a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efefad47-3668-457a-aa02-4317e9c0b101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e1e0d8-42d8-491d-841e-0a6cff28408f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67144b06-c999-4609-b612-8e437ded1e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b99ca8-c57f-47c8-9537-7c299b3a9c39",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b0daec-2ca3-4fb0-9604-967c9860fd03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec4e7ac-d85b-4f4d-8034-d2353262a742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bb2ca2-42e6-41c2-b7af-9f8edcd74a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e5c850-5b08-4ce9-9452-6e44246fcaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf4972-c4c6-4ae3-9dca-30e509751069",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ef0314-b7aa-45ea-a8fe-1ce422e5e038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b94ec7c-026d-43b4-b6b1-ae5a120cf494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f04f9b5-a658-47ed-bacf-2a5ad4bc0a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea22713f-e739-4ed7-bdd9-1529c4a45750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7053af-983d-471a-8df5-70fd5c8533e1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d5b4e9-ab15-4250-b3d5-c9454a7708ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac2c85aa-4283-43a3-98a6-787993eddfd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3210df93-29c9-4ca0-8c79-9f68bad1adf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a067ceb-4132-4a2f-97c9-1d41b8643279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5add4831-1ad8-4da2-9081-1bd42faf89fc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7d9552-ddb9-4bb0-868c-346085ba1e2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7bb6b1-f1a4-4e72-99a2-3b6a8211d444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d047229b-6cf9-41bc-bd87-4055f7f2d3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdcae3c-dfa1-4e6a-ae90-3113e74518b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9076d91e-80aa-4636-93de-18265f2e7205",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b39324-bc84-4502-b303-c57b695de69b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b298308-9cd5-4f12-be70-a239e5e2702b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f5f9c3-156b-427f-b7f1-68156c8db4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc382f6-1d74-4854-b0e2-83fcf2de2f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7daaad-a70e-4fc0-8fa2-811664672551",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deff0518-a459-4e29-8263-73eadd5809df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e261035b-ba36-4713-81f2-2840f662fc1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7501ceda-481d-4b71-860c-74a3e0b23115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476d6d27-7cea-4a2c-a9bc-449f1948bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff9d9b2-b45a-4f37-a827-72a45162bdfc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245b683b-9c19-46ae-b43b-a6f04f985b8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935cae88-ba2f-48e7-8d5e-757f679efd25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f5d4b8-d94a-4aef-b5cf-482f3ca1f0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b740e25-0433-4491-8714-388a4f4ec83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49845536-e66b-40f3-b0dd-0920f4b9fea6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fca475e-9fe4-436a-804c-aee8bf339572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e0e806b-ca70-4ae3-b2d8-5a4f14045f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f47d5a7-26c2-411e-acbb-41f455096a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb962fbd-3c01-44ed-b1b4-18442b50eb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7631f4-8150-46cf-aa61-24ea44064a30",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3ba266-3bda-4c2a-aef6-90c59a2e8798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20decf9b-4a7f-4d7c-817a-04a54a7e15b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49db95db-09ab-457c-b2e2-79e1b015d8a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce28b8a8-f9a0-45ac-b80e-c977ed02d9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027b3b83-e94d-4c0e-a561-b52403fbc014",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6135f64-d3d2-4b9e-92b6-1751b042e291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab3eb8e-9438-4d11-8047-d20cca37013b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b66db82-2744-42d4-8cf7-5de6258ea295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350f8bf5-2c78-4e5d-9b0a-52960dbea10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf941e5-6856-4c66-8019-cbfe342bf83e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d97935-4cfa-422d-8d0a-59c8a67de51f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e5fa4a-ee76-4d1c-a3f8-c59f37d877a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ef9290-fdd3-49cc-9ffc-770252b6b7b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effa24da-9102-4517-8f45-e12c5c8a50a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac2f811-7b05-4c03-9362-135d91a6b68e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0e4d8d-5c47-46d0-b782-df1681ca470f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722f5bf4-7300-4184-adf5-c23ddfd7d4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c6d9ae-4477-4d6c-8d58-6b9986275c58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b546ac42-d029-4587-a880-8fe2e357ef14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a567583-1eef-42ca-b7c9-4b8b2e438a99",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccf9eff-cfdc-48cc-8f54-592f44149814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b98505-c653-41a3-823e-7c668a2bf393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb043758-f371-411c-8752-dfc565ca9938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55178ec-3941-4e6a-b385-3fc91458b34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb780ce-743f-4148-953b-c4fd2809538d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695713c4-cefd-4991-a38d-c6d7db6df6d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f10d40-1ca1-462a-a4ba-667702f14db4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f18d39-d040-4def-ac87-b3ea9805c5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7057a90-29c0-4034-8c80-4c8d56b7c9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8acaa3-ed7c-4987-a0d5-90dc5dfb9de0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ee3bc7-9355-4a22-a396-8cb6a921bf87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb955d2c-d4e6-4466-a615-f9d7cba1f4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342813ee-08ba-4b2d-a9c1-4e242bc9091b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcca53e-ac87-4e10-b814-4a88c697f45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524e842b-ad3b-45a6-b7cf-05df6803b813",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e1d137-1b6b-4457-ad1f-87861f039783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62e0576-6eab-487a-bdcd-de5ee78a3dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7347e8f1-2d72-4acf-9345-1ebb012a31ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6312e261-8d60-4b6a-8eb0-8feea0a2f475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d883196-ee1c-4c9c-b07e-d5e3db05a771",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b99703-468b-4e78-b327-f63fdfb0afbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fc2ebd5-536c-4727-83c5-b52f3019d094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9ecac4-6148-4e10-9b85-373e1f3caf77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a80283-7bfa-4e28-b08f-6525671d900f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e24278-1c1f-4ded-aa11-9a7480afb1c2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595f9fa3-cbda-4a53-a7f5-d507c5adf1a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ebd200-15ff-4dfb-9827-26fdb6a7765f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0626d019-dda6-4bbb-ac28-d46f1f57778f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d1b07f3-3791-4fa1-99f8-70fd3311857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cf2e37-6ede-4a73-b466-067b1ae39390",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bac209-2b24-4bc0-bff1-d00cacb13a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625e34b1-4a8f-4eaf-b572-ab964a70365f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cea0454-f18b-40ca-8704-5a6bee39c078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cabb2e-46e8-4b9f-91ef-61b883a1cd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6aa9aa-d51d-4dc2-82bc-83b92db164bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9778582-4bbf-4c09-957c-d75de71c3ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ea60f6-75ed-4fdf-8b3f-41b6b0597ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc518299-b5e4-4933-932f-10fa9c29facc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c87e061-3fcc-4222-b2e0-5c02b77517d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37442659-d927-4e97-9e98-ed5ab493dd65",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4352ae28-065d-4914-9349-83e709e72854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6656d106-b306-4c29-8dd8-24df5180b189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf9c7c5-c39b-4369-8bc9-6664ac6ca5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5001c9d0-581a-432b-9eb2-8314e0ddba7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3941438a-9df7-47f7-a953-d1c8893f3ad0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429c237e-d80c-4672-91c3-d8f7a8608941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de12843d-cf56-4928-906d-bb832df5148a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c238478-e6dc-42f8-8152-b6553cc740aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3207f8-cbad-47c6-8bf9-fb9b9b2c59a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c0d41d-84e3-4dda-8244-7b4fd40d8484",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650abb9a-8fd3-44a0-8725-12d7211f0e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "458f2d4c-1d35-4c11-9812-10d1859ffaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0252a898-529c-4aed-a63e-9d3ab30a6a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396bd8c1-0240-43fe-9397-431b2d96f29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ecb439-dda3-4bb5-8c93-efb29f369c60",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff8af24-d867-4bca-a8d3-76c41f0ce6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "060b2c81-9995-4186-9a3e-8743809fc040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edd52ad-9401-4d03-aa81-8d410d520ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b14324-5be1-4c1a-9f5d-996785a9938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9c953a-5dc1-44dd-a4ef-5595a7be112e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ccec48-2a13-40ac-80f7-9c8aada7a031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd678cb2-57a8-4fa4-a0bc-9c4f570fd5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dd7c88-3cf0-488b-a27e-c673caf34eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaac9125-b8bf-4403-ba41-6bec5df1578d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ca9d35-2ab7-4f76-ac1f-54441b6e1855",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3ed9fa-0958-4fcd-a2d9-a1d7e06f303a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cd237bd-3643-4a83-a2ac-ddb229bdfff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0476c84-b12b-41d3-89da-6e59cba2e1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f00d92a-6e68-47e5-bafe-277559e21d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490a304c-42a2-4d5c-8c87-e3d906e77c58",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac1fbed-93fa-4318-ad57-f71ce40118b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55420b21-1670-4ed8-81bb-1b1c9a764ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33372509-c21b-4dbd-be4b-e344f855a002",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257678d7-6a39-4c19-bbb8-824ab3077dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88b1737-2eb4-4aec-ac0f-670d107c4024",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae49ae02-9472-4ac2-961c-3f595c1ad4e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69770b3a-9730-4d68-94d3-e3fcc0619ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3ddf88-aa0c-474b-9d69-2f4c1b72f6a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c76c470-9f14-47b3-956f-53605ac74b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f97bde-ce01-407c-b629-bc487c9b8702",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d540cb-695f-4780-88f5-caa0efe50366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "489b545c-e1d1-440c-bbc9-cc54b3768f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbff27c-9d97-4580-b4fc-6eb66bfb0b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93336987-8f57-4b54-875a-8981669e7fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d5dfab-12b5-4830-b06b-318227734970",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f802964d-c08e-4a0d-8461-5b8d08b8aaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701b37fa-35ab-4b4d-b25d-a359aeec7ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7783f211-552f-4a04-be38-42e0b7e32020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0512dd67-25c3-445f-acf6-f3e84d454caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26b180e-35c9-498e-b73e-b0dd44ad2f27",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad0a66a-27e3-4e30-ba42-ff89bfbefd65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0386ff3b-7c38-4aea-8c9e-d3a75ff6d285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0205475f-f501-4f0c-abd8-ff9e6ecaa3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89568c05-b971-4aff-9b95-83e991de8c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e6b541-2b3b-4d00-9302-ae65fcffd4bf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb4e64e-6257-403c-bd4d-b410c6d1109d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66c617f-fab8-4799-9d8c-2b9e369b0449"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0608d3-ace6-4ed5-8f8f-1cbe3aae4c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fccdb8-e0d5-4366-9d27-73c29882f5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0d77be-3cd0-4ce2-a58e-a53d3b9a6427",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bddbaa-c243-4f8e-b9b6-270ef06651f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abca0dfa-570d-4ac3-8249-27aa7b48316a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddf8500-fdfb-458b-b32b-7d575e3730ff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea02c9e-14be-41b2-ad97-62aeb6cf956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d011f956-19c8-4b8c-acf3-d76feca7eb39",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebaa1bf-9f29-4a83-84dd-84d2c07b5ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d94b113-6761-4f63-bfef-41a899446878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc65515-0a29-4f4e-bd19-8069124bc57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b180b32f-743b-497f-a658-2a311a9e508f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79fcd400-1e9d-4f03-be5e-d1038112b4a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa3fe003-50cb-4c9b-811f-aa375cc33fae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "227ea2ea-2eaa-4d9e-9c8d-b672b7ffeb7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d732b29-cdae-4793-9aec-404e0e8cd41f"
                    }
                  }
                ]
              },
              {
                "id": "5c2962cb-052f-4cd2-84e7-f2a5aefc42a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a03b173b-3f58-4099-9e07-88b12f836b4d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd441b9b-87f3-471c-b549-76f73f928167",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2ef725ba-099e-448c-a3d6-ce54a500b5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7a0e4d-07b8-4a2d-984a-7d9f05ffec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70537d8e-94c8-4247-8f41-ba465f1c1421"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a168468-41d6-4298-89f3-17c19c3db494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "514635b0-84bc-4d11-8a70-33a0518a1cb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdab15ac-6419-4748-ab27-e8f06bea36b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c7ea83a-1bd6-42e8-bd57-cebbdfdb6166"
                    }
                  }
                ]
              },
              {
                "id": "a19e34d6-6ade-4d39-b63e-76f987a76753",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4b506ba0-43f7-4c6f-a87f-92c9f22d5d36",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bde621d-715f-4610-a57f-a0d8e0f8418b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6363bcc3-3165-47ed-825e-348a9d084a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6730f736-7981-4458-9573-5085900e9d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f548c6f6-9af3-4d15-a1c4-3c3b369e8c35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9e731967-b001-4e9c-b54a-8d0d624e4991",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49bebb67-0197-4198-a032-206b4287e398",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc71a321-2e99-48e9-a3eb-206486a12ca0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "632624d2-0fbd-448e-8752-efd2618cb77b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9cd6d54-075f-4610-9138-5c7c6d7e153e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "004ddea4-d4a8-4e11-bdf4-f090fb1621de"
                    }
                  }
                ]
              },
              {
                "id": "c10b8af7-802a-4631-a80d-37ec3f9bce56",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5579fe3-b934-4aa9-89ad-b33dd19a1967",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ffb4117a-4309-4ed1-9cab-f8efb78f887c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89b61287-d2b0-4f30-9e6e-020ed22bc865",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3da83b2-8a32-447e-bc91-e6e094e18681"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "144148ba-1c98-4b29-88d4-4e1121e6d7e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a23aeb58-2c67-4242-89e9-911da19e809f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74644bff-5d2f-45c6-9b38-762a53e24153",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff011a03-a544-4e5d-867a-f6c3df6def8f"
            }
          }
        ]
      },
      {
        "id": "c73c3dc8-e1b0-4d54-99b9-049c39e523fc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cb9c1c41-507b-4c10-a48e-f935f968b37a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b87f4905-40bd-476f-94be-4809ade9ebca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7f0cf5f-875c-4e21-b57e-86eeb5fbda3b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4723ec64-698d-458a-b3d8-2da2a0884ba3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2aa78d8f-6f52-45eb-a8ac-a3e88fdfb22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b962b886-013e-41f8-8674-f9c9b01f4c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34c9357a-ece0-4052-8909-27dca15a6268"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fa12a0a-6be5-4aa2-a6fd-8138f518b2f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c38ac72-a4c2-45d3-a0c6-ab6a2592aed1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac520a33-b1ee-47e4-99e5-45db34c71ad5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaafae73-ad7c-44ed-923e-2fc1f1f5604e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a954cf6-45f5-4096-a7df-1c44eabb4007",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4cd7d043-6c81-42ae-95e8-a74d5de153f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e2dcf76-5b0b-42d2-884e-8da1777a68e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf701c43-1c06-4583-b97d-ed44aeb3941c"
            }
          }
        ]
      },
      {
        "id": "03f233f7-a378-4f45-b9ab-b574b74d6e4d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5f616329-818f-4f5d-a1b9-dfccad8dfb41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7ecc25b-6962-4d85-a431-14f1df67d423",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2cbef119-5ac6-493d-89e8-2615c9c10bdd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4592f5-f548-46f6-b00a-0c757b912299",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0f5f16f-36d1-4041-9de0-97b09903c837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b22b649-9c37-4d9e-8b4a-9f55689c22ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7524f748-ef10-44d9-bdef-72be403718db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dde39ef4-7076-41c2-8b94-67d830482da5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a660f36-2fbe-4158-9f52-6c096b99e57b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13d7b770-eaef-48cb-800b-4bcf0e3bae4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef2eede9-141d-4b3d-a923-1ca10c56a7f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a56adf23-3260-4672-88ee-76d8bb9b5e93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4abb963-cd03-421f-95c2-3174f2b2f61a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e50677cf-9028-46ee-9737-4cc353c60214",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "373af7ef-471a-49c0-8803-e7538c9881b0"
            }
          }
        ]
      },
      {
        "id": "5d9c2c79-2308-4f18-b025-b344d59e02a1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0b852710-de5b-48cc-8e35-a508ad2dc486",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdda579e-6de8-4133-a6d1-a9ed3ebc2663",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab58059b-d78a-4d33-971e-d10bada317bb",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101326a1-00de-4a4d-8cc1-acd364fc89e1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c64c81-02d7-4285-ae10-8387fda4dfe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ecd6e3-4315-4530-bfa8-aac30da991c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eef42e6a-52dc-4aaf-942c-05b1c5e27d83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67c5780c-27b0-4508-9f46-a13d031c3466",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e832b14-4360-4531-9aeb-0bcf9997302e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a33d1747-c7e9-49b0-9f0d-95bc39460c85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d6034d3-0804-4f8e-9406-4e9f7af28d29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77622019-1fc1-4644-8817-e1b8b79868fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8ba5a69-0ae7-46ed-815e-70ae15ec8e53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd74f7da-5caf-4038-bdc2-894c67f6477a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "730eb164-dda2-4275-9d07-e8a2224157c5"
            }
          }
        ]
      },
      {
        "id": "f63323b0-9f6c-4dc4-b879-30c8efda08e2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79e1b011-830a-408e-af1e-700fc2c9135f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b3266eb3-a917-488b-a631-f79c633639df",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d9f457a1-5180-4895-91a8-20808c91a863",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adf18a1b-9ece-4fb9-82e7-9373d6b086af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee061011-612d-4cd0-ac5f-00ea2baebfd3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 131.0526315789474,
      "responseMin": 5,
      "responseMax": 5098,
      "responseSd": 479.63404986647913,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699403649972,
      "completed": 1699403696510
    },
    "executions": [
      {
        "id": "253ec52b-4c00-49b4-b507-6741dd863336",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "122a2dc5-36b0-405d-89a4-0cfb25b13471",
          "httpRequestId": "89be5d12-23ec-475b-b4f0-d03d702367b3"
        },
        "item": {
          "id": "253ec52b-4c00-49b4-b507-6741dd863336",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ad33902f-1bd6-40e0-badb-4373c441f20d",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "1c9fde2c-6502-4b6f-bf74-e941286601e2",
        "cursor": {
          "ref": "7332a17d-4480-454b-abdb-1d1e652d81d2",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6bb31c70-01e8-4be2-96b1-cb53377e5b9f"
        },
        "item": {
          "id": "1c9fde2c-6502-4b6f-bf74-e941286601e2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "532e6c38-81b8-445d-9a57-9092f32f31ec",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "5045059a-7127-4c98-b99f-05dde65f2256",
        "cursor": {
          "ref": "d5f4bb87-ec36-4b7d-9a06-daef2486d7ee",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "502e3142-6974-4ae2-bce1-9a5158a34ac0"
        },
        "item": {
          "id": "5045059a-7127-4c98-b99f-05dde65f2256",
          "name": "did_json"
        },
        "response": {
          "id": "24f67977-0f2f-451e-9b6c-eaba4a78e0fa",
          "status": "OK",
          "code": 200,
          "responseTime": 256,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204346c1-5b1a-4e74-9201-c7ce8afff5d1",
        "cursor": {
          "ref": "818807a2-9631-4c4b-b8ab-f0ca320f2576",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "260d7a21-5bd7-4cea-be1f-34a82cd2fec6"
        },
        "item": {
          "id": "204346c1-5b1a-4e74-9201-c7ce8afff5d1",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d897243-f47e-42da-9302-d7616f33c58b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 433,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204346c1-5b1a-4e74-9201-c7ce8afff5d1",
        "cursor": {
          "ref": "818807a2-9631-4c4b-b8ab-f0ca320f2576",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "260d7a21-5bd7-4cea-be1f-34a82cd2fec6"
        },
        "item": {
          "id": "204346c1-5b1a-4e74-9201-c7ce8afff5d1",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d897243-f47e-42da-9302-d7616f33c58b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 433,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868bdc8f-d734-45ba-917b-48fd5317896c",
        "cursor": {
          "ref": "141aa2a1-eaf3-45b1-ad11-61dfd67d7f41",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "02907d1b-c187-478d-9518-eb7b1a92ab2d"
        },
        "item": {
          "id": "868bdc8f-d734-45ba-917b-48fd5317896c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8f4ea830-00b5-4dde-a3fa-9e54d0961548",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3d4693-55e7-4014-8a5f-dfca935cf407",
        "cursor": {
          "ref": "3a7a919a-209a-4a6f-9af4-065000d6c1f9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d4a3e5d3-60b1-4708-9d71-b328fb356124"
        },
        "item": {
          "id": "4f3d4693-55e7-4014-8a5f-dfca935cf407",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f8dc0958-7983-48f2-adaf-cbaeff626693",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7afd3c-c1be-4b30-b235-5e74de9bd173",
        "cursor": {
          "ref": "3c432682-2eaa-4bb4-b7f8-aa231b0a0160",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6c65a734-e661-471e-9482-a64d5e4d698c"
        },
        "item": {
          "id": "9b7afd3c-c1be-4b30-b235-5e74de9bd173",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3f1e4fde-b34d-4fdf-9bf1-ff6a96f9fe10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c678f3-4d19-43f0-b99c-7235fae1db90",
        "cursor": {
          "ref": "3e9aacc5-d198-421e-98f4-e14dc41eafb1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "27c8556d-272f-4d29-9472-1ced2a3cea0d"
        },
        "item": {
          "id": "b5c678f3-4d19-43f0-b99c-7235fae1db90",
          "name": "identifiers"
        },
        "response": {
          "id": "e4af7c37-8bcb-4334-95e1-1df393ce6f24",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac40504-902c-491e-80b1-cec40cc7ff90",
        "cursor": {
          "ref": "af7ed94d-060c-4fb7-8582-92cdfb09f24e",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "574df63b-c2bd-47f4-a7d8-7e70fb1b9d9b"
        },
        "item": {
          "id": "cac40504-902c-491e-80b1-cec40cc7ff90",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6d23b47c-ee42-4181-b316-d15431f9c42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1731b8d-e77c-4ac5-9aaf-3ce0c62ca9a2",
        "cursor": {
          "ref": "980ecc11-b94f-44fe-b43e-9e33f0f344c8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0fb40e57-cb51-4c84-8703-ac0e01015771"
        },
        "item": {
          "id": "d1731b8d-e77c-4ac5-9aaf-3ce0c62ca9a2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "020f9972-370c-4214-8f3e-d15d742802b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb303d79-10df-4f02-be96-4f5f365074a4",
        "cursor": {
          "ref": "11f2b78b-1ee5-4508-8469-834e09ac9277",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4f23a440-0a08-4b81-887d-c18002ebfe64"
        },
        "item": {
          "id": "fb303d79-10df-4f02-be96-4f5f365074a4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2e36d041-b97b-4e23-93d2-2379a5dfdd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec34c4c1-86bd-4c38-8f66-df4067563e01",
        "cursor": {
          "ref": "20f1532b-0a5c-44a1-b57a-1f85f73f6545",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4d7c1b15-1d88-443d-8a70-f743cd88fe43"
        },
        "item": {
          "id": "ec34c4c1-86bd-4c38-8f66-df4067563e01",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "93b93406-d4c7-4f2e-897a-f4ee5de44dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e02d85-e7d8-40fe-8354-4080152ffea7",
        "cursor": {
          "ref": "5954c995-c929-4ce4-b5a4-bcbe5471147b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "491aaa32-d091-4dfb-b9b4-df1901ab136a"
        },
        "item": {
          "id": "16e02d85-e7d8-40fe-8354-4080152ffea7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e124e772-f4ed-47d0-b27d-afeea5661fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7496a01a-67c5-4523-85c4-bbdb51e7dc48",
        "cursor": {
          "ref": "6a4b5117-95b5-43aa-a49b-7446ccb0ec2a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "04dcc02f-a12a-4e21-bf9f-f088fc175a75"
        },
        "item": {
          "id": "7496a01a-67c5-4523-85c4-bbdb51e7dc48",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "83939953-fbc8-4ada-b370-2b82f8055bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4956765-955f-4339-ba85-74f74e8cdf92",
        "cursor": {
          "ref": "d9a02968-6720-4227-8031-c507b39b72d8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "58db5c54-e184-480c-a0e7-ec5f685f0432"
        },
        "item": {
          "id": "b4956765-955f-4339-ba85-74f74e8cdf92",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e5400462-75d5-4502-9c56-d1c02f353525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9496ae52-f6cb-48ab-9194-331833b92c35",
        "cursor": {
          "ref": "99cb1b6d-aa7c-41bc-bcaf-cf3d2f8c3cd5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9341d69-cb5e-4aaa-97f5-9e661aeb5c03"
        },
        "item": {
          "id": "9496ae52-f6cb-48ab-9194-331833b92c35",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "93f5ea01-63fa-4857-a30b-3c5ad59572d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5aed01-c9d0-48c5-86ca-0c509d447afc",
        "cursor": {
          "ref": "6a2c5f04-4b95-4b7d-86f8-ea6e6cf3c86e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "51636d2e-f9af-4116-8b75-5292eb508dbf"
        },
        "item": {
          "id": "dc5aed01-c9d0-48c5-86ca-0c509d447afc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bf637ab5-d350-40ed-8a89-7878db34e1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c41fa3-00c4-487f-831e-8a8ada08440b",
        "cursor": {
          "ref": "7c3303a0-44e9-46fc-87dc-87385d2a0970",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0787a3b5-a5c2-4e63-a8aa-5a55a6bd3cd2"
        },
        "item": {
          "id": "f0c41fa3-00c4-487f-831e-8a8ada08440b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6f673927-855d-416c-8cd7-12f8836628d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1961f4d1-800f-4c5d-b24c-6fad42fa33e7",
        "cursor": {
          "ref": "5f49f7f0-6b3a-4960-a870-028c1cc9b78d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c40b53dd-604d-42fc-9427-55395885ae28"
        },
        "item": {
          "id": "1961f4d1-800f-4c5d-b24c-6fad42fa33e7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a4f249b3-89f5-4103-83ea-858462fcf24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f010777f-fc95-4b37-98b5-fb795c480c2b",
        "cursor": {
          "ref": "4ac66851-1000-4253-916b-0c510a9bbc3d",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d3965b70-2af5-43a0-842b-5250388d9ebd"
        },
        "item": {
          "id": "f010777f-fc95-4b37-98b5-fb795c480c2b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "273b89ef-36d4-4e1e-8e60-a19f73ab7299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d69688-0f1a-4e89-a077-426752877a5c",
        "cursor": {
          "ref": "0ce67530-d0c8-4a5c-9755-05daf158769a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e09f4640-8703-4371-9a45-9b84f91291f3"
        },
        "item": {
          "id": "85d69688-0f1a-4e89-a077-426752877a5c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "78200735-755a-4c52-9248-d6b785c75a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd20232-1749-40e2-ae72-a4b414324dfc",
        "cursor": {
          "ref": "d20c3e5b-c510-4aab-b6d1-2766639942fc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8f56879c-7cad-4c64-a6c8-abd7c971c14f"
        },
        "item": {
          "id": "5dd20232-1749-40e2-ae72-a4b414324dfc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "13bf1e9b-5d53-4064-b8ca-e73b36f550a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f24e6fb-3994-4a77-87d6-73c8a251e5fb",
        "cursor": {
          "ref": "7c7e2a25-0fdf-42dd-9ac5-04034d30cbfd",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b15ce1dc-b08f-4940-9695-8e542518443d"
        },
        "item": {
          "id": "6f24e6fb-3994-4a77-87d6-73c8a251e5fb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "518bd085-3be9-494e-9e50-e930237318b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb65cb22-c25d-4bb3-8e26-17f9a1d26a50",
        "cursor": {
          "ref": "8ae6c4b3-d9e4-4737-8a78-3ac717753921",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "151bd29c-14e3-42ca-95ea-1d533ff7e054"
        },
        "item": {
          "id": "cb65cb22-c25d-4bb3-8e26-17f9a1d26a50",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f71af4d-a6bc-462c-b0b3-f7b9f65478de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f067326-f4d7-4f02-b16d-52234a00058d",
        "cursor": {
          "ref": "9f2aeb43-b128-411e-b4a8-37e9ea3302d0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "704e19ed-dc41-4528-bc9d-23021df129a6"
        },
        "item": {
          "id": "7f067326-f4d7-4f02-b16d-52234a00058d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d020242e-c33b-433b-841f-a10347627bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baa68a9-4c2f-4c2b-b857-f6bc1238b282",
        "cursor": {
          "ref": "30f4605c-b795-4c48-8681-2479a8e23b30",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "796cbaea-e12e-4fba-a20b-21c6fe18d44a"
        },
        "item": {
          "id": "9baa68a9-4c2f-4c2b-b857-f6bc1238b282",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cb200e42-e2be-4bd4-a985-6773ff7defb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d388dcc5-7262-4597-afed-6a27f5252ee6",
        "cursor": {
          "ref": "7f3ff5a3-f056-464d-94a9-642d894a0473",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "99a89220-a4a8-468a-91df-d04ffaf150f1"
        },
        "item": {
          "id": "d388dcc5-7262-4597-afed-6a27f5252ee6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "81d38e53-6a42-46c2-8a3c-2f232ed011fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a57b233-473e-4a8c-8e6e-1c970627b62a",
        "cursor": {
          "ref": "ea611981-2096-4983-9411-c52ec8023af9",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "de73ff0e-5109-4c6d-b470-fb12f3234663"
        },
        "item": {
          "id": "2a57b233-473e-4a8c-8e6e-1c970627b62a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "082bcea9-3e47-45da-971e-89591fba57c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbadd45b-8173-45f1-8b3c-456ce4229939",
        "cursor": {
          "ref": "2a61d6a7-7bc8-428d-bae0-0a26aafff2c7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ce004506-af9c-4403-bdda-558cb8087cfc"
        },
        "item": {
          "id": "bbadd45b-8173-45f1-8b3c-456ce4229939",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "49a8a3df-ac57-4ba2-a28c-6ad73ce2dff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62db8b03-aee6-4293-8c42-3b2c9fda1f3a",
        "cursor": {
          "ref": "c53292fc-8046-4292-9ba0-b6ad298efad9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bae719b0-a443-4aa2-b34d-0f6f40dd79de"
        },
        "item": {
          "id": "62db8b03-aee6-4293-8c42-3b2c9fda1f3a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9358b5c4-fee9-413c-a9dd-6b203ae1f559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50bff41-80a4-42e3-8940-51b4a11aa49e",
        "cursor": {
          "ref": "5ea0b468-dcca-483d-8b9b-7b0e79a24911",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dccc2d82-75f9-40dc-8443-36a0f5821fd8"
        },
        "item": {
          "id": "a50bff41-80a4-42e3-8940-51b4a11aa49e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "476a3ec0-3462-435b-8e47-0eeca5356032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55480d5-5daa-44ec-85c2-7c0b1a481037",
        "cursor": {
          "ref": "137fcd49-0bad-4162-ba2d-5031bc10177a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "efac408e-21e8-45ca-9094-dd3635f3ce1e"
        },
        "item": {
          "id": "c55480d5-5daa-44ec-85c2-7c0b1a481037",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3beb119d-2fe0-4c72-9a15-7077c5683b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd325e0-ba7e-4552-bcf9-291f4d1b2ba4",
        "cursor": {
          "ref": "a5b24037-7190-4b1e-9fcc-7d6746ebcaa9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "61dc9a32-513a-49cd-8f6c-42660d5f81ad"
        },
        "item": {
          "id": "abd325e0-ba7e-4552-bcf9-291f4d1b2ba4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "741e083c-bff4-4858-99df-0c15d5e1614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b07b8fc-48f5-4191-be03-0aeff0144000",
        "cursor": {
          "ref": "0b1429f8-8e7a-4549-8d6a-68ce3dcdc648",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a744fac3-b9ab-4959-a373-57369065e524"
        },
        "item": {
          "id": "1b07b8fc-48f5-4191-be03-0aeff0144000",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7683a45f-4d02-4ce4-8d85-f867280a6a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad85dd4f-f0dd-44c6-b530-e09a8ff671b6",
        "cursor": {
          "ref": "0abd43f5-b384-4673-84b5-f488c143b4e3",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1974c18a-1108-45fc-a47c-1e3f92cf7c28"
        },
        "item": {
          "id": "ad85dd4f-f0dd-44c6-b530-e09a8ff671b6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "38302379-fa52-4edc-8454-b3a518e31887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a452e0b-7ece-49df-b248-ead896126d73",
        "cursor": {
          "ref": "5d7005c0-67dd-4ca0-8f9b-dd1c8a250490",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d7b79abf-44ea-49d4-919a-82be3cfbd303"
        },
        "item": {
          "id": "5a452e0b-7ece-49df-b248-ead896126d73",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a0834275-5f91-46c4-a426-e3b70c91b187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173df6e6-1226-464b-8a57-0131c223e2dc",
        "cursor": {
          "ref": "83736652-a858-420a-ba97-c3fa325cf3d5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bc43459d-01da-4e76-9235-a9e7f2452f66"
        },
        "item": {
          "id": "173df6e6-1226-464b-8a57-0131c223e2dc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "17612d85-0760-45d6-ab2e-a1ed33834577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b18a478-e522-4550-80ec-6c36fc2d4654",
        "cursor": {
          "ref": "374fc21e-884a-475f-b55b-43646142cb87",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c806d431-2637-4f8c-aedd-2ca81a23e31b"
        },
        "item": {
          "id": "2b18a478-e522-4550-80ec-6c36fc2d4654",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "84986b1e-4001-4d1c-a6a7-6066cdf80014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403adc27-732b-4cb3-a9f9-cb80f42da43f",
        "cursor": {
          "ref": "3afd93b2-81e3-4884-ba9b-ce0d8c05529f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b6dfef35-9ad6-46fd-a923-ef3833025284"
        },
        "item": {
          "id": "403adc27-732b-4cb3-a9f9-cb80f42da43f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5486062a-7a2d-46f5-927e-5de2ef8d86ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9314a8-7576-4d00-8c25-34cff1b03835",
        "cursor": {
          "ref": "3d943a3d-1af5-481c-af03-33bdcbb35605",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9844ce6b-5e52-4e87-9113-4320b9f5f403"
        },
        "item": {
          "id": "4c9314a8-7576-4d00-8c25-34cff1b03835",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "73f0a41a-9f02-436a-afb0-8536007a4a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a76d53d-841d-43bb-b48a-a7a0b0bd57e0",
        "cursor": {
          "ref": "9e1f956c-70a4-4155-8a34-b3f36f8ba66c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7c34bace-96dd-44c7-b7b5-56cb3a58f833"
        },
        "item": {
          "id": "6a76d53d-841d-43bb-b48a-a7a0b0bd57e0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5bf1c528-2547-49fa-ab2c-0ce263ec1a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ba5200-1e8f-4879-b276-71edfba8f134",
        "cursor": {
          "ref": "0b64a6f7-c2e1-4394-a11e-407afc5aeb26",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "75b2b124-36f6-48d6-85c9-4e846e4e96b6"
        },
        "item": {
          "id": "82ba5200-1e8f-4879-b276-71edfba8f134",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ebcec408-17c4-4303-af25-1d51d71524ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fd7f70-449e-4aaf-867b-11d00eb4eefc",
        "cursor": {
          "ref": "c80b0dae-9a65-4ab0-b444-abe26500a3fb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "01e997c0-8783-42f0-95ec-65448d4692d2"
        },
        "item": {
          "id": "22fd7f70-449e-4aaf-867b-11d00eb4eefc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ea333052-6ad0-47ee-80b1-9dfd7fd0f830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe05ee3-1288-451a-83ce-312c1655cb8a",
        "cursor": {
          "ref": "7f41f7f5-9e39-46f2-8e9b-8b9a0b14075b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7134c795-022e-4e9f-a4b2-c3c59a44d494"
        },
        "item": {
          "id": "8fe05ee3-1288-451a-83ce-312c1655cb8a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bedacaa2-f856-4545-b166-c1c42cf460c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4543d37e-8f50-4dce-9204-b5464131f051",
        "cursor": {
          "ref": "fa73d9fa-d06d-419d-bf08-093092c53013",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a28e0769-1acd-4ade-87d5-35a4b8d53038"
        },
        "item": {
          "id": "4543d37e-8f50-4dce-9204-b5464131f051",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7f9d277d-82ae-4147-bb87-ac78d8c4848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346b4679-d673-44fe-b47f-2dafd77d446f",
        "cursor": {
          "ref": "1773b9a6-5774-4778-ad5e-7bbdbf2af8ec",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "89a971a8-7c99-4f44-a3ce-a1742dfd9da0"
        },
        "item": {
          "id": "346b4679-d673-44fe-b47f-2dafd77d446f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "db3e24b2-d085-4a93-b691-20240b53da6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0cec72-7bf3-4aec-817c-ee6b87ff71dc",
        "cursor": {
          "ref": "79af91d7-2dce-4ea7-91cb-e2e16d4d4b6b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6f306979-595b-41ed-8a59-f6e79d5fd7e6"
        },
        "item": {
          "id": "bb0cec72-7bf3-4aec-817c-ee6b87ff71dc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "131cc3e0-5de4-4e57-8e11-06698631dcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9659d990-59cc-4e70-8d4b-d3b221c40fa5",
        "cursor": {
          "ref": "f623e341-f92f-446a-8ed4-fcf5c0de504e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "98692b18-798e-4e35-843c-621b02adc7b0"
        },
        "item": {
          "id": "9659d990-59cc-4e70-8d4b-d3b221c40fa5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "50eff66d-eb39-4c09-a212-017fdd986e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17123586-fd37-4826-88be-ebf13fca6d3d",
        "cursor": {
          "ref": "4de9e3e4-0260-4208-9375-1df7d7ec7691",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "993a9b06-bccd-40e6-a9a9-bb9a61114da9"
        },
        "item": {
          "id": "17123586-fd37-4826-88be-ebf13fca6d3d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "51f1939a-133f-4e1c-87f1-b39ac2dbf5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190a858c-e1e4-4c98-bba3-1d42e9403124",
        "cursor": {
          "ref": "5fb46922-a122-45ef-804d-5613df22ffb2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2f0150c8-c68d-4985-acc5-c1cf234c68a0"
        },
        "item": {
          "id": "190a858c-e1e4-4c98-bba3-1d42e9403124",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6d0c0a02-73d6-45e4-b5a1-7cf31efa5859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289142d8-1f26-41a0-bb82-778154db891e",
        "cursor": {
          "ref": "e8eae4ac-8186-421f-a8c6-316d6291cac3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "14f10126-891e-47f3-aebe-277df3084dd1"
        },
        "item": {
          "id": "289142d8-1f26-41a0-bb82-778154db891e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a0231472-90cf-44e5-bdbc-9a6c23a79f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c08cefc-173c-49a8-9bdb-30c3546d4517",
        "cursor": {
          "ref": "5383b807-e5fa-4662-a009-054b001d0551",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "728651e1-5849-428c-ba15-bbcaf0a7a94a"
        },
        "item": {
          "id": "8c08cefc-173c-49a8-9bdb-30c3546d4517",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "27265817-a88e-4ee2-93ff-2ca3689f2a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb08060-a1ae-4bfc-9ba4-c308e36312c8",
        "cursor": {
          "ref": "4ccad043-6061-45b4-977c-be1125b5e78e",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8a830cc9-5edc-4a07-87fe-289a4da7408c"
        },
        "item": {
          "id": "9eb08060-a1ae-4bfc-9ba4-c308e36312c8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "57476830-dc2b-443d-a8bf-ad9583610f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0d5ad0-a2ac-4585-a3f1-782d209d5cd6",
        "cursor": {
          "ref": "6c490654-485e-4f2b-9fd0-06078a25602f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fc48ca1d-7213-4cfb-b495-8c1f592fadd2"
        },
        "item": {
          "id": "be0d5ad0-a2ac-4585-a3f1-782d209d5cd6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e415c44d-c0b9-4dfd-8c24-50cf202c2860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181a7058-8a14-499b-b6ad-f324517dc42f",
        "cursor": {
          "ref": "3107a27d-0341-4683-ae34-d5d7ef4bee89",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b9376c1f-33fa-4cee-9dc6-216d5602a534"
        },
        "item": {
          "id": "181a7058-8a14-499b-b6ad-f324517dc42f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "198e931a-28a2-4412-84a0-78340adb0a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720373f3-c8bf-4785-8824-92b278caca8d",
        "cursor": {
          "ref": "999e5d45-2b34-418b-84fa-cab3442ebcdb",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0d6a9473-0eb4-4644-956b-fe2f53553079"
        },
        "item": {
          "id": "720373f3-c8bf-4785-8824-92b278caca8d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6d23d633-f8f9-47f4-b23e-4e5485236933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15893a18-1093-4f0c-aa82-e3bdf306c520",
        "cursor": {
          "ref": "44514bba-1573-4423-82dd-279f2ebc0e63",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6c57f31f-d447-4b31-8b05-ecfa2474c700"
        },
        "item": {
          "id": "15893a18-1093-4f0c-aa82-e3bdf306c520",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5e1b39fd-b34b-4e17-97c9-cc07332091b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86687d2a-c90c-4e4a-be82-67a9cccb5800",
        "cursor": {
          "ref": "efc8cbc5-f9aa-4206-9504-e220eb536b9a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eb21abf7-9a91-4156-8243-f3c12d76977f"
        },
        "item": {
          "id": "86687d2a-c90c-4e4a-be82-67a9cccb5800",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "adbd4552-fa39-4dd4-8c63-cd138b841101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6d1d6a-f44c-4506-b40a-2423edbce0ab",
        "cursor": {
          "ref": "84dc1713-e264-45dd-a990-eb212c581220",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "01e3e5ed-68e7-4013-860b-f641541fe473"
        },
        "item": {
          "id": "6b6d1d6a-f44c-4506-b40a-2423edbce0ab",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "296c3aaa-89c8-49ee-aed7-7c9f1ea9df74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9dd21a-99b9-4c90-b4fb-f9bc6ec31fb5",
        "cursor": {
          "ref": "37f7248a-5690-4866-b63c-84a5d3decb01",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b3ca1c5a-b1dc-4cd8-89c9-c86550b6149e"
        },
        "item": {
          "id": "cf9dd21a-99b9-4c90-b4fb-f9bc6ec31fb5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "89eb0666-3800-4651-818f-bf62fca62990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80625d1d-6020-45c8-806a-90fd5a2ebdf2",
        "cursor": {
          "ref": "ef015d87-9890-415f-af73-70ae486f540a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "61d04e57-25c3-4d2e-ba0c-a7edccd83344"
        },
        "item": {
          "id": "80625d1d-6020-45c8-806a-90fd5a2ebdf2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a1ea3b87-1f45-4c91-a2c8-7e2c399f87e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafcc6d1-a4de-4b0b-944b-3fc8c11c9866",
        "cursor": {
          "ref": "f37e1a64-ebc0-43a6-9d45-fa5cea448743",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "15ca6a4a-ca9e-4406-8f17-8ff0c9652615"
        },
        "item": {
          "id": "cafcc6d1-a4de-4b0b-944b-3fc8c11c9866",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "63ad97de-3471-4bad-9875-2c13dfac14a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c860ba1c-20a4-40bc-94e6-020e0721eb09",
        "cursor": {
          "ref": "7d1a52c1-d683-4654-a9b8-7b97f22ceb83",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7dfd2232-b5e5-4902-a4a7-e93cf23720d6"
        },
        "item": {
          "id": "c860ba1c-20a4-40bc-94e6-020e0721eb09",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f399741e-18b2-43b7-90ec-40f2e094c291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8d5687-4cf1-42b0-901b-faef124a3d89",
        "cursor": {
          "ref": "b080efa8-3eea-43ef-bd57-aa2c6c283774",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "79b039ba-d521-4b82-a3fe-9b4f816391b9"
        },
        "item": {
          "id": "ac8d5687-4cf1-42b0-901b-faef124a3d89",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2781ff28-2f1c-4f31-b4e8-dc59c8cfe689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d20fbb-0463-483c-a24b-fb2aed5b5a99",
        "cursor": {
          "ref": "decd3c31-f715-4821-a483-4efda9b27a48",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "39803700-1fb2-4b18-a14f-42159726ab0b"
        },
        "item": {
          "id": "84d20fbb-0463-483c-a24b-fb2aed5b5a99",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c9aa3cb1-4cf1-4637-b649-0a5bac6cc125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b27c71-01f6-41d2-978e-ba141f16aa14",
        "cursor": {
          "ref": "53798aac-fe51-46cb-b26f-c11c1036e568",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ca977f73-2343-4ad4-b016-670e6acb6933"
        },
        "item": {
          "id": "a3b27c71-01f6-41d2-978e-ba141f16aa14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "046944ed-d3d4-4bd6-a8d5-63bd0cfea0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb932c9-b5c4-4c37-933f-09e1719e04ba",
        "cursor": {
          "ref": "10b9e639-738f-4e51-a0d4-371b5472e0f3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1e2445da-2ee5-4d72-937f-7843d4c1f2d7"
        },
        "item": {
          "id": "fdb932c9-b5c4-4c37-933f-09e1719e04ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "88ff7942-321f-423c-baf0-5867f4f2930c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1967e61-c365-49ba-acce-b9dae1d7e8b4",
        "cursor": {
          "ref": "fe0e49cf-aa48-4f2e-873d-fb474600dbb7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c679b949-3c2d-474e-bb21-dc148cf0c5c0"
        },
        "item": {
          "id": "c1967e61-c365-49ba-acce-b9dae1d7e8b4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7f76a5e2-b231-4b82-9061-63303bb7e33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c051b71d-9a43-4fb6-99e8-68a78bd6ebad",
        "cursor": {
          "ref": "398796fe-5cec-4e6b-baeb-db48d03d9d78",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "651e16cb-af44-40bd-ae06-6d6a8c3c03ed"
        },
        "item": {
          "id": "c051b71d-9a43-4fb6-99e8-68a78bd6ebad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4acb743a-9dd3-419f-aa84-d974513bb747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d8635b-aea4-4fed-9e7b-d6d9ca354d67",
        "cursor": {
          "ref": "b21b2bc6-5db0-4976-9b7d-d1e7f8003931",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "311e18f0-ce73-42e3-ac5a-ece2222c0bc7"
        },
        "item": {
          "id": "44d8635b-aea4-4fed-9e7b-d6d9ca354d67",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8ef7a597-3c80-4bbc-820f-630e6c73420e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707ca7aa-754b-4115-93ee-04b40a0386a9",
        "cursor": {
          "ref": "20b0e51c-9cab-44c6-82d7-b13bc30fc4ae",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e5226ab3-5ce9-44f3-91d3-7909a46104e5"
        },
        "item": {
          "id": "707ca7aa-754b-4115-93ee-04b40a0386a9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "73a4f3ca-760f-45ba-b5cc-91d7ea70e6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334eaef1-e8db-4b69-8792-9f4c28497998",
        "cursor": {
          "ref": "6b7e6c37-c3d2-4630-919f-80ce415d719d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ff285e9b-5aa9-4ac0-b811-9e84002cd81b"
        },
        "item": {
          "id": "334eaef1-e8db-4b69-8792-9f4c28497998",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b93b50c2-6fe9-4ec6-bcc0-a5a28b3d3370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3fa09a-bc54-4830-9ec5-f0dfea6a1431",
        "cursor": {
          "ref": "dd622db3-3e9f-4945-9e6b-b635d5059b58",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a2109651-fe46-466c-aaa2-2435594d66d8"
        },
        "item": {
          "id": "1c3fa09a-bc54-4830-9ec5-f0dfea6a1431",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "73825e70-22e6-4bb7-a262-a3d4b92ca422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16884dd6-10fc-44b1-a38a-9fc01a18a3a6",
        "cursor": {
          "ref": "1186c333-c4bc-4f92-a081-8ec15e7f91f0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "be7e9fe4-61b8-4f1f-8ffa-7e435bd6adb3"
        },
        "item": {
          "id": "16884dd6-10fc-44b1-a38a-9fc01a18a3a6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "54c74f1f-0fdb-4199-abd5-4a054ae6943d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cfb715-5e68-47bb-bd90-c9b648e4a89d",
        "cursor": {
          "ref": "4e399e01-9333-413f-b38d-23b833dd32b9",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ba96fe7e-7f6f-46f3-bfa5-3ee757e70957"
        },
        "item": {
          "id": "74cfb715-5e68-47bb-bd90-c9b648e4a89d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6a9b01e4-ccf7-4d3b-9f5c-2e1557d0c5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de28eaa0-3e8d-45ff-a8d1-9d68e798a767",
        "cursor": {
          "ref": "3b2bf037-9237-404b-a2eb-04c06f015a25",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "14146d3d-5bad-412f-9e41-23dfa7375ef3"
        },
        "item": {
          "id": "de28eaa0-3e8d-45ff-a8d1-9d68e798a767",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "07f5e9ec-000e-4305-a378-ede00cdfd581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aae6bda-a7cc-4b04-bc67-7a50adce4fd3",
        "cursor": {
          "ref": "4b17cb90-d110-4d41-9fd3-99e893a2c463",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2cf7a399-4195-4b6c-b9f2-2694381d204b"
        },
        "item": {
          "id": "8aae6bda-a7cc-4b04-bc67-7a50adce4fd3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6a7a3744-41f5-4032-b036-f7ea7891deec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e06e87-aeb7-4f77-b807-fdd6935bee15",
        "cursor": {
          "ref": "5d3647b8-451e-4fb5-beed-70a307ab4508",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a35703cc-f81f-46a7-9e00-3901d4bcc7b0"
        },
        "item": {
          "id": "c5e06e87-aeb7-4f77-b807-fdd6935bee15",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0cec688c-fed4-40ae-a8a6-d368cf87e118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d438f9-af6b-4883-920f-ee3071101512",
        "cursor": {
          "ref": "96cfb491-4355-419a-b53f-65597f96d9e4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "baaed7b7-1993-4513-bb56-3b53a2cb11f5"
        },
        "item": {
          "id": "b2d438f9-af6b-4883-920f-ee3071101512",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b4e1804b-4ef0-4f54-833e-efc4b25185f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fa9928-8538-4bca-ab02-d0f335579305",
        "cursor": {
          "ref": "214b93c9-6f42-406b-abee-ee3c498a6c8b",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "71d91cfa-0a83-40cc-8f50-83b746843395"
        },
        "item": {
          "id": "14fa9928-8538-4bca-ab02-d0f335579305",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f86133c6-117c-48de-a280-b3ae041889fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30391f7-2eb0-46d5-8f04-8613949f910e",
        "cursor": {
          "ref": "95fadda9-3c93-499d-8b53-01f9a210a195",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "71b7545f-7204-4cd2-adbd-78414f48ef13"
        },
        "item": {
          "id": "c30391f7-2eb0-46d5-8f04-8613949f910e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "be5d37b8-4422-4d3b-a79d-c14648a10195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41318b5-db60-4b63-9b42-702577af7d9a",
        "cursor": {
          "ref": "2f9c1d5a-025f-4aac-bcbc-4154d13e907b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c04a6c76-9660-4002-94a3-badf12dd9485"
        },
        "item": {
          "id": "d41318b5-db60-4b63-9b42-702577af7d9a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "de02c7e2-6592-45d5-a184-91353f64af21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c3bca9-c902-4627-b550-7665e4829650",
        "cursor": {
          "ref": "6dff4be1-39d8-49d4-a42e-9c627eaa7c77",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "897773b1-56d1-49fa-a4e8-09e1b71c389f"
        },
        "item": {
          "id": "c9c3bca9-c902-4627-b550-7665e4829650",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c29fdb8e-f7ed-4862-b0dc-2cfcf89b4db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcb6e06-1f26-479c-8610-3c898c89f4ba",
        "cursor": {
          "ref": "ef41409f-2d5e-4b7e-bc29-0ba78dcdd7de",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4d045701-3095-44f7-9d71-155c800b02e0"
        },
        "item": {
          "id": "efcb6e06-1f26-479c-8610-3c898c89f4ba",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "471a389e-f265-4368-9f10-8909ca3cfd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e129f61-eaff-42ce-9a5c-b1a1a9f50161",
        "cursor": {
          "ref": "21c88222-ae5f-4aa3-9d92-7e0d3c7a057d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f3357db9-f09d-4744-874a-053effc85afb"
        },
        "item": {
          "id": "4e129f61-eaff-42ce-9a5c-b1a1a9f50161",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "507b172d-0766-45da-b96b-e12d6ceadb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1dba4c4-d28f-4ec0-b23b-5772defc25a6",
        "cursor": {
          "ref": "2d7921fb-a54e-40f2-a103-7a190004cc54",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "57c5da1c-7ec5-4c52-b258-cd7b2293285f"
        },
        "item": {
          "id": "b1dba4c4-d28f-4ec0-b23b-5772defc25a6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "321a0b8b-89cc-43ba-9206-4ea2f2656ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2e10fb-4be1-40dd-9489-a01e7fe0aac6",
        "cursor": {
          "ref": "e076bc52-f400-4f28-b38a-465ae78e27ca",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "44d697de-e79c-489b-b082-d6860f951036"
        },
        "item": {
          "id": "7c2e10fb-4be1-40dd-9489-a01e7fe0aac6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "94f5dd6b-6b7d-4cdc-9d5f-4e703509cfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc18da19-faaf-41c6-8ad2-0eeecfdfea52",
        "cursor": {
          "ref": "301d7157-33b1-47e6-b2fc-bf259310952d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9f338235-ebc5-4785-baf3-0fa6c67ec8ab"
        },
        "item": {
          "id": "dc18da19-faaf-41c6-8ad2-0eeecfdfea52",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e765cec1-8842-4a34-b9ce-59d0542a19a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39662210-02a1-4e54-abc5-d832d6601772",
        "cursor": {
          "ref": "48028115-f954-46d4-bb28-1d3f23037676",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e69413c3-472c-4d7b-9319-a3c5b911d55d"
        },
        "item": {
          "id": "39662210-02a1-4e54-abc5-d832d6601772",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "23034bbc-90d3-4e1f-a545-b021d19f3005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204c3ae9-635e-4892-9c2b-6305e24f3477",
        "cursor": {
          "ref": "9b30e005-78d6-4426-8385-1b3c4bcba734",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9fc53ff5-d59a-4c7d-bcbd-3f3ffbfb07a0"
        },
        "item": {
          "id": "204c3ae9-635e-4892-9c2b-6305e24f3477",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2adefb4f-46f5-4cb1-a0bc-f44d2a0c083d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9de652-b806-4135-9319-cbc65137441d",
        "cursor": {
          "ref": "39a27d9b-63f8-4be7-acfa-195668012891",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "be8dcd67-340b-46c7-8fd5-9fb4663506d3"
        },
        "item": {
          "id": "ea9de652-b806-4135-9319-cbc65137441d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "88168889-faf9-4584-b850-eadb38ab15c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b94407aa-ed29-42b9-9a12-0eb62795c837",
        "cursor": {
          "ref": "d2df0991-b080-44f2-99a6-4b5423f98833",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "67077d2d-9da2-4961-b28f-e7b90dda1fe4"
        },
        "item": {
          "id": "b94407aa-ed29-42b9-9a12-0eb62795c837",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d13e0662-0625-4381-8985-56ff579802aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535bee65-3191-4241-a362-a488711a191a",
        "cursor": {
          "ref": "059560ae-58cf-4ed5-825d-6009f5f9fa1d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "962aec83-e485-4084-82fc-a62ba8e920db"
        },
        "item": {
          "id": "535bee65-3191-4241-a362-a488711a191a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c47eb1cf-5cd3-466d-b4a0-dd36a547dc82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3a30a0-7d72-4f97-9c86-5bc16873b045",
        "cursor": {
          "ref": "4f3abf9c-5efc-4dad-9705-6fb6898a1c86",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "14dbcc04-b094-4685-b6ed-18d49ce13f85"
        },
        "item": {
          "id": "2e3a30a0-7d72-4f97-9c86-5bc16873b045",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c81da95c-c093-4f0c-927e-5930cfa26883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed6e34d-227a-4404-a77d-ac9aa440cf19",
        "cursor": {
          "ref": "6fb4260a-9859-45d6-94dc-e4dfbf77c4ff",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "899fa219-7ae1-4191-b9b8-7e1441a2d3a9"
        },
        "item": {
          "id": "9ed6e34d-227a-4404-a77d-ac9aa440cf19",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3ab327a1-b920-41b7-9aea-163933b06b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56bdc7b-0d01-4ae9-9364-da0d3ff933e7",
        "cursor": {
          "ref": "3c376e12-4bbb-486b-8e05-056bb9018dd4",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7632c5c2-55ca-4610-b23a-7cc1584b4cc6"
        },
        "item": {
          "id": "a56bdc7b-0d01-4ae9-9364-da0d3ff933e7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6427863b-6c81-479d-bb92-bbfb7b26337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c80e34-1969-4428-8ad8-7e5e94fb193f",
        "cursor": {
          "ref": "7a826c3e-81ba-4767-8762-16796008f07c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "17bfcf0f-2ff2-4857-8cc5-3d26881397fb"
        },
        "item": {
          "id": "22c80e34-1969-4428-8ad8-7e5e94fb193f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7e0318c5-49c6-42f5-9549-cc26154f87c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2901aedf-6f62-4004-8e97-7459c2d2c7b1",
        "cursor": {
          "ref": "bea7aab3-90bc-41b8-b10e-2900d469aa45",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0c205b85-54f4-416f-889d-9f9cc5f9918d"
        },
        "item": {
          "id": "2901aedf-6f62-4004-8e97-7459c2d2c7b1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7dc70268-9fbd-445d-8168-b6dee9503d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c5ddfb-8c9a-4e34-affb-dfa0d693a505",
        "cursor": {
          "ref": "f2f20e4d-e851-4626-a89e-a564733dfcb7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "02e73253-71a1-4d4a-9c47-70c032eb9994"
        },
        "item": {
          "id": "d6c5ddfb-8c9a-4e34-affb-dfa0d693a505",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9b82b253-fc41-40a9-9859-0427100ab68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6378d1-32a6-4fd6-8834-2e42d347c5ec",
        "cursor": {
          "ref": "255d1c22-cb3e-4eb2-9650-548d96aa45b5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c0db7f0e-a732-4c52-90a9-11a805bd87b4"
        },
        "item": {
          "id": "7a6378d1-32a6-4fd6-8834-2e42d347c5ec",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "58043282-2606-4b36-aadc-2ad2cf6bd339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d3bd54-ec4c-47ab-9c76-77846048cfac",
        "cursor": {
          "ref": "afa066db-5c89-439b-a0dd-53d1a984d965",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "403c9aed-1b82-4ff3-900d-6f112a7f8102"
        },
        "item": {
          "id": "08d3bd54-ec4c-47ab-9c76-77846048cfac",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c9d208c3-8a6a-477a-b06c-3bd13a2481fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba78cc6-2523-4358-abdf-befdbf40658d",
        "cursor": {
          "ref": "7aca802f-4994-4333-add6-21e0225a51af",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9558d098-2edc-4d84-b29a-a2539ab977c7"
        },
        "item": {
          "id": "0ba78cc6-2523-4358-abdf-befdbf40658d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "57a34a58-2012-485f-9d4b-3043e1b577a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "19b22910-020e-4f43-ad66-749f3daca1fd",
        "cursor": {
          "ref": "ec416dac-5a63-4c4f-b675-c43657c725ea",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "35e83e57-9381-4970-adc1-d45d6667b189"
        },
        "item": {
          "id": "19b22910-020e-4f43-ad66-749f3daca1fd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "facde583-7305-4042-9799-b5d559d633d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b6699a6b-79f4-48a0-a049-7ca862e05a63",
        "cursor": {
          "ref": "9071b8fb-a9f4-4f3c-ae11-571d0bfc6df1",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f6ddfe13-c6f9-42f3-acb9-6f47605f2d50"
        },
        "item": {
          "id": "b6699a6b-79f4-48a0-a049-7ca862e05a63",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f55f2396-d9d4-4efa-a96e-01c986e73dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fb70a31c-cbb0-40ef-beb4-4fff3e7d70a7",
        "cursor": {
          "ref": "67dcb9ae-d814-47d2-a821-c7efc9c5a121",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a772a126-a197-4db2-bc39-20027262e884"
        },
        "item": {
          "id": "fb70a31c-cbb0-40ef-beb4-4fff3e7d70a7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c6c4de1b-0397-45b1-91e6-38e1b3683199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "11bed2e4-bbeb-4d32-80c6-13a5472751d9",
        "cursor": {
          "ref": "c7968b41-d7d2-4ae8-88c2-e4de2185ea7c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "caf350a8-447b-4a06-9ee4-89d6d3c5877f"
        },
        "item": {
          "id": "11bed2e4-bbeb-4d32-80c6-13a5472751d9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "de6e7533-433e-436c-b859-0a9b877194a1",
          "status": "Created",
          "code": 201,
          "responseTime": 4908,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fd3d26-0b6d-43ca-943a-86851df4b757",
        "cursor": {
          "ref": "4b7c031f-e167-40aa-ac08-f85e43ca1a9b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "918bebd8-2881-4458-8792-337638b2a241"
        },
        "item": {
          "id": "f7fd3d26-0b6d-43ca-943a-86851df4b757",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b98f64b3-bbfc-4934-bc59-4db9fc6808df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "001e9065-64c0-4df2-a018-a62d74b3c5d8",
        "cursor": {
          "ref": "6929b309-f188-464c-846a-7262542be20c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9bf469ad-267c-4e9c-b66f-ed6ab82120bb"
        },
        "item": {
          "id": "001e9065-64c0-4df2-a018-a62d74b3c5d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f6269767-bb87-477b-86f9-d3f0c673db8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "82058000-9143-4009-a22d-d5d028296a10",
        "cursor": {
          "ref": "76287bd5-442e-45d4-8034-cbc4a6505658",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "57cdb8b6-ea60-467d-b3f6-8fc2873a3f08"
        },
        "item": {
          "id": "82058000-9143-4009-a22d-d5d028296a10",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64939067-7805-488c-800c-389d60bf54fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dc2be4-ab78-4670-9d51-ad2d60aa22d5",
        "cursor": {
          "ref": "15040922-1007-46f2-af15-ded28ce6bd73",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "64a0b42f-f410-4f6f-b6bc-467c17dafec8"
        },
        "item": {
          "id": "e2dc2be4-ab78-4670-9d51-ad2d60aa22d5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "675df793-ed99-4989-a633-27bae21ee00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef703287-1e9c-4673-ac92-63363822a55c",
        "cursor": {
          "ref": "818cd6c7-6ccd-4339-99ae-22730fa014c5",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e12569ad-1195-4af9-9955-5c5319daffc2"
        },
        "item": {
          "id": "ef703287-1e9c-4673-ac92-63363822a55c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "09888bc5-c5b1-43f9-8b79-14c60d465ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bec0de-b650-4919-a82c-5c122e03f859",
        "cursor": {
          "ref": "918d4ebc-01d4-4280-aa85-6fa1dc4be64d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a7b5c718-c29e-4c56-a188-b73b07a5ea8a"
        },
        "item": {
          "id": "42bec0de-b650-4919-a82c-5c122e03f859",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8f116dae-2c8d-4200-a725-7f70e2fbaefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f7ed2e-7945-423f-a01e-0a0fdd157681",
        "cursor": {
          "ref": "1a4c492b-5060-4791-8821-1159b91ad535",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "977fd6b0-4459-448a-9261-d86d57c88f90"
        },
        "item": {
          "id": "d3f7ed2e-7945-423f-a01e-0a0fdd157681",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0804d273-4ce0-45f5-95e1-20b6b458b996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562a55c9-0b92-41b0-ae4e-f5d238ac4cad",
        "cursor": {
          "ref": "ff9a3c61-ceb6-40f0-9519-d51f469ff9bd",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "37c69be2-b7c4-4945-a94e-34c7914916e2"
        },
        "item": {
          "id": "562a55c9-0b92-41b0-ae4e-f5d238ac4cad",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e7169460-65f0-456c-8575-68c63702054a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ca1a05-23da-43e6-bbc8-e031065f6686",
        "cursor": {
          "ref": "b37c706a-a0b4-4eb6-a85f-72816cd20140",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "43abd477-afb1-45a2-8444-3cd09d8a1300"
        },
        "item": {
          "id": "94ca1a05-23da-43e6-bbc8-e031065f6686",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c270407d-831c-45ca-b9a0-59a543d5923d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b465af-85f5-4ade-b310-88b01b8fc356",
        "cursor": {
          "ref": "8159023e-d9d8-40c1-ac9b-aea353597cae",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca183f5a-98d6-4932-9a47-d46fcde93713"
        },
        "item": {
          "id": "79b465af-85f5-4ade-b310-88b01b8fc356",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7f24bf8c-cd51-49e7-bed0-2178bce0bfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a577340-2ca4-4b75-af6a-da7034eab2fa",
        "cursor": {
          "ref": "6e954b36-e011-4152-b4a7-a73ff8eabd00",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dcc4ccaf-00be-454e-a9c7-c049f0204b3d"
        },
        "item": {
          "id": "8a577340-2ca4-4b75-af6a-da7034eab2fa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b8559215-d447-44be-875f-226440245e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb9b2b2-1df4-4faa-abbd-b5134520c381",
        "cursor": {
          "ref": "71daed36-f111-4c2a-9969-652336b59a77",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1e69263a-7b3a-4dae-bc44-f3b92f19397b"
        },
        "item": {
          "id": "8eb9b2b2-1df4-4faa-abbd-b5134520c381",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "babd2e0e-e1e4-4a40-9863-399d38d468ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a2a156-bee1-49c0-8ac0-41e84e8026f3",
        "cursor": {
          "ref": "fbc3ca4b-00e1-4972-87ea-1ab73ca09264",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8b2c09bd-0a61-4968-a3b8-5399d4baa34a"
        },
        "item": {
          "id": "25a2a156-bee1-49c0-8ac0-41e84e8026f3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7b6e4850-2c7f-4e46-b795-5d2d99baa882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af44350-8788-4751-8780-8e016824e5a1",
        "cursor": {
          "ref": "14553292-994a-448e-833d-5e9d8972feb2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f0e958c2-3038-426a-9183-5acb423a2a7c"
        },
        "item": {
          "id": "6af44350-8788-4751-8780-8e016824e5a1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2f304686-d829-4316-8045-17d23fbcf063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa2e14f-17fe-49f0-9b08-358a517d2147",
        "cursor": {
          "ref": "a28be920-0ba9-4310-9f80-b21657bc2cba",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5d010674-6e99-47db-a84c-48ad9b935019"
        },
        "item": {
          "id": "efa2e14f-17fe-49f0-9b08-358a517d2147",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "06a742cb-f40c-4c83-92b1-afb3af42cf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9a7082-bc77-46aa-83fe-c2afc6abb1ed",
        "cursor": {
          "ref": "d17b92ac-c6e0-459b-a4af-3569a5a79169",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fa755449-22d3-4b2a-9fdc-8b7f647bc002"
        },
        "item": {
          "id": "7d9a7082-bc77-46aa-83fe-c2afc6abb1ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e413aa83-b969-457a-8e87-f3757b2ef767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc70e39-185c-4d1f-8996-be42bceb599c",
        "cursor": {
          "ref": "9a62c2a0-53e4-48c7-bb98-433fa7ea2ccf",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0844c4d5-5c0f-4715-911d-b11b32544561"
        },
        "item": {
          "id": "7bc70e39-185c-4d1f-8996-be42bceb599c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "91baa91b-3538-4773-8a74-c7785a06f3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6debd6a9-6511-48ea-b0b0-cb91eb69e125",
        "cursor": {
          "ref": "708c1384-f8b9-4712-8625-93d46db42629",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "eeb8876c-6345-4908-97f5-ec3f22deeeab"
        },
        "item": {
          "id": "6debd6a9-6511-48ea-b0b0-cb91eb69e125",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bd828eec-fb5d-43b3-a1bc-b6ce3c386a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f6dd34-fdf1-4d53-ada5-f50379aafc46",
        "cursor": {
          "ref": "0912432b-9e54-4ae2-ac04-b0e5de89b878",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "464c2619-92cf-4df5-aa19-5044d9226e94"
        },
        "item": {
          "id": "86f6dd34-fdf1-4d53-ada5-f50379aafc46",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "16063391-44b3-4116-9504-44304ef55108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5201157c-878c-480a-9264-2f957779c489",
        "cursor": {
          "ref": "2508e72c-0c90-4233-8e1f-87ee0cf68ccc",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5e668c17-7975-400f-9055-452d55e0c8d1"
        },
        "item": {
          "id": "5201157c-878c-480a-9264-2f957779c489",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c94c98b0-41cc-4a51-b824-2fc351b493be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320cb3b8-0db6-4a0f-bf60-a0fea0d1ec1e",
        "cursor": {
          "ref": "b186c725-a1ac-49fe-90a9-01046c4d4345",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f1da1d4d-761e-4c91-a817-7ecd591c02fe"
        },
        "item": {
          "id": "320cb3b8-0db6-4a0f-bf60-a0fea0d1ec1e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "870bd512-d487-4b86-ac93-1920d3e9b6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e303f23-b27c-4334-b155-70ea235fa574",
        "cursor": {
          "ref": "d421d135-f141-4a7b-84e2-3992b4611668",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cd8a3bc6-6b52-4da8-8ac6-15ed2b1e5d3b"
        },
        "item": {
          "id": "5e303f23-b27c-4334-b155-70ea235fa574",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e966dfad-9929-4e39-970b-6ae416a217ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78effae4-d674-4157-afac-16a5bebea2d8",
        "cursor": {
          "ref": "b00356e4-9801-4e33-851b-f854dbea405e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "edd137c6-a195-4f3e-9763-12c1c3512800"
        },
        "item": {
          "id": "78effae4-d674-4157-afac-16a5bebea2d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9959e85a-e1f6-4bbb-a17c-e79b6f46c56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caf9295-c23d-4152-adea-7e4029d00a7a",
        "cursor": {
          "ref": "569c9923-2964-4222-be43-422c38f50ae2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "20c5c4f1-7121-4f13-8da2-2bf6d3828dc6"
        },
        "item": {
          "id": "3caf9295-c23d-4152-adea-7e4029d00a7a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "52869bd0-6858-40c8-ad1f-5b01c7c37d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd639d6f-6f4b-4719-86b8-a9aa518261b5",
        "cursor": {
          "ref": "769ebc3b-e2db-4fc1-91a4-b8c57e09989f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4a1a8f13-b7aa-48ac-bf25-f3d22e84986b"
        },
        "item": {
          "id": "fd639d6f-6f4b-4719-86b8-a9aa518261b5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "995d7af1-ca04-49b6-9f2d-f43c9f5f4e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720cccdc-1be2-477d-8546-64c834af7a68",
        "cursor": {
          "ref": "8cd6359f-d5ec-43ec-a312-3dd23db1e59b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "70e3a790-3b1d-41fd-b147-b36572545e61"
        },
        "item": {
          "id": "720cccdc-1be2-477d-8546-64c834af7a68",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c5d866b9-0564-48c5-a607-42e251464102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca2e94-23cc-4de2-93db-d1803eab6c04",
        "cursor": {
          "ref": "11622e79-c755-4c54-a70e-c0f35ffa2315",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3210be5b-04d8-45f8-98fb-ca091ffe25cd"
        },
        "item": {
          "id": "20ca2e94-23cc-4de2-93db-d1803eab6c04",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3dcc8092-00ae-4c17-92f4-7bbe0d3206df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7870e82a-ce5a-435d-be0d-96495a4e93d2",
        "cursor": {
          "ref": "46d9ce9c-ba31-4718-b49f-d18771385ad6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "050d057a-18e6-40c4-8f17-6c72ea487656"
        },
        "item": {
          "id": "7870e82a-ce5a-435d-be0d-96495a4e93d2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d73958f9-1c68-4f1d-add9-ed60520cab00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cb22f8-b08a-40ad-b534-4e05deac3179",
        "cursor": {
          "ref": "c705956c-ae8c-471b-9eed-8e4429444e49",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e684ac07-cdd9-4511-8e01-2e8ef977a6e9"
        },
        "item": {
          "id": "c8cb22f8-b08a-40ad-b534-4e05deac3179",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dd1b1ccf-38ec-44dd-92ee-bd5f7f9f00c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdf306d-0d5a-4808-88d9-272b14326644",
        "cursor": {
          "ref": "3c4da8fc-7220-44d4-acf5-b53b90c073c3",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3b6a6bfd-ec14-4b0a-9606-77dafaa1f7e2"
        },
        "item": {
          "id": "fcdf306d-0d5a-4808-88d9-272b14326644",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25cffe4d-17b9-40a8-b659-1e38b859b3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b9bef5-b301-42ef-9050-ac541930ed46",
        "cursor": {
          "ref": "eaee8c8b-cf3b-4b34-97fd-8c29d69333ab",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "232bdc8b-9785-4e70-aec4-2722e733006c"
        },
        "item": {
          "id": "25b9bef5-b301-42ef-9050-ac541930ed46",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "edf6aa5f-993a-4158-838f-9ec12bd9d3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6834c32-ed63-41ae-9323-93c324333f0e",
        "cursor": {
          "ref": "d5823d73-4fbd-434a-bc41-8ec210e7d2cf",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5967cb1c-c74e-4910-8cb9-2b67008de377"
        },
        "item": {
          "id": "e6834c32-ed63-41ae-9323-93c324333f0e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "024c8e94-e7aa-425c-b521-0c63f1102d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e3912a-f316-4690-8511-c2457f3cffab",
        "cursor": {
          "ref": "72c9a1f7-72ab-4ef2-8941-f4e6c92a78bb",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "abcdf8d6-74ad-43e4-af8f-bb7f081e34c2"
        },
        "item": {
          "id": "65e3912a-f316-4690-8511-c2457f3cffab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "04218868-7c04-4116-9a89-f1bbcf2973c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17708ce-3bf8-4a67-9083-6bc277e6cbf7",
        "cursor": {
          "ref": "49e0823f-06d9-4bf5-962f-a7c985485818",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c92d45e1-9846-41e9-9738-56b5173ec1cf"
        },
        "item": {
          "id": "c17708ce-3bf8-4a67-9083-6bc277e6cbf7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d2a701d6-5499-4760-b2e4-de72c3111cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76504240-956f-497c-925f-9023baa82f7e",
        "cursor": {
          "ref": "d8381cf7-6198-4503-81a5-8895958d65c2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "72ac9b3d-270b-45fd-b14b-1551a99c9618"
        },
        "item": {
          "id": "76504240-956f-497c-925f-9023baa82f7e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "22f30774-e113-4dda-abe0-ca1ee72e28f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323ff6f3-0f66-4968-a6a7-2a87ed0126ec",
        "cursor": {
          "ref": "002e5af7-6793-4237-b118-c50784504782",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ad990a2b-2aef-455e-bccf-f3bd1387bd5f"
        },
        "item": {
          "id": "323ff6f3-0f66-4968-a6a7-2a87ed0126ec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bf6e4bb9-12cd-4bb7-a4e3-1b467dcc4b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69de64d-4238-4822-9fb9-e58192525388",
        "cursor": {
          "ref": "d2ec8727-100e-4525-959e-4770ce5c7b12",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "15381c9d-b9b5-47e1-9ec1-01012942bb1e"
        },
        "item": {
          "id": "d69de64d-4238-4822-9fb9-e58192525388",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1642ed28-a2f1-492b-9730-9ae1fa8224fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd2f585-d72d-4514-8fa5-232e830d1d0b",
        "cursor": {
          "ref": "edc7ce75-3db2-4571-a07e-5c304839e402",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1a0eff1b-6756-48ab-9b6b-3b6f85eeae5a"
        },
        "item": {
          "id": "ccd2f585-d72d-4514-8fa5-232e830d1d0b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1cb64afc-03c2-4fef-933e-c90f8cb24a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806409c4-5e41-427c-bb98-3a7f7ca2c60a",
        "cursor": {
          "ref": "48d87336-2039-4c8f-8432-f92ec18fdcec",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c962a0dc-4268-4c3c-b459-36df3274af12"
        },
        "item": {
          "id": "806409c4-5e41-427c-bb98-3a7f7ca2c60a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f271dea8-29a7-474c-bfe6-96c281a7796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f67766a-536e-4132-96b2-bf139bb195d1",
        "cursor": {
          "ref": "3c882c7e-9a28-4855-bd3d-052b146ded1d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "97ed06fa-e2b2-4283-bfde-d49f2060aa06"
        },
        "item": {
          "id": "4f67766a-536e-4132-96b2-bf139bb195d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6e0b8b7a-cb02-46e6-af0d-c0928594f059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef24467-7d92-4a10-b9c3-5afd44ce426e",
        "cursor": {
          "ref": "44af9ff3-9c98-42b5-b0cd-0a5ac1a25016",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bd33d6f5-14a8-40b4-8bd6-9b56b8093b53"
        },
        "item": {
          "id": "aef24467-7d92-4a10-b9c3-5afd44ce426e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dfdd8af3-c2c7-4230-84e6-bff5937d3fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8613ff-e2a3-482c-a303-97c95716a0d3",
        "cursor": {
          "ref": "a28f554e-5357-49e8-bbd9-d99f9c35915b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0bf69c3e-d1a6-4699-ae3b-6e25a8603c15"
        },
        "item": {
          "id": "8d8613ff-e2a3-482c-a303-97c95716a0d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0d9dab51-cf55-4700-a177-c0bca80d6857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5f90a5-fcc3-4f27-b34e-0232690450cf",
        "cursor": {
          "ref": "58605955-393d-49e2-9dcd-d37ba5c5ab15",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "edea0410-a42e-4cb3-82b2-8b176bdf48d7"
        },
        "item": {
          "id": "ad5f90a5-fcc3-4f27-b34e-0232690450cf",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7a51bb3f-1f55-4746-8c43-d9e4bc6a684d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecf0c33-6314-423f-a4b8-ff5eaf216c98",
        "cursor": {
          "ref": "c6b872d9-a491-48d7-9a71-b6c558008bfa",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1cbffc61-a054-4e1c-8625-1a26e5a7639a"
        },
        "item": {
          "id": "aecf0c33-6314-423f-a4b8-ff5eaf216c98",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7666af0d-bad4-47dd-8d88-fd7ddce0aa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9441bc2a-085a-4162-98ff-08ec5f620e6e",
        "cursor": {
          "ref": "ab6d425a-e1a8-4bc1-8579-d7887e8adaac",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1cf877a7-d810-4de2-b194-2a0f7ba98c54"
        },
        "item": {
          "id": "9441bc2a-085a-4162-98ff-08ec5f620e6e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a5b46ddd-615b-46ef-9746-9d81523d55de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f223f62-6d61-4721-ba1a-b0fe3ea16ee8",
        "cursor": {
          "ref": "8135ed5b-6bcd-4e9f-a6fd-f2d1378c0eec",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f26a3efa-2488-463e-98ac-d834c2d2b1f6"
        },
        "item": {
          "id": "0f223f62-6d61-4721-ba1a-b0fe3ea16ee8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "81b53535-0682-4861-9847-2614f651dc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ef9a61-79e6-42dc-b5e2-6e6213783527",
        "cursor": {
          "ref": "2e1c1678-f532-44b0-8786-54ada55dab31",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4b223c84-4645-4325-acde-f2836a2701c2"
        },
        "item": {
          "id": "40ef9a61-79e6-42dc-b5e2-6e6213783527",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e1a86a24-afad-4a84-bdef-c386d3039f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7bf938-ea4b-4f19-a362-65336868ffe0",
        "cursor": {
          "ref": "c97266d6-18ee-47bf-8610-5b6e69e3c9c2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8ecdaad4-949b-4d79-b56b-352800e88891"
        },
        "item": {
          "id": "ff7bf938-ea4b-4f19-a362-65336868ffe0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6be70922-087e-4821-84c6-66651f1ff7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593e2167-7468-43c5-8650-da831ff101d8",
        "cursor": {
          "ref": "2d4bf5e4-88ab-49a3-9afd-af6b9b29aa50",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a60ef91-b810-4e3f-b2f9-757f4aeb8904"
        },
        "item": {
          "id": "593e2167-7468-43c5-8650-da831ff101d8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e0290032-f755-43ef-84db-158fb0354b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acaf1e2-40a2-43ec-b2e6-6bdedcbbaaa5",
        "cursor": {
          "ref": "2268742d-d2ed-4c91-8a9f-b7c3745bf55f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ab8a27c2-738e-4cd5-98c3-b0ee9fe6ade9"
        },
        "item": {
          "id": "7acaf1e2-40a2-43ec-b2e6-6bdedcbbaaa5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7bbc1be5-5546-4cdd-a016-7d566945b17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e942de0a-381c-4a0e-b650-d178d7a06121",
        "cursor": {
          "ref": "4205ddfb-bf23-43a7-a8cb-be4550937ef9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fd7b82ed-3837-4f5a-9b8f-94db9be972f0"
        },
        "item": {
          "id": "e942de0a-381c-4a0e-b650-d178d7a06121",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9045ab6b-29ab-4ef0-96ed-7f971cdf0b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6db9c04-4bf3-4b08-af7d-f04423cebd61",
        "cursor": {
          "ref": "84366395-83bb-45a5-8f1d-0d889160780d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fc02ffe2-f62e-48f9-9ee2-8254f06fc723"
        },
        "item": {
          "id": "c6db9c04-4bf3-4b08-af7d-f04423cebd61",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "395ca37b-b79b-4a65-8531-9eff8cea391f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79b5b46-8fe7-4e88-8a45-8b69c8874968",
        "cursor": {
          "ref": "35362806-a22f-4957-b17c-1f577cfaad87",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e7cf5c80-9757-4624-96d3-2559a27d1b60"
        },
        "item": {
          "id": "e79b5b46-8fe7-4e88-8a45-8b69c8874968",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5e256f89-3286-4f93-908e-25449e15adb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4165c652-21cf-4af7-82a1-b2de956167f2",
        "cursor": {
          "ref": "e4ee3836-709d-4f22-8ab2-2f618c0273a5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4e53a866-0d7e-40bb-9b5d-d8977f4b75c6"
        },
        "item": {
          "id": "4165c652-21cf-4af7-82a1-b2de956167f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4958b67d-4e3a-4677-88ba-6e1d274e154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc8cc34-bc05-4c39-bdbc-c5de03246250",
        "cursor": {
          "ref": "bba42657-6f84-496b-bbd2-37b45ad6098f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f04f35d2-b5c3-4c11-963c-4a816b5ca55b"
        },
        "item": {
          "id": "9bc8cc34-bc05-4c39-bdbc-c5de03246250",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5cae423c-d9c9-4da2-a0d0-cb7b2ec89b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e3053f-9320-4023-8a26-8416da1b277a",
        "cursor": {
          "ref": "6fb5f0a1-72ae-4589-a7db-381461bd8dac",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "bf2cb885-105d-456d-94a8-bcd69d0f3e1d"
        },
        "item": {
          "id": "77e3053f-9320-4023-8a26-8416da1b277a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "afa81001-7037-4d8d-904f-5d0fd1706cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c722fb2-8cf9-4546-ac3e-76204f2c1f47",
        "cursor": {
          "ref": "c314ebbe-a519-4d6b-98bc-efea1445eee8",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c5965a06-4f62-4ca4-849d-cb9af03284c0"
        },
        "item": {
          "id": "4c722fb2-8cf9-4546-ac3e-76204f2c1f47",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "22f78f25-5068-4e87-8acb-a0fc26dd4d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f27a5fd-c2ba-47ea-a5f9-bb6b108a6e93",
        "cursor": {
          "ref": "c7644b07-1775-46dd-b3e3-50da17ab715d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "30098ac3-f8f6-4773-91ff-f684988cbbc6"
        },
        "item": {
          "id": "7f27a5fd-c2ba-47ea-a5f9-bb6b108a6e93",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a728c93b-0e10-4158-af20-aaad6cae0335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c11794e-ec6b-4e52-aca9-172bd789b892",
        "cursor": {
          "ref": "5637b67f-f2de-45cf-864f-865b45c4de07",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a4461d88-380f-4aaa-990d-9fa8bbf24c79"
        },
        "item": {
          "id": "4c11794e-ec6b-4e52-aca9-172bd789b892",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "93f6148b-08d5-4aaf-a530-ba6e929f4fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d62e23a-8e79-4c0e-b241-969423af5bbf",
        "cursor": {
          "ref": "d90939c7-1772-44ef-8f82-5ea067d55005",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dce581c5-6b38-493c-9552-47baa9e71bb4"
        },
        "item": {
          "id": "3d62e23a-8e79-4c0e-b241-969423af5bbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3c1a3c07-dd42-4e46-a6dd-8519850ac08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf4f514-6946-427d-a51c-57f6a44f9525",
        "cursor": {
          "ref": "b3fda0f0-9199-41e9-a281-d953d8679123",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b386888e-2d4b-4f51-9041-7ebf299e8a02"
        },
        "item": {
          "id": "dbf4f514-6946-427d-a51c-57f6a44f9525",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db99d2ea-b1f3-484d-b03d-a3efe250b38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0213d5-0c59-4831-a7cd-f819342c3f04",
        "cursor": {
          "ref": "a8d2a78a-3a51-4f33-92ee-94ad3ed3149d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "93bdb680-cb94-4dc7-bdca-458685a50f37"
        },
        "item": {
          "id": "4b0213d5-0c59-4831-a7cd-f819342c3f04",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "57f1cee7-aee4-4c61-8165-5f02d30fe61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaaffef-5be1-4155-9fe3-f585b0bb5dd6",
        "cursor": {
          "ref": "8eb92e34-55f4-40ee-8f17-a30c5ebbeeb1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4689b2de-0148-4acf-9598-a07658002070"
        },
        "item": {
          "id": "edaaffef-5be1-4155-9fe3-f585b0bb5dd6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cc533196-9077-4714-b050-803fd6bd40b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c44434-7d6c-4891-ac26-d05bf94914c0",
        "cursor": {
          "ref": "f89e970f-8105-4dc4-ae6a-e6cf1f799cda",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "626d48c8-d3a6-43cb-be10-9396eedfe8eb"
        },
        "item": {
          "id": "d9c44434-7d6c-4891-ac26-d05bf94914c0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5fc24afc-77f5-4e09-a8b0-716291dc6f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770060d8-f5a4-43f7-8ceb-fd37014e2a81",
        "cursor": {
          "ref": "28066d51-3254-4fb5-85db-efbd34d4b8d4",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2bfea155-210c-4f4d-918b-9ba3d673ceb3"
        },
        "item": {
          "id": "770060d8-f5a4-43f7-8ceb-fd37014e2a81",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "be849409-f1a9-4ce4-a899-42635b2258ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a73afd1-4fef-410d-be44-0cb79ce250a6",
        "cursor": {
          "ref": "c6693a8c-2744-4a15-938d-3cf3c5290323",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "81f60469-f36c-4f69-8939-792b84103a8f"
        },
        "item": {
          "id": "0a73afd1-4fef-410d-be44-0cb79ce250a6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0f7d3243-9d27-4975-8d41-5fca6a22725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acde1afb-c7df-449f-89b4-be630635680c",
        "cursor": {
          "ref": "63aa7d31-3e32-445b-a163-2f3ce535e03a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "37b84611-a15a-4cf8-8496-4ff744171474"
        },
        "item": {
          "id": "acde1afb-c7df-449f-89b4-be630635680c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6fc7c691-288b-4f1f-9b5a-32bb154ecda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edf9fb4-5b2a-4c96-8701-4f928ed80937",
        "cursor": {
          "ref": "639af98b-8f67-43e7-a517-7b0cbc96287d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6cb7d44f-27c8-4222-9781-afc63060f0fa"
        },
        "item": {
          "id": "3edf9fb4-5b2a-4c96-8701-4f928ed80937",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bb46bc4b-1532-421b-a69e-0401e170fe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6ff82f-370a-4d7f-b9a2-8f24f9d9b4a5",
        "cursor": {
          "ref": "87728403-3dd6-4742-a14a-5f095fcfe1b5",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bd6c60a5-d26b-4a01-81b5-1d80e1da43c0"
        },
        "item": {
          "id": "2e6ff82f-370a-4d7f-b9a2-8f24f9d9b4a5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4ab3f293-9380-4918-ad97-2865e9330e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7584c154-3be0-49d1-83e4-3841f899bb86",
        "cursor": {
          "ref": "da58a155-eefa-43d5-8021-df7b9edcca95",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "23bf5d25-f4e9-45d5-bebc-b22d6ffadb29"
        },
        "item": {
          "id": "7584c154-3be0-49d1-83e4-3841f899bb86",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "423cc8ab-cae0-44f6-9714-775cc66fe58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e334ebe9-4931-4f12-848a-a97cc685295d",
        "cursor": {
          "ref": "0169ba6c-8646-4b67-a1df-b078860f2b48",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "263badbd-9c93-438a-b9fa-3a2086f18e03"
        },
        "item": {
          "id": "e334ebe9-4931-4f12-848a-a97cc685295d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "69f578b8-4377-446b-8c2f-615768eb215f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b983b-b4d3-463e-97ca-c890a2c758a1",
        "cursor": {
          "ref": "e1922dd9-ea3a-4429-94e9-e5ac08adbe0b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2635a7d8-f706-4a27-b485-1dd2fbcc5073"
        },
        "item": {
          "id": "1b6b983b-b4d3-463e-97ca-c890a2c758a1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5132da4e-437d-4c7f-bee3-c17db35579b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d915bb88-0ac4-4451-89d6-4b4ad168b141",
        "cursor": {
          "ref": "8b764e99-d47e-4c19-be27-5113c2796ec2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6b192fde-95a5-4100-8a2e-23a6d3b10467"
        },
        "item": {
          "id": "d915bb88-0ac4-4451-89d6-4b4ad168b141",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e9dc8404-aa43-4c05-a599-928a5bb9024e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73c889e-00d6-4fa1-8cea-ea8c3ef5e2b6",
        "cursor": {
          "ref": "08f0594e-39de-4448-a912-ee11afe0247c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "650aabc0-0c18-4d1e-884c-d5bca4d1436e"
        },
        "item": {
          "id": "f73c889e-00d6-4fa1-8cea-ea8c3ef5e2b6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2ccb25bc-ad00-498a-8082-c8f66134faef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff393cb-b9d6-41b5-9381-b1203eae3d52",
        "cursor": {
          "ref": "e734015c-f182-448e-a4ca-d1d4d52fbbd3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "35181531-d71c-4fe5-9daa-7ac1926297d7"
        },
        "item": {
          "id": "7ff393cb-b9d6-41b5-9381-b1203eae3d52",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "abead27f-10b4-45b1-91a0-05eab7e91d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0940663e-1521-4775-9883-ed4188a77312",
        "cursor": {
          "ref": "58819089-34ab-4d4e-8355-9d83715e11bb",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7c39cbb4-69e9-44b5-a729-a5afcf10d1ef"
        },
        "item": {
          "id": "0940663e-1521-4775-9883-ed4188a77312",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d913d4f8-9e3b-4174-a8a1-6ecdb318af36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b610ba3c-6177-4008-a663-3ccc99f82fcc",
        "cursor": {
          "ref": "285902e4-7d24-434e-85e4-be2037dcfc36",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "70396d70-7f4f-42ea-a52f-80b92ee490b5"
        },
        "item": {
          "id": "b610ba3c-6177-4008-a663-3ccc99f82fcc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fdcaa434-8a8b-40bd-ad22-d1b78c0eec41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f448e8b2-4762-4a45-bd9d-13c3b396d095",
        "cursor": {
          "ref": "fe49ecbb-1fec-42e5-a7c8-425cfa5fa741",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ab53c841-98f9-462f-97cc-96a9fe0a83cd"
        },
        "item": {
          "id": "f448e8b2-4762-4a45-bd9d-13c3b396d095",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ec0fa359-70cb-49bd-9664-5c9feb24bea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ea7e4e-e626-44ea-bc86-6690c4c41d85",
        "cursor": {
          "ref": "c4a5abfd-98bf-48ce-ab4c-19bfc4dd7de0",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f1bc66ce-68fd-4cb2-a293-a959c9aad046"
        },
        "item": {
          "id": "85ea7e4e-e626-44ea-bc86-6690c4c41d85",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "85768623-25f7-4265-83be-b829da931dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2f228d-2a08-4ed3-8558-d36e234bab66",
        "cursor": {
          "ref": "a47650f3-b17e-459c-bf62-09ed38759553",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cb1cc505-83c7-4782-b106-791461165f1f"
        },
        "item": {
          "id": "6f2f228d-2a08-4ed3-8558-d36e234bab66",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "88b46bc6-7a03-4737-9f8d-ebc8734e973c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c614c4-b74f-4344-838f-d92f4e2f787a",
        "cursor": {
          "ref": "ab409494-c26b-477b-89bd-76cbc8712260",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7a941144-9064-4cee-bfa6-023dfa3bb0e8"
        },
        "item": {
          "id": "74c614c4-b74f-4344-838f-d92f4e2f787a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9d97011f-0279-4ab6-b19d-e184c66d7604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71232309-4c1d-4964-ac9f-7026a04bfff7",
        "cursor": {
          "ref": "5b8e4952-0315-4564-9818-c401db1cb389",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "039e3e91-9540-4c38-bd92-204ce4437b6d"
        },
        "item": {
          "id": "71232309-4c1d-4964-ac9f-7026a04bfff7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "224318f4-648f-4403-a369-34a5cc3c6b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983428ad-ba16-45b8-b40f-acfea9f47172",
        "cursor": {
          "ref": "4ba15258-df3d-4783-b062-a2510ee44fe4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "17b13d9e-e382-4d41-9162-561f20fd5a68"
        },
        "item": {
          "id": "983428ad-ba16-45b8-b40f-acfea9f47172",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3b818d1b-ed93-42a8-8d9e-535ef37bd967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2da4a9-3468-46ad-8bb0-62b77472873c",
        "cursor": {
          "ref": "ceee645f-f420-4898-ac4a-76fa4017c140",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "861ad27f-4bbd-456b-a105-9bcda235460a"
        },
        "item": {
          "id": "4c2da4a9-3468-46ad-8bb0-62b77472873c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cacff0da-3ef6-43f4-8483-b76a9c70e20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a36fa8-1caf-400c-b0dc-26a4f3bc4d60",
        "cursor": {
          "ref": "640aadf7-8b34-4990-9a83-1a059df63821",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "74f82d01-325d-44a4-b806-ad48a8c9ded6"
        },
        "item": {
          "id": "f8a36fa8-1caf-400c-b0dc-26a4f3bc4d60",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bcfdf9a6-a7a0-4b69-b470-7d36377de7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37565d5f-79f3-48cd-9a6c-3dd4be537eff",
        "cursor": {
          "ref": "d0e6cc29-a64d-4371-8fae-b14142be4100",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "088c8ce0-27c0-44ff-91a7-9f066ed65221"
        },
        "item": {
          "id": "37565d5f-79f3-48cd-9a6c-3dd4be537eff",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a47b042c-7aac-4dd3-ae3d-a4c6acaf9cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be52a16-3e9b-4523-a03d-1213a1ef639d",
        "cursor": {
          "ref": "8ca046b0-290c-4890-b6f4-bdc7ffe30a23",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9527d4ae-2d2e-43c9-a75a-ede8c8145f4c"
        },
        "item": {
          "id": "5be52a16-3e9b-4523-a03d-1213a1ef639d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c3ee0bbb-512c-438f-9987-aa98ffa64129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220c1435-4901-42ec-a114-8aba76bb3a7b",
        "cursor": {
          "ref": "1a11aefb-c1d9-4613-971e-d3cec4b1c071",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2d89fe90-738e-4af4-8b9e-a05f6adad404"
        },
        "item": {
          "id": "220c1435-4901-42ec-a114-8aba76bb3a7b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6ec7d339-e255-45cf-a74b-cf968fb19194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6d477b-ca1c-4ee6-b799-6d114e45c3fb",
        "cursor": {
          "ref": "d856467f-a648-4d19-a6c8-143958a7b38c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "436b0e72-9354-4cb6-a363-2a4949469b9e"
        },
        "item": {
          "id": "7a6d477b-ca1c-4ee6-b799-6d114e45c3fb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "20631351-8058-4f67-82fc-7119bfa4f5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0607a3-27bd-4564-ba7f-0aceb176fd4d",
        "cursor": {
          "ref": "5d84eff7-4f05-4092-8bd8-7ff258d4ff31",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "669c3643-b3f4-4a39-9d1e-72c36a883df2"
        },
        "item": {
          "id": "6f0607a3-27bd-4564-ba7f-0aceb176fd4d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "53138abd-647b-411f-ab22-ef0a37a4a5fd",
          "status": "OK",
          "code": 200,
          "responseTime": 121,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "57074d8f-0f78-4864-8a08-d24bb94c05cb",
        "cursor": {
          "ref": "4801c6bb-6f83-4f5a-b3f4-2799ff266f05",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e9ef0131-2979-4814-9391-daed2040d671"
        },
        "item": {
          "id": "57074d8f-0f78-4864-8a08-d24bb94c05cb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "68b2c48e-c8f4-4ae9-b5fd-25f9c52b28c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46689543-7ed3-41d2-8923-4aabb6696e91",
        "cursor": {
          "ref": "234071df-7b10-43e0-ab22-1b0b96ca2beb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d7b977b2-a2a6-4d13-b527-436466859504"
        },
        "item": {
          "id": "46689543-7ed3-41d2-8923-4aabb6696e91",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0291cbfb-ed1a-4081-b600-0d7dbf42b1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b493cb99-8429-4035-8b40-f9dd8c4cc5c2",
        "cursor": {
          "ref": "ad5a45bf-7de0-4648-b12f-b52456dafa79",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c9b7c8cd-05b5-4991-996f-3daf8dd68cc1"
        },
        "item": {
          "id": "b493cb99-8429-4035-8b40-f9dd8c4cc5c2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b4052479-ca9d-4956-806c-8b268bb02c89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147e2188-3219-4831-baca-8298233890ef",
        "cursor": {
          "ref": "090e80db-4336-4e11-a56f-c375a3ce6e6d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f0b31dff-5265-4123-89a0-7f0a54598175"
        },
        "item": {
          "id": "147e2188-3219-4831-baca-8298233890ef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f2b2c2ff-63f1-46f8-8e1e-39875570ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330290b9-b8fc-4f66-8ad3-f6d2595451a2",
        "cursor": {
          "ref": "e879b785-0063-4fab-b0c9-ca13e611137f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e0077b48-73e1-4365-8577-46064b12cd99"
        },
        "item": {
          "id": "330290b9-b8fc-4f66-8ad3-f6d2595451a2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f2a17aa4-3b92-44f2-a117-73c03e97e077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d13382d-ca14-44c8-a114-cc48da3568c3",
        "cursor": {
          "ref": "f94d8ddf-9282-4cb1-a67c-e6f40fb40a32",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fc193554-cd47-4afe-b3be-594c793d1c2b"
        },
        "item": {
          "id": "9d13382d-ca14-44c8-a114-cc48da3568c3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "01cb356e-5501-40b7-bec7-a4510d4703c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6392f1-ba64-4d1d-a616-aa3f86809722",
        "cursor": {
          "ref": "f899cecd-09d9-4349-89e6-514e0bedf8e4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "70935c74-086d-4e1e-ba34-2232f9945f27"
        },
        "item": {
          "id": "bb6392f1-ba64-4d1d-a616-aa3f86809722",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c84bf6e7-4867-4102-8c74-472ae75f5a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065c477d-f3e6-4252-8b4b-c03e2ee50947",
        "cursor": {
          "ref": "7b088560-444d-440b-a2b9-7fa7da3ad185",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0489e515-9e81-45f7-a1bd-50e7bf9b2c86"
        },
        "item": {
          "id": "065c477d-f3e6-4252-8b4b-c03e2ee50947",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b492786e-c87f-4d4a-a8bc-0ca03a0db03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3e397f-a1e8-4079-a322-5a8f931c7823",
        "cursor": {
          "ref": "0f74df1a-add7-4e87-9504-c1f539b88de6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "46e6cea5-76eb-4519-a63f-18a9914e288c"
        },
        "item": {
          "id": "4e3e397f-a1e8-4079-a322-5a8f931c7823",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "02da81fa-4bbc-43d7-a644-5a49cf49cd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dda374-bf55-4835-ae3d-53f3f121d614",
        "cursor": {
          "ref": "5d336612-047f-43e1-8313-ce17c879867a",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f1ed739a-5599-4eee-b065-bdd30d47fad6"
        },
        "item": {
          "id": "81dda374-bf55-4835-ae3d-53f3f121d614",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "da064fa6-0226-4414-b39d-53099ae884ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3fa875-1c7d-4915-8771-4354cda86199",
        "cursor": {
          "ref": "c20d53ce-bf19-4b5b-ac04-1edee435b775",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6ac0ae98-6c32-4c9e-bddc-063cf7851a5d"
        },
        "item": {
          "id": "0b3fa875-1c7d-4915-8771-4354cda86199",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e7a2a0f8-16cc-49dc-a3cf-1f8cfb784284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afbddf4-6dfc-4c8f-94a8-24e25f88e094",
        "cursor": {
          "ref": "f3b90508-cdaa-482d-aaff-bd694700c1be",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cc92aa92-ce5e-4bbd-acf3-35168a791489"
        },
        "item": {
          "id": "0afbddf4-6dfc-4c8f-94a8-24e25f88e094",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c16e454a-418e-4961-9806-3d8b5d82325b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7496a18-bfa2-4f33-ad37-3abfb3037322",
        "cursor": {
          "ref": "23d730d2-9fb7-49b4-8242-4c9e3f56608c",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e0c1295e-5162-4518-bb71-d8c1f19ac68d"
        },
        "item": {
          "id": "d7496a18-bfa2-4f33-ad37-3abfb3037322",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e98df322-ce14-4772-84dc-b72887c7a100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d284548-ccc3-4b10-ac8a-1ac4f4efc19e",
        "cursor": {
          "ref": "9b321dc2-cb59-485c-8d61-c10ce6fd4e72",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f8082517-7f0b-404d-adcc-64b14e89f2b6"
        },
        "item": {
          "id": "9d284548-ccc3-4b10-ac8a-1ac4f4efc19e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0e57be66-ad10-48d7-a0b1-ea8c0233732d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d73061-45d2-4b6e-8d73-a56692334acc",
        "cursor": {
          "ref": "f2fc6ac6-a9b5-4e39-b32f-96a9d703be34",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8009c684-0363-4d0b-a9b6-ab2a3fe02991"
        },
        "item": {
          "id": "84d73061-45d2-4b6e-8d73-a56692334acc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b8312be4-4bb2-426a-b911-f17578bd7510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98475a3-5108-47f2-875c-77b5ebdf10d6",
        "cursor": {
          "ref": "f20e0174-1a04-4287-8210-17d430edbadb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "59a58bcd-168a-4fdd-acdc-a7f63bde87eb"
        },
        "item": {
          "id": "e98475a3-5108-47f2-875c-77b5ebdf10d6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "678d59c1-2b89-4dd8-a62f-b1d519d33de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868ab4b6-a1dd-4ac0-aa2f-6edeb648187b",
        "cursor": {
          "ref": "5b7e6020-b2aa-4b52-a161-89c24834ffd3",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "46688e3c-6228-4496-b5c7-101a3ec4a49a"
        },
        "item": {
          "id": "868ab4b6-a1dd-4ac0-aa2f-6edeb648187b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0733c902-4da7-4b5c-b5a7-b97ba5692276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03842d3-1f32-41eb-b3c8-a520cd6116b2",
        "cursor": {
          "ref": "0c758f4e-1715-4490-b4a7-ad1ae1a8bf42",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "15afd64a-6d3d-4201-8c45-b846d82f5ee3"
        },
        "item": {
          "id": "e03842d3-1f32-41eb-b3c8-a520cd6116b2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1d7b2db-5222-4224-8c6a-9772bf14caad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f5120-ba1f-4c52-9a5e-455504cfdcfd",
        "cursor": {
          "ref": "3225c4dd-cd6b-4b50-92ce-40cd22c9ceda",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a3fdd62a-67bd-4bd6-9236-8c873d89248b"
        },
        "item": {
          "id": "ef4f5120-ba1f-4c52-9a5e-455504cfdcfd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2312aa89-987b-4283-ab6f-5fa73534ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca23784-d1c1-404e-93f9-7fed686f3578",
        "cursor": {
          "ref": "5111d49a-47e1-49c9-8168-7c7c812b6d7b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ad78a0dc-e2b1-46ad-baa8-d01727e92a38"
        },
        "item": {
          "id": "0ca23784-d1c1-404e-93f9-7fed686f3578",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3dca0016-4419-428c-95bf-9b40adf25515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd388c88-9d88-45e2-a199-281723db9533",
        "cursor": {
          "ref": "3ca40959-0fcb-43a9-b56a-01538d279cbe",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8a46d3eb-1714-4efa-ba5b-91f455563c1c"
        },
        "item": {
          "id": "dd388c88-9d88-45e2-a199-281723db9533",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6f014f30-ce28-42cc-b9db-d8d374e884e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44b78ee-a034-4604-bf19-a8c82958717a",
        "cursor": {
          "ref": "143ec7ee-3819-4065-98fc-176e12e71ad1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fdc3dd3d-f747-415d-b528-4058145d43e9"
        },
        "item": {
          "id": "d44b78ee-a034-4604-bf19-a8c82958717a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "06fdf3f3-d433-4388-9605-e94eeb8c9e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fc8783-4b99-4572-bcbe-1ad7e116bfb8",
        "cursor": {
          "ref": "358b3ace-41cd-4fe6-a97e-4632b447363c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fb6d1ed3-07c4-4c20-a847-a8b20e2e4be5"
        },
        "item": {
          "id": "42fc8783-4b99-4572-bcbe-1ad7e116bfb8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d9c1752e-e6f8-43f6-a0ec-1e31bd237eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f35296c-48f7-43aa-9467-6935f3e04c93",
        "cursor": {
          "ref": "606a4e2e-ae86-430a-891e-75237c45cb03",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ac6eebbd-e886-492d-ac2f-b0746728315a"
        },
        "item": {
          "id": "2f35296c-48f7-43aa-9467-6935f3e04c93",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f6f264b-592f-4bd4-8c4f-50cb440430f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f2e0b0-3ca6-4720-af17-8033ce76f68c",
        "cursor": {
          "ref": "1393d156-5b1a-4b34-a1ce-e600499c5556",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "77439764-9583-4aad-9375-a9cbef04d727"
        },
        "item": {
          "id": "54f2e0b0-3ca6-4720-af17-8033ce76f68c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "de38b599-8ccf-4b78-ac8e-fedeb25738f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134f86f3-06c3-4206-a5e2-e1b5cd1a31ef",
        "cursor": {
          "ref": "549163f0-1045-4a85-b51d-a01fbf92dca9",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cdb41c77-e6df-440c-870f-9188c15f2a93"
        },
        "item": {
          "id": "134f86f3-06c3-4206-a5e2-e1b5cd1a31ef",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "879713a2-ccde-4620-ac20-d1221767d91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fbb431-29d8-42e5-8f2e-78e5b88ba219",
        "cursor": {
          "ref": "992518cb-155f-4686-b3f6-d3288f0138d9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "78e25ad0-2732-4d6d-9757-8fc9b62f619d"
        },
        "item": {
          "id": "d4fbb431-29d8-42e5-8f2e-78e5b88ba219",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ab18b82c-617f-4572-ac81-d3e3377aa88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba5ff8-4fc3-465b-ad3e-495d1234d6fa",
        "cursor": {
          "ref": "01d14f8b-775c-4b3a-b1d1-27cd4c0062a8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "64fddcbd-aeed-45ed-8dd2-a8283371d134"
        },
        "item": {
          "id": "b7ba5ff8-4fc3-465b-ad3e-495d1234d6fa",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7cce3124-b1d6-4487-9a31-e7e1d4c7f709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2360777-7d1d-4704-ab5e-4a3eb8f4927b",
        "cursor": {
          "ref": "405e8390-83c3-4804-a0a6-07660481a7dd",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1cb0b157-7f7b-493e-96af-0c497d393465"
        },
        "item": {
          "id": "f2360777-7d1d-4704-ab5e-4a3eb8f4927b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "80202142-8637-4406-8e0e-287cf86b77ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7f4735-f61b-4dcd-a839-994c14ddf4ea",
        "cursor": {
          "ref": "869ef9bd-9613-40c2-96dc-4d9d650216c9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "035a9c1f-6162-4688-95cc-d53c05296f7e"
        },
        "item": {
          "id": "2e7f4735-f61b-4dcd-a839-994c14ddf4ea",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "30f511f8-ca2c-4b42-ba03-12ba443c2cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834e9634-6425-4b63-8293-1977a30782b3",
        "cursor": {
          "ref": "031dbbfc-24cc-424e-a317-fcef3744fab6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a1e7029d-9eb2-4555-976b-6ecf9b2ac88a"
        },
        "item": {
          "id": "834e9634-6425-4b63-8293-1977a30782b3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6428eb89-0462-47b5-96f9-f63b50df4735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd85577-d1af-4f31-9675-4c91e2ad27c9",
        "cursor": {
          "ref": "e572f8ab-052f-4511-b749-47e3cce1a1f0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3862feee-bc16-47e9-8c8c-1b55b837f499"
        },
        "item": {
          "id": "efd85577-d1af-4f31-9675-4c91e2ad27c9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "dd0461ab-7d71-4f11-b2eb-2eaa6a44a0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504749a4-8188-4a4f-aefd-aced5c4e4d0d",
        "cursor": {
          "ref": "1ff55d04-0351-4ea0-ab85-bce9eadd7ab7",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2efb2e0e-2949-4d28-bc1d-60f02902a59d"
        },
        "item": {
          "id": "504749a4-8188-4a4f-aefd-aced5c4e4d0d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e89c55f5-4eda-4175-a6da-cb8b332be19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dc32f8-bcc5-43c9-b8b5-537614e38063",
        "cursor": {
          "ref": "32c872c7-9077-49db-8e22-808669553f4d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6fe68a23-4fae-4d6c-9845-2dcb1f0c7f8f"
        },
        "item": {
          "id": "53dc32f8-bcc5-43c9-b8b5-537614e38063",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7e2659ab-33f0-4211-9125-df20272caccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3f1914-b854-4bcf-8100-548a7d6edb4e",
        "cursor": {
          "ref": "c0f17a21-9040-4024-a2d4-d545d8347bd5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "49f05d3b-9972-4277-9127-ac60193c52da"
        },
        "item": {
          "id": "0d3f1914-b854-4bcf-8100-548a7d6edb4e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "28f3ba9b-f154-43ba-ad8f-9e90e30616d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7d22b8-b4a9-475c-b032-a0ec817a7e14",
        "cursor": {
          "ref": "641a9186-9444-4e30-9f68-ed1aa98378bd",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0f7c9bec-e8d4-4d09-9061-276e2f53cb12"
        },
        "item": {
          "id": "3b7d22b8-b4a9-475c-b032-a0ec817a7e14",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "22cf484a-10e1-48c1-b3d9-f5ad68296dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c398ac21-86f2-4015-8fda-c29a40cc2a1c",
        "cursor": {
          "ref": "9e28db2a-43cd-48b1-9276-63eaed782a56",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9f32b386-112a-422d-9169-3b50d6fbc03a"
        },
        "item": {
          "id": "c398ac21-86f2-4015-8fda-c29a40cc2a1c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2d73e1de-5702-4dfb-a707-259991bf7502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4c3356-0a73-49cc-9a2e-f4f8ef73762e",
        "cursor": {
          "ref": "156578c8-1dd6-4c72-8644-6bfeb9089902",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "96c59fd4-25aa-427c-8127-d68f57f7546d"
        },
        "item": {
          "id": "9f4c3356-0a73-49cc-9a2e-f4f8ef73762e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0f546782-a8bc-4666-9680-b18c4f47a03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14192996-e249-4670-894e-1e56b7888e4f",
        "cursor": {
          "ref": "f8bcfbaa-30ce-4f59-b745-daee02fd8915",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bbef8f8e-ce0a-491f-90be-bd42d6b65ba4"
        },
        "item": {
          "id": "14192996-e249-4670-894e-1e56b7888e4f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b59d510f-7619-4116-8f71-949d9dcb5496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa059479-8bec-4d9d-b23c-d69cab4e3154",
        "cursor": {
          "ref": "17f9adb4-5330-472a-a837-c0e8fdbb5164",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5231884e-e43a-44c0-8680-02cd6e26d8d7"
        },
        "item": {
          "id": "fa059479-8bec-4d9d-b23c-d69cab4e3154",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7bd06072-3c24-4894-b351-65ef47e8915f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38cf4d7-9e6a-4c70-9f5b-f7618e377015",
        "cursor": {
          "ref": "9b05687f-0f76-47ba-8909-7501edb31dfa",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4d15843-49ee-4338-b940-0c63b071884f"
        },
        "item": {
          "id": "c38cf4d7-9e6a-4c70-9f5b-f7618e377015",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e07653d3-a600-4235-ab82-b8d2ac51f9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b5c967-05ce-435a-9234-f50fec6f764a",
        "cursor": {
          "ref": "a5515a5a-f571-44e7-92f0-49418b994f2b",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9bd6a742-b121-4ae1-8afe-0969abeaeeeb"
        },
        "item": {
          "id": "82b5c967-05ce-435a-9234-f50fec6f764a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2657148f-4172-412e-a92a-1ac577eddd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9667a83f-5857-409b-8f67-a44633d7e59a",
        "cursor": {
          "ref": "1108a4b6-62bb-4c6b-bc2a-44b6bcd8a952",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5f7b1ee7-04c2-425f-a2d9-bed5cf634719"
        },
        "item": {
          "id": "9667a83f-5857-409b-8f67-a44633d7e59a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ab9a0e56-50a5-43ed-9f73-b5d8bbd90bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf03fcdc-3af4-4514-b150-0cc28d9669a4",
        "cursor": {
          "ref": "5d2db267-7581-4ee7-a49c-f5a5b22893c4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ea3cd7b5-d698-4c18-ba9a-f1f7c948e45f"
        },
        "item": {
          "id": "cf03fcdc-3af4-4514-b150-0cc28d9669a4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f7c7b999-076c-4fb3-a10d-67e26f70a566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95254a18-054f-4616-ad51-eadb932ed8e3",
        "cursor": {
          "ref": "72fc7948-8cab-4170-a701-661d71adcf1c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0680feba-a365-4f0e-ad37-7ee2230e1811"
        },
        "item": {
          "id": "95254a18-054f-4616-ad51-eadb932ed8e3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "443adaf7-c265-43e0-8956-df0c04e99503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4309b7db-6b38-4923-8cfb-449322da6c03",
        "cursor": {
          "ref": "64623d6a-9aee-447f-a056-91f1c334232a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "05977c04-0322-4e40-9956-6d8abb7daecc"
        },
        "item": {
          "id": "4309b7db-6b38-4923-8cfb-449322da6c03",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "77bc7297-ae75-46a8-9c2a-da2879be7be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b99ca8-c57f-47c8-9537-7c299b3a9c39",
        "cursor": {
          "ref": "03e68368-5e63-410e-9954-a4dfedd26886",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "984b35d5-ec4f-491d-8316-f618a0c7e699"
        },
        "item": {
          "id": "87b99ca8-c57f-47c8-9537-7c299b3a9c39",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "247c3c75-51a4-4820-aa0b-2919eeb64db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf4972-c4c6-4ae3-9dca-30e509751069",
        "cursor": {
          "ref": "e064d1de-c1af-4286-aa3a-9303a9456a67",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1af163bb-71cf-4ad7-b6ae-f2999b0db5a8"
        },
        "item": {
          "id": "0fcf4972-c4c6-4ae3-9dca-30e509751069",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e03ba8ee-1403-4896-acb7-33b0500e45cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7053af-983d-471a-8df5-70fd5c8533e1",
        "cursor": {
          "ref": "872bcf1a-e22d-4eb8-a4fb-38fc2b18e690",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "99009fad-28c4-4b8d-95d3-4687fbf32dd9"
        },
        "item": {
          "id": "5c7053af-983d-471a-8df5-70fd5c8533e1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "76adc3e1-2cfa-4a34-bbfe-c3b698c99538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5add4831-1ad8-4da2-9081-1bd42faf89fc",
        "cursor": {
          "ref": "695de9e4-cf07-4f7a-a40c-5014478a7de4",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bd4be897-266a-46f7-8ff7-52a94bd654b7"
        },
        "item": {
          "id": "5add4831-1ad8-4da2-9081-1bd42faf89fc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "42d419c7-112f-463e-bd87-ff67e8399771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9076d91e-80aa-4636-93de-18265f2e7205",
        "cursor": {
          "ref": "c66dee76-97c1-41b6-8a17-1016a90e4196",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cad19a17-ee15-4832-8200-d53fdbf70a30"
        },
        "item": {
          "id": "9076d91e-80aa-4636-93de-18265f2e7205",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "69f90044-6356-494b-9890-56219c0692b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7daaad-a70e-4fc0-8fa2-811664672551",
        "cursor": {
          "ref": "43e075df-3b4d-4c4b-8e32-f1e94a5f107e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc71d890-553a-4882-aae9-05cdb78749a1"
        },
        "item": {
          "id": "6a7daaad-a70e-4fc0-8fa2-811664672551",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bf23df57-a2d3-4890-9a60-99f52f437d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff9d9b2-b45a-4f37-a827-72a45162bdfc",
        "cursor": {
          "ref": "c452c4f5-51dd-4478-bfc3-269999e49ef3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5a6b9d90-bfa9-422a-9cf2-3fb6598484f3"
        },
        "item": {
          "id": "eff9d9b2-b45a-4f37-a827-72a45162bdfc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0cd2732b-95d7-44e4-8720-c376622ca39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49845536-e66b-40f3-b0dd-0920f4b9fea6",
        "cursor": {
          "ref": "28ee7116-fbed-4b4e-8259-44c55eab407a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f3312769-4471-4c26-8d78-0129e61f186f"
        },
        "item": {
          "id": "49845536-e66b-40f3-b0dd-0920f4b9fea6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6c045f90-6a1d-470e-a897-3208702a9995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7631f4-8150-46cf-aa61-24ea44064a30",
        "cursor": {
          "ref": "67593450-9a7d-4c26-9d56-11486afc3216",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7572ea96-8c3a-4798-8129-393bcf28ef30"
        },
        "item": {
          "id": "ad7631f4-8150-46cf-aa61-24ea44064a30",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3946f581-4994-45b6-aecc-70743820e1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027b3b83-e94d-4c0e-a561-b52403fbc014",
        "cursor": {
          "ref": "09c386dc-4d31-4cf4-a405-b8a090c118a6",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b904a5f7-b199-4d84-8167-774688425775"
        },
        "item": {
          "id": "027b3b83-e94d-4c0e-a561-b52403fbc014",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4966369c-806d-48fb-9176-8cfd0560aba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf941e5-6856-4c66-8019-cbfe342bf83e",
        "cursor": {
          "ref": "8559279f-41a3-4e7d-9354-09376efc7eb4",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "687938a9-6209-48c7-a143-2ccf4aba462b"
        },
        "item": {
          "id": "9bf941e5-6856-4c66-8019-cbfe342bf83e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "02b08d6e-0263-401f-95d9-b3e50b04745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac2f811-7b05-4c03-9362-135d91a6b68e",
        "cursor": {
          "ref": "9b361409-628c-4a71-a12d-4b06ed018777",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "931aeaf8-c16e-42bb-ae44-ff632f1e16e4"
        },
        "item": {
          "id": "dac2f811-7b05-4c03-9362-135d91a6b68e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ead9b966-2c52-4c2d-bf4f-deaf411b73c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a567583-1eef-42ca-b7c9-4b8b2e438a99",
        "cursor": {
          "ref": "b1bcce92-1601-49b8-879b-5713def3dfad",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "700e0543-fe33-4814-b082-4a5a43c6e8a9"
        },
        "item": {
          "id": "0a567583-1eef-42ca-b7c9-4b8b2e438a99",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "52cc6341-c85e-462b-8851-e2e73b86d5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb780ce-743f-4148-953b-c4fd2809538d",
        "cursor": {
          "ref": "f6596f5e-5ef8-4856-8a52-700be4813f77",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "176e9694-1f07-4bbe-a096-56ea9eba1c8f"
        },
        "item": {
          "id": "5bb780ce-743f-4148-953b-c4fd2809538d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f8752bb7-9c1c-421f-9e3d-5b5d840507f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8acaa3-ed7c-4987-a0d5-90dc5dfb9de0",
        "cursor": {
          "ref": "d12fdd16-baaa-453f-b2dc-3107dd784a09",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "12853bd3-43aa-4134-9137-b76dbef9c228"
        },
        "item": {
          "id": "0a8acaa3-ed7c-4987-a0d5-90dc5dfb9de0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "51d51485-e093-49fb-9533-86672bbb9a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524e842b-ad3b-45a6-b7cf-05df6803b813",
        "cursor": {
          "ref": "5ed49115-02ee-4eb0-9f7f-33b97dba524e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c3e7e233-328e-448f-8936-bbd04e4ba583"
        },
        "item": {
          "id": "524e842b-ad3b-45a6-b7cf-05df6803b813",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dc393611-c93c-4ca2-93fa-6c3d4060169c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d883196-ee1c-4c9c-b07e-d5e3db05a771",
        "cursor": {
          "ref": "b5b2f550-4df6-4866-92a7-24e771cd0a8d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "64dd1561-eb66-41d0-85b3-02303bee0937"
        },
        "item": {
          "id": "9d883196-ee1c-4c9c-b07e-d5e3db05a771",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "86424060-e292-4a5c-bd16-b1e2acc08a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e24278-1c1f-4ded-aa11-9a7480afb1c2",
        "cursor": {
          "ref": "a803c3c0-1e10-44b5-b665-e4195c79cca1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b1a7bb95-1105-41c9-a870-1a944a2b4c95"
        },
        "item": {
          "id": "00e24278-1c1f-4ded-aa11-9a7480afb1c2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5f61e593-2502-44f0-bf6a-239a04984595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cf2e37-6ede-4a73-b466-067b1ae39390",
        "cursor": {
          "ref": "a3d84858-ab40-49bd-990d-21deb79de1cf",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fd07c0e7-a20c-44bc-97b4-7444dad58da9"
        },
        "item": {
          "id": "b3cf2e37-6ede-4a73-b466-067b1ae39390",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "24e05a1c-a263-444b-bb11-4e60cff34503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6aa9aa-d51d-4dc2-82bc-83b92db164bd",
        "cursor": {
          "ref": "becfce14-7887-46ae-a888-8324fe3c375f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3fb5901e-2066-4826-a558-033563be344b"
        },
        "item": {
          "id": "fd6aa9aa-d51d-4dc2-82bc-83b92db164bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "89362c68-a0bb-4506-83d0-d2aa3a20bf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37442659-d927-4e97-9e98-ed5ab493dd65",
        "cursor": {
          "ref": "9088b236-0141-4198-baab-9632efb31b5b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "858e9dfe-5b85-4c96-a5b0-e864c9e3c686"
        },
        "item": {
          "id": "37442659-d927-4e97-9e98-ed5ab493dd65",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fcd0a090-9b27-4f26-9308-84bc30bc6317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3941438a-9df7-47f7-a953-d1c8893f3ad0",
        "cursor": {
          "ref": "ef4e820c-5b4a-442d-b1c2-917b68a53b01",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6fd541e0-48d2-43fc-9cfa-09aec5ae6a8e"
        },
        "item": {
          "id": "3941438a-9df7-47f7-a953-d1c8893f3ad0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c4e7c56c-c684-422c-a5f1-c2bf3ace4e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c0d41d-84e3-4dda-8244-7b4fd40d8484",
        "cursor": {
          "ref": "b4d9ca90-7af4-4e84-9e12-7776947095e5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "93c2193b-55a3-4d86-950a-129d958708f4"
        },
        "item": {
          "id": "a9c0d41d-84e3-4dda-8244-7b4fd40d8484",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5b13e9a6-fe2c-4c7b-b4f1-f26c4117a5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ecb439-dda3-4bb5-8c93-efb29f369c60",
        "cursor": {
          "ref": "df9c84e2-242f-4bbb-9c74-eaf89103a57b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7020e2cc-a9f0-48d3-84b4-d5b231556e8b"
        },
        "item": {
          "id": "d8ecb439-dda3-4bb5-8c93-efb29f369c60",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1ab88758-0b8e-47a8-ad95-1e1879920b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9c953a-5dc1-44dd-a4ef-5595a7be112e",
        "cursor": {
          "ref": "4e8e254b-0689-4032-8af1-5bd14fb1801d",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "79ac4f67-8500-4abf-8eb8-70b497ce9a55"
        },
        "item": {
          "id": "9d9c953a-5dc1-44dd-a4ef-5595a7be112e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9fb32de1-18ec-4c25-83be-88eb9a470322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ca9d35-2ab7-4f76-ac1f-54441b6e1855",
        "cursor": {
          "ref": "2d954ba2-d51c-43c7-a5c1-4c2ef347f55f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2632d2ef-25bf-4aee-b2d4-8c40d3e43ae8"
        },
        "item": {
          "id": "77ca9d35-2ab7-4f76-ac1f-54441b6e1855",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "cdf44339-39f7-456f-abf3-7f136ac85bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490a304c-42a2-4d5c-8c87-e3d906e77c58",
        "cursor": {
          "ref": "6df96d90-d3f8-4840-a68c-357955df9570",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "6915878d-c1d0-4d33-91ae-b3313c5c4769"
        },
        "item": {
          "id": "490a304c-42a2-4d5c-8c87-e3d906e77c58",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "15a3aaed-4e8e-49e5-ac7b-64873063fc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88b1737-2eb4-4aec-ac0f-670d107c4024",
        "cursor": {
          "ref": "d334986d-7a2d-43b5-8ea0-df8a6a700b47",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bbca3766-3eb6-4dfb-8f2e-d858cf6e31ee"
        },
        "item": {
          "id": "c88b1737-2eb4-4aec-ac0f-670d107c4024",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3742dd17-7fa7-49ca-bcdc-6897cc2f0697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f97bde-ce01-407c-b629-bc487c9b8702",
        "cursor": {
          "ref": "d834d451-b258-49f2-a261-66f91c99add5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "14c21fc1-f440-4a3e-aafc-11f8cb8d9ae6"
        },
        "item": {
          "id": "26f97bde-ce01-407c-b629-bc487c9b8702",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "10c0b62b-16a0-40b0-9bb5-c7947372d090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d5dfab-12b5-4830-b06b-318227734970",
        "cursor": {
          "ref": "0b33ac87-e684-4d78-b7d5-207596de80fd",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e60a98a6-753f-4f38-b4d2-1e9f85a274ae"
        },
        "item": {
          "id": "43d5dfab-12b5-4830-b06b-318227734970",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cf6baa15-d0bc-4388-99ab-5a826a5e9a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26b180e-35c9-498e-b73e-b0dd44ad2f27",
        "cursor": {
          "ref": "85a5e23e-94d7-4948-b979-5527898ab4d2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a60389f1-9200-4aad-be76-8c0d91e78e63"
        },
        "item": {
          "id": "b26b180e-35c9-498e-b73e-b0dd44ad2f27",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7a0012b1-1b6a-4e9e-a000-c05fde37838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e6b541-2b3b-4d00-9302-ae65fcffd4bf",
        "cursor": {
          "ref": "214413f5-495a-4c5d-bb15-2ae27057271b",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "cd87fc87-406b-4284-b45f-4fa7415bb432"
        },
        "item": {
          "id": "71e6b541-2b3b-4d00-9302-ae65fcffd4bf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8abcd2b4-1bef-4b26-82f2-99fd11dea3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0d77be-3cd0-4ce2-a58e-a53d3b9a6427",
        "cursor": {
          "ref": "e3a1d9f2-d238-43df-ac92-f64859a2c62b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c09c6da6-14c9-4c6e-9eaf-1f8af05c7f34"
        },
        "item": {
          "id": "bb0d77be-3cd0-4ce2-a58e-a53d3b9a6427",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "085501e9-404e-4e2b-a8da-754a18a83a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d011f956-19c8-4b8c-acf3-d76feca7eb39",
        "cursor": {
          "ref": "f1efedf7-8681-440e-9ac8-f9d56d46592c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6102807f-9331-4b34-a31a-0849ba36854f"
        },
        "item": {
          "id": "d011f956-19c8-4b8c-acf3-d76feca7eb39",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9d2beda9-f2cf-4ea6-ab6e-eb10e410e6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03b173b-3f58-4099-9e07-88b12f836b4d",
        "cursor": {
          "ref": "9fad8867-0d3a-4522-b997-f389fdb4f15c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "92f47fb7-050d-467f-8f87-8ec08d5c2d73"
        },
        "item": {
          "id": "a03b173b-3f58-4099-9e07-88b12f836b4d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "df060b9a-2f1f-40f7-97af-3a0b583e89a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b506ba0-43f7-4c6f-a87f-92c9f22d5d36",
        "cursor": {
          "ref": "97a7ad8f-3244-4f22-8490-4b6931a7a900",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2ca854f9-654d-47a8-80d8-3bc63a02f3a2"
        },
        "item": {
          "id": "4b506ba0-43f7-4c6f-a87f-92c9f22d5d36",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e30b78d2-68a4-4176-83d8-92b89f3feeee",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bebb67-0197-4198-a032-206b4287e398",
        "cursor": {
          "ref": "4788fc0f-b466-4943-af52-da4aa7539b17",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4c9121e8-f04f-48d0-9102-ba631a8d1ef4"
        },
        "item": {
          "id": "49bebb67-0197-4198-a032-206b4287e398",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cdf3860d-ade8-4d3c-b183-bb2dee05ae16",
          "status": "OK",
          "code": 200,
          "responseTime": 3673,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10b8af7-802a-4631-a80d-37ec3f9bce56",
        "cursor": {
          "ref": "96d5e351-6010-4226-8082-6f6706e85cb9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "74a5d9c7-4182-4b98-a9f9-06ff13b24595"
        },
        "item": {
          "id": "c10b8af7-802a-4631-a80d-37ec3f9bce56",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "63f301a4-1f45-4cba-ae80-1127684fda66",
          "status": "OK",
          "code": 200,
          "responseTime": 5098,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f0cf5f-875c-4e21-b57e-86eeb5fbda3b",
        "cursor": {
          "ref": "b3aa64d3-1930-4ec1-ae4a-13e05c5bc38f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2e1397c0-be81-4f49-8114-a667251dfe5e"
        },
        "item": {
          "id": "b7f0cf5f-875c-4e21-b57e-86eeb5fbda3b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f5810c6c-dc0d-4c81-938e-6aa0a97a16f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f0cf5f-875c-4e21-b57e-86eeb5fbda3b",
        "cursor": {
          "ref": "b3aa64d3-1930-4ec1-ae4a-13e05c5bc38f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2e1397c0-be81-4f49-8114-a667251dfe5e"
        },
        "item": {
          "id": "b7f0cf5f-875c-4e21-b57e-86eeb5fbda3b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f5810c6c-dc0d-4c81-938e-6aa0a97a16f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbef119-5ac6-493d-89e8-2615c9c10bdd",
        "cursor": {
          "ref": "9e9ef02b-3c14-4d17-98d4-a2499f5c5dbd",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fabe922b-60f5-415a-8d3f-3ac163f846c8"
        },
        "item": {
          "id": "2cbef119-5ac6-493d-89e8-2615c9c10bdd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "39c53275-35bb-4d3b-a896-3f8cd52361f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab58059b-d78a-4d33-971e-d10bada317bb",
        "cursor": {
          "ref": "026330dc-ccf7-4cdf-ae9c-5670885461bb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "61a5e135-b654-4480-b9bd-6d0616a40197"
        },
        "item": {
          "id": "ab58059b-d78a-4d33-971e-d10bada317bb",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6c87b19f-e7aa-4440-bcb8-4077e75df1fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}