{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a415056b-1dda-4479-92e3-465561d2dd95",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8a34f746-fde3-4166-8b74-4e091ee97387",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "771b3198-47f1-44ce-a834-0560e644d756",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e791151-5835-4973-a460-b697b35812a8"
                }
              }
            ]
          },
          {
            "id": "3e8eaf1c-4e18-4616-90d6-5dfbaac8c0e2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bd01d554-aa81-4c28-ab05-194a19357266",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb2a38ec-532f-498c-aaa7-b20b25417898"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "867163a2-8f18-4d69-a528-05c6795c1d17",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d36d21b6-fa84-4670-90a0-d838be1bc055",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a90d2ddd-0d3f-47ed-bca6-75249a9a183c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43458c70-c8d7-4691-8f99-f58fd36001a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4dd0192d-0b84-4d40-90eb-377e720f9426"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e02f3977-2a82-4710-bfa6-b495a7fa2538",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3db9e99a-156d-4d31-af18-5d8bb5297f2b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4037b873-580b-43da-ab48-2e162caff781",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46812900-dd98-4c69-8924-3b06719a7b6f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0719929-f9a4-4454-a4ba-3b393db82b93",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8d73695f-bb27-4103-82bc-b42bc08b46b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86952cf1-d948-451c-bad0-d50bf62e4351",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5c434cb-9c48-4e62-b724-a6b3797d4e76"
            }
          }
        ]
      },
      {
        "id": "2bb577e5-4c8a-40c7-81b4-0a9203416b50",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7d897864-326a-4fda-a720-7acdd7177d90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b35d55f-0fe1-4ed5-b27c-aa1029322a0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11169f41-3dfd-4a8f-a668-b8365c6f50f5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6fec42-2c79-43eb-98ac-3ee1b49000cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b77293cd-f34e-4da3-aaac-ece44df7a9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa09085-d186-48ca-b6ee-e37ca5072b43",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96032691-3c0b-4346-b4ce-c4800ef3b397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33ace7e7-5740-4110-9d35-1d6ddc6852b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e83f14-46d7-4ab6-b9d5-dfff5bb504a3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092b5c00-379c-44e5-983c-f3926a4e5ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89b1516a-26fd-4629-9e43-6e009f60448c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4d076782-eba8-44c2-97cb-308521884143",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c75410f3-8d5d-4760-af07-ff55f3906e1d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2a8333-16f4-4d0f-9728-2e9994597c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e83e0a46-8f5b-4578-9865-74f097a4724f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbf558a-092a-4828-aaef-02de9b11b961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afaa8dc-52db-4f45-af53-5e6a0b646fe6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c658a4b-394d-4ff0-909d-6585b35cfb0e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8fb3c02d-5d70-4220-889f-82695863bfff",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65a52313-3394-4143-bfeb-aa9fc0d56796",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "be986d77-d0fc-4e54-8aae-1f20e50ffb98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6daac21-2a3b-41af-a240-0d76f0d3a928",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6a10cd96-8ee7-4fd2-aef1-889e822e1c01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e819888-50e5-4b72-b55b-69429441f1df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b85e40b6-488a-442c-b97b-c2c6332e9985"
            }
          }
        ]
      },
      {
        "id": "c817f0e8-0d54-42bb-8d80-0fc867e016bb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "02c0776a-05e6-49e9-b47e-045343e88670",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0fa0b7f-c618-4b33-8285-c6d199295272",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "901e115d-c7f8-466b-b1e6-7b6b17dfe684",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e263b2a-edd2-4494-a539-ea18f7033ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e7fc4c-7988-47a4-8d9b-964f1e30392a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6c78fd-58db-48f4-af47-e5e76e210654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "724fdf56-c849-4d23-9d34-b3e649b572ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c40c492-da28-45d0-8409-ed6ca5c55f76",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e41236b-6d1d-4ed0-b61f-04341c6814b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276d3bf6-6659-43e5-8b67-b35c6c89777d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016c96b7-89c8-424d-9b8b-bc33ff6c52b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89a79fc6-d2f8-44d3-8d09-ff737608d3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a03c58-be8c-4174-8131-00f95428d835",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c137e38-a4cb-4599-bddd-9275e602dc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff22a661-46be-4566-96dd-c7f485d3aa4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee36be14-256f-414d-8792-657ea85008c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e24d508e-a26e-40a8-99e0-ab5508255ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca6c104-57e3-403f-94a9-93ecb1ef9888",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e23b79-36b8-45e1-be90-15e94424004d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6297fb2a-8644-4b2c-afd8-62e9db70c2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69945cfa-6739-4312-9237-3928cbaebb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "491db05c-7871-419b-911d-876f794d85b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0eb244-7847-413a-9ee2-01193a8c8ba4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b3859d-46cf-41a8-83d9-11998d191f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c05b725-25b4-4e29-9458-b0b95a7f60f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25579cd9-f11a-4714-8800-f5c0e09aad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96a9dad2-b93c-4ec7-8735-b111d45cb987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9792364f-125b-4325-a9e8-b0f1ca064262",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5fcd72-f702-4ade-bc8d-257983eadad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e79c1af-4afd-4655-b759-c1d8768a4e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c1d59e-d9cc-4ad1-8c54-d2eae51d0720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42ac5f39-2beb-4d28-8361-304a741a9912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594a96fd-5d2c-4422-9284-5cd0e1e0e8e9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfd914f-cb2f-4e0c-8503-833ed3e544d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39dca7f-6d1e-4d86-9f16-bdf8fb259d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026c8878-a6f0-4ebf-a4ba-909e38b7d3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9f5097e-822b-4e67-bb25-28affb0738d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28ddacd-ac0f-4a70-93dc-0c0ef767c508",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a7e226-16a3-4ac8-a693-4c321543452d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fc4d47-1c83-4a5c-ad51-a661f7f810a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6d717-282b-4447-8d37-43eb82245774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a852f28-c5bd-4b79-8cc1-7b6d68ebc9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23063a3e-ea28-4403-881d-e5023e0b030d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecf6fca-1595-4c28-87ae-0bf0fa07ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90ef68c-04fe-42bb-8148-493dba8ec57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e58f62b-916b-4d00-8bc3-a1b2955d4024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04a4b6e7-9bc0-4aea-91c0-e52ab1376e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0346b98-0ae5-468b-8e67-6bdb11cc30f1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e18ff4-24a1-46cd-a401-835e71f88bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f04996-9aac-4345-b67e-7f8d3e3bd9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b984cc-7930-4d82-be6f-e10151cd902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff9d5c1d-efc2-45f5-9659-55fc8552a0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbe317f-9db9-4d6e-af4e-2484d96bb8ae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fc1e39-34e2-4d2b-8767-55fc856a9f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f21196d-d3d8-4575-867b-bb87cc9ac150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584f7845-7b94-45d2-ada9-98045015f174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b18e3cc-d75a-4029-bed9-10aebd62fa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1241318a-f27d-41dc-bcf4-43529e82954a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d6d1f7-0bc5-4a5b-95df-10a1b64eb9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebfe82f-56c6-4cd2-8f2d-1c395dfeac37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93dcc8d-f454-43e3-abd3-35f7459173f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fc81bf1-5ddf-41a6-a1f0-978bad34e05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cff7353-0516-43ce-a71e-eb26b5f63cef",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1139d1cb-ce06-43cd-a05e-650f3410fc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c75846-89a2-4a81-96c3-f3fb0e0ae5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9675bcac-1202-4acf-b2bf-acb83fcc4708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c5bed15-60cb-4003-9c50-096324911438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523336d7-ac66-4d35-959b-e7556cb9d116",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2838ddfe-1286-4d07-94c5-f8cd3afe229e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02c8b1b-c7ff-404c-a18e-5832b2fd50db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b22748a-bb03-40ef-9251-96efc58198ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bd85b91-0ccb-4c13-a0a3-22f9e708e9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439db819-bc76-4096-b114-04c322e59128",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c561b242-2e7f-4019-a08b-7051d506cfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d0c2d4-7814-49c7-9a74-7cf2b32a4671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3ddeb7-6213-4982-b561-738e17a572cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9ca4ee1-31cc-4f04-8ea3-f7b62c87ad4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901df68c-6cde-4257-a2d0-a071541f3867",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2294f62b-2fc2-49e4-a7cb-7dc456be517a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397c8952-5315-4627-8886-f87c320cd338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed30e9b-e98b-428a-97db-657bd1eefdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "435079ba-9001-4d3e-83d5-96bf0df04aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442366c7-d0f2-42ad-8a87-632674794e74",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3fcdea-83c2-468b-a386-ab01a9aa6045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840ac2ba-0d63-4259-b34e-e6f86ef1cb7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd33ec7e-7bff-42fe-8400-d0422ce34b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58170cca-7582-41d6-bf7c-723d6870c822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f105d2e0-208b-400b-80ca-d3882e91b080",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad821e40-82bd-4bd2-b785-d70e83aafa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29326b90-7d9d-4b1f-bf52-058530823851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7921e14a-fea7-49df-a64e-eb9a04128b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "70b65379-b775-4c99-8b18-22dfecc8e3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff35a276-9759-44b2-882a-886c2dd0aa7b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e400c5-c091-492f-8c57-42c363b2625b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772aa54c-b565-4d96-84d5-109097183a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e81203-8278-44f5-8356-40e2ed93d5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f965dfd-04b4-4e98-88e2-1b62cfd85611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96940e5c-1f26-4341-9395-11d2d8d19657",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58314ba6-488a-4025-b955-526f4070c144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb1a7d8-4b7a-4d41-b642-85444149b23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e065d41-3eeb-42db-bbd1-18ecf3a82cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7810127b-5590-4e61-9ca8-c7c705b2cbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6162c131-2225-40a7-8004-0232bd8c08c9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594ef648-4d7c-4ee6-99b1-dd602b4c875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b81e015-453f-4566-a174-107548b7ddce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56489f60-9e3f-409d-9e12-70f7b6d31fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f12843-0186-49d8-bd4f-5fe62ba0efa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5230ce-b108-46bd-8c2d-1986fe80ae9a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94f0a72-d874-4a4a-9fb3-ec1a10c6b247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e6d85d-ab0d-4b13-b2c0-2b480d0d6455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a1a884-1e5d-4440-bf15-84b0cff27354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55bac81b-6a79-4b9a-9d31-a1c6253929e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbe28d9-6a7a-44f2-8cc1-0c0fabe006a5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e68f412-3f7c-45fd-b670-874d4e929d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf83a61-d4ce-4f0b-ad8e-f9285d7477a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34057b63-e0ca-4a7b-bbc2-f14fb95d9e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c838dcc4-3475-4b9e-82a6-82963abb91c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f55610-c21e-4d66-bf65-08961c876b1d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aebe4e0-6307-4a9e-9e33-b361c04c4168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb040620-8c93-4db1-8dca-27353bdd7874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f42c89-d086-49a6-ab6b-a11c76bb1bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bba766-f033-4f18-9078-28366c285cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520b224c-31d9-4f75-88ff-e9677a233754",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840f7cc5-3f96-49ce-b65b-16c4bdb0387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ab93aa-e6b7-4065-854e-412121723548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85b3783-3f97-4b38-96ac-2c3b26585ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45b5d17-e1cf-4503-a638-f4621a0f81d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ff7bde-0d41-4441-b875-afbdd7ab036e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3342b9f7-77bf-4b66-8bfe-fbfa8f16aa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ca20ab-d5f8-4171-b4b0-87e1feefc5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae0aec5-fd44-41fd-9f91-c17820718ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af577e1-9695-4543-8a17-bfecb0a397b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4011cf2d-fbd7-4daf-a915-18b5c0cea91e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaaba54-7ade-4eb2-a90f-bb4358cbd56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e95418d-7220-4a8b-a532-781ddad82dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cbf0c0-d138-4d5d-bc8d-4621448ca4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed51eadc-e2ef-4892-8e99-987c36f8179b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ab4e9e-1e27-4137-8d85-d23ab1208e1a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42aeda43-a975-4d95-b618-4ffffe83ad6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0c21d7-6c0e-4968-a659-a4ead40b6bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662ae476-47e2-4557-9759-da6f0f797d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16893638-b59f-4aff-86d1-fe834c111ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c92d99-6fbd-497c-9255-dc5b30f9e987",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70303af4-0001-4c39-87ab-57fdd1951d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad31203-d5fb-4168-91e7-774ce319ae57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cc7257-6c56-4ed2-aea4-a9b2fbf6fbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc341808-d7fb-4187-bd76-e54865f491b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d166b1b-626c-4d04-93b1-0ee92458bb9f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740a2a8e-2496-4edb-806b-e93754a40665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d299d51-8021-4a3d-bd52-bb6679defd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da43217-f066-4a0f-bd72-15fe9ef4c858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "829d2d20-d3aa-491e-be98-d64527220dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a30e42-aafd-406e-9130-f89e72f807dd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "436eb26b-ba57-4f6d-bf27-b9fbeb4aaeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b4e450-ad5b-4e2f-95ee-f2474d3560e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f30a161-9616-448d-96f7-6a435986ef97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5c39fe-4e6b-4e10-9d6b-b32373337487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485b983e-dbed-4d5f-9eeb-f7d1350f9cec",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7f8b54-402b-44ac-b916-2658fa0bb173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6055acc7-2020-4679-9861-7ce626be45ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20123bf-71da-4b9f-a215-d1e8235bddc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4bf9f4-f629-424d-83ad-83eb42659b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbf398f-d5b9-48a3-a84a-9d0d02144faf",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee3d324-bf79-4786-a977-5b0e0219a1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae243e0b-0bfd-44a3-a524-2ac8e0809cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5876b7d6-5b21-40de-bf4d-f2563dfcecd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12de4110-a4ee-4190-8ae0-c35a4ba968f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7311b4b9-ee50-47cf-9b95-b0e095a52924",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb133421-653b-4167-ae14-8a22343f8c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aed2bc1-a726-41ff-aa95-c40cdbb5a618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ee3d34-f9cd-432b-a582-955d6ba880a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2212f4c-04aa-445b-9c28-6615cf8338f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58657372-37d2-4007-b113-2f00a53d3995",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c423f1ec-41f5-4719-a132-1827900022b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0b6d97-f10c-4f5f-a173-055d979370dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2866e9e9-90f4-4fe0-ac65-eeae67f2fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8edb816e-b96f-45a3-b3aa-9871c9c46951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6a2423-e354-42c5-89c7-8f956bf6ca86",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5ce295-6f3b-464d-a2fe-d1d6a372ea29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8b7a44d-490e-4bfc-bc87-e06e97cc6fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ef6e7f-2f41-4fe7-a425-bcdb3104c513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c50d1d7f-ec49-4a09-969c-bf6001b6683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f127bb7-32f2-435c-897e-c26dcb9b1deb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c0d5ab-89b7-40ad-9317-8eed194dbc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fbb02a-957b-4f8e-be95-e3d67841e94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6485fc-1714-49eb-b988-3ac2e9f50afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "351a426d-bff0-4581-a237-30ab5c3e06d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb23394d-4de8-4b18-87dc-5d37284d1592",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccd2c2a-21d8-4fe3-bc32-db7a1da869de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95eebe57-bf0f-4282-b515-223951d89124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32970c5-e438-487b-9e21-c8c87c6e2c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f4d209-f711-4189-a8ee-1abdf93a603a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a9725b-c012-4428-a8ac-83e19c33882e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7686f8f-a0ac-47af-b822-dd23af2b7b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbc8f9b-61a0-44b8-a065-8839ebc194a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbfce0d-164d-4c42-a348-2efec1750d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a059d992-ffe8-4a41-b8e5-ce24269b7566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b979f981-77b3-4bb7-94c8-4d91deb5f792",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa7976b-6fcd-4740-832c-afde845bc625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b11eef1-6d06-4018-83ea-b841600ae191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcf34b3-eba4-4b73-a12f-fc44591207cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4f5114-544e-4ccb-9ece-f5ce94cc0274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b59a23-20b5-4762-81a1-c945c27fb274",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacec94b-a76d-4a6b-8ce1-b5297cc299f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d78762-be60-4bd6-b0a3-88a2919d8f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fa74e0-3751-477e-9c60-5df696404830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e51ab11-e0d2-4e37-a9ef-d9ae440fe32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e9fe0e-34f4-4e32-beec-3e46214ebb83",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d562e4-07c1-49f1-8de9-f6ef886e20b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a52700-263f-4e31-b681-574db45224bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0d4736-6d56-4697-88cc-ad4f0fb96067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "494c7e12-ad11-46da-9cae-49d257f7f79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc32a93-d0aa-4294-a558-79552279f5df",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d357c8-3a78-43d8-b3d8-994db8d7b01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a6cb1d-79c3-40bf-9170-dc09f4545410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b0f42-207e-40be-aa3b-680c130a0c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a7c5c3-39d7-41dd-a66e-b625e18cb8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a9fd95-a1a7-41f0-97b0-31f250d75eca",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81374b39-22e1-49cf-8f14-2022df04abc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950e536a-818e-4ec6-ac44-d56fcd496b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6b6de9-eab5-451b-bacb-e565f47f1df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "080e1c37-998a-4ca2-a94a-a2ae80810f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedb8f6d-527d-4b43-9fb7-4f58883214c0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb8016-aae0-448a-9b4a-2a4bdab58808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78a94f8-966e-4b99-a613-4b3581c5c2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97100e62-50ee-46a7-bd18-41918f8c2d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cddc85d3-131f-4418-85fe-89fa10a6d621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34288e13-dca5-47b5-aad4-ac790591cd73",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47083d44-7cb7-4e89-bc7c-6f3a38d29008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d05b8f-c894-4b99-85eb-fc13d560a96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183e0f34-7020-4d8b-9934-de8b15dc96a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b305b3c-0fce-4b12-86e7-221271273d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c6f909-5e49-474f-bfa2-26fe549a0a19",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc593abc-6c12-4419-a197-4abd0a8be99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937b987b-1bde-4b4d-9d6f-5e12e018ceac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec17403-70ad-4831-963e-fd7d0cb6d946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97de3da1-94eb-489b-a769-fa681ad4275e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ff3850-97d4-4328-830f-79ef40080b13",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad6bd09-e1a6-4518-a523-c50ea1c10522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d1f1f9-208e-42ac-9c2a-96e73b4a4b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e11801-27ce-4ba4-a35d-e720c4a45ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7cbd32-4fed-458e-b45f-b9ba8fae4c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c11823-75b5-4690-b682-75db13503432",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa077df-5ca2-4bba-b75c-67943216d436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59eb766-738a-41db-8370-3d4d4e9d02db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a956ad-0a6a-403d-9e79-f37d3e0d68fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02730e0f-526f-4457-bea6-03649ba8d691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1161ee81-6a90-4d0c-a378-06935520f126",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8c5dec-1672-42d0-87f8-e254e978901c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b719d677-f6be-404c-bfb2-761bc47aec52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd79f9c-7c5b-4e2b-9406-16716fca8403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f811b38-a689-4e8f-9893-4273b902e37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e7404d-6249-40d4-9a23-add07c04acd6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0573ab55-6cac-44e7-afff-51bbebd2ee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed7857f-02d6-47f1-a691-5efa3431494c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97ecb48-ec56-4942-ad41-6f6f717921a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7aed13-a7f3-4da9-b495-ea812739c67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ded9928-0e0f-40ad-8239-e8a24fd63dda",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f682d922-9b18-40c2-8fa5-b923961491f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d1de94-27a3-4209-90d0-14765752645e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c202e-26db-4bdb-96b7-2ea4191e5c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d84e7c0-8a55-4e85-b3a3-bb594139585d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8770d49-b0bd-4308-97a6-2e5343ce5054",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab75ddcd-eff3-4aa7-8f45-4b79b7b910dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34119b58-afee-4105-afee-1cd9f413f552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d602db-af02-4949-930a-d4f61943b5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a83fff8-2855-4266-b111-4701ede62386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61881546-5e18-4861-9da8-139f3d6de431",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33bf0da-11e9-4f36-ab6f-1f321fe81b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0fe096-b816-48c7-8a0f-0af508a2836d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4caef44-e137-4a35-9bc9-6d4728137f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84cd671e-8655-4d51-bd31-fb7ade27533a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff571161-bb5e-4f75-b2f5-b9baa224fab8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d65641-1cb0-4499-bc2c-d906054e26aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40833f0e-b43a-4972-9da4-b2dfdf05de30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf381eb1-7f66-420c-9313-b8a365876754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a5465e-6d58-4a36-8172-d45920e0dd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203494cd-6df3-4382-a9ae-e1cbb20def67",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f63162c-51f6-4045-9115-78970c8eeba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd7383d-30b5-4c5b-84c1-a99c7e4cea8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490528c5-2844-40c3-866a-69ded17b26e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "92e2e720-4c8e-4c24-a2c7-89454f57203a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875f66a5-d532-4054-92a8-a39f93ccfd46",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e257fac-9524-4cb2-9b6a-7e4916347984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157354d6-eb6a-46e6-a702-66c0e5c5eec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ad4ac6-c844-4107-aa2f-32ceac1ae61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a862f3a-673d-48cd-89f9-88c5f3b3ecfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cadddbd-689a-4e02-9fd6-0fed8ef9f8e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcccf9eb-ea2b-4e56-a541-2d82d0a7ea83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34898bb-d48e-4b94-a52e-04837df388a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf47da0-7293-49ff-89d1-6f0046ac0b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9efec995-5b41-4387-81da-3c314ac4f4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4a64e7-c34e-4fa4-852b-ea8af3237bc0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59435939-aed9-4a88-bca5-f6d3ce73014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b0b47e-33cd-4fe9-a6ef-6d613cd5cdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0439b75a-e1d3-4f51-911b-3457546613e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f23ca5f6-55df-4e74-a3a6-b5a64c4f1f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c071f30e-ddc2-489e-b9bd-4e6d07f834bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a760d8c5-0084-4c63-9ef5-48ada8c444e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17380de3-8253-49d2-b2e3-9276454d0a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d635118-1cfd-4dc6-b2ca-09d2ea65afa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a60e836-1764-47c8-910f-72e26ac953b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fd0e79-380e-410a-9153-5cf32f42ad1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6786ac-f5df-449f-b246-c919deb540e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0266392-566b-47ec-9ae3-a38c9fd846d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dbfc01-566d-4d17-acaf-16098a738b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c8ec3a-5426-4c8f-ba56-a93b68556354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992100ac-8942-4fd3-8b54-4d6a93f0ef29",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff533f71-8b68-455a-83ce-41b2b67c47e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8534d978-42d7-4ee8-aea9-5eb727f479dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b01534-824c-4154-827c-92b12e18351e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "136b2967-9313-48a7-98cf-12d26d3c0982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0a8d66-76a8-4e83-8234-dbd9e907ddda",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd08aa4-6ecd-408f-9f29-1b76eb6e61b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f5bf1f-bcce-4e8a-bbc5-df0f80413033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb395bdc-a476-4a32-b077-81521ba555d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cfaef8-9de8-4cb1-8931-18e7be0d0d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3ff207-d17c-43d5-a6aa-1791a40b9fbe",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0649bdec-a8f8-4018-bf29-9a22335918dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40874b3c-5550-4007-91d5-3b48763b881b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24abf87-fc4f-4f67-9b76-82af53df23d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ad5744-f355-4254-afb3-77ac433585ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd9e930-4c9b-418e-9514-0cff9625eed1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e96611-ec6d-49c1-adf3-502fc2b3a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed22173d-bc48-4256-b8f8-789dfb8ea77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638c6d09-0e69-47ff-8ec7-cabb4c62bd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96be5413-875e-473f-90a2-b0a7a8772554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd229bb4-803b-4051-aa94-6f58c276ed49",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe69554-f4ab-492a-b58a-1a3032f206ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37642117-40b2-48d8-b1e3-ba45a4928834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca967c5-1fa2-4701-8684-fd7fc5643da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f92d1d-75ca-4e78-b0a2-14bde824d138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232a4c93-09da-4c84-b3a9-2280de85f1fe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e891ae64-691b-497b-8711-d9b2a4647fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a0ff11-5d3a-43fd-a1a2-a46c53f6a44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f610840-4703-41a3-b00d-93b17fbf2aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c42176d-9ddf-4ec9-a9c2-250ddc37b2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67aeae53-4ca7-49af-9cfa-5c098bd7a764",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e05778-6d48-4d33-8e0e-a67774857f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c1baeb-326f-4924-9cdc-f5a3ed86a994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3ba521-80d1-4a6c-b69c-2b2ee0212c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0d8a51-5ff1-4dae-977e-3bda0bd3eed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4118c796-97e7-43cc-95e2-6b9ccc79cfc4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae398611-d745-4cde-b658-bcb181576291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb112d6a-a543-4edf-8bc3-83628a542068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9540da43-03df-4349-b7bf-37ff1145de3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c566fa-37f7-4620-abeb-4a6d04c75b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89eff81-927e-406a-b3a1-ac9ea606e999",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14c5230-0cac-40e2-8cec-cc015404d31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0337bdf-3fdd-4150-b22d-22e06c0b0944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce8fd5e-d06c-4f0b-9f8d-ec299f6399d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc8573c-ae41-4baa-8b1d-175739eb357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6c82bd-7dc9-469f-914f-ca34b52fa897",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be14ce84-3a96-4ebf-973e-f67d58c0f564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e777af7-a289-4dcc-9c5f-cba4d15c2f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b66dded-31f3-457b-9662-0337b039fbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a7830d-ccfd-4f2a-879b-07b42d9acbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aa20c6-9f42-4652-acfb-b41e33b1ad77",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591484f7-73e3-4d61-853c-7ec86fac072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51e4e80-839d-4049-b8ae-26fb6c470db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec3a1f6-45ac-4ba6-8187-5e7baaa32cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2a8580-0890-4037-a016-af9cf26adf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b61f61-39f1-4d2d-a40f-81cab7a33d69",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a5c56f-3355-4d70-9e76-e6757b6b7d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b927f2e-1343-44ac-8ab8-9d75a91c2834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6201151a-1cc5-4a89-8555-d5278382d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "deffc662-f0ec-4158-8b6d-7042c60d7597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a1ff29-2acf-4a89-a2c8-8a8309597d2f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed91e182-afba-4945-b340-44cb18800c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50172bf5-0b2e-40de-bb51-932d87803843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a5788d-e584-4150-a32a-ece7ef7b1385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0506cefb-7e1e-44ad-9c45-8bddb728d87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54308a12-bf56-4785-9953-fcfad89dee4a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2709a222-7cd3-432f-b733-51a677ab5f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8627eb-31a7-43bc-8d20-b1ff745a1d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76519244-779e-492b-9aa9-2022c66df841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6de707-6d0e-47bc-9383-e6f9e1dcfdca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87210575-3304-45cd-9497-7e033c0892fd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9cd3f2-8e65-4f3e-b88f-a337bbc25231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae83ccc4-622e-40a9-bacc-d3f19790d484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9983ed-2960-4b33-bfd4-77a242f722f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79f77c97-b0e4-4451-a3f1-cedc35e54306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f19544c-b645-4092-8de2-3020f85288dd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0651c8cd-0f5c-4cf5-bcb3-4de4b1b39a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9304486-4de3-4075-87d4-99df2c10ba39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad62c495-e41c-4576-b72b-8ed84ad4acfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27a49826-4f48-47d4-a42f-efc8da8a3b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87785ff1-6538-4604-8c19-4db1493fe7f3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d1bdc8-07a5-4651-bd67-fbf5a63d5320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20902af5-e9c8-431b-9b84-65ec6815297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e7c63c-121e-4e98-9e5e-5ef56c31307f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb2fb79-3a06-4013-9594-de86866f4262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a6dfef-b91f-43bb-9cf7-2892f6434645",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d332c1df-db19-4cbc-b61f-e203e5fae8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700e4639-278c-419a-91d3-45253acf9abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe26303-572d-4cb6-a1ad-b2b1a8c53d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b865e6dc-16d2-4f2f-9692-7e1e991f06dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851642e2-d065-40a6-bc2a-0cef6e193121",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ad97e1-5117-44be-a036-0676f017ade9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f55204-3ef3-4d35-b974-6804cc79b94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564e9721-55a9-40c4-badc-f0bab7ba5fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7686cb06-3515-4b96-8e1e-973accc40c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca997522-129c-413f-86a1-bd3775e162db",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a81a68c-e9e1-47a1-9f0f-b35e5a293cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131dbe68-138c-4f3d-95c5-1db7770dfbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65aa1def-76fd-4c08-bd79-6bcc6a30620a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6558813-0eda-4ed0-8eb8-9dbe7e26a937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a81c12-a032-49e0-bf81-5dde02740b00",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e37c247-a2ab-472f-85fb-41eb1c119de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cccf916-ad46-4a9e-9c9c-2e979d86c656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c382057c-e60d-48c8-9fa5-a59bb108c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4600842c-18d8-40fc-a5b5-3c59fa1d69dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bac8313-c5a3-4e09-b3cd-896fb0598988",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91400a6a-7b48-4df2-b88a-9f55259f2f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd010ed-a992-45b5-9b81-1fa9e723e47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bddd59-3a01-496a-9e1c-09c4505fb011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb38b67a-5765-4b81-8922-72e06a483291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e435e5-66b6-4078-b5fc-42a5246cdcae",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade31376-0628-4b69-a0bd-b0e4838f4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8417bb5b-d52d-4964-ab86-93621ec0f962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba032516-bd87-4eb3-8352-ee7af1f44214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4224b796-91ac-4e57-8b19-532a6c6435d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a41840-1006-4d53-b7fd-65875f0691ed",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33e10c2-5d13-41a9-be20-60b8a1b61ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5a8fa4-c21e-4460-b014-9dcd123c314b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f515d0d-0b6d-4314-a5ae-93c1dd16d26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "daada906-3492-41bf-9b29-505e700f9b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599cf036-07d4-495a-8e13-b66cd9f494a3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8cc05b-a953-4489-947b-8dca6291c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fa9ab2-537d-4f84-af81-8bc106dc4a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd0fcb0-9d6c-4d19-a8fe-3ae8eb02d13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7f376e-f021-4555-850c-f627f33fb68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12c571a-8a79-4c16-8902-a733f158639d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220b5fa3-46fa-4c38-aa54-5d221e74288a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b58167-aec2-4ba6-b0cf-fecfface7a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67db028-16ac-4d7d-8863-e3d84de4fc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "612edf88-9a51-407d-a6a8-db46e865ce82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d07240a-5ad3-467a-ad04-fc09b5874e3a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb0e129-45dc-4cde-a880-a8aebf2b7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d290db-9eff-4c09-bd19-09a3988768b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9610f3-2816-4b32-a622-254cfb94bcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3197bcbd-95a2-477a-af29-dcdef712d3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eb7707-d20c-40e7-ba16-846289add3f8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e1af9c-0551-4e83-80c5-39b7544ebf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a40fe0c-8338-499b-a6c8-d44d0b62482d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c063f1-f4c3-4ee9-b9c4-7f21d383cd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd7a637-7d62-42f0-be3a-3978778af9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f52454-a7cc-48d0-b649-3c40dbceb1c9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecd1a86-a1ce-42b9-91e9-bf0d74756133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a4dbb1-d7a7-4664-aa01-4647f7c206e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc085823-23ef-4f1d-a6f3-e0fdaab9bbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53f94ad5-4b6c-41ed-b848-6972a46b0d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a65dc89-af3d-497c-9775-41b1409e6498",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8413212b-0361-4ba7-b623-5b7fb6e3991e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59603650-43a8-4995-b64c-327c9b4b4481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d366b99b-3085-4f93-a840-412f6f0e7b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "771fa8d2-5915-4f8d-9c10-d8dac787f672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b93410f-2f17-4cee-b231-eca3d0e0ba77",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3c4d1a-5aae-41c1-b5db-800eeb402dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "913bdfbd-05af-4804-acd5-bedfdd9c31c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2f2695-93c4-4f9f-a91c-bf1d0e583684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8963eb50-3d00-4792-8594-584794b09c14"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68d93bcd-a278-495c-8a07-75f20689aa81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c7598d8-b3d9-4937-b3b7-611efbfe6240",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d85c67-9146-4299-a01c-29aac78962c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "438e5d4a-dd1c-469d-8167-a789ef4597d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8009faaa-1a2b-4d91-ac8f-082f3d4ce865",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e70c7957-0a71-4cb1-92fe-f42038124c07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5a957af-77bf-4b77-a686-17dd28c65194",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b887f88f-cb77-411e-b5e0-a8550365da8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5178670c-946a-4bbb-94c4-d9084e22b645",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03043e9f-06a0-4a3b-a16c-288157836446"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b6e0418-b20f-430b-b9e8-78d4a68a4b82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "571861c4-925e-433b-a4ad-4a9d794e11ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "134e46d9-619d-4415-bc97-771a9f91307a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32b16eba-a1c7-4a44-9431-8158334277a4"
                }
              }
            ]
          },
          {
            "id": "009f4e08-5123-471b-81c4-cbcd91e15f6e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b06b9057-28e0-45ea-86e0-2ffc86e673a7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6cdbbec6-e3db-4239-ad19-b4f8714b7ad3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb0c47a-078d-4ac2-8a4f-ed73de8ee631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7fc87a0-ec6e-49b7-ae8a-5ae87524f0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959dc68e-d02f-4915-9544-ebf7df2f23af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bb51f6-d6dc-47b0-b173-47beb9795c87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0282d664-8ec4-4c81-b329-d4d9b496f90a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abfffe9c-e2e1-4fab-9988-f18c4b2d1183",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a01d15a-b3ff-4ea0-aa74-d442ca0e1cfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee588769-4d7d-40a2-826f-56adfc4c4615",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1ed7754-6788-48e3-b386-db6629db39d8"
                    }
                  }
                ]
              },
              {
                "id": "b6f90ba0-b786-417c-b4ed-7f201ff3d988",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ab5a8c6-8085-42ba-b0a3-d511b32ae6c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "609f5dc1-4fc5-40a4-a119-153e4f0bf9ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0b63927-15ee-4ef3-a06d-0c72a69a6787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d61de3b-c79b-4b9d-b609-d8ccbf0be495"
                    }
                  }
                ]
              },
              {
                "id": "e6c90a35-231b-4205-8bf5-cf62580a517a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50eb8f0d-3eac-4af4-83d1-43b687ac5e71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02e706f4-8e93-4b38-a774-9f18c5f4ee43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6369474-fc57-4983-8420-df41d235de6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1aa60189-224e-49bf-986f-754367f47822"
                    }
                  }
                ]
              },
              {
                "id": "203dfce0-7815-470b-9583-b4198e2b7ad4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdffc396-4b05-4d39-87d4-d06f8cb8da71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48bfe870-12d4-451b-996b-b64fdb952e81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8b0e572-8f42-4738-a772-8428bb016db5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a77f174c-f2f6-4f25-948b-3930e44afa53"
                    }
                  }
                ]
              },
              {
                "id": "111edace-3e04-4c10-b063-bd5a07706254",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5cbc7dc-8bf4-462c-af32-e03a41130637",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67a12749-8393-410f-9645-e203e3986a02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "942e560c-0910-4f57-a4a2-317a69f0574b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "70221ee5-54e4-48a3-b6b3-b1dbd6f7b25a"
                    }
                  }
                ]
              },
              {
                "id": "63d82b11-5b35-44a3-a3a5-44c2e8799b9e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05377bd0-8bc7-42d3-b6c6-f5e6497e362f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eac922e2-f8e7-4c9e-a7a8-f95f72e4f2a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea512636-76da-45da-8453-a8e608e8a471",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67dfe7cd-c40b-4569-a4ac-d3cc67d77a7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52129cc7-d15d-403a-8df3-dc663b319844",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "157202aa-9b54-4223-b4cb-362f69fd4e7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee8470f7-ebfb-4feb-8bb5-06a182f96ac4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89d6311a-81a3-47e8-97b2-265a7ad75d7f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c779528-815d-4315-ab0a-d5442c013ead",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "edd121d9-2641-4e7a-b845-159c72d92bc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b8fd370-330c-4cb1-9d03-bd6d7ba209a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0c3675c-6b78-49e8-b429-80b154f31532"
            }
          }
        ]
      },
      {
        "id": "742306f2-3743-4aba-84a7-8d371618e050",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7acf5bbc-294b-4964-8af0-2bcd1ecb56a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68e381c1-cfdd-467e-a3a3-4487229c08d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d5acf59-4900-4d89-be09-c2d919738008",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7261b48-2ee7-43aa-bd18-0982ff018139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4fa4f0-77d7-44da-bec4-0b25e47e1670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a23a571-8baf-4d47-b746-ea855ae4d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0204c3c0-dde2-44b5-8248-ce11e2274c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d63eb-fe2c-4678-bc54-18e5c29e9fe5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ede199-2041-450b-9815-cadcd6e5d6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f2d3cf-b9d7-4162-9ff0-8179e372edaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cde3932-19f3-4c10-863a-a24590f878a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46e8ea9-f554-4b70-a5a9-e65df6b3efec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07e3564-e78c-4003-84b0-e09ab4483ecc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4979699-bb4a-44d7-bacb-ced933bd9838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41a89a8-80de-4745-8cab-c126f2091c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c570a57-67d6-445b-bf9a-0fc148ec0e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d2f3e8-bb30-484c-a23a-85a105fbfeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c296665f-9d4d-43eb-af63-35f483972c23",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33e7529-3625-4ff4-8de0-c2541373ded7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a673dee5-5bb6-4252-a58d-40b2367233aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38958e9-c18b-43da-834c-10c05560debb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d554738-bb90-40fb-ba00-d83e68492826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474abca8-39ce-499e-8128-69c50ab61d8a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc297969-11f3-41f8-831c-c151e919dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ceaa603-863f-4ab9-ae36-72127602c76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e088ac-2faa-4acd-abd0-08d1c633d03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f999a593-cdbe-454f-9325-26855cd6be75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbc2d95-1c59-4987-acd2-08f0c8704165",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da3d982-2cde-48f0-9a9f-574f4d1cafc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391900b1-040d-4637-9ac6-4bf23d98b34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810a1afb-ab2c-4659-9fef-ecbefaa29ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de85a731-9867-4919-9132-b8b3401a21ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8794c937-608b-4a49-8782-9be4aaab63e6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b4d4b9-7882-4bf2-a8d3-b19bdddda4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "406275c3-13d9-4c2d-a96e-af82cee1e202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da304d6-2b67-4272-951c-41774aceba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b730c37e-39b3-47c4-a061-eeca29e01651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ddfbec-62dd-41c8-b912-959d180faea8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2a508c-ce60-4e69-99ac-6c2971d05ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c4a670-e30e-4d3a-85ae-1a9acbed2c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cde42f-631c-48cf-a054-a9bd7420fd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c9df0c-312b-43da-9fc0-75b909a8d306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13677e51-530d-44f6-9986-c9489a3f5bf7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe39eddb-cfc7-4759-a3e7-e799fc92c058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db48227-ff75-4ec4-a144-473c69cf640c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7ea3e8-992b-43cc-bf84-863615b4c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df8af63-49c9-429c-98b2-038c323efe7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb7a31d-e084-4b4b-8929-ac852f3d6f08",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa382d34-5cc0-4e4d-8c6f-8fe0fea845f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10d4613-7db7-493a-96cd-0a944492b1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e0b419-1517-49df-b4ce-201692c63d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5656d4-8a64-4888-a5d0-ed6d324bd946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b8bab-4fab-494d-8cb7-870410eb28bb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0a8072-808e-430f-9821-73271046c55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f84aa1-9e1d-438c-84c5-9876aa1f60b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7b83a9-3ad3-47b4-baf2-0dcc3d656e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "92d2a3cb-d724-4495-9339-942a17701461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d61384-f8f6-46a8-8a1b-c1080d540e41",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e17bb1-6d34-48e2-9398-a9208d30d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872e6903-dc45-4ba2-846a-eabf372c3e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afaf29b-3dfe-4630-b594-9175c1a41b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3da9b7-92e1-4e42-b676-6ae16a748a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcf4c1e-39c9-4b0b-ad34-f0016d6b10d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4094b6-624d-4084-ae1b-4368dd77c2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87dc56c4-aac0-4a2f-8c61-995709bf164f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80000b46-e26a-4009-87fb-10db308ba697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01ec4d7-472a-47b6-bfc6-c2bdcffb7688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d49dd5b-ae09-4a71-bd66-67df5e955d29",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd446f-ad2b-4a15-a54b-6a9f40281846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "481ec2d0-8bc9-4cd6-9dbc-5881cfb9fc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5e522c-222d-4222-a075-ee5e99e9ecab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ff4895-e11c-414a-a28e-cb50b8fc50a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5c4274-6fd7-4115-a24c-bba34cf9eb9b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8c28c3-90f3-4c0c-aa2c-1a5038eda351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df618d39-f35f-4178-9fab-1c921f18ca60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67452b99-1269-4a03-8db0-a0f78f716394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e76a3a9-e485-4088-9920-bafcfda0cbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40116f9-610c-4ff4-8a65-7c24db0395f6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d4540b-090f-4e7d-8110-fae0ac505d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c7f03e-1fb7-48f7-9f52-ba34aec8ad4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62292fe7-9098-40cc-b417-0e2e3cf4ccf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9169a9c6-e3af-4e1b-93f2-eef5adad5915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cae4f3-3a23-407b-8260-bbfad0513fe1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddfc40f-dc2b-40f2-ae32-5ca2112e109f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86a8ffa-81f2-454a-b17b-7b3e05ad96b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8493fc4-0d8c-4d26-99b3-a962dcaa42f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "710f991b-7587-40ae-ab17-7eb860635869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81899d38-c768-46e7-b0cc-0585d0a4d1db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2769372e-af0a-4312-895f-efe59c0f4d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22fd24e-feac-419f-9c3c-182f78431039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c326fa5f-7304-4be3-b652-bdc28878d201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25481f27-a95f-48e7-8e7b-f4b3498b052e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a144ff2e-f587-4787-b829-bdb22c5406f1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc65b3c-477b-4aeb-9ccf-25b933082aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006b0e12-ebe0-43c5-ae11-e4219f475ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2ae891-9333-41ac-bf1b-fdc85bb91b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38b870a-bdfb-4bd9-95c3-61aedb89e810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e9a036-4a41-4038-9d26-3032a0add643",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e77d59-f664-4db5-a66e-5dfa7c5dbc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f46014-5676-4dd2-be12-fff2a622d269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5feda1f0-3f59-4085-acc4-4da27c1bd64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "517efc77-ed1e-46d9-a196-7b8616582f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a721fa-7ec9-4a6d-badf-b5b8568b5092",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29f7d65-8dde-493e-8bd2-ecda80802b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcfb198-67ad-474f-a381-58e418adf6c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e11deb2-39c3-42e1-828d-7384bb82e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e3e45d-8170-4d10-bf91-8da08951a8bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1760e5-14e0-4175-bffb-5f1e1b4c6bd7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d198e859-e031-4568-826b-e69c2570a19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4776379f-ef14-48e3-ab02-bd3303674524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934fe875-82c2-4572-99e4-f6070db8a393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5db9226-ddbf-48d6-9be9-9bc8ebe30688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2173bc21-ae94-448a-aa3b-ac04734dbe58",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0264b5-af41-4ac6-a623-73fcf4c48ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c508e35c-8892-4016-9e42-8d753c07b127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895d370c-5b55-46a7-9934-783dc08ef474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef407398-2c6c-45dc-9612-3a4c6fe031dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505aae8a-f810-48fd-9d8a-224f568431f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fd77a6-3cbb-4ba8-99a5-f83c9f9536dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76289ec8-6ef5-450d-aa88-603c06e80dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0678dbd0-cb1d-46ff-aa3e-4fbc27636b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c31399ad-32ab-4202-a72b-a6b08f1ec154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5304c515-790b-4e96-ac84-1f57c9adb36d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eec6453-2840-49f3-a4bc-866d792779b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4e98d0-ae70-4012-b31a-cc1cf05ff0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e457d943-6eaf-4a49-8165-ac0aa6abb658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad57a51-0ffd-45f5-9640-169854b64d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c25b597-f16c-4419-8695-50e84c63cdb8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059c3eae-b58c-4595-af09-9d19fa2decbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea345ba0-9b65-49a5-b5e7-32566b593faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a96c19-0d49-4371-98e2-dd6ab28742e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd93e87-f24a-42d7-80ec-54ba97e5dec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5ab74b-9253-4478-b4cc-95ab0f7e3dfa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c7d44d-5bf7-4017-9b9e-51fa1f882aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff10b6ff-163d-45ab-881a-86edeec7102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f0dc50-f1a5-4545-8616-323d6957bb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ddf4d7-08f5-4f0e-b774-b0ef77d5f5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b82b819-6943-4b52-a622-cee3df7d61f4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072abb46-cb3f-43c9-aa73-8f966666436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d873a2-c657-46ff-a63c-50e32ccfb43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c8afce-70ea-4a03-a024-cdb83928c81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccc370b-eb90-4f95-94cf-ddb78e2f1857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89a3997-eb0b-4433-8291-1032d6fb7b43",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46fefaf-8709-4313-88fc-cceee520e95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9090ffa1-00a4-43db-8781-f2d0870c9492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25af7bcf-f4a8-493e-838e-6489825c8c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26dcb387-c288-49be-b261-26bb652b1b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b656af9a-ea22-47cc-a1d8-8c72b21f1d41",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b256ee1c-c82c-480d-9263-c1aa1cbe83f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184bdbe0-322a-4a18-9471-a962fd8adb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8599e81b-7f3b-40e5-9b84-abd854e7c382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54f28fc-0f15-426b-ad02-f9ac167ce473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd39c567-ae1c-4707-b63b-949409bd5dce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a45ef7c-55b7-4250-a247-1c566e82af37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467623cb-6c75-4472-b7d2-f2b45c390159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813550f5-b7a4-4a8a-b4fe-39c040c1e386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0775454-7318-472e-a428-a199741d4c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed894524-5d21-44c0-8879-a734f90dc2a7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fd3972-5346-47f6-80a0-6d46555e1938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed440540-1219-4d51-927c-91dbee66d131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9272c8-680b-48ec-b2b2-1c6897455603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ac029d-dffc-4cff-9602-a6a01cff3339"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6656c02-3a05-41a1-ac31-62f99392f138",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b604b112-7034-4a8a-8cfa-80844851387d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac09aea3-a3ef-4d84-af32-a4d988a55d19",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e47f9bae-b405-427d-b457-691b4656b017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bb27da-7bc0-4f62-b60c-567cedb39905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8a120f6-b492-457a-94b9-5d6dcdc6a920"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdf4be3a-de56-463d-b281-30881e5666c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "776f0307-6bc4-4267-ad4a-b88f91af0db6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97c87821-cf8d-4d93-af87-bad6034ad7e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ecfe2d0-1af4-4e0f-a091-18f564a831a1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "628b74d5-9f61-4d97-b71a-181c5c766a47",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eff513d1-5edf-4664-a74d-c781ceeaba84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37cf6da-5216-4bc2-858a-cc3e26e415fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35206293-a0bb-4462-8659-855c730034e6"
            }
          }
        ]
      },
      {
        "id": "571c70a8-1294-4129-a27b-864a78f244e8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1fb11557-2dc0-4c0c-9a23-c2048264b1c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cae9c12-cbc3-4131-84c2-64204ac82f96",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2a26f2cb-7c57-4a46-ad24-723c3980ff17",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0505b1b2-fcad-41d5-81e7-34c7d669116c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05307bce-f6d2-45d7-81f6-0d555c1f0ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbf5bcd-636a-4b85-b932-db842cbab445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d23a528f-6da2-442c-b913-ff04b0a51959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ac5348-e1ba-4903-8a28-5203b09e07cb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9306122d-bc40-4a85-ae83-9ae8b953fbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dfbad6-cddd-49be-9092-9d27b00bdf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495122ef-2045-45c4-9775-4000ae6a244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "553b786a-6e82-4f14-ba19-9b169b5f4709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16392d6d-251f-4290-9388-4e7b24e094a6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e694d1-64ef-47dc-972b-cafe67d4a449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849dbba8-1e71-4659-8ea8-d8dad664c648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1277c7a9-2243-44bf-bd28-60873cc9cdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c75ef774-19d3-4b9d-927f-977f0c52ec51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507f473f-a95b-4c01-b826-b3f4570013b4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899a818b-1c29-419c-840b-7d3f016a38e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fac302b-85c8-47e9-abd0-527bcf08610a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebe1f27-4c27-41cf-828f-40ed16759631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb34194-b8ca-4f04-83c5-a17d769d409d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b885c4-c1dd-4d07-8018-e0151ff1b64a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7a07e5-bd5a-4382-88bb-bd965e06632d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3f8571-f3a5-4e21-bbd3-7dc3ad953710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da518fcd-0ecf-4365-842a-f32de9610d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc622ba3-3651-489b-8044-acb208496844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3b2505-33e0-4737-845e-ea01d65ee845",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b43d715-cddd-4317-8376-6be5eeefd08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25674042-316b-458b-bd5c-919d09edd5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72460501-45e7-48b0-b681-dcaf4f693953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4aaea475-8dee-420a-8e06-72431e620393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d5ad3a-ad9a-4aaa-8ec9-12586dd998a5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057bf798-2c9d-49e5-ac81-3c6b26d42e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5498ec-ae9e-41ad-8edd-fb8546212b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e0f526-27d5-48f4-bcc4-e551554328c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f20daa3-7e95-4a67-856c-8f0ca788286c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e606a025-ed25-4990-891c-dc522e0ed077",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69058801-8631-4958-8bac-d2c2884decc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b721fb-eb08-4464-8085-aef7e532818a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed32ade6-3706-43fc-ab66-b96551041ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce51d84-d602-4f0c-93c7-9d39b9d331f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58038b2d-959f-46bf-a1ae-c56e9e0b1bd7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86bbda0-d8bc-414c-af8b-c2e70f376b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4c6c2c-e809-421e-a1ab-354a5fca1e13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b8d24c-0a63-4023-8de2-c336c470a208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c2f785-68a3-474e-a5bf-f12e45d74469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32585dd-87e2-44e8-b621-7f45c0879287",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6a1d52-29be-4a1d-a709-0890ce5fe8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d307554a-afa3-4348-aa0f-c2b09d74799a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c3df11-a2e2-437a-a498-62f1400ccc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34e6ae17-e179-4492-b698-109bb8e71b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae39002-e957-4a20-9da9-97055b1be337",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0c1d3c-2bb5-46b1-91de-31cc1d98c55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d68527-b7f0-4330-b768-7d7a002140ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65cc306-ef97-4275-a137-4685d1d7fc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d4acfe-872f-42be-b222-f8cd4598503c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182daa4b-7f57-45b2-981c-ec0e2accf850",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68962fac-f04d-4762-9230-8308f9c86e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe6680f-cba0-4dc8-9e3a-e4fbe75cbfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6067528-4c3b-4da2-9360-da4249c6fbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6cb5de-4b67-4a5b-8f42-9b28c6f794ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1578e127-08a4-4222-b531-36b1a3aab96e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859a301c-c243-49ea-bba2-bfac5bf2c083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96cb29c7-8306-456d-80b7-9cb7a57386bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfb4ce2-4ac4-42b5-9a7e-2ca7cfe4c74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e79782e-dbc2-4144-b666-157c5346c72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eb4c49-01b3-423a-b033-6f807faf7d7f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea706cb5-7542-4975-a75d-b9efbfd5a26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b2e008-8455-4455-a23c-f43418298c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95b7bf6-3fff-48cb-a870-e82c682d81db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76ffce4-8ef7-43ab-b13c-1fb33f70f8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9286700e-1fa8-4602-951b-86e648b50199",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd92fda-328e-426c-8da6-299830c9ec30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3555ab3a-0507-413f-89b7-21463c278df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10299dd-f10a-4aa8-afe4-6045b2bb269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bd0c64-3c8a-4533-aa50-78d6c2a51e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67406ce9-b145-46b0-b5b7-b984e40260c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0c2746-4c37-4bd3-b0b0-fd8337436486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafb13c5-5b04-4457-81fc-074c95b5bf96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5692a13-c746-4530-b736-2a7f56be6020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a01c90cd-bd2b-4468-94f9-56df61c429da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbed64e3-8873-446f-bd3a-b932eb6fd9f7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885b3cdf-d9a6-4530-abb1-17bd8d7c1d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227cbfe2-f5f0-4d6a-9f2c-9c784dcf79f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c1f62-df27-43c9-b0c7-8a27236bfde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e7e6b5c-0e2b-4716-8a20-bfb000256822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d6774e-8a82-4af4-be7d-9308b23f6f7e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc22e50-7a72-44d1-8426-e397e4b34922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06cdd2a7-e210-4817-99dd-990ebd471009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fee0292-1025-42c2-94f3-f911579672f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3840d86b-ddf7-4448-93f4-f653acfb9e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414c91ef-dfb4-4c3c-ae67-88a0ebaf7783",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aeefea4-5437-41eb-9ab7-fc9d7185c235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159c6251-c0a7-439b-819b-37bb70155db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1b0465-7b61-461c-8ebc-22f539f8e46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b34563-55f5-40bc-afaa-fa8c4988ede3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a1fdc0-a943-4440-8583-3ea582fd4c20",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac41ea85-a850-4ed4-967f-0323ff022db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f44c48-9a62-499e-b0b5-b88fe62150d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e332279-cb35-43b8-bb56-74229a1b34b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d912fabc-2b7d-449c-bd7f-28c80f9329fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bec134-f04e-4994-91b8-c63e1aca33ce",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a837c6d-a64e-404d-855a-a2b53eceb540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f29d215-14c3-40b4-b83f-6bdee7a69847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4befc9-feab-48ab-b2e5-509f3a2e5ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdeede5a-00f5-45ca-a8b3-c3495fa51c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c1b662-6796-44c7-a5c9-a22dcd8c362a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939ce136-c8d2-4924-a053-263a02ff3aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2da3358-d5bc-46c6-9dee-2e05b109f59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90e8047-ce56-4a01-9d42-449c48eb4a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d9c272-8c26-4837-b6f2-1eda2d58a524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831355ad-72c4-4738-80e4-1a72f0c42876",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964ee1cb-7d09-4ae6-8ab8-9dbe2083ec3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297a3572-5712-4654-8c3f-8bdfc7bd9598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936e062c-e79e-4d8f-b816-d32b7d535f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a684737f-7e62-44bf-afa9-09c664a165d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2602319d-090d-48c1-ab75-08bc6438e274",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5389939-ca87-457f-abe1-34d46475ac4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7de6d6c-ab4a-486b-80a3-f9baccbd1ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756008f2-8249-4a0e-829c-ec6c70ca46ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5c9386-dcd4-4cb8-a012-3c5b315bec15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e299b3e4-b21c-426e-8242-76db7ced449b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8097f73-808b-40a4-a762-3fea7cc45a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d32f1a-ef22-4185-941d-0138f5889567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ccebd9-fcdd-4094-acc5-de0c3d08efaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1a3525-e071-474b-b346-072f29a09ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5518517-6659-430e-b03a-3d7891538963",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f306f42-7c88-4eab-a01e-f03fceabb125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285ac8ac-f7af-43dd-9af4-9db2dbc98427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb176cc7-4b4a-434c-9fa6-cfdbdb3ab43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dca86b2-e8b9-498b-95df-9d5d881061ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106dff74-e0f1-43ae-8783-2c969e24eca2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7101fe50-18cb-46ea-b763-381958ca5ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515d8584-8062-40af-96b0-33a3643a35f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dd9a48-0670-4c48-981d-96812df5a4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "742c9955-e5b2-4779-b92a-c795382aaa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2825bf-c957-4f24-90d6-f54ab019aa90",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dff976-802f-4fda-a923-49225f68d7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221b6f8f-65cc-46fb-988a-31982b72776a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47714382-f221-4100-b248-92e8cc621d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39f6df4-8f84-41cf-8a76-3f2b573ea47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45119324-41ed-4c88-9303-f259e903b425",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377c6716-e352-48f9-8e89-84e4398c7ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0734ce-bcb8-4d07-895f-c1f17aebaf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbefffd5-1b8e-4a29-8ab8-e131766a16df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "007f3ee5-2ab9-4369-a7f8-39b799f0e6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17af68b1-f589-488a-8421-a6ab668d9cf1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f360352-d544-432f-90fe-435d50c70c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ef164f-9e60-47da-883d-570d8ff81ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb03fb3-96fb-4c8e-9b1d-1e4e5b43d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7c4e18-78d3-4cde-941b-1e08818e6626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0932a05a-6d84-431f-9b75-e885a70df98f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f373404a-c3d4-41d0-a8b2-7e531bce71c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08403610-d9ed-4ab1-b1b9-606b531150f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4569e568-7d57-42f5-9294-e012f9e7b6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5728d0a-d4e5-4db7-bbe4-19a05b72bdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85228765-5599-437d-af6c-e1388865e545",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec4cd1c-93da-4501-835f-ec33d2c44320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636044d8-1896-4354-a347-bb752c90ce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2994dd9d-34c8-4990-996a-eae6dec68d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e873bf-3d52-4a47-bcca-440d9dce24f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43390e6d-91c0-46a8-9c0e-d58866ca2c4b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974d3553-dff0-4e72-a0dd-dcfe98e690d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b477fe-7f38-4711-82c1-dbd6339f774f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9453ad8b-1d5d-47de-903e-6926ad462600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2602b2-e6c0-4a92-ac79-bca15e4ea1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473f3cc2-22df-43b2-acb5-02548d0659bb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3046029-1f1a-41b8-a569-e72563c435e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6f86ad-2278-4081-b223-e435ea9665e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c3787a-feff-453f-89a4-9ab867bbfa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fad9fc6-5838-4b84-9add-2f9d7dfd6ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376e3b12-5e55-4a81-8790-2a0f44d0813b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc5902f-6726-48f9-bd09-831f612cfc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6c526d7-3f95-461b-8cc8-7b5653e75c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1491075-4d10-4691-8a11-248ccf3cb25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81598a3-bb4b-4269-903f-cbbd87e3b4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd265da-4716-45d9-a934-c1a6c7c4b093",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7790be5d-6fc4-483d-8667-06b78f208693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bb0a83-0f1a-4f8c-b93d-f92339ca009e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc448fa-6633-4132-88ee-13770fcdcfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4781cdba-061f-44a9-88b4-b325819f3481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babef607-d97f-40f7-a23e-239215e303e8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708875fe-3305-4854-bb94-2db1ec798b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c40320-f5ca-4aca-a547-7cd8047bfbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d355e3b3-ac0a-442e-af8f-f35fd91c2ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca8e40b-1380-415c-8fac-0a002e93b819"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "512ea5e1-a5e2-4e68-9f10-55afd760fc1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65439062-f75b-495b-bfe3-ba9aff2ff1d0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6adf99a5-7c02-4dd5-834b-e116884bba15",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc9ddbd-bcab-4cd9-b6ce-9ed03f6398eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765cab5f-52cc-40d2-bb37-80dd62ce0db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a711bf5-fe0d-4702-b4db-8029829b0b27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df4e146f-2191-4b88-a506-d46073de8d23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48f944cc-b8ca-4f5e-a754-49d86eb69035"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d94c83ba-842e-4b70-b447-9f411420de7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f616db68-996b-481c-bd7a-f444179b2b8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4d966cf-4b05-49df-974c-03b7719a6994",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1eb9acf5-e814-4e88-a917-785a1cb95dd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6fa28bc2-5d16-4300-aa1e-2296fbcb6a9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "39ee6868-e583-4b50-8405-2a4f0935b8ff"
            }
          }
        ]
      },
      {
        "id": "8d10ed4c-09c0-4512-b136-0898bf84521c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b91580db-62a8-4289-b632-2a96f3498e69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "312459b5-d2e4-4a56-a1c4-14cbbe11ff57",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3acec2e9-117c-473d-83a6-a4b0fea0aa75",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92565b7d-5aa5-4452-82ab-cfcbb36e58c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20cde22-738c-4aaa-b3a9-72693073b4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9fe7e4-70cc-4346-be97-fa9ad6abc05f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dda5b8-fb1d-44c8-9261-6a86a074963f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b3b460-908e-4a4c-9e5a-0f2f502cdc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc47ce5d-f2ff-46a1-b6b6-a11598b2d6fc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e5644c-054e-4e6c-b4b4-2de5a2ff8bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04eb037e-1dd7-4d37-9fcf-be9cecd467fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512aee19-ec35-47ad-a4a6-f243f442b392",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be098fe-e798-4f29-be0b-cbe52cf39bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6f4e38-2f8a-4954-9db6-9ed1d32390b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1602f6-a53f-4e72-a9a0-2fbdd0584b7b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fc030b-e288-44d9-bf97-f9e18b963a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d328e78b-6ecf-482a-bf25-ff3e1d24effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee0f150-d508-4cd9-9086-2b46b1ddacda",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adbd095-cefb-46b6-875f-1253b48b9ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbd8a27-fa16-4487-ae03-661986d6341a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59077b5-a963-4d72-abfb-558b17460bd9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1977d891-e7ae-4d16-b719-d938df255a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5214ae-40e5-4c25-85b9-f8b58aceb87a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa521d74-e736-4ff0-93f4-291d4c7f7e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa26c95-45e3-4a98-80f1-03b31e9fc4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d89a129-a0a2-4858-b752-7191cbf7c392",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e45e1d-25bb-4bc2-a7f1-d67ff4b540ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ae06f1-971e-40d0-835e-0a3aff5601c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933adf21-6b99-4d0c-b689-5fe1bbb219e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f4c7535-b173-406e-8515-864cdd8a9dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2853212-8576-45d1-b170-07a65c95b148",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ec67df-f26f-46b1-b8de-5b0fdbfa8423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ebcc2bf-2054-488b-b00f-6914735e891f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5a91c6-7c18-46c1-940a-e23261edd857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c027571-5ed3-417c-8d21-78cbfa501567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94622d52-fdd5-4c9f-9f5a-c17eed5428ca",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a5147-887f-41dd-becc-7e5fdab6294d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be2d0a5-398f-402f-869f-23199d2a574b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25face-5f2f-440c-83c6-1eafea89aec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27416134-e049-459a-a729-36d010c6bcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d533034e-d3c1-4ffd-8fba-36b4ecb4ef6b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00877ac-d7a4-4ca4-8ed9-d80e5a56ca7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1845c88-82ae-47de-b775-bcf5b6758494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548be079-2178-445e-86ce-e7243bc7644e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e1a57f-a179-40cb-a073-d5d19e94c2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746ce39a-47d1-4bee-9b79-0408e931af8e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470328c8-2efd-4df2-8cbf-35d2c6c47bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e84132-3c4a-427a-ad20-f335c024f9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5920f5-9af4-4148-8e97-b7992ded4473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7e0815-164d-42e2-a63a-1b42f1e13adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859beace-1776-45e9-b89a-d7c6cdbf65aa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a15d73c-6b9d-444a-9f22-5345ec0bd416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f60089f-4e1e-408d-aa6f-7ebb52ef1806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c691adbd-f90b-4781-a86b-cf66e866d79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51413c93-2e82-4ae1-880f-1356c47cecfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f20a4b1-4035-41e1-9e71-0c7040ac7159",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08580dda-5543-485a-b348-8605d6c78cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048dfbaa-1217-4807-9a59-256e301a79fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08048d9c-cc5d-4d8d-a53b-81c46608a060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8ab324-02c6-4cac-8422-861fcf3cca67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653abd7c-eb2b-4a86-ae8a-0565ee37b486",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8507838-acc1-4aae-b320-1762a1b24055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "316d3ad1-3ab5-4e31-9781-cc88a8651730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c01abe-3f1b-40f7-a853-586987d41c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db92ba69-bfd1-494b-ac8f-7a2d2bdd34ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b20adf-5938-4aeb-aaa8-89ba54f8308a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5c81c0-028d-44ec-8d98-50aa240c3532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b185d1-ce07-489b-868d-87ef58309ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0867baa1-96b2-4753-bfb0-652d7ffa8604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3ae212-f670-4d33-b66a-be8896cf640d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b02c43-6f66-41a3-b634-b4448e4581db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c5ce9f-246c-4f60-b6ae-99e39be5f952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd55e92d-fc7e-4efb-8675-160900ea7c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589d65f4-2bad-4cfa-a8d8-fae559622ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ee5991-4e70-49e5-addd-0df00e82e2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0fe7c8-633b-4848-aad7-0ca4571887ba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db2e21e-3242-42f2-bf4d-3ee8df047371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1785b730-156b-4c66-9ac5-653ee2950900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0520775c-dae6-4d49-911d-1fb273a81285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f01575b-3eb5-4884-9572-cd78be43c475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5033bf6a-b5eb-4d77-b029-da189c2d8abe",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6bb82-a499-4172-964f-fc87f81e70ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf87c7b-25bd-4c31-9d34-119c1bb58ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8e8815-b54b-4c15-8d07-c888e5538b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca40d66-0839-4e02-a01d-8558943c6b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9a773d-3a2b-4ceb-8add-cea1dcd90d8d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3486007-ac25-4f0a-8bf8-48e75dc1f420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846b15ed-35b9-4d6a-98ad-3b0fe892f39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3d0872-d2df-42ac-bb66-75589c50f4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3a5e401-6be5-4ae9-acd3-fe3165d4adf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4165f118-5f4d-41e7-a7fa-bfc4743bd166",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31100809-d4af-48f2-b97c-dc63a237e18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2ca455-102b-4870-8071-edb0c3dc3853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2928d111-ee32-4123-9d45-d644f0001163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5197cf10-0277-4c25-b6aa-d721f825342c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59677a4e-bdcf-4be0-ac90-0da11dba6302",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968d00d2-a14f-4d3c-96c0-f95f577dd903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137ff136-7b6e-4cce-99b6-a93d1d65eefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca244ac-1843-4a00-8090-f3a08f3cfb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fa70f9-a802-43a9-8214-1df3c18dce25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6201749-c676-4019-a6c5-2848e3dfff64",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978015f8-4294-401f-9c62-1d19c8f4e4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f0ca53-ddfd-4c42-89ba-b6e7acd31dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba8a161-8044-4125-811e-eaaff4c11672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376a638d-b30f-45f6-bd99-07d1ae6721a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5ae8ae-6987-49f5-9575-241af5cbdc86",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c5fdcc-cce8-4f41-bd49-576a63c0b305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb11ebbf-a0d9-4677-96a7-5910c701ff4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007d34aa-4f72-4a8f-8a55-5d48f0b70796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996a6b05-1632-478f-8baf-c3531444dc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ed57cc-2605-4c3e-bc47-0c8517d96bda",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac36470-d957-4a78-8ec8-f4e34a5c34e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed35a9a-a199-4ae9-864d-d6cc6d8ea5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "981da241-c5a0-4bc5-933e-0875079e3dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46793847-b47d-41b4-bbc1-98ef3870059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d9484f-2b1b-4a95-acd9-8e822e93dbbb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0198d653-1ae2-4b39-abb2-4aac8d375d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780ab3cc-9560-4fb4-a18b-ced69ffdc931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f345a4-8a7a-4969-ba57-8409cf4aa8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41128bee-2bc5-4b6a-85a9-d5cb4e006752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d73b4a-5061-4d37-8ddb-355eb1913db0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037c184a-d4b7-4dd5-9b20-267af65f34e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83be2aa7-996d-4996-b3a8-9911141d1190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0baab9e-326f-4fb5-9139-fdfa903b459f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "714c76f1-1879-4455-be8a-99f0d42b3254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb7002f-e461-4cfd-8697-819cc286fa97",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f24158-ad2a-406a-b4f4-4aba2aa6e401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b73098-ce59-486d-a525-8f66b5d1b4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbf8c93-de07-4761-b9b5-f15b410f14ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fa21dc-5c1f-4e7f-a6d2-b3b368359795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57f447c-3f74-4edb-9644-81f72dd49a36",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80142719-3f8a-4329-89d7-107624cfe542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e91c20b3-fe10-4162-99e8-6f27b46966fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835d986f-c520-40a3-812e-7616279a6b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc00c43-f9a6-4a97-96e4-89513aa7f5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d8c04a-c199-44f2-9610-7e7ba666d282",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1121ae49-7078-4a87-8f1d-0cee7b1c1315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac117b4b-ddd5-4676-8922-255af6f889fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd3cd8-579a-49ae-8695-80d59fc2ffa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b47d53b-13be-4936-a091-070e46900c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3236d23-9093-43bf-aa5b-66dc87488643",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0b9a7-5a92-4c25-aa33-c2b2588a134c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8d17798-b742-4637-bfeb-d9e3c4d82e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d977b92c-25b5-4fe6-af8a-e88a013c5184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973eb3d1-e07c-41ca-a2be-6bdf59b3ca25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524c4804-1cdd-47be-b552-7b54ca64f9ce",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7d27e0-39e7-4837-9373-cc6891e3f7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea55a43-9212-450c-9bb7-16fd45c94327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1cfba4-9d89-4d97-a630-84ae4efa23e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498ae435-c635-4969-806b-7eceeb58c16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d058d6-8079-485a-a433-4acbb5ba9f66",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe7f697-f5c7-4a48-adc6-6d616480b603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ff3a20-5e26-4cca-89e3-d3972aa7ca35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71fe5cf-dd1c-4b2e-bbfa-6eb17b3bb701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39334b95-236b-4b2a-bdf4-9d11ab81474a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f100d6ad-9151-4e8a-84f1-86e1f8419593",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e52435f-e30f-495a-9173-0b8ecfdfa696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f00f67-4221-439d-9a61-c8506c087fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba744fc-5c1b-4cfc-9c22-1a85a3456e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27a417b-16b7-446d-a3c6-dc4b7ae86273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b366a8-5b67-4d32-b0ab-a60a77d98192",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b022df-2fb4-4421-8620-af7169a61b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caac315-d072-46f0-9e0c-f1cf14afdd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3596b4-743d-4583-8023-86af589d8856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbe9c6c-6535-4c55-8f60-6f396d3a38d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2551156c-e553-4490-8775-ece48629c286",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25220d4-48f7-4697-9776-5bf92c6e0b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519036a9-e53d-4d5c-9c17-f8e0743140e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f2104a-fb19-4c98-9a02-e3a079e3b230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d49129-0917-4850-84fd-1a871ea60d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71561cfb-1f68-4348-a031-c008d73cb0b2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799f9981-acb6-4137-8b86-c20828243f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9620f8c8-772f-4ed6-a043-b748ff7a966e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef26625c-f408-4f04-9f84-57d7a18e87d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bb539b-59e3-4a07-99d2-9d26383e1c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64ed48a-0873-486f-83c7-c255f1d1329e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed70bb8-178f-4139-bb8d-d54ed97d888f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4fcac4-c030-4bca-b61c-a6b56de1e17a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9cc2c4-0ce7-4676-8e68-92036bf584af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eacfb4d-9f69-4e92-9aa2-8581c0137967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439fd525-2857-4f14-9309-0f77233289c1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285ae0fe-28f0-4b60-a877-23dcf822ce5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0ffa35-c27b-46f1-986c-272eeb7f4508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e11526-c088-4794-8ea1-3b59137e185c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eba4b03-d954-4860-9105-71d3bbb6506c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cc933f-db10-4127-97d6-7bc3e64f6ea5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c02f66-86c2-4b6a-8b45-4cfadf0eaccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff021dc-99d6-4d43-b509-0470adb86396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00f80ce-6bd0-4764-ac21-51c35ccf650b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5524c94a-3f66-4e21-ac24-7b591dad6e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d29d55-09d2-436e-a70b-65ea30830d45",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2843311b-e86e-4002-8bb9-6961e9ae0eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b65886-f331-4939-ad85-907a0012d873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74a83b-ec85-4e63-84b6-616cda8a662b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b31437-61a2-426d-a834-2541029a7fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a97f20-2354-4e69-aa24-8fde0dd4036f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7314fc34-d78d-487b-9238-ab6ae4ef0345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5019fa08-f9f9-4e23-9360-a0a558ca6c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8234e7-dcac-46fb-a98e-0c93066947d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a822c178-387e-4324-808e-e8a2fa28bddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51ace6f-777a-448c-a606-cba5f579f75e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851a56e0-f3fa-4ae4-91cb-5b0c1ae37ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0de10dd-4f09-4249-8320-471f187a347d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a775e51-3666-41ac-a841-d2a8c03ea9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78991403-bc69-49ab-bc0a-dcca7696e808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86c8937-d999-4d0e-919b-48daac34cda1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1d4906-19fc-4756-8b6f-24c5b1953119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4344ea07-6bee-4a2f-b774-cea31f102ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29206cfb-bbff-4196-8677-9c628dc38494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a75979a-490c-4908-be23-01de83bac74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c873fd5-50a6-478d-9e58-a8a46fc0b8ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059b592f-9c7f-474e-83c8-e3f9ab0ec1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d61030-d69a-4522-8a79-9869b595323c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8007de1-f0e9-4ece-ae7a-9cd425194d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2da958-c55b-48e1-a264-2a71f510b3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3dd846-f1b9-489c-a88e-a4162f3bb83c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffb5a20-c9bf-4f9a-995f-f0a9f9c173bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea27c52-94a3-4757-a938-73b15036e5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b82e328-2669-4ed4-8537-86687d037f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82281a6a-ed46-422d-8dd5-ad168c66d73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7552ab9c-8f2e-4957-8108-1669deb55232",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2571f49c-5e16-42e3-959d-8acd04f0b907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9003b8-de14-4882-8c38-5c7c3987864f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c756df3-4640-4a02-9d32-ed7c91e04111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59dde44-f8bc-4bc4-a2c5-d334a77101e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac0ea56-eb64-4a07-b16b-e66f723a3bd5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328a64eb-f278-475e-b801-2532030fcd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7dedfa-da84-4ff4-8706-69be8ea643e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27241fb0-2fee-4ba1-94e7-40679af5a873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327cbfbe-a541-4f67-8cd0-62973512df0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264fbc7d-abe3-40aa-827e-7e69c61230b8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7c1ea0-0d58-4df1-9761-f32ddbcba54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8410d77d-e21b-497a-a18d-ac503e7ea57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999f1470-e4cd-4af2-89ad-b7e6a37105c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d5dad8-5f81-4ebe-9f0d-83db642e876c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc325979-1c4e-46f8-957a-a1dcb16d0a43",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97348986-a41a-4d3b-af86-726bf121f089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eab20e5-0907-4c65-adf4-808e382b95d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4145ec9d-a4ba-4b6b-8c96-caae18877f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a25d3b-49a8-46f2-82c4-cc9da7e06510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340bee0d-671b-4f06-a3ac-d6121c70165e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48107e70-263c-4995-9a60-482c11da378f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f0bfa5-f4e7-4d2b-8d38-675d99e406be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3c0644-82c2-4ff7-a028-0bbb56a06843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572cc0ea-d681-4529-9766-82d3679d09d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be384753-3510-4029-8920-5315d196fd43",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab377b0-a83b-4931-af6c-4f2e49ea3acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "495d03b1-775e-4086-9bb2-57bd07d669c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2a618e-e029-476c-99e2-418a1cf7691f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9eca64-f169-4fd4-805b-b16c4c7586b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff7d484-aeea-4b54-b1c1-b7411326fafa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e912dcf-65b1-4dc2-ade1-8480bfea5897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b81b65c2-5759-41ac-81db-00346de3e435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781f5516-fac4-4a8b-90d2-bfb4c3d24377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "399fcb17-1cc6-4e7f-8694-53a3f3e2d55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989b45d8-9111-4b0c-b0ea-0da878352f48",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653bfc03-6454-4540-abb6-c85e0e230145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12c7199-4881-4935-9f96-12e699564fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c536d65-f221-4f0d-8153-859e38560750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907411ec-6103-4b53-9e5b-3c94a74682e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaeee6af-0ceb-4fbb-b628-a8c4abb6a8e7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb06bce-5bb7-44a9-ba0a-4b3c57cf3f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815a7d4b-f47d-42a6-9216-deaab6f604ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28f421a-e7d5-45d7-b916-d9dde75cce71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380f0a38-beea-4456-802f-7866068a3dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08966101-6cfb-469d-8233-b4565b4d3251",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e61aa8-2f95-49f3-b0e6-162c57da825a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a4a754-3f16-4e1c-bbd4-97aa000bd379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa46e2-b192-4543-9d66-6d535bce8de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd5be2d-4d87-4292-b09d-50758585a24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53bb79b-860f-46fa-9c10-afbe28ee8961",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6699623-3eb9-4413-834d-daaf83eda96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07f52c6-5978-4dc7-9323-c72be9b1488c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e22ddee-ac42-4899-b49b-9386e86bf551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330735cf-551f-4c5e-839a-90973efb42fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d5b96f-8713-4830-9ea7-d31d0ad54396",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588b2ac3-a787-49e5-b259-b865f495021a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811a9e3b-2dfa-4585-baf4-6adc8c6bd525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47153f6-a23e-4833-89fb-3bb4cae18ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc67334e-1d08-431f-b7ed-51e5b7555554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393f6f2d-8b1e-4100-bf0d-e1c1730917ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a987931-29e5-479e-8e03-2d20618490d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690083b1-301a-4ef8-ace4-b575834b1eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea09326-d3a3-4af9-8e60-85f3664ac74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9572764e-9739-481d-8ae9-5e67069864a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f9e621-7cbd-4b04-9442-6df219bf19b4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9756544d-1291-4c71-879c-4b1460680303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafd60cf-7ba2-4737-8cfd-e9231525a487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bd22ef-6ba1-4e7f-973e-2262de844618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba449471-9d38-429b-90de-292d3866df11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e535f16-1d32-4f71-b94b-7e4a21a25216",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f40036c-7475-49f3-9912-4e633e8d2a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c010b6f-e1f5-4543-b202-8c058bdccff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543d5cfd-256a-4c71-8b35-f185e7abca7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2abefc-1c99-4ff7-a806-f06eb908c823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092fdc8e-cb00-43f4-a605-ea2b92334288",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f23967d2-f8ae-4508-a9aa-1a99856881be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21cc69c-8ca8-42bd-8e75-1a7829403dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9157f675-596d-40ac-850b-7de8f4177376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1948d849-b712-4342-a60d-144a3575257e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c543c05-ae5a-4bf3-9ed3-10eaf35a2a9b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1821dc-7511-4cb8-8cbd-28f7f5c047be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ee6a96-6795-4ee6-b88d-0a5d061818b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078df836-94a1-4389-ac31-f69cf5f91bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f805aa8-a6f8-4fbc-80c3-392c083682f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb611cf9-e02b-402c-a663-b83f4e3ab342",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a8651d-203e-4660-ae0f-8b9f750ff129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a341fd-c84e-4d88-b632-2b6d2d2de872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd798976-03e9-45ac-bc38-1f8fb6d1f79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30407c42-b3b2-400d-967b-8bcec93f767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f661a6-8abd-4f3f-baf4-832877b22f93",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cda778a-79a5-4bcc-ba1f-197427206b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e543b1-6a59-47ef-939b-d97a304ca579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b2fc0-7c89-4cd0-841c-319884d8fc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea823609-d84d-46a7-bcae-7b88704c1557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e2e994-147f-4d85-963e-ed025f530a6d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c01818f-fa0a-47f7-a8b1-2e45565f364d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04050bbd-b2e3-4450-98b1-1684fd652bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacaf2ba-baf6-4d8b-9149-e8fb2717cf13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8f1dc7-2b65-4e3c-a90b-1ea928a38318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82dc1a1-c4b0-476c-a3c0-92cc45d999fb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec690348-2db5-41b7-80a5-0bd7d3acf851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc36125-6e8d-40e5-91aa-585aa3344b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa876e0f-94cb-46d5-b03f-20bdba2ccdf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354bdf4c-7f7b-4a8b-a8a8-e558271ce4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921adc3d-c64d-4f48-b034-2748bb1bb76a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8527b31a-725e-44a3-9527-2966be11372c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f7f002-949c-4a19-8776-08e36aacbf4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700e9917-83d8-4ae8-bee8-7787dcd7d5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843a661d-e254-47a5-afd8-48d745d7b206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cedf935-7b1a-4285-bbf7-168c0404e527",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7279244c-0e6f-4e92-aff1-79b963adf7f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb16d24-5fdc-4b1f-a044-ef6e0c69729a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecdb415-aab1-4f4c-b617-3656e53e27f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b690c756-21cc-4add-8031-028251bbd9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6119260-fa25-441a-87e5-6fd4d308ae72",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a0862b-80f7-490e-83ec-992db8761b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b83335b0-7b1f-4824-ad35-a9a2c8935423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a2b3fe-2841-4532-b94c-19747e719de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ed47b0-0b66-4c2c-9d40-5df93a1d9f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bf775d-55cd-4636-8985-12440f137021",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3de8f03-5732-4c94-ac1b-6b2f5ad551aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6eb34fe-7bd8-43ee-987c-e797b0693141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de40c557-d937-47de-9852-87e4eabfce65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147b0468-245a-46b4-a23c-472d6842537a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d23d626-d3c3-4dde-ade3-cb7f64125831",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8afba05-b453-46cd-8d72-331232086950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2651100f-2268-44ee-a8b2-8f5ed21c832a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4200a4-9017-4a55-9953-4c9b797a45b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05933401-4ec1-46f0-b4d4-cd5538b972d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981f6083-3b81-4c16-a4fa-ebdf95c663d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457ce313-6705-4c89-8993-6a188a031a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4896d0ed-0581-4302-96d6-7dab49e986be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39111cbd-323f-469d-a22c-da7886cb6ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1796fb7-ff44-4f3d-b570-657568c61bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1406d47d-63e3-4802-ba59-5280651dc357",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5518b885-0e5d-410d-9a1a-1eff9a11d1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05dfbd8b-f59e-4c2d-b135-d6c09c3e4881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3472a0a8-53ec-487f-907f-4bfd1fc0adee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8f3ba7-ccc1-46e1-943f-361409c6c434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cceaddd-ebba-4704-8615-b0ae15769445",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e13dc2b-0ebc-483a-9332-5ff49fa2ebc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91186d3f-7364-4f74-bca9-b3c25a27d36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941925ac-0ca5-4076-8e8f-a44139b388c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab99163-2b10-40eb-b0ed-e244ecf9fc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e21119-fdac-46c8-bacb-78b4d1378436",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcacd64e-c850-48da-a841-27f0b7ce644c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a92e1b-fc61-42ff-b31d-11a4a42a3ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b3a47b-b12d-4975-a92a-ccc980226e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bee2dc3-33da-4f2e-bcc2-c8f6ce46e4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e984cbfc-ecec-41b6-8458-1df82f1f16f8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae20e9c-106b-45ee-a15f-7515c2de9c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a672f0c4-3866-45b1-9973-ed776fbffcea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3c17b1-af72-4093-85a5-d45a35162ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199820e4-71c7-45dc-ad65-0adfb8ddbf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fc7210-6d2a-4303-b7b0-69a999dca93c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f32f67e-92e2-41c1-a620-b1851460c6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc7115c4-338e-4167-9b4d-ac31c7ca3e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3b79a7-158f-4ff2-90cc-ea631ab2b6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e515a07a-351e-4d3c-8cae-0e56bf673a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a96bbc-1d81-4ce1-8005-50c8edff2e2e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82498adf-0205-4b4f-a6f3-df2835671044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "410359f5-5c3e-4c49-b1f3-fb1879b5d1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "132b8aa5-21da-41af-9423-0858396b94cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65dcb13-cd66-47b5-b44f-3b67c47fb7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4480e4-00be-4089-8a27-1de71aed8916",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2380ad8-cb21-4846-9c5b-d6b2e8d32955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "327d1bb8-0b4d-42d1-871e-d6751ace8534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dac302c-2dc3-4a41-93aa-2435c422d7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd96e6ca-7b53-4d54-81aa-f3e36388ae33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db3f50a-09be-4c1e-a7f7-d6c747ec295b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d886db8-32d8-4c8c-9a09-20df984b2956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd8e056-fe84-43be-be1b-929ed2bfc96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e8272f-cc57-42c7-86c8-3443369b5fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ce5a1e-67ec-47b1-982d-7ebb117167cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba871df-6046-4224-8250-aa90a111bb8b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520b30ac-fd81-4c09-91be-ab8bd0f00fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bafec78a-7df1-4298-8481-772c8122c852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3548852d-94c7-41ba-a433-09083f60c835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1021c63-37e1-4eb9-83b0-bdc525562d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42072c04-761c-4fc5-bda9-cd54180c0eac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b46be74-a063-47d7-b467-bff888d0ad04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8d9bc51-facf-4883-ab68-1a7697d31e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3aaa3e-438c-44ed-9211-dc14da678d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58c5da7-28fa-48b1-add2-24fc6ad30968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d9dea0-002e-4372-888c-a02d76ad24ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507c0b07-a3a6-4080-917c-a686d9c1f334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dccbc1ac-1b36-4d7f-afa6-8f523b643101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b09f9b3-a6c9-47e8-ab91-bbbdadc9a5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55642b3c-4d56-4d50-815f-5a42afd3a520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2731f4-e15b-49ab-a44d-72670a074c5d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af599d51-e7a7-40f4-8b66-d873a736d993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5218baad-5e3d-4db3-ba5a-339a175876e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43d9cfb-caf0-4997-a5fb-e768c4460853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67cba58-a3b9-4945-8f70-5cf741d9bf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b294ae-ae84-4bae-b7ce-66c1fbd5e993",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8522e893-0d51-4312-9479-82dea768514e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e79cc6-3d9e-4935-8a82-08453c8833fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0699172d-8fad-4b39-aaaf-2b419fc3ef56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df101a0-8eb5-444f-8cf0-f65ae9f307f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf91ee6-97ef-4858-bb10-21e08ad34b8a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529639d3-722a-40f0-8771-7010b430cafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb6b6229-ed6f-47e3-b874-a3e197c45e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82fcd48-555a-4de5-9f49-f387ee9a36c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66b7afd-cf6f-4e66-90fb-65b2d9ea5777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7248b355-a9f2-451a-99fe-9dffbcb09481",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13311b5d-fff4-4054-8075-c157c9e64b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e64f783d-f13b-42e0-958f-faed1e2c25a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2c02e6-525d-41b1-bb0c-e8b25cde3a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc3c180-8fca-4219-a0a0-811e9efc19a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf19431b-583b-4a03-9bbe-58b1c2e75bb2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a45161c-1767-47fd-8f0d-e8446e702c1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3fe1ee-fb70-4713-b54e-446f148e2631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3c1da5-ca63-41cb-9f45-6748ab09b6db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "638f8151-2297-4b5d-86bc-f6095617ae44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a8787c-5677-4d8c-a518-8405a27e8a60",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b716a145-6c78-45b0-a919-66d0e029fb6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc41c3a8-9fc5-4641-8608-3f535a1b7af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb021101-fc58-473a-9268-36cddffbeaae",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83552dd6-fc23-4720-ae8a-e93a41685135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3046140c-873c-48cf-bdfb-a350f73c7d52",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315c0e19-95f1-4a63-a47a-3ec8d51e2c2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b93466-0169-4e32-b9a2-bdc23a514aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "029a0aed-fab1-4249-9330-4d2f4786ad17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5106e345-066e-41f1-bc83-a878bf73dff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468d831a-a9e2-4b26-a8f2-9c8e72244816",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b268ee6d-858c-4e95-8281-af83a85aeda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60b7598-5832-402d-8e65-68bf677feb8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25feef9d-99c4-4901-8da0-6c5aab3e449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa4c162-ab14-4ec5-9b07-33e5d0601b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63d7249-9e42-4d9d-b743-b30f47ce35f4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ab8743-cc34-41d8-8fa6-6d5f13f18840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5116b89f-c190-4876-af31-afee6cfbb878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2cdbf1-e5da-40ce-b743-bad529ee2a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a965c2e8-23d9-43a4-a9ac-ce1cb9056045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cc9640-61ad-4086-9f26-314359106304",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d8f9a0-5cab-4fea-b774-05ab866907b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa05453-ba85-4f49-812a-9f2deb3dcbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a45fd3-225a-4a15-86e8-dabd0d22e80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422262da-61d9-49c4-986e-8e723435df6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70996363-9526-48cc-8fd3-acebf7803920",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f0d230-0e7a-4d60-988b-3f171238ae73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6370a6d9-bd88-41c0-b043-96fe7ece5728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee7c051-20cf-42a6-8251-212b86b5cc63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbbf693-d3a1-4f71-9345-a2681002699f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2c328e-01a6-484d-b118-9fe5f36b0205",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6673fd-a462-4846-b588-d302c56daf20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac003341-d876-4ee0-a954-4f1a91db8660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a420b9c-79bf-49f0-b9dc-28867ea1466d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92387e1f-7a4b-492c-99d7-0277f43ae566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6396291-0a23-44fb-9ad4-72d7c4dd45ae",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d20f3f-263c-4e26-b49c-a59a5f324123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cb16ec4-9d2e-4ff8-9e32-ee30e247ff9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8064c279-fea3-40d6-8ecd-9d964cf5071c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed7876e-7851-4b85-ac84-fb5561f048c4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6a48054-b08f-4737-b1d0-5d2e2ba837e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1381bd87-cf6e-4cda-b059-7229ca3e8d49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4f8b5f6-1553-41a0-934d-c976241b1364",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5efc5724-652a-499f-909f-6784038e27fb"
                    }
                  }
                ]
              },
              {
                "id": "69a2826b-d01e-4345-bf9a-3312c73c0e70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73cd888c-a2c3-441a-86a8-11ab6ed43b54",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013e4b7a-390b-44a4-b45c-8b904cda8195",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "46d4c9c0-79ea-4c89-802c-45d4a99b9aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74ddaf-52c6-491c-bf06-c575498c861e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c23c4478-29e2-4232-9dab-ec82f477761a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52a4dd9b-fc7b-4576-bcbc-1bf0101f06cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bdabad4-ca84-4f5c-9f9e-40a2c198f03b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e82293c-9d53-40f9-b89b-c5bddf4304c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1891abf2-d7a2-4f39-b241-8f2c5b2a8cda"
                    }
                  }
                ]
              },
              {
                "id": "c1e6b869-045f-4d61-a86b-c40022653a82",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "80859351-5327-42e0-bc18-5aa424454c0f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d629e6-0fbe-45a2-a928-5cc74f909b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ef75b9db-d0c4-4350-b3d3-25ee189968a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94489e1-b381-4006-bb10-cd73f4a2dff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d854d55d-36b5-4f4f-b964-97fcfef8d3bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2de99732-92e2-4510-a697-14d569efac72",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ca5704a-f60e-43ae-8910-ae3767b5232e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69d4d353-0687-412a-ba4f-3b25ad4cfc5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ab6a6a70-af38-4545-b144-734fc7312a60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91a08d63-bafb-4048-bdcf-ef252262b695",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86e2c35c-90b4-4b17-b062-0a6326d7270e"
                    }
                  }
                ]
              },
              {
                "id": "44a4a6e2-9ac5-4f5a-b552-f4d1228f2b98",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aec433dd-1ab7-4dcd-a8bf-3b8714d9e9e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a0ae8270-0ef1-4a7c-9f09-f4b038454080"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb0a9f51-21dd-4cfc-a83d-691cf7395ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba7a9ceb-04ab-445e-82c4-e1f957b7931d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a92e7fba-f991-4504-851e-8618a42851d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "36d8bd5e-1fde-4fd3-b474-d03a3f91a4a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b47a7651-e925-4f12-84ec-0eec2b3b3fcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c49d6093-28a1-4d02-88b1-e88c2eaf324a"
            }
          }
        ]
      },
      {
        "id": "d828eea9-c0e5-4d09-b2df-56e9f1cc57ea",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1d147eca-ad6f-4266-b6f7-f00af31e30b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "255813a9-43d7-4d03-ba72-4a57bb9db337",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fd95490-81a7-4d9b-bdcf-40bb9533cca8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a027704-b646-451f-9732-af0df81f0898",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8decc695-8585-46ab-b328-62fc14ef68e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b6fad0-fa33-42eb-9d61-e80579144e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78ebcddf-9bb5-49c7-a83f-079405e900b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54e0466f-54e2-48f3-b1fa-1483b5cd3af1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e2e9b07-aa74-432d-9928-6b239cd0c863"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "918fc64c-8baa-4edb-9d9c-f3e23e1ab0bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b36288c2-b2db-4783-b2b0-dfaa08ff4abe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bec3a2bc-0679-495f-bd00-9f8707593489",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fffa6600-4373-4acc-8dfa-650aa511924f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d65840e-9866-4fea-a806-a14df2387fd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e043f9e0-ca36-4ffe-84e2-3b60be1ac9e0"
            }
          }
        ]
      },
      {
        "id": "6673a247-9914-4736-b5cf-2b4adaf7655d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e24d036f-d7df-4998-85eb-1e0ae23f9ca1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b55249e-ccac-4353-bb87-5690b70d2315",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06b93690-9121-4563-8c9e-fda8004b46d1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e370618c-6328-4b23-8ac9-5aae2ec523d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3378fcc1-1e17-4821-99c1-d5935a7ab382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "046e5dc7-5197-4f6a-9823-fb6520ec6946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b71d4f9a-a8ea-4cac-8f86-4de507231b4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "901401e3-cc70-425c-99aa-8d31b75e6042",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e51436b6-fdb6-43fa-a063-9eb32b5a8643"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e49a8f09-afc7-4015-bf6b-692e248e2e57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36784a7f-ba4c-4eda-b7b9-3b41f4ea9256"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f25a2978-f9bd-4fea-bc02-608ca4618b6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87272d4c-af55-4b15-bf1e-c8fab4a38186"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb500a39-5b36-44db-b3d6-a354dc4b9d25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c759f34-6575-4f94-b008-6c3ebb53c915"
            }
          }
        ]
      },
      {
        "id": "113e8ee9-e480-4001-87b7-a8b0f96fb5a7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dbd41981-3797-4209-8190-1802441c7ad8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db42633b-3c2a-4e41-91d7-2f7dbec8f643",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9300afe8-5af8-4d03-980b-2b45e3a171f9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d5f624-9303-4920-a527-5172b86516f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "715c20f4-0cfe-4205-88c3-8a6a8d4efc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a924d6d-8d13-434e-a0b4-dfe5fc201df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03bada8b-f13a-47da-90f4-3ae2a1c9bc53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9f2d230-5c57-4627-88e0-3dcd372ede2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd55f79c-c716-4bd7-9c5c-d42fe3238399"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a90877d-1c63-486f-a577-0f73a627bb41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8a7d588-c01c-4e90-9a23-31cc60ec0fc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a660e1ed-6558-4ac0-97c7-244676809aaa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "132ca82a-34b4-44bf-baaf-f826db01f9cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed597c18-9a0d-49a0-93db-b14df4e55dc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc233c5a-7f0a-43d5-8194-8d6f44212ea5"
            }
          }
        ]
      },
      {
        "id": "73e360d3-50ae-40a7-8fc4-4a685056f623",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21ba93d0-65e9-4c9a-bde3-213b4004c40c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae17238c-5b85-484f-91a8-a70315af0ad5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "633cc007-84e5-404a-8929-5c838715552c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b63a0b8-9459-4a0d-b0ac-38dffadfc8e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8cf804d-7993-4c78-946f-10d7a87bea24",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 235.43157894736856,
      "responseMin": 7,
      "responseMax": 8721,
      "responseSd": 1083.9831906442378,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699403653111,
      "completed": 1699403733010
    },
    "executions": [
      {
        "id": "8a34f746-fde3-4166-8b74-4e091ee97387",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2831f58b-1ba0-4609-a9f8-326c4246e5e4",
          "httpRequestId": "024bdd12-0bec-4efa-bc2f-609101168a89"
        },
        "item": {
          "id": "8a34f746-fde3-4166-8b74-4e091ee97387",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "effe9fc6-cf55-4aed-8da7-36fb5abac002",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "3e8eaf1c-4e18-4616-90d6-5dfbaac8c0e2",
        "cursor": {
          "ref": "6b89564f-70e7-4199-a70d-70f69bb79bb9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d734d47-0f48-4ef8-8353-638208fa2080"
        },
        "item": {
          "id": "3e8eaf1c-4e18-4616-90d6-5dfbaac8c0e2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ecf48e51-e13f-4cdc-b3eb-66f34c0a5582",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a90d2ddd-0d3f-47ed-bca6-75249a9a183c",
        "cursor": {
          "ref": "9b26407a-5784-435b-829a-76b67455438e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "87516e21-fb24-46ab-a440-5d323b029644"
        },
        "item": {
          "id": "a90d2ddd-0d3f-47ed-bca6-75249a9a183c",
          "name": "did_json"
        },
        "response": {
          "id": "41fd620f-4781-4a31-8dd4-0036cadb753a",
          "status": "OK",
          "code": 200,
          "responseTime": 1638,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11169f41-3dfd-4a8f-a668-b8365c6f50f5",
        "cursor": {
          "ref": "728c2577-c20d-4f97-a54f-39f943bdd98a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "889f6f77-adce-45b6-b655-9c0d14097061"
        },
        "item": {
          "id": "11169f41-3dfd-4a8f-a668-b8365c6f50f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "9864b281-398a-4f9d-b0bc-bc8e3dcd279d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11169f41-3dfd-4a8f-a668-b8365c6f50f5",
        "cursor": {
          "ref": "728c2577-c20d-4f97-a54f-39f943bdd98a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "889f6f77-adce-45b6-b655-9c0d14097061"
        },
        "item": {
          "id": "11169f41-3dfd-4a8f-a668-b8365c6f50f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "9864b281-398a-4f9d-b0bc-bc8e3dcd279d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa09085-d186-48ca-b6ee-e37ca5072b43",
        "cursor": {
          "ref": "9dcb0aee-93fc-40ac-93dd-09bce7cfb153",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "eca99bad-6ad6-48d2-bc33-ce1dd3d27792"
        },
        "item": {
          "id": "7fa09085-d186-48ca-b6ee-e37ca5072b43",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8da4d517-7034-49c6-991e-b5b930c32858",
          "status": "Not Found",
          "code": 404,
          "responseTime": 153,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e83f14-46d7-4ab6-b9d5-dfff5bb504a3",
        "cursor": {
          "ref": "da4c92b5-590d-481c-afc0-0a0ba3a863f9",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "17010bde-07ec-4147-8552-6477b125d2c7"
        },
        "item": {
          "id": "11e83f14-46d7-4ab6-b9d5-dfff5bb504a3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d42f0731-9904-435a-b99a-266c48cfae82",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75410f3-8d5d-4760-af07-ff55f3906e1d",
        "cursor": {
          "ref": "a93dcbf4-106f-4365-bbf4-25e9f057d7bc",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "18c6424e-bdc4-4e3e-854d-52ebf00c9eea"
        },
        "item": {
          "id": "c75410f3-8d5d-4760-af07-ff55f3906e1d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f0405def-9310-402c-8035-a0a3815f4dd8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb3c02d-5d70-4220-889f-82695863bfff",
        "cursor": {
          "ref": "ef31f4ab-5db3-40bb-84b2-8eca05df0a55",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a734ea0b-9ff0-4465-b249-87f5e17934c5"
        },
        "item": {
          "id": "8fb3c02d-5d70-4220-889f-82695863bfff",
          "name": "identifiers"
        },
        "response": {
          "id": "eceddc7f-5542-4ed3-8368-f4872de995e4",
          "status": "OK",
          "code": 200,
          "responseTime": 1972,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901e115d-c7f8-466b-b1e6-7b6b17dfe684",
        "cursor": {
          "ref": "dacac8f1-ff75-4bd9-8edd-0205050583ed",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9df892d3-2ccb-47a3-bd00-125c9af33efb"
        },
        "item": {
          "id": "901e115d-c7f8-466b-b1e6-7b6b17dfe684",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "41639bbf-1112-499f-8309-c2dd8cb7a9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c40c492-da28-45d0-8409-ed6ca5c55f76",
        "cursor": {
          "ref": "591a79e5-5424-45fa-8ced-c1a50ccc4098",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "baa7e52c-64c8-4d51-90e8-1d41239e6b0a"
        },
        "item": {
          "id": "6c40c492-da28-45d0-8409-ed6ca5c55f76",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "38345a28-68d4-441c-83b0-2dd6feb31fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a03c58-be8c-4174-8131-00f95428d835",
        "cursor": {
          "ref": "13c99a55-1aac-4f9d-8756-59e748e0f40c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "18233448-2921-4282-a908-f2c5bd6c6e27"
        },
        "item": {
          "id": "e9a03c58-be8c-4174-8131-00f95428d835",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "475ed5ec-1708-4e69-8398-37275a470b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca6c104-57e3-403f-94a9-93ecb1ef9888",
        "cursor": {
          "ref": "8fa7d72e-acf5-4936-93b8-f1437d38bba6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9c3b9c7d-b8e5-417e-ad82-f7ae19c654c1"
        },
        "item": {
          "id": "cca6c104-57e3-403f-94a9-93ecb1ef9888",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "53dd2f86-6671-4d85-8fa3-d87d54781f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0eb244-7847-413a-9ee2-01193a8c8ba4",
        "cursor": {
          "ref": "2c8c7239-f67c-46c3-9108-79e90c5544a4",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2cefa2cb-d222-402c-b66a-9da53c135950"
        },
        "item": {
          "id": "ae0eb244-7847-413a-9ee2-01193a8c8ba4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "90daadc0-ee8f-4121-8a93-158ad5b098a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9792364f-125b-4325-a9e8-b0f1ca064262",
        "cursor": {
          "ref": "89cec460-d265-47d2-885b-bc58bac06352",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "78396e44-c8b9-4489-9a85-d47dfe1bbe49"
        },
        "item": {
          "id": "9792364f-125b-4325-a9e8-b0f1ca064262",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8b327a1f-5462-4713-b750-5c360e4032ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594a96fd-5d2c-4422-9284-5cd0e1e0e8e9",
        "cursor": {
          "ref": "1d67d0a9-f73c-45df-b53e-1c1b4854046f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7ebf9ccb-255c-4e0b-afa2-e6c32347c311"
        },
        "item": {
          "id": "594a96fd-5d2c-4422-9284-5cd0e1e0e8e9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "56857f98-cf96-47f3-b120-2df9dd44420f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28ddacd-ac0f-4a70-93dc-0c0ef767c508",
        "cursor": {
          "ref": "6af17793-aa18-42e1-a8b0-b18045a291a9",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a748c3fe-d91c-4b54-9473-1a428a4c7f2c"
        },
        "item": {
          "id": "b28ddacd-ac0f-4a70-93dc-0c0ef767c508",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f3d1857b-d91e-4a7d-b665-c743cc035f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23063a3e-ea28-4403-881d-e5023e0b030d",
        "cursor": {
          "ref": "46eb7cc1-9e4a-4374-9316-464b1eab9fac",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2a176814-302e-484f-8cba-e94c70268ef6"
        },
        "item": {
          "id": "23063a3e-ea28-4403-881d-e5023e0b030d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2dae5667-442a-4428-8eb9-c661212f64fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0346b98-0ae5-468b-8e67-6bdb11cc30f1",
        "cursor": {
          "ref": "314453f4-967b-4440-818d-2f2aab011626",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ae164cac-bc59-4540-a2d5-cbf06164542d"
        },
        "item": {
          "id": "f0346b98-0ae5-468b-8e67-6bdb11cc30f1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8d3c2a36-88c1-49ef-a93a-c2883e83b505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbe317f-9db9-4d6e-af4e-2484d96bb8ae",
        "cursor": {
          "ref": "c15fc6e4-ccbd-42f6-8614-cb1e25df2811",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "39ee3ff9-a215-471b-8d5e-46d7830aa021"
        },
        "item": {
          "id": "9dbe317f-9db9-4d6e-af4e-2484d96bb8ae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b62536f3-f880-43c8-9c58-69d4f160d75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1241318a-f27d-41dc-bcf4-43529e82954a",
        "cursor": {
          "ref": "a32873a3-d57b-4533-91a4-5398efba20c0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "246b294d-fb7e-40b0-91f4-edc2ec8637b7"
        },
        "item": {
          "id": "1241318a-f27d-41dc-bcf4-43529e82954a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4abdcac5-76e3-49b1-bcc7-d60199a06b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cff7353-0516-43ce-a71e-eb26b5f63cef",
        "cursor": {
          "ref": "c8ac29a6-c71b-4da1-9148-8afdcc823b31",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb6bfa96-e144-4c86-8f2f-88cf601b32f6"
        },
        "item": {
          "id": "7cff7353-0516-43ce-a71e-eb26b5f63cef",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ad8ed1ef-abb9-4feb-875f-5001c57fe513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523336d7-ac66-4d35-959b-e7556cb9d116",
        "cursor": {
          "ref": "e8684a17-6b89-4290-abbe-d719e4ff9be8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5f3001aa-5c7f-4eed-9aa9-b83f2b500948"
        },
        "item": {
          "id": "523336d7-ac66-4d35-959b-e7556cb9d116",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eabb6174-05e6-4e14-b027-980c4d513082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439db819-bc76-4096-b114-04c322e59128",
        "cursor": {
          "ref": "9b5c38ee-002a-4492-8cee-9ef392725243",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d977248d-9fdb-4303-9adc-15ac68ef4305"
        },
        "item": {
          "id": "439db819-bc76-4096-b114-04c322e59128",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7195abc7-893b-441f-8888-fed189d43302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901df68c-6cde-4257-a2d0-a071541f3867",
        "cursor": {
          "ref": "5cba84bc-c6f7-45fa-8fa6-ab89299882c3",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "24664554-6e55-46e0-9419-bfc3f835af67"
        },
        "item": {
          "id": "901df68c-6cde-4257-a2d0-a071541f3867",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c073c227-87aa-4020-823e-0cd428e3bbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442366c7-d0f2-42ad-8a87-632674794e74",
        "cursor": {
          "ref": "16377e01-162b-4141-a975-e1f12c26966f",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "19ed637f-73bb-44ba-a18e-04c0491ef94b"
        },
        "item": {
          "id": "442366c7-d0f2-42ad-8a87-632674794e74",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4d1e7437-fd67-47ed-93a4-db8fed30264b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f105d2e0-208b-400b-80ca-d3882e91b080",
        "cursor": {
          "ref": "a338dd98-a94f-49a5-b00e-40f4d7821041",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7f1f009d-a707-4f72-8435-20254fe930a9"
        },
        "item": {
          "id": "f105d2e0-208b-400b-80ca-d3882e91b080",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e726bcdf-ae7a-4c26-8463-49a05a11b9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff35a276-9759-44b2-882a-886c2dd0aa7b",
        "cursor": {
          "ref": "1f1075eb-fa6e-45fd-ba53-d6e86d04a287",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "182b7942-eec6-4ee3-895b-0ec6548412a0"
        },
        "item": {
          "id": "ff35a276-9759-44b2-882a-886c2dd0aa7b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aa221c0a-5f41-4c7f-9666-fe87a0f69702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96940e5c-1f26-4341-9395-11d2d8d19657",
        "cursor": {
          "ref": "42417ef9-0a4a-4dd1-b12c-28aaa9d666c1",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "37ae508c-5721-49f8-a135-7222677b6383"
        },
        "item": {
          "id": "96940e5c-1f26-4341-9395-11d2d8d19657",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "70335c98-91c2-4372-b759-bf6adaa15ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6162c131-2225-40a7-8004-0232bd8c08c9",
        "cursor": {
          "ref": "b56afe0f-9b78-4198-b230-5e6d043c6ce2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6ea48c75-cd3b-45c9-b297-c7073186543f"
        },
        "item": {
          "id": "6162c131-2225-40a7-8004-0232bd8c08c9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a62c7fdf-3334-43a2-9f65-af67f8474f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5230ce-b108-46bd-8c2d-1986fe80ae9a",
        "cursor": {
          "ref": "246e2863-19b9-4c3a-82b3-391485283a2c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e07032d9-711d-4858-a715-a72804320e2b"
        },
        "item": {
          "id": "4e5230ce-b108-46bd-8c2d-1986fe80ae9a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "71066ac9-bf0c-4b62-b18c-012e8e4584cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbe28d9-6a7a-44f2-8cc1-0c0fabe006a5",
        "cursor": {
          "ref": "ca6bfba2-414a-4a5e-8224-fb6343e9c775",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2fb97d85-057e-4407-8d90-4f6064e10c2b"
        },
        "item": {
          "id": "0fbe28d9-6a7a-44f2-8cc1-0c0fabe006a5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f0a65dde-9294-47d6-b9dc-7d0656187cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f55610-c21e-4d66-bf65-08961c876b1d",
        "cursor": {
          "ref": "e61a81cd-4a9c-45b1-a2d0-4295a77b0c3f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "aaf75e67-f3ae-4bce-bf01-6effb605b368"
        },
        "item": {
          "id": "91f55610-c21e-4d66-bf65-08961c876b1d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e42b9fda-3e76-46bc-a93c-b0a92dd14cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520b224c-31d9-4f75-88ff-e9677a233754",
        "cursor": {
          "ref": "726279a5-415a-42fb-8fc1-1815df4595d0",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "de57290d-3243-4b0d-9e36-0f4d0060eeb8"
        },
        "item": {
          "id": "520b224c-31d9-4f75-88ff-e9677a233754",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bac096b9-567a-422d-9578-a97497e0db40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ff7bde-0d41-4441-b875-afbdd7ab036e",
        "cursor": {
          "ref": "6113bc6b-9401-498b-9324-cfc32d6aaba7",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1e04f766-b2ce-464a-aa2c-74c91e674cd5"
        },
        "item": {
          "id": "13ff7bde-0d41-4441-b875-afbdd7ab036e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c7ed415b-c55e-41be-970c-d9e095152d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4011cf2d-fbd7-4daf-a915-18b5c0cea91e",
        "cursor": {
          "ref": "b6b1363d-57ea-49ed-8473-b264bf896a34",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6a761455-cd9d-48be-a640-a4e1a1d1eb05"
        },
        "item": {
          "id": "4011cf2d-fbd7-4daf-a915-18b5c0cea91e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fce6cf9a-6d61-4220-a965-9f22ee539cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ab4e9e-1e27-4137-8d85-d23ab1208e1a",
        "cursor": {
          "ref": "a2b2865a-5cf6-4df5-b57d-622341109a8a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca291900-11bf-4f3f-9a93-f3042c6bc628"
        },
        "item": {
          "id": "f3ab4e9e-1e27-4137-8d85-d23ab1208e1a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "be6e6a81-08a9-4d8e-97f1-c500dccb6d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c92d99-6fbd-497c-9255-dc5b30f9e987",
        "cursor": {
          "ref": "925fab54-3c0a-43e4-b66c-ce4ddc86f736",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dc5277e1-aeaa-4b08-b269-d90e97beef25"
        },
        "item": {
          "id": "07c92d99-6fbd-497c-9255-dc5b30f9e987",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6636ed24-c9da-4510-b8ee-1b0114e6114c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d166b1b-626c-4d04-93b1-0ee92458bb9f",
        "cursor": {
          "ref": "2469067a-f5d7-4d32-9c57-643479b44e06",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ae9ffa2b-75d9-44d7-8606-0d0f73075a9d"
        },
        "item": {
          "id": "8d166b1b-626c-4d04-93b1-0ee92458bb9f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1d34c82b-1c7b-455d-9a5e-d08b71150e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a30e42-aafd-406e-9130-f89e72f807dd",
        "cursor": {
          "ref": "797a518f-c653-4b34-8fbd-9929b1c8898a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "026b9099-5197-4934-97dc-599165b5e71d"
        },
        "item": {
          "id": "f9a30e42-aafd-406e-9130-f89e72f807dd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "adcf46b5-d852-4d01-87b6-d8c2692b0ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485b983e-dbed-4d5f-9eeb-f7d1350f9cec",
        "cursor": {
          "ref": "0f07a69d-568c-42f4-8aba-0249807f2a3f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7b156db3-87c0-461e-8122-7ed8c1d26f0f"
        },
        "item": {
          "id": "485b983e-dbed-4d5f-9eeb-f7d1350f9cec",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ac6f17ec-db2b-4e99-95fa-bbd46d27771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbf398f-d5b9-48a3-a84a-9d0d02144faf",
        "cursor": {
          "ref": "502e7c28-e5bc-4c31-8090-0bbab568333a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "177e0d92-5b5e-48ec-85f3-7bb37e6f0efe"
        },
        "item": {
          "id": "ecbf398f-d5b9-48a3-a84a-9d0d02144faf",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "abe10010-45ae-419d-8401-d72de8d30942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7311b4b9-ee50-47cf-9b95-b0e095a52924",
        "cursor": {
          "ref": "3862ce47-ca51-485c-af8b-06fbdb27b205",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "99472d1e-ede1-4819-b03f-cb83549d1717"
        },
        "item": {
          "id": "7311b4b9-ee50-47cf-9b95-b0e095a52924",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fc7d19e4-3971-4052-9f2b-5bc34cb08d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58657372-37d2-4007-b113-2f00a53d3995",
        "cursor": {
          "ref": "b382d33f-ae7e-4ff9-9608-590a7e0b8059",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0ca3369a-5556-4079-9a24-67c50bb78011"
        },
        "item": {
          "id": "58657372-37d2-4007-b113-2f00a53d3995",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a561f6b1-ed27-45d3-a3b3-8961b22a34d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6a2423-e354-42c5-89c7-8f956bf6ca86",
        "cursor": {
          "ref": "5a973894-b454-45f1-b94e-645a0426e4b8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "05fcd42f-3d1f-414c-9d5f-92c4cb95e0a5"
        },
        "item": {
          "id": "ae6a2423-e354-42c5-89c7-8f956bf6ca86",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a9714de0-ccbb-443a-8473-b9169be77ce3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1448,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f127bb7-32f2-435c-897e-c26dcb9b1deb",
        "cursor": {
          "ref": "c0c0bf13-ab88-4796-b206-4a84f2b7fee3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f56c7c52-df9f-4390-b963-bf050316b4af"
        },
        "item": {
          "id": "0f127bb7-32f2-435c-897e-c26dcb9b1deb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2dd10609-cc4d-4ae0-9a9e-f3fae7707a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb23394d-4de8-4b18-87dc-5d37284d1592",
        "cursor": {
          "ref": "bc9b4c11-361c-4f86-afc4-dc5601df66fc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5660a850-bbc5-4e2e-b6c5-7dd1b75e3c18"
        },
        "item": {
          "id": "fb23394d-4de8-4b18-87dc-5d37284d1592",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e1040334-ce0f-4055-b325-2718c9614eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a9725b-c012-4428-a8ac-83e19c33882e",
        "cursor": {
          "ref": "2e55a364-34d4-4cec-aef8-a6dbd21e5abd",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6d26817d-12cc-4d82-8979-202ec10db6ef"
        },
        "item": {
          "id": "01a9725b-c012-4428-a8ac-83e19c33882e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "265b4739-4f06-4ff5-8052-8b6742d17d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b979f981-77b3-4bb7-94c8-4d91deb5f792",
        "cursor": {
          "ref": "f06f42f7-4b8f-4916-8bb2-f07e88f07035",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9b85636d-19e8-4c91-aa88-a4920869d5aa"
        },
        "item": {
          "id": "b979f981-77b3-4bb7-94c8-4d91deb5f792",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "54df0671-dc1d-4ea1-8d1c-a8c02b72b875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b59a23-20b5-4762-81a1-c945c27fb274",
        "cursor": {
          "ref": "56528be6-e4bd-4960-a0c9-7dfdba2ed3b6",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4a018bf3-4665-456f-b2e2-2b65b42a0da1"
        },
        "item": {
          "id": "98b59a23-20b5-4762-81a1-c945c27fb274",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "816e0531-1823-4564-9449-3af420c1a1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e9fe0e-34f4-4e32-beec-3e46214ebb83",
        "cursor": {
          "ref": "a338b7f1-6c72-4d90-859f-fe48a6032cae",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "21bb17be-80f3-4288-a91c-68ff02676c75"
        },
        "item": {
          "id": "55e9fe0e-34f4-4e32-beec-3e46214ebb83",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2544fdf8-2345-4db5-b96d-e8eb04f2e7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc32a93-d0aa-4294-a558-79552279f5df",
        "cursor": {
          "ref": "9183945e-9d3b-48d4-825f-5a5026eb98d7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d0d7ed9a-7d35-443d-a41c-8d8577148a6d"
        },
        "item": {
          "id": "ebc32a93-d0aa-4294-a558-79552279f5df",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8bebdbf2-60de-49c3-866e-d52ac5ab4d39",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1515,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a9fd95-a1a7-41f0-97b0-31f250d75eca",
        "cursor": {
          "ref": "2c74646d-f104-4a2a-9eef-a0d36f1a03b0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3c9c807b-7c79-4c26-b116-7ba94e537747"
        },
        "item": {
          "id": "b4a9fd95-a1a7-41f0-97b0-31f250d75eca",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "61680e9b-1bf3-4381-8bda-ccf20767128d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedb8f6d-527d-4b43-9fb7-4f58883214c0",
        "cursor": {
          "ref": "6be0a3ef-88d3-4c21-a450-1bc7a1f99c53",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c1262b50-2afb-4b2f-8cdb-f94971b36ddb"
        },
        "item": {
          "id": "fedb8f6d-527d-4b43-9fb7-4f58883214c0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1d24b3a4-de53-4a24-b6aa-8ba338c40d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34288e13-dca5-47b5-aad4-ac790591cd73",
        "cursor": {
          "ref": "edd2c6c4-e2d9-4b38-9adf-d520b0d5d739",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5682022d-b6ca-4db7-80f9-e523a6fc511d"
        },
        "item": {
          "id": "34288e13-dca5-47b5-aad4-ac790591cd73",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b633fb74-5799-41b7-aad4-1a7ec822dcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c6f909-5e49-474f-bfa2-26fe549a0a19",
        "cursor": {
          "ref": "dd02942d-4848-4f0c-ae6d-c236362e675f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4b502955-fb37-4de3-8dfc-1957f2067634"
        },
        "item": {
          "id": "56c6f909-5e49-474f-bfa2-26fe549a0a19",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c6389818-8a77-42be-ba90-939eb6fe20fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ff3850-97d4-4328-830f-79ef40080b13",
        "cursor": {
          "ref": "256c7533-36e6-4002-81e5-c387a5aede33",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "dfbe8b53-1d56-4319-925a-c5df8a450a5c"
        },
        "item": {
          "id": "b2ff3850-97d4-4328-830f-79ef40080b13",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "213e80e8-0623-48a3-b586-644e49bcec25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c11823-75b5-4690-b682-75db13503432",
        "cursor": {
          "ref": "09c5221a-88f0-4ecf-be08-1e02f31bbfbb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a8f30cd2-2678-446b-af29-eee7c2e1119e"
        },
        "item": {
          "id": "64c11823-75b5-4690-b682-75db13503432",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "79204658-83b8-417d-92e9-54719959969d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1161ee81-6a90-4d0c-a378-06935520f126",
        "cursor": {
          "ref": "cd72b70c-e32c-4006-a63a-acbd7a806720",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ec9a52de-1394-4cee-93cc-e74cab5f832e"
        },
        "item": {
          "id": "1161ee81-6a90-4d0c-a378-06935520f126",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5d3edbf2-9649-4306-987f-46e1889d1969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e7404d-6249-40d4-9a23-add07c04acd6",
        "cursor": {
          "ref": "1825d2fa-51c9-4c08-b43d-6b49a677f921",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "77fc6863-a91c-427e-bcf8-a568c89be05c"
        },
        "item": {
          "id": "b4e7404d-6249-40d4-9a23-add07c04acd6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8f70f6dd-17f1-40da-8ee2-dfcb2847fcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ded9928-0e0f-40ad-8239-e8a24fd63dda",
        "cursor": {
          "ref": "154f9a31-07a7-445f-8e01-31a4987caf85",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3b54f27b-249e-47f1-81ac-9cbd1799ffa9"
        },
        "item": {
          "id": "3ded9928-0e0f-40ad-8239-e8a24fd63dda",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6fdaf0dd-a3bd-4ce3-b620-2d9be4dde019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8770d49-b0bd-4308-97a6-2e5343ce5054",
        "cursor": {
          "ref": "3ee7cba3-26f9-42f3-9dc6-42624c10034d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d47b8b2f-672b-47f3-bbbd-6ff9c24e0c84"
        },
        "item": {
          "id": "c8770d49-b0bd-4308-97a6-2e5343ce5054",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "725fb727-4708-492f-a0d3-fa7a8fa87b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61881546-5e18-4861-9da8-139f3d6de431",
        "cursor": {
          "ref": "1cd43c33-042c-4655-a98a-cd4179fd0623",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5b54655a-297e-4ca2-b002-aa566dcd74ca"
        },
        "item": {
          "id": "61881546-5e18-4861-9da8-139f3d6de431",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "88d1e79b-a3d0-4ed3-9c1f-862575055faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff571161-bb5e-4f75-b2f5-b9baa224fab8",
        "cursor": {
          "ref": "136d1725-0244-4441-b6e5-eac152c80f4e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "58df008f-4949-4fe6-97eb-f3cbab19f788"
        },
        "item": {
          "id": "ff571161-bb5e-4f75-b2f5-b9baa224fab8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "11a62d05-2917-43fc-8f30-d4f4359ed7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203494cd-6df3-4382-a9ae-e1cbb20def67",
        "cursor": {
          "ref": "caf9afad-aea4-440b-8136-11b3cedb6ab6",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "370042cb-7cb8-4c1c-9595-e8214c11e693"
        },
        "item": {
          "id": "203494cd-6df3-4382-a9ae-e1cbb20def67",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f965c679-98eb-487b-8058-65b4c222cef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875f66a5-d532-4054-92a8-a39f93ccfd46",
        "cursor": {
          "ref": "62836ca1-9db2-4310-ab3e-cee9fc9ac76d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e32805e6-f71a-4332-8847-aa8af8cda74a"
        },
        "item": {
          "id": "875f66a5-d532-4054-92a8-a39f93ccfd46",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cf96bd8e-dc3f-4132-aa71-56cf9f8d24e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cadddbd-689a-4e02-9fd6-0fed8ef9f8e7",
        "cursor": {
          "ref": "b1265d9b-b667-4944-9954-ba51fdf0c2bc",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "02fda399-0377-4c44-b4d2-421880d5bdcc"
        },
        "item": {
          "id": "2cadddbd-689a-4e02-9fd6-0fed8ef9f8e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "af821b6f-9244-4058-8413-1470c95b4b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4a64e7-c34e-4fa4-852b-ea8af3237bc0",
        "cursor": {
          "ref": "bc855099-f40f-457d-b659-11a7895387eb",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "368e12f4-3eca-4e0b-beb0-fe3ddd9b5c2d"
        },
        "item": {
          "id": "fa4a64e7-c34e-4fa4-852b-ea8af3237bc0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "db206f6b-e755-4260-8546-0f14b23979cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c071f30e-ddc2-489e-b9bd-4e6d07f834bc",
        "cursor": {
          "ref": "8fb709e1-b062-4f5a-87ef-f188d165bb97",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c06df33e-3968-4f71-9bbc-a0a3de06c9f5"
        },
        "item": {
          "id": "c071f30e-ddc2-489e-b9bd-4e6d07f834bc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ee4feecf-7a9a-430d-853a-b9eb175b6575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fd0e79-380e-410a-9153-5cf32f42ad1f",
        "cursor": {
          "ref": "90521396-23c6-4001-aade-8fce771f626d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a51fb057-1177-45b5-8def-34f116e626a9"
        },
        "item": {
          "id": "29fd0e79-380e-410a-9153-5cf32f42ad1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f2791485-08fe-4059-bc90-d7634022b2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992100ac-8942-4fd3-8b54-4d6a93f0ef29",
        "cursor": {
          "ref": "bd3b48ea-7d1f-4cda-8272-cd470882c230",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cd5e857f-789f-49f7-b459-946a15a01ac7"
        },
        "item": {
          "id": "992100ac-8942-4fd3-8b54-4d6a93f0ef29",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7fcfcafd-c956-4ea5-94ca-9135ad9408d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0a8d66-76a8-4e83-8234-dbd9e907ddda",
        "cursor": {
          "ref": "2a7005b1-92da-4c22-997d-a47b907aceaf",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "368d8ecf-4709-41fa-830a-ec0776bf3cc0"
        },
        "item": {
          "id": "ff0a8d66-76a8-4e83-8234-dbd9e907ddda",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "21c9e957-5d4c-4752-bb77-bbe3adeab135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3ff207-d17c-43d5-a6aa-1791a40b9fbe",
        "cursor": {
          "ref": "7db78942-9787-48a7-96bd-613352d7b684",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5c1e5b79-6c10-4216-a3a5-ab2648a11b70"
        },
        "item": {
          "id": "1f3ff207-d17c-43d5-a6aa-1791a40b9fbe",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "78cf4216-fbf2-460d-aaed-ec979eb37d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9e930-4c9b-418e-9514-0cff9625eed1",
        "cursor": {
          "ref": "dd0ab905-6d91-4f20-ac8e-2419b9033d75",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "743c3b85-cbf5-489e-be59-fea3103f0c65"
        },
        "item": {
          "id": "0cd9e930-4c9b-418e-9514-0cff9625eed1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c9432dd0-7db0-43a1-9a07-d2b76422e749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd229bb4-803b-4051-aa94-6f58c276ed49",
        "cursor": {
          "ref": "52909f46-25a3-4b61-959d-f8a17f0ac729",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f2a4e9bd-179a-41f0-bcf6-a7b55af73f49"
        },
        "item": {
          "id": "cd229bb4-803b-4051-aa94-6f58c276ed49",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "394a4fc8-b290-4f33-8392-b990051df8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232a4c93-09da-4c84-b3a9-2280de85f1fe",
        "cursor": {
          "ref": "9c1c0f49-22d9-4f0f-8fb6-104c339db3e8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1e9fe8cc-83b0-4e9b-9082-7adfb7ffe8dd"
        },
        "item": {
          "id": "232a4c93-09da-4c84-b3a9-2280de85f1fe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4d7e3f0f-ec13-4bfb-a468-41c5f8d1cd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67aeae53-4ca7-49af-9cfa-5c098bd7a764",
        "cursor": {
          "ref": "c2dcb5f3-65d0-42ef-aedb-4eab282bb685",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "29080f6a-b2cd-4e5d-8a09-b4a639469723"
        },
        "item": {
          "id": "67aeae53-4ca7-49af-9cfa-5c098bd7a764",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "059eda5c-c787-4cf2-8cd1-cc3aab7e7532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4118c796-97e7-43cc-95e2-6b9ccc79cfc4",
        "cursor": {
          "ref": "c9ea0235-d147-4e3c-830a-24351bb71484",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd3fba87-1506-4842-b6cc-36571cae646c"
        },
        "item": {
          "id": "4118c796-97e7-43cc-95e2-6b9ccc79cfc4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8e803cb6-85ac-4fdb-a0fb-183b3100801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89eff81-927e-406a-b3a1-ac9ea606e999",
        "cursor": {
          "ref": "31c883bb-9f19-4449-895b-57f5287575fd",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7724a01e-9a47-4363-833e-b54a7fa57fdc"
        },
        "item": {
          "id": "d89eff81-927e-406a-b3a1-ac9ea606e999",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2f9f6e3f-f811-46e6-bda7-d800c5e195b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6c82bd-7dc9-469f-914f-ca34b52fa897",
        "cursor": {
          "ref": "b927df04-39df-44a1-bec2-905d75c287db",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c053d681-47f3-4a57-baab-b0499dd5c892"
        },
        "item": {
          "id": "5c6c82bd-7dc9-469f-914f-ca34b52fa897",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4ad2c61d-51cf-4069-a5dc-64a50622df43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aa20c6-9f42-4652-acfb-b41e33b1ad77",
        "cursor": {
          "ref": "6da85fee-acb3-40aa-bed8-54eb092fbe38",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7f0eb834-439d-42d3-ad3a-840d61bfe532"
        },
        "item": {
          "id": "f8aa20c6-9f42-4652-acfb-b41e33b1ad77",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e5582234-7af9-42a8-bd2d-f8f499106aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b61f61-39f1-4d2d-a40f-81cab7a33d69",
        "cursor": {
          "ref": "af410470-e0cc-448d-90e8-b1de5718f3a5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d09f3e8-ece0-4966-bd3e-28512c5f4b24"
        },
        "item": {
          "id": "94b61f61-39f1-4d2d-a40f-81cab7a33d69",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fa9275fc-414d-4f23-9279-f8abc7dbf33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a1ff29-2acf-4a89-a2c8-8a8309597d2f",
        "cursor": {
          "ref": "9ce28686-e7c4-4757-821b-0cdf06844140",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e49ca9d-c76b-4669-a0f1-2cd2b36f984a"
        },
        "item": {
          "id": "88a1ff29-2acf-4a89-a2c8-8a8309597d2f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4f61b58d-0a5e-40a3-93a1-fadb0a861c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54308a12-bf56-4785-9953-fcfad89dee4a",
        "cursor": {
          "ref": "1780a8d5-a098-4dc9-8ec2-a0d75629388e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "86b41d84-5387-4229-863b-1f549273f15e"
        },
        "item": {
          "id": "54308a12-bf56-4785-9953-fcfad89dee4a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ba4502e1-a4f6-4dd2-8e22-d8291ee5a4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87210575-3304-45cd-9497-7e033c0892fd",
        "cursor": {
          "ref": "cd9bf883-8c79-4fa1-9ba1-d17324e44a89",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "56700214-a4c9-4554-97d1-8c555b3af18a"
        },
        "item": {
          "id": "87210575-3304-45cd-9497-7e033c0892fd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "336d7470-16ef-4eea-a098-6a8b848ee1a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f19544c-b645-4092-8de2-3020f85288dd",
        "cursor": {
          "ref": "775d7f5c-93bd-409f-a0ff-dfbd98d5addb",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2c7dd47c-e884-4057-a17d-7b3f4567d77d"
        },
        "item": {
          "id": "1f19544c-b645-4092-8de2-3020f85288dd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "714159f4-a24e-459a-80ae-b3ffb383213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87785ff1-6538-4604-8c19-4db1493fe7f3",
        "cursor": {
          "ref": "96dc50e9-d4c9-4b4e-973e-f45d548e6bde",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4118000a-6fd1-40ca-9ac5-7ae4304082ae"
        },
        "item": {
          "id": "87785ff1-6538-4604-8c19-4db1493fe7f3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f711f356-257f-4823-938f-426e0e43ddb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a6dfef-b91f-43bb-9cf7-2892f6434645",
        "cursor": {
          "ref": "8f92d032-d7d1-448f-b722-de2321b20823",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2f00774a-2181-429c-8836-f3d18d77e032"
        },
        "item": {
          "id": "25a6dfef-b91f-43bb-9cf7-2892f6434645",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b7dab9c8-ff7d-421c-95cb-75fb9a448bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851642e2-d065-40a6-bc2a-0cef6e193121",
        "cursor": {
          "ref": "015fa5fb-8cc0-4c78-8a3a-0450207a30a8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "80274e57-e8c5-4a42-b8cb-f64edc45625c"
        },
        "item": {
          "id": "851642e2-d065-40a6-bc2a-0cef6e193121",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1afe8620-8f86-4ba8-9950-81a179796710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca997522-129c-413f-86a1-bd3775e162db",
        "cursor": {
          "ref": "1015bd11-8e2b-458d-9ff6-7c5f8770112f",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5f9f7afe-901f-4095-aa38-6136ba45d8a4"
        },
        "item": {
          "id": "ca997522-129c-413f-86a1-bd3775e162db",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "894d810c-95bd-4bc6-85af-6ed1cf4a4fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a81c12-a032-49e0-bf81-5dde02740b00",
        "cursor": {
          "ref": "7d78ac04-99d4-42c9-90f3-53a068dd53de",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "df71e553-2ca8-462a-9cc2-37632e1fb887"
        },
        "item": {
          "id": "60a81c12-a032-49e0-bf81-5dde02740b00",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c3952489-7af1-4fd1-85ae-05f7dc014fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bac8313-c5a3-4e09-b3cd-896fb0598988",
        "cursor": {
          "ref": "07b61773-848c-4841-958c-1dca2f07426c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "34561058-75e5-498e-a898-930915d54ac7"
        },
        "item": {
          "id": "9bac8313-c5a3-4e09-b3cd-896fb0598988",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a1ec1f2f-e8e6-4a91-9f45-7277e16d9868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e435e5-66b6-4078-b5fc-42a5246cdcae",
        "cursor": {
          "ref": "8da5f7fa-aa9d-44ff-90cd-3ce84e04ed07",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eb687d98-84a0-4483-85e3-8d9b606ba6a2"
        },
        "item": {
          "id": "21e435e5-66b6-4078-b5fc-42a5246cdcae",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0bbe027a-275e-4739-8bb8-17aaf2b0401f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a41840-1006-4d53-b7fd-65875f0691ed",
        "cursor": {
          "ref": "0cbeafe8-e46e-4d45-b49e-160b8d8c0252",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7a7f37b4-eb67-4d41-96b4-689631cd5e51"
        },
        "item": {
          "id": "a5a41840-1006-4d53-b7fd-65875f0691ed",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2b1bbc7e-66f9-4660-9a92-58362ca0b690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599cf036-07d4-495a-8e13-b66cd9f494a3",
        "cursor": {
          "ref": "604d0fbf-49a5-4b11-a57e-cd912f0b0b3a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "32f9434e-6bbb-4c90-bf0f-86b5db26d97f"
        },
        "item": {
          "id": "599cf036-07d4-495a-8e13-b66cd9f494a3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4293a4f7-3548-4504-aeb7-2efc7088ca4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12c571a-8a79-4c16-8902-a733f158639d",
        "cursor": {
          "ref": "e6bbab94-d6bb-4a2e-8961-8cb2c7a30233",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "59e9f6a9-3177-40f4-a2bb-81bd628a1235"
        },
        "item": {
          "id": "e12c571a-8a79-4c16-8902-a733f158639d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f4b182dc-a8fb-410f-91f6-ab167f75da80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d07240a-5ad3-467a-ad04-fc09b5874e3a",
        "cursor": {
          "ref": "9452fbf6-dfa1-4b66-aa19-23541389391e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "75b6d807-8057-4713-a29d-5b5c40732179"
        },
        "item": {
          "id": "5d07240a-5ad3-467a-ad04-fc09b5874e3a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "441e8ce9-d8cf-4ca3-bb26-cd72f796531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eb7707-d20c-40e7-ba16-846289add3f8",
        "cursor": {
          "ref": "d95e0085-c1d6-4aeb-a29e-3256f2fa5d9a",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "576b2515-68f7-43b4-9064-d56aa72e57a6"
        },
        "item": {
          "id": "78eb7707-d20c-40e7-ba16-846289add3f8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2aca3f20-63a3-4012-a697-1cb809c4f1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f52454-a7cc-48d0-b649-3c40dbceb1c9",
        "cursor": {
          "ref": "22ecc8e4-d09b-4850-ad42-75199c1fdb4c",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4edd62ac-e192-4473-92aa-b3c243114ff9"
        },
        "item": {
          "id": "95f52454-a7cc-48d0-b649-3c40dbceb1c9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "80cfdc79-a8b0-48cd-99b0-c6f9245a71dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a65dc89-af3d-497c-9775-41b1409e6498",
        "cursor": {
          "ref": "b1e5115a-80ee-4bd5-9e1c-f8c7c9392ff2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc83118c-7c96-49ab-ada8-5d59fb34be4b"
        },
        "item": {
          "id": "4a65dc89-af3d-497c-9775-41b1409e6498",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8df65f80-5cd2-45a7-abf5-0681b1cc2fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b93410f-2f17-4cee-b231-eca3d0e0ba77",
        "cursor": {
          "ref": "b6abbdb2-9d57-41bb-bb9d-579828b0383e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "39d21a79-2173-4b02-b4ce-2e37dddf831b"
        },
        "item": {
          "id": "7b93410f-2f17-4cee-b231-eca3d0e0ba77",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e5aec8b6-5c0c-4f7e-aba5-80208d68ff79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7598d8-b3d9-4937-b3b7-611efbfe6240",
        "cursor": {
          "ref": "fe659e7a-32ec-48d4-aca5-689c9ed2f4f1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "31b23cc3-216d-4601-9000-521a28509a56"
        },
        "item": {
          "id": "0c7598d8-b3d9-4937-b3b7-611efbfe6240",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2b814073-0221-4a84-ae1a-7cbb682dac46",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdbbec6-e3db-4239-ad19-b4f8714b7ad3",
        "cursor": {
          "ref": "f7a614ff-44e3-47b4-a936-5555237631ca",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7a8b3961-261a-4c28-b917-6f73a7161c51"
        },
        "item": {
          "id": "6cdbbec6-e3db-4239-ad19-b4f8714b7ad3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "07a47b75-4e2e-4d76-8a1b-99f3213b2ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0282d664-8ec4-4c81-b329-d4d9b496f90a",
        "cursor": {
          "ref": "c3291587-8755-47ea-bdf7-a77caeceaea5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "064084a1-be06-412a-81ef-ef5f778258c4"
        },
        "item": {
          "id": "0282d664-8ec4-4c81-b329-d4d9b496f90a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "304191e4-f6d6-42c2-8311-9fb570f0adc9",
          "status": "Created",
          "code": 201,
          "responseTime": 8689,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f90ba0-b786-417c-b4ed-7f201ff3d988",
        "cursor": {
          "ref": "eab97f64-b25d-4764-ba23-13121380b79f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "871cee6c-4ce8-47a3-b27e-0cfac40566e2"
        },
        "item": {
          "id": "b6f90ba0-b786-417c-b4ed-7f201ff3d988",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7f43d946-d9f7-4b23-b8b8-45bd767d5a87",
          "status": "Created",
          "code": 201,
          "responseTime": 8721,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c90a35-231b-4205-8bf5-cf62580a517a",
        "cursor": {
          "ref": "3ceeb653-67bc-4db6-b72b-1d5fd95b1e1b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8f393b80-b859-4fd6-a279-e9f2c1fd6429"
        },
        "item": {
          "id": "e6c90a35-231b-4205-8bf5-cf62580a517a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0f042782-cc07-489a-ba62-af508b29790b",
          "status": "Created",
          "code": 201,
          "responseTime": 7324,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "203dfce0-7815-470b-9583-b4198e2b7ad4",
        "cursor": {
          "ref": "aff5c1cf-6e63-4d46-a171-65b803016103",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9bdec8d0-06cb-4d47-a330-3524a9353ec6"
        },
        "item": {
          "id": "203dfce0-7815-470b-9583-b4198e2b7ad4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "81f81ebc-00c1-4505-b9e4-178efe22e596",
          "status": "Created",
          "code": 201,
          "responseTime": 7895,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "111edace-3e04-4c10-b063-bd5a07706254",
        "cursor": {
          "ref": "520ea00a-16f5-48ff-8dd0-22331ff217f8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "77eafa50-9c92-41d4-b6f1-c8a74e126566"
        },
        "item": {
          "id": "111edace-3e04-4c10-b063-bd5a07706254",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "50f82500-7114-4a73-8d15-b33cf1109a4b",
          "status": "Created",
          "code": 201,
          "responseTime": 8087,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d82b11-5b35-44a3-a3a5-44c2e8799b9e",
        "cursor": {
          "ref": "caaf3b31-8c1e-42dc-8c0b-6d238fd37312",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a8e80207-7766-4e25-b275-49a4301c1aef"
        },
        "item": {
          "id": "63d82b11-5b35-44a3-a3a5-44c2e8799b9e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "35898a87-bdb6-421a-8565-ef6a1a6f380a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5d5acf59-4900-4d89-be09-c2d919738008",
        "cursor": {
          "ref": "900aebc4-b08f-4185-9ea4-5c859d6adf8c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5eee1226-28df-44cb-90b9-a27c3ca27cf3"
        },
        "item": {
          "id": "5d5acf59-4900-4d89-be09-c2d919738008",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "67e524a7-d826-4438-8ff8-e95710a41150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d63eb-fe2c-4678-bc54-18e5c29e9fe5",
        "cursor": {
          "ref": "f19d8115-2504-4c24-bd48-6cc7f116c617",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a4fef072-a732-46a0-a9d8-8b5c93ff9205"
        },
        "item": {
          "id": "318d63eb-fe2c-4678-bc54-18e5c29e9fe5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2f057db2-f71e-43bf-b8df-cb1bac191c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07e3564-e78c-4003-84b0-e09ab4483ecc",
        "cursor": {
          "ref": "7c168d45-856a-47b1-acd9-da90c1e151fd",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f638deaf-e779-409f-958a-65f43c685397"
        },
        "item": {
          "id": "b07e3564-e78c-4003-84b0-e09ab4483ecc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "669f54f2-24e3-4fde-a722-cb4e5050e831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c296665f-9d4d-43eb-af63-35f483972c23",
        "cursor": {
          "ref": "b9868c89-5458-4fb8-87c3-f44d57b5f0b3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e86b9e9f-c9e7-45e0-9398-031bfed3e380"
        },
        "item": {
          "id": "c296665f-9d4d-43eb-af63-35f483972c23",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1908c843-8a51-447b-a80f-3cf17a68144e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474abca8-39ce-499e-8128-69c50ab61d8a",
        "cursor": {
          "ref": "814a367f-4d4b-48de-b8a8-5f26b91bf338",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "24f11743-937c-47b9-b8fa-cecc64c29aa2"
        },
        "item": {
          "id": "474abca8-39ce-499e-8128-69c50ab61d8a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2178fa76-d547-40ae-9448-d5ed79e3303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbc2d95-1c59-4987-acd2-08f0c8704165",
        "cursor": {
          "ref": "96b65635-9f8e-4143-aaef-47b918c786e9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d2aecc5c-c59a-4ffb-8913-7fd0f5ae8bfa"
        },
        "item": {
          "id": "7fbc2d95-1c59-4987-acd2-08f0c8704165",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f631f61c-e725-4791-9fb4-a05bc83419b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8794c937-608b-4a49-8782-9be4aaab63e6",
        "cursor": {
          "ref": "faa9b232-85db-4780-bf09-8423f7761fc4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6645d6d9-3ad1-431c-8c77-2df8b8235a81"
        },
        "item": {
          "id": "8794c937-608b-4a49-8782-9be4aaab63e6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3f398157-c1a9-4b31-9961-bf8636d7b6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ddfbec-62dd-41c8-b912-959d180faea8",
        "cursor": {
          "ref": "41065be0-c7d3-4444-80c2-ec40b57deeba",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2231857e-acb7-4acf-8692-99c23b486c8a"
        },
        "item": {
          "id": "32ddfbec-62dd-41c8-b912-959d180faea8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7db5f991-5e47-46b1-a5db-f2a822dd5851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13677e51-530d-44f6-9986-c9489a3f5bf7",
        "cursor": {
          "ref": "90deb0ee-633d-450b-82ad-17d8b2732d27",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7712a2e3-8af2-4bde-96ec-ecfb0e2b79ae"
        },
        "item": {
          "id": "13677e51-530d-44f6-9986-c9489a3f5bf7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "19f96a4e-78a1-4fbd-b01e-f144b7cfa80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb7a31d-e084-4b4b-8929-ac852f3d6f08",
        "cursor": {
          "ref": "9437d497-2d93-49d5-9ffe-c2b21151b9cd",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "383ca9d5-5e34-4fed-9224-30bdc9d5b13f"
        },
        "item": {
          "id": "1cb7a31d-e084-4b4b-8929-ac852f3d6f08",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8fb221ed-3fb7-4248-a467-239a5ac6d6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b8bab-4fab-494d-8cb7-870410eb28bb",
        "cursor": {
          "ref": "7cbe1f97-6bb7-4713-9919-2afca137b133",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a7c64b13-fed1-474d-adcd-7c8f7211a44c"
        },
        "item": {
          "id": "a32b8bab-4fab-494d-8cb7-870410eb28bb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "37bf8d1f-894a-4af4-bed7-17e3e8b31231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d61384-f8f6-46a8-8a1b-c1080d540e41",
        "cursor": {
          "ref": "bb307450-8450-48b6-b658-19a8cb07a4b4",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3c89a09a-75c7-40e7-b800-7f5d60c91eb5"
        },
        "item": {
          "id": "b9d61384-f8f6-46a8-8a1b-c1080d540e41",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "350b1e67-34db-416c-8ec2-b34a8aec5031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcf4c1e-39c9-4b0b-ad34-f0016d6b10d3",
        "cursor": {
          "ref": "7e4c62d9-8dd3-4471-8c98-fed8cc9e9923",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d0d45428-eaa0-4a25-a9ef-abed6ec0f32e"
        },
        "item": {
          "id": "4bcf4c1e-39c9-4b0b-ad34-f0016d6b10d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2d3508d7-52c8-4b46-92a4-cabc62b8a718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d49dd5b-ae09-4a71-bd66-67df5e955d29",
        "cursor": {
          "ref": "2e3ea899-a2f2-460d-9862-24864bd6fab6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7074fa65-2ce7-4427-b0b2-5123820aebe0"
        },
        "item": {
          "id": "5d49dd5b-ae09-4a71-bd66-67df5e955d29",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2fc78a7d-9e7c-4be0-9eb5-490a0be9d540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5c4274-6fd7-4115-a24c-bba34cf9eb9b",
        "cursor": {
          "ref": "666e6b81-52f9-4444-9dd9-cdc1c750b160",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5ecfa13e-639c-4813-bf35-8c1000300af6"
        },
        "item": {
          "id": "4e5c4274-6fd7-4115-a24c-bba34cf9eb9b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "94582fbd-80bf-4e94-99ae-57fade0c442b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40116f9-610c-4ff4-8a65-7c24db0395f6",
        "cursor": {
          "ref": "8a1b6652-e0bd-4a5d-8666-e0034eac8293",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0f38d002-2ba1-4466-bd40-abcb536a7c43"
        },
        "item": {
          "id": "d40116f9-610c-4ff4-8a65-7c24db0395f6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f4eb1260-048b-492a-a993-2141881251e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cae4f3-3a23-407b-8260-bbfad0513fe1",
        "cursor": {
          "ref": "d73f9ed0-dac1-4177-8484-85d9732ee4b2",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9ab8f96e-efe6-4cdc-9d3c-954afd241afa"
        },
        "item": {
          "id": "e3cae4f3-3a23-407b-8260-bbfad0513fe1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "039bbea3-f1b5-43a7-a704-3dd9e396dec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81899d38-c768-46e7-b0cc-0585d0a4d1db",
        "cursor": {
          "ref": "40658a9f-2357-4f73-9dbc-75b55341d80c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "717a3076-fb5f-4d38-bb85-2efdfd56556a"
        },
        "item": {
          "id": "81899d38-c768-46e7-b0cc-0585d0a4d1db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ffdefe5-ed88-4cbe-a26e-6ffcf0931290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a144ff2e-f587-4787-b829-bdb22c5406f1",
        "cursor": {
          "ref": "1721c640-7acb-423a-81eb-0282ec10e19b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f5c4c7d7-8f4e-4645-87e7-1ccc12f4dc63"
        },
        "item": {
          "id": "a144ff2e-f587-4787-b829-bdb22c5406f1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5a943219-6ee9-4b9c-8250-dce91f003ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e9a036-4a41-4038-9d26-3032a0add643",
        "cursor": {
          "ref": "e5040ad4-bc29-429c-91a1-945fbbe627c7",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2a24401c-ba04-4afd-bfb9-803a4af8004f"
        },
        "item": {
          "id": "36e9a036-4a41-4038-9d26-3032a0add643",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "781cd57e-2f2c-4c80-8f5a-19a8ed5289fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a721fa-7ec9-4a6d-badf-b5b8568b5092",
        "cursor": {
          "ref": "3743ab76-f5b1-43d1-ac9e-0b9605417bee",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f8281b1e-597e-4840-aeab-debdba888df8"
        },
        "item": {
          "id": "42a721fa-7ec9-4a6d-badf-b5b8568b5092",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c9d52a93-95f8-4d99-9005-3f929d5cc383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1760e5-14e0-4175-bffb-5f1e1b4c6bd7",
        "cursor": {
          "ref": "33dd59de-5cc1-4aca-b1f9-79ab4df10b2c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cd98ed49-a51a-4251-b967-b323146f832f"
        },
        "item": {
          "id": "4a1760e5-14e0-4175-bffb-5f1e1b4c6bd7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0922b4b9-5b7b-4786-bcf0-e11116373697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2173bc21-ae94-448a-aa3b-ac04734dbe58",
        "cursor": {
          "ref": "925930c5-77e9-4971-870f-1cf602e0042a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "23f9caa3-eb36-43fc-9ce7-debf2ce325e7"
        },
        "item": {
          "id": "2173bc21-ae94-448a-aa3b-ac04734dbe58",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8553b039-5d15-412f-a737-b5cbc7846849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505aae8a-f810-48fd-9d8a-224f568431f1",
        "cursor": {
          "ref": "acf28b5c-0355-4036-a5a2-b53c1663cd9a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f66fe83f-e072-4625-9676-77ff2c8f8578"
        },
        "item": {
          "id": "505aae8a-f810-48fd-9d8a-224f568431f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "00545645-2f53-4e5d-9069-31d98e0ccf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5304c515-790b-4e96-ac84-1f57c9adb36d",
        "cursor": {
          "ref": "98b566fa-5d06-4b1f-8ed0-36368d10a272",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "782c48bf-6a76-4e0a-96f1-76bdc0663dde"
        },
        "item": {
          "id": "5304c515-790b-4e96-ac84-1f57c9adb36d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c5c8a593-f063-4a67-9d96-54aa717ff4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c25b597-f16c-4419-8695-50e84c63cdb8",
        "cursor": {
          "ref": "50964345-3092-40b8-854e-84ae6d6cf10e",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "003b2810-93c4-4f75-addb-e4a12a5615dd"
        },
        "item": {
          "id": "2c25b597-f16c-4419-8695-50e84c63cdb8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9fcc6899-2881-439a-8d1d-202b94f1ebd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5ab74b-9253-4478-b4cc-95ab0f7e3dfa",
        "cursor": {
          "ref": "78a6c400-9fd5-4266-b715-2a2fc11cd33a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "556d8dbe-aed5-4923-9b10-a7a7e7d81277"
        },
        "item": {
          "id": "3d5ab74b-9253-4478-b4cc-95ab0f7e3dfa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b36245e7-1ee1-49f0-a43f-5da8962afde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b82b819-6943-4b52-a622-cee3df7d61f4",
        "cursor": {
          "ref": "2c78d329-dd6d-45e9-8cd1-1871b246fd7d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e3e5240a-0560-42e0-bfef-ac6e424021e3"
        },
        "item": {
          "id": "9b82b819-6943-4b52-a622-cee3df7d61f4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4f5597b9-7f98-4e00-b847-4e8fed26cff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89a3997-eb0b-4433-8291-1032d6fb7b43",
        "cursor": {
          "ref": "03789130-f673-4924-b05b-c78a531f4b64",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "07c3ba4d-a60b-4f90-bdd6-e507c1014546"
        },
        "item": {
          "id": "f89a3997-eb0b-4433-8291-1032d6fb7b43",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d7e91765-1a58-430b-935c-6cf8c251d3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b656af9a-ea22-47cc-a1d8-8c72b21f1d41",
        "cursor": {
          "ref": "bf5711bd-b751-428d-b19c-d32d417856df",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "103bf648-a03e-448e-bfcc-cb2cd280d31b"
        },
        "item": {
          "id": "b656af9a-ea22-47cc-a1d8-8c72b21f1d41",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5871bac6-8297-4c1e-8c85-f000c32fd28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd39c567-ae1c-4707-b63b-949409bd5dce",
        "cursor": {
          "ref": "fef7cc5a-de2f-4087-8fd4-b175bea6676b",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e9a7afeb-7f7b-420e-9785-7758cbf407f1"
        },
        "item": {
          "id": "dd39c567-ae1c-4707-b63b-949409bd5dce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ebb7e4f3-2bf2-4522-bd15-b6e64032681f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed894524-5d21-44c0-8879-a734f90dc2a7",
        "cursor": {
          "ref": "ac09aa7e-e052-4e47-ad67-bc5792cf8278",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "853d1175-5d44-4180-9897-ab5a3b598526"
        },
        "item": {
          "id": "ed894524-5d21-44c0-8879-a734f90dc2a7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cc3382be-0496-43de-bed0-7d8aa1bbf071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b604b112-7034-4a8a-8cfa-80844851387d",
        "cursor": {
          "ref": "304327bf-1765-4239-9825-74a324022020",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0c242d3d-d11d-4c16-b4a5-feb086971a0e"
        },
        "item": {
          "id": "b604b112-7034-4a8a-8cfa-80844851387d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1176b1c5-443a-4106-9f51-79a9c62cb7bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a26f2cb-7c57-4a46-ad24-723c3980ff17",
        "cursor": {
          "ref": "c2c80b16-7b9a-41d6-ac92-685328f205ff",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7c8a6cff-ee61-4dc7-96c7-3f66b2af54a1"
        },
        "item": {
          "id": "2a26f2cb-7c57-4a46-ad24-723c3980ff17",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d68ee8d2-100a-4306-a6d5-62bf865689f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ac5348-e1ba-4903-8a28-5203b09e07cb",
        "cursor": {
          "ref": "82b5a8de-66bd-4574-86c4-1f279b8f2ef7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "404433bd-e20d-4969-9166-37fa62a8f222"
        },
        "item": {
          "id": "f6ac5348-e1ba-4903-8a28-5203b09e07cb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2601833d-0a85-4fb9-b35e-0316fd5211f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16392d6d-251f-4290-9388-4e7b24e094a6",
        "cursor": {
          "ref": "97492db5-ac47-4b03-9030-a7cbf6913ddc",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a0a4c690-2b6d-4187-b47b-2d1621b55189"
        },
        "item": {
          "id": "16392d6d-251f-4290-9388-4e7b24e094a6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a8f384e-f973-44de-9780-0c44fd475dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507f473f-a95b-4c01-b826-b3f4570013b4",
        "cursor": {
          "ref": "aff8522a-4209-4370-b30c-039366e15bab",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dff4593b-76c3-4e1a-beec-8ecffdcd2bc7"
        },
        "item": {
          "id": "507f473f-a95b-4c01-b826-b3f4570013b4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f45e578c-9e9c-425a-8782-73df88f9c8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b885c4-c1dd-4d07-8018-e0151ff1b64a",
        "cursor": {
          "ref": "9c50620d-952f-4783-8fad-b982795b4c69",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e9ad5533-5a27-4d6f-9015-305eef084173"
        },
        "item": {
          "id": "e7b885c4-c1dd-4d07-8018-e0151ff1b64a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4645dbe9-ceef-4af1-a252-8325b84c6305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3b2505-33e0-4737-845e-ea01d65ee845",
        "cursor": {
          "ref": "d0cc2fa4-e422-4e9d-ad4e-19f0f98f5e08",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "69c10062-7daf-42dd-9375-649a59f911d6"
        },
        "item": {
          "id": "7a3b2505-33e0-4737-845e-ea01d65ee845",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "30bd22df-92d0-4bc8-8e59-447faff6ff6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d5ad3a-ad9a-4aaa-8ec9-12586dd998a5",
        "cursor": {
          "ref": "be4f4a5a-ffe1-4b93-a192-2617dc895258",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4757af91-8085-4a71-bcf6-31ad7b5c7300"
        },
        "item": {
          "id": "72d5ad3a-ad9a-4aaa-8ec9-12586dd998a5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f122231e-27dc-4fcb-b471-e6b0632206d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e606a025-ed25-4990-891c-dc522e0ed077",
        "cursor": {
          "ref": "f486b07e-3511-44c2-be12-da35a14ecb64",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e4848420-b30e-4075-8379-f74117c3de38"
        },
        "item": {
          "id": "e606a025-ed25-4990-891c-dc522e0ed077",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e5fd45c6-7dff-44f1-a0a3-a46768a72843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58038b2d-959f-46bf-a1ae-c56e9e0b1bd7",
        "cursor": {
          "ref": "653b65c5-7bfe-4629-bb57-00fbcec1bcff",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2f2d0dea-69f0-4760-b189-819679d163b4"
        },
        "item": {
          "id": "58038b2d-959f-46bf-a1ae-c56e9e0b1bd7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3f528e7-1528-4998-b2d9-8efc2676164d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32585dd-87e2-44e8-b621-7f45c0879287",
        "cursor": {
          "ref": "721fbe58-a9b9-4443-a704-7654411a0174",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6181aa24-8778-491e-af69-0c8857da33df"
        },
        "item": {
          "id": "a32585dd-87e2-44e8-b621-7f45c0879287",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ad0a741c-95f1-4446-a6d1-c1ef39106bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae39002-e957-4a20-9da9-97055b1be337",
        "cursor": {
          "ref": "c7002163-0071-44ef-ad60-97f315db4e51",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ae7118e3-7a4d-4deb-84da-eea436296cba"
        },
        "item": {
          "id": "9ae39002-e957-4a20-9da9-97055b1be337",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "32f7cbd1-bc93-4b27-9114-426dd1d25c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182daa4b-7f57-45b2-981c-ec0e2accf850",
        "cursor": {
          "ref": "46b8fcfc-29b0-4d49-8449-444e4ddba69d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d43903d6-02d2-46e8-855e-afeca36c8b79"
        },
        "item": {
          "id": "182daa4b-7f57-45b2-981c-ec0e2accf850",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c4d5d742-b46e-4464-bb0b-37e914a71442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1578e127-08a4-4222-b531-36b1a3aab96e",
        "cursor": {
          "ref": "2d9a464a-e255-4d28-bc46-69ddca816356",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0355702f-23c8-43f8-b93c-b33cc61148a5"
        },
        "item": {
          "id": "1578e127-08a4-4222-b531-36b1a3aab96e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc0bdbda-92c2-49fe-b7f4-2f8aff7de755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eb4c49-01b3-423a-b033-6f807faf7d7f",
        "cursor": {
          "ref": "f3bc2b5f-1ae4-463c-9049-e84de8ff9bb0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fe3159d5-19a1-4f52-b8c0-17c58c7320dc"
        },
        "item": {
          "id": "41eb4c49-01b3-423a-b033-6f807faf7d7f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "20ad7a77-b294-446d-adba-49d42ac36fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9286700e-1fa8-4602-951b-86e648b50199",
        "cursor": {
          "ref": "63096dda-aae3-49ab-8b83-226da1b1084d",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "00694703-a025-4f67-9f3a-4501bb8a36fa"
        },
        "item": {
          "id": "9286700e-1fa8-4602-951b-86e648b50199",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "96f78884-c485-48fc-a7ef-8737e7b32cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67406ce9-b145-46b0-b5b7-b984e40260c8",
        "cursor": {
          "ref": "7058f1f8-df57-4630-ac0e-db878e010d06",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "54c5908b-8d10-4c61-b6eb-e3eb4b98cdde"
        },
        "item": {
          "id": "67406ce9-b145-46b0-b5b7-b984e40260c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ff2de927-2e6c-4529-af11-a386b83d0775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbed64e3-8873-446f-bd3a-b932eb6fd9f7",
        "cursor": {
          "ref": "6cf4bac3-451e-4276-9c68-4c37cf06e401",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ae907fea-66dd-40b4-9991-3d2067302300"
        },
        "item": {
          "id": "dbed64e3-8873-446f-bd3a-b932eb6fd9f7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "48210d57-7c59-464c-b405-097152dd2575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d6774e-8a82-4af4-be7d-9308b23f6f7e",
        "cursor": {
          "ref": "72f4e88c-8e9d-4b8c-9e0b-200c629e6738",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0c0a509f-6977-440e-bfa1-826b798d36c7"
        },
        "item": {
          "id": "44d6774e-8a82-4af4-be7d-9308b23f6f7e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "73df96dd-10f9-4281-949d-368139308a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414c91ef-dfb4-4c3c-ae67-88a0ebaf7783",
        "cursor": {
          "ref": "381b017e-914d-452d-985c-66894e8938e5",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b6ac41ee-b673-4233-9498-ccfededdf822"
        },
        "item": {
          "id": "414c91ef-dfb4-4c3c-ae67-88a0ebaf7783",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d8d0f10a-9a15-484e-8bdc-26de6628a04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a1fdc0-a943-4440-8583-3ea582fd4c20",
        "cursor": {
          "ref": "514d1c8b-26b2-431d-811a-6509bd9c184e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "825d8bdd-af23-4d80-897f-bdf2f1c10dc7"
        },
        "item": {
          "id": "c5a1fdc0-a943-4440-8583-3ea582fd4c20",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8c114be7-d869-4b3f-8a37-d6f8615ecbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bec134-f04e-4994-91b8-c63e1aca33ce",
        "cursor": {
          "ref": "36434450-0294-4943-bdd8-ab7d8d4eb1a6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "221d955e-c7a4-4c8f-b3be-293a8dc42e70"
        },
        "item": {
          "id": "97bec134-f04e-4994-91b8-c63e1aca33ce",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a95b31f3-0d5e-44c1-a625-82087e2b66a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c1b662-6796-44c7-a5c9-a22dcd8c362a",
        "cursor": {
          "ref": "64304436-1e8b-4778-8922-9cd3f7fbefdd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f20214b7-1052-4b99-80f6-3767d43a6ac1"
        },
        "item": {
          "id": "b1c1b662-6796-44c7-a5c9-a22dcd8c362a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "84666b09-ac86-4fe6-8ecd-6d30b71dac0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831355ad-72c4-4738-80e4-1a72f0c42876",
        "cursor": {
          "ref": "ef3b8d0d-78cd-4995-8628-4b3e25e22c19",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "86a4ad14-3269-4fd9-bd71-6bd840cdccaa"
        },
        "item": {
          "id": "831355ad-72c4-4738-80e4-1a72f0c42876",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "38e04698-41a5-4090-9bfc-cbcd65e53e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2602319d-090d-48c1-ab75-08bc6438e274",
        "cursor": {
          "ref": "f173ae7a-82b7-4005-8da8-95ac1ded1dbd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fae1408e-564e-41f1-b5ec-66c212159c6c"
        },
        "item": {
          "id": "2602319d-090d-48c1-ab75-08bc6438e274",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5c256450-cfb8-42eb-92be-334cc374d165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e299b3e4-b21c-426e-8242-76db7ced449b",
        "cursor": {
          "ref": "3e901451-dbc9-49e5-8336-e071a6b11789",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1505423a-2f4b-49cc-b5c9-79e8e0eba323"
        },
        "item": {
          "id": "e299b3e4-b21c-426e-8242-76db7ced449b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dd92525c-b4a4-46b8-b102-6b5590f3b149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5518517-6659-430e-b03a-3d7891538963",
        "cursor": {
          "ref": "607ff298-32cc-4fca-b713-cdc4e3180e6f",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fee90698-bad9-41ed-887d-774f513e56ba"
        },
        "item": {
          "id": "d5518517-6659-430e-b03a-3d7891538963",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "95d2ef11-dad9-46a8-8bca-3a259538ad8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106dff74-e0f1-43ae-8783-2c969e24eca2",
        "cursor": {
          "ref": "faa1fb95-9571-46f4-8b0c-bb3424f54f03",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "41375897-df49-468f-a157-019b3276779a"
        },
        "item": {
          "id": "106dff74-e0f1-43ae-8783-2c969e24eca2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c103338-8867-4460-b306-3600c5371073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2825bf-c957-4f24-90d6-f54ab019aa90",
        "cursor": {
          "ref": "9b3173af-65a4-4c15-a5b0-30d61be34c22",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fb9bac2b-d03d-4d88-91d0-66543762773a"
        },
        "item": {
          "id": "ce2825bf-c957-4f24-90d6-f54ab019aa90",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "756ab9f8-85eb-4cec-a492-c7934191e48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45119324-41ed-4c88-9303-f259e903b425",
        "cursor": {
          "ref": "49963051-a839-4266-a80f-05ce214f0d5e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3d2f91bd-1bfe-414c-a90c-13d43098d3d5"
        },
        "item": {
          "id": "45119324-41ed-4c88-9303-f259e903b425",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2a5b2aab-cb6b-4356-9af1-4a26ebb5c5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17af68b1-f589-488a-8421-a6ab668d9cf1",
        "cursor": {
          "ref": "6aab854a-d07f-4037-972a-014916f22092",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f48c4444-1c26-4066-b1d7-e77baec8d835"
        },
        "item": {
          "id": "17af68b1-f589-488a-8421-a6ab668d9cf1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e8ef1ac1-6187-4d83-aa03-67cc370fc338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0932a05a-6d84-431f-9b75-e885a70df98f",
        "cursor": {
          "ref": "a0d4d545-b9b9-4b6a-a20f-cfe815508316",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6c66777d-09bd-4880-aaca-61f24059d604"
        },
        "item": {
          "id": "0932a05a-6d84-431f-9b75-e885a70df98f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b09ef68a-e3c4-4130-ba7d-4b7115392795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85228765-5599-437d-af6c-e1388865e545",
        "cursor": {
          "ref": "a3e3fee4-ade3-4215-abcc-da7efb32fb1e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "274eafef-53e2-46ed-89a0-4b04bb72ba94"
        },
        "item": {
          "id": "85228765-5599-437d-af6c-e1388865e545",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "913edf55-f8b4-4888-8447-887120330fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43390e6d-91c0-46a8-9c0e-d58866ca2c4b",
        "cursor": {
          "ref": "230994a8-beab-45b2-9195-7aa23cccaa85",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "28dc5c6c-db6c-4a46-8dc8-e939d63c5495"
        },
        "item": {
          "id": "43390e6d-91c0-46a8-9c0e-d58866ca2c4b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "93cdcb88-e0a9-4dce-83ba-bdc943f510cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473f3cc2-22df-43b2-acb5-02548d0659bb",
        "cursor": {
          "ref": "a906fbbf-77cb-4e0d-a681-865489033107",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "808c9115-10bf-4a4b-a78b-19afd6b902ef"
        },
        "item": {
          "id": "473f3cc2-22df-43b2-acb5-02548d0659bb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "51c7050e-16e3-4b1a-98a5-70dff0a3f87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376e3b12-5e55-4a81-8790-2a0f44d0813b",
        "cursor": {
          "ref": "c81b82b3-bab5-4efb-9c22-58c0c251e545",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dc0bd351-de42-45a2-bc33-795df4db0f55"
        },
        "item": {
          "id": "376e3b12-5e55-4a81-8790-2a0f44d0813b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ff09dfd9-b87e-43ed-acc9-d30be6920a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd265da-4716-45d9-a934-c1a6c7c4b093",
        "cursor": {
          "ref": "8639e6a5-ce75-491e-b4a3-4e569c10572b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "53840968-aaf2-490f-8dfc-a3d55a37dd58"
        },
        "item": {
          "id": "9dd265da-4716-45d9-a934-c1a6c7c4b093",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1706cfd9-4b9e-417f-8419-8515a7e07aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babef607-d97f-40f7-a23e-239215e303e8",
        "cursor": {
          "ref": "6fa08192-e22b-4821-85ef-e2b89af0fae4",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "19eb4379-4c58-4069-b9a1-346464de80f1"
        },
        "item": {
          "id": "babef607-d97f-40f7-a23e-239215e303e8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a38b1dc3-96de-4e8a-bdf1-3581184ac252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65439062-f75b-495b-bfe3-ba9aff2ff1d0",
        "cursor": {
          "ref": "3c5c5aa5-2782-4e29-a36f-77522d16a666",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7dee9e2d-39df-4d2a-a59c-b08d9b8ce14b"
        },
        "item": {
          "id": "65439062-f75b-495b-bfe3-ba9aff2ff1d0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fe2d2152-1f99-4113-9d2f-b0b69e6f2027",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acec2e9-117c-473d-83a6-a4b0fea0aa75",
        "cursor": {
          "ref": "7c134281-924f-4cb1-bbfa-e4646851a6dd",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2d4259cf-69c0-4963-b08a-17a8a3d06653"
        },
        "item": {
          "id": "3acec2e9-117c-473d-83a6-a4b0fea0aa75",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f397f934-2414-4895-9abf-3da63eeb4ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9fe7e4-70cc-4346-be97-fa9ad6abc05f",
        "cursor": {
          "ref": "a465114f-3b9b-4f17-bd6c-540f94e72919",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0e07751c-ea39-47e6-b40d-574a18cd423f"
        },
        "item": {
          "id": "4a9fe7e4-70cc-4346-be97-fa9ad6abc05f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e6a53133-f6f1-4a39-b4f1-78296994fbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc47ce5d-f2ff-46a1-b6b6-a11598b2d6fc",
        "cursor": {
          "ref": "9ba96379-0d1b-4930-aa6e-bf538d8769dc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "32a55ee6-971c-4aec-a2cd-ccaa61fc8837"
        },
        "item": {
          "id": "bc47ce5d-f2ff-46a1-b6b6-a11598b2d6fc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e0c880a5-e6b0-4d6e-b171-099660bcb4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512aee19-ec35-47ad-a4a6-f243f442b392",
        "cursor": {
          "ref": "a31d935a-91c1-44ae-b41b-7daee7a47e8b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c218ec8a-e903-47d8-8d08-faba166be750"
        },
        "item": {
          "id": "512aee19-ec35-47ad-a4a6-f243f442b392",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8731c7f1-6a18-4e7e-9bd5-0e2e57804b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1602f6-a53f-4e72-a9a0-2fbdd0584b7b",
        "cursor": {
          "ref": "3c21d21e-6182-4612-a901-cf6175ccd54d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b94b3bfe-60ab-41c8-9389-5110d5da4faf"
        },
        "item": {
          "id": "db1602f6-a53f-4e72-a9a0-2fbdd0584b7b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "547d9dd8-3a8b-466b-96c9-408ecb610751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee0f150-d508-4cd9-9086-2b46b1ddacda",
        "cursor": {
          "ref": "7fbb08be-47d6-4588-8012-53c54ca59ffa",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e346c75d-0f0b-4824-b00e-0c3c3de0b64c"
        },
        "item": {
          "id": "fee0f150-d508-4cd9-9086-2b46b1ddacda",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "86317e38-527c-49ca-beb2-70dd20497b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59077b5-a963-4d72-abfb-558b17460bd9",
        "cursor": {
          "ref": "4729d7a8-001f-417d-8e40-fa8b12a4511c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8da4589e-cfc0-44f4-bbfd-6bb101558a7c"
        },
        "item": {
          "id": "b59077b5-a963-4d72-abfb-558b17460bd9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c28a5834-312d-4f6a-bb10-12c43a3e1ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d89a129-a0a2-4858-b752-7191cbf7c392",
        "cursor": {
          "ref": "e06b21d3-dc62-405e-bf59-a578e1cb9fc3",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b843dd15-4a96-44ca-8a75-07992ce042d5"
        },
        "item": {
          "id": "4d89a129-a0a2-4858-b752-7191cbf7c392",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d81baa4b-5a95-4db4-be6d-bad0bec95d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2853212-8576-45d1-b170-07a65c95b148",
        "cursor": {
          "ref": "c531f675-98c4-4820-9616-f612c5fcfb02",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "018a3f87-b236-4f43-bc23-112b77148186"
        },
        "item": {
          "id": "f2853212-8576-45d1-b170-07a65c95b148",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "56bd668c-18cb-49d3-bf30-9e76e6b5f33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94622d52-fdd5-4c9f-9f5a-c17eed5428ca",
        "cursor": {
          "ref": "d343d46f-030b-4b34-8714-f60ec8f7ab01",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f62ecfac-21f9-41f2-8bca-dcb0e970034f"
        },
        "item": {
          "id": "94622d52-fdd5-4c9f-9f5a-c17eed5428ca",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "57c4cd00-7964-4412-bd34-039fd66bdb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d533034e-d3c1-4ffd-8fba-36b4ecb4ef6b",
        "cursor": {
          "ref": "cd48bf08-5950-4fde-856f-c79622d049b3",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b110d9da-7c9b-42ec-8c94-661e2f1578d0"
        },
        "item": {
          "id": "d533034e-d3c1-4ffd-8fba-36b4ecb4ef6b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "09cdab41-dcd7-4e3e-8121-424533e38a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746ce39a-47d1-4bee-9b79-0408e931af8e",
        "cursor": {
          "ref": "fad8218a-9118-4026-b299-f053ec5f8572",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "24d1a410-e00f-4856-8ec6-4914adf98a5a"
        },
        "item": {
          "id": "746ce39a-47d1-4bee-9b79-0408e931af8e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5b2369cf-2f1b-4258-ae28-1d814dd061ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859beace-1776-45e9-b89a-d7c6cdbf65aa",
        "cursor": {
          "ref": "d045d95a-641c-4b31-b466-b76dfef01fee",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a75c3edc-fffb-443e-8477-70ef60c0ed4e"
        },
        "item": {
          "id": "859beace-1776-45e9-b89a-d7c6cdbf65aa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4aa64443-2773-4efc-9c3e-930352d630ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f20a4b1-4035-41e1-9e71-0c7040ac7159",
        "cursor": {
          "ref": "337054e8-d6f5-4f36-bb79-8aec587d1559",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "86ab8fd9-f6bf-4e95-a694-a1ace97f8c13"
        },
        "item": {
          "id": "8f20a4b1-4035-41e1-9e71-0c7040ac7159",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a2db03ed-929f-4e1c-85c7-821b48074d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653abd7c-eb2b-4a86-ae8a-0565ee37b486",
        "cursor": {
          "ref": "8b5a9a1b-eeb6-43f7-b120-a0643f5534d8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9813cd02-b628-4c87-aaf5-9bb380abb8b0"
        },
        "item": {
          "id": "653abd7c-eb2b-4a86-ae8a-0565ee37b486",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7d6013a6-c57f-4249-86fc-917936e64b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b20adf-5938-4aeb-aaa8-89ba54f8308a",
        "cursor": {
          "ref": "b6159bed-41b6-497e-af43-e40ca8aa8ddc",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "18e86833-a3a4-42db-8f56-358edfc3a665"
        },
        "item": {
          "id": "a2b20adf-5938-4aeb-aaa8-89ba54f8308a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9f5f0f4b-a1fd-4cec-b245-8135f9c80cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b02c43-6f66-41a3-b634-b4448e4581db",
        "cursor": {
          "ref": "701a9b1c-b1ca-4e06-87ab-c51d01b2a003",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f025cd22-8fd9-4e34-babb-3263c6d81346"
        },
        "item": {
          "id": "f1b02c43-6f66-41a3-b634-b4448e4581db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e5cc45f1-958b-4bf0-b7ee-e82d1bd80ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0fe7c8-633b-4848-aad7-0ca4571887ba",
        "cursor": {
          "ref": "7ae64c91-6d92-44f9-a22e-feff32b60589",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bde68910-1d30-4452-a7e3-9f7cd447446d"
        },
        "item": {
          "id": "fb0fe7c8-633b-4848-aad7-0ca4571887ba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "94048f6e-2646-4795-a79e-c411f1249a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5033bf6a-b5eb-4d77-b029-da189c2d8abe",
        "cursor": {
          "ref": "423041b5-3e71-460f-9772-fbf92a1063f4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f9d3e90e-53d4-444b-88c9-ea8eb434ff3f"
        },
        "item": {
          "id": "5033bf6a-b5eb-4d77-b029-da189c2d8abe",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2d44322e-54c5-4581-b33f-3573723dc158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9a773d-3a2b-4ceb-8add-cea1dcd90d8d",
        "cursor": {
          "ref": "cf677b95-93d9-4b1a-8f35-5a6cc480d1c5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "507064ce-25f8-4b1f-ba6f-e20a3269ce35"
        },
        "item": {
          "id": "7f9a773d-3a2b-4ceb-8add-cea1dcd90d8d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "86a6b64b-48a6-45c9-9ea3-7df184c65b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4165f118-5f4d-41e7-a7fa-bfc4743bd166",
        "cursor": {
          "ref": "41bd53df-3e08-43dd-8a7b-518bbbc686a0",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a7d2cbd6-3940-49b9-9abb-21bfa4814117"
        },
        "item": {
          "id": "4165f118-5f4d-41e7-a7fa-bfc4743bd166",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f7cccb3a-8377-44b7-a9c7-9c4ec28fb1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59677a4e-bdcf-4be0-ac90-0da11dba6302",
        "cursor": {
          "ref": "62b14a7b-0193-42a2-9b8a-f72447349395",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e138ff2a-efc1-418e-9315-a82ec59604c7"
        },
        "item": {
          "id": "59677a4e-bdcf-4be0-ac90-0da11dba6302",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0ff540c8-3b9e-431f-a753-cf43af704070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6201749-c676-4019-a6c5-2848e3dfff64",
        "cursor": {
          "ref": "389a069c-89b0-4386-a6e4-7d7054989449",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5383411a-036d-446a-b442-ba7b93beea1b"
        },
        "item": {
          "id": "b6201749-c676-4019-a6c5-2848e3dfff64",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "04c64ec8-6309-4c42-ac13-b4b089870bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5ae8ae-6987-49f5-9575-241af5cbdc86",
        "cursor": {
          "ref": "7d2f7af2-dc13-44a2-ae56-3836f6059dea",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1e101d98-149e-4d80-9caf-85ef67ae3bd8"
        },
        "item": {
          "id": "fa5ae8ae-6987-49f5-9575-241af5cbdc86",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "413f9a67-0316-4486-b8e0-ba186ebae394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ed57cc-2605-4c3e-bc47-0c8517d96bda",
        "cursor": {
          "ref": "2f690d22-9194-49df-b715-d70f19fbdec5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da4b3f3f-6a15-4597-b979-bf75253f7490"
        },
        "item": {
          "id": "a4ed57cc-2605-4c3e-bc47-0c8517d96bda",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "550ce815-8868-4949-98dd-e42c84f0899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d9484f-2b1b-4a95-acd9-8e822e93dbbb",
        "cursor": {
          "ref": "d95a1800-5da1-49b3-82b6-cbb19be50cd9",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a10bae92-332a-41c6-bc3d-98b8a142b01e"
        },
        "item": {
          "id": "c6d9484f-2b1b-4a95-acd9-8e822e93dbbb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b7e6abab-581c-49ab-a91d-240d19bbdc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d73b4a-5061-4d37-8ddb-355eb1913db0",
        "cursor": {
          "ref": "dd7fc133-0380-4fb9-9d1f-66394f90b96d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ecf2a835-eef1-49d7-9af5-ff9f89fb3c65"
        },
        "item": {
          "id": "18d73b4a-5061-4d37-8ddb-355eb1913db0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2645bba9-e10b-4ea6-80bf-516dd216aaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb7002f-e461-4cfd-8697-819cc286fa97",
        "cursor": {
          "ref": "ba1e59b9-5c44-4f37-8f40-4c04d701adb0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e9bd6f51-46b2-4b37-93e4-344f5ddf3b38"
        },
        "item": {
          "id": "3fb7002f-e461-4cfd-8697-819cc286fa97",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b60807c6-8498-475f-93f2-98c80b40f045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57f447c-3f74-4edb-9644-81f72dd49a36",
        "cursor": {
          "ref": "6f0db116-613c-46dd-9f3c-2da1253ae02a",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dfa8ddb9-84d9-450f-aecb-12d2830ea23b"
        },
        "item": {
          "id": "f57f447c-3f74-4edb-9644-81f72dd49a36",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9c1be76a-2af7-4f82-be9f-5de4572cd08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d8c04a-c199-44f2-9610-7e7ba666d282",
        "cursor": {
          "ref": "424bf1c1-93ea-487c-8023-47efdf9fbac4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5dc0a0e6-656c-40e2-9d2e-c6464bee2e0e"
        },
        "item": {
          "id": "24d8c04a-c199-44f2-9610-7e7ba666d282",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "08ce82ee-c329-4323-b547-58a8625fc1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3236d23-9093-43bf-aa5b-66dc87488643",
        "cursor": {
          "ref": "26f14172-2e8c-4573-99e0-66290acda484",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0fdbd143-9b71-47e9-b88b-7537d62bada1"
        },
        "item": {
          "id": "e3236d23-9093-43bf-aa5b-66dc87488643",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4c962051-500e-4d59-9475-44dad231bdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524c4804-1cdd-47be-b552-7b54ca64f9ce",
        "cursor": {
          "ref": "ff48b10a-3188-4414-b3bc-97caeb9d61ac",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "12975580-3b1e-48d3-b737-cfe62af7da53"
        },
        "item": {
          "id": "524c4804-1cdd-47be-b552-7b54ca64f9ce",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "716e7d8f-8551-40e9-8287-3b78c7832259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d058d6-8079-485a-a433-4acbb5ba9f66",
        "cursor": {
          "ref": "5f29541a-e4bd-4fd8-827a-6d2f38eeff4b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "913cf887-9a79-4766-b112-6290b3b942ea"
        },
        "item": {
          "id": "49d058d6-8079-485a-a433-4acbb5ba9f66",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7b22a838-9615-454f-90b4-3ce8fb16cafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f100d6ad-9151-4e8a-84f1-86e1f8419593",
        "cursor": {
          "ref": "ac4ea3ae-f272-4c1f-8bb1-480ac5705c2a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1f9912e4-c1ac-4c0d-b0de-8d98b8d1bfc7"
        },
        "item": {
          "id": "f100d6ad-9151-4e8a-84f1-86e1f8419593",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0e0a5e05-86a9-443f-97de-fb7c31fe643b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b366a8-5b67-4d32-b0ab-a60a77d98192",
        "cursor": {
          "ref": "63046be6-1880-469b-9c83-9a70640228f9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "84128365-e488-49a3-98cb-cc5b721f1c2e"
        },
        "item": {
          "id": "d4b366a8-5b67-4d32-b0ab-a60a77d98192",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7613e30f-810d-4f1e-9ab8-c32db0c102d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2551156c-e553-4490-8775-ece48629c286",
        "cursor": {
          "ref": "d3f06ca9-deff-478e-9b56-233d754d501d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9ae3d4d2-e4c4-4282-a8b4-4ab59335b86b"
        },
        "item": {
          "id": "2551156c-e553-4490-8775-ece48629c286",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8768aadb-eb38-440a-8116-84a575e33d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71561cfb-1f68-4348-a031-c008d73cb0b2",
        "cursor": {
          "ref": "2b183003-9b04-49c3-b80b-62bd0461eb3e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d9e88913-5195-4f3f-9d05-112070b31d2e"
        },
        "item": {
          "id": "71561cfb-1f68-4348-a031-c008d73cb0b2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "efdd6a2f-494f-427d-8517-330f5286cca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64ed48a-0873-486f-83c7-c255f1d1329e",
        "cursor": {
          "ref": "ce5172f8-bd25-4148-8181-bbecc92f16c0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "426623d3-0aa7-4f0e-9003-0ebd8ec4201e"
        },
        "item": {
          "id": "d64ed48a-0873-486f-83c7-c255f1d1329e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ec751908-114e-42d1-ad2b-0bc0524fbc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439fd525-2857-4f14-9309-0f77233289c1",
        "cursor": {
          "ref": "5b44e1bb-ab95-4b4a-8b11-2446d8ce81bc",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "53296cc2-d9a0-4097-ae76-37cf82809acb"
        },
        "item": {
          "id": "439fd525-2857-4f14-9309-0f77233289c1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cb2440d3-a05c-4acb-b2e2-cd9d627e6715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cc933f-db10-4127-97d6-7bc3e64f6ea5",
        "cursor": {
          "ref": "51b60cb5-8e5b-42ee-9627-e12f4b00e8a6",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1caab477-47da-485a-aab4-b9dcb5bbf113"
        },
        "item": {
          "id": "46cc933f-db10-4127-97d6-7bc3e64f6ea5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "40fbfaab-b330-4d42-a5ae-b8f9e22cf8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d29d55-09d2-436e-a70b-65ea30830d45",
        "cursor": {
          "ref": "f34a3ab4-c296-4809-b807-a66e94848fb1",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f25b56f3-08d9-43de-9223-256ac183828d"
        },
        "item": {
          "id": "06d29d55-09d2-436e-a70b-65ea30830d45",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "89b9a7d4-f7b3-4d68-9469-05e3cd80a0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a97f20-2354-4e69-aa24-8fde0dd4036f",
        "cursor": {
          "ref": "291b3224-fea7-49f4-a8f6-de108faa81b0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "333abae0-ebf1-434d-83d4-58dac1cc1b65"
        },
        "item": {
          "id": "93a97f20-2354-4e69-aa24-8fde0dd4036f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8324efa1-0c81-4a97-82a4-cc1f53a314da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51ace6f-777a-448c-a606-cba5f579f75e",
        "cursor": {
          "ref": "4edf6a3e-afea-4609-85a4-37e11662eda0",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d75aa774-543f-4768-848e-e60a6c081a2f"
        },
        "item": {
          "id": "d51ace6f-777a-448c-a606-cba5f579f75e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ec7a9872-480c-4ecc-ac1f-89b413ba9b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86c8937-d999-4d0e-919b-48daac34cda1",
        "cursor": {
          "ref": "231e56cd-4061-49d0-a4ab-f487e66354f6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6e7488dd-53ef-493d-bb15-ccc3e00bd844"
        },
        "item": {
          "id": "c86c8937-d999-4d0e-919b-48daac34cda1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "78827f47-f7fb-4aec-885d-f24690c69a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c873fd5-50a6-478d-9e58-a8a46fc0b8ab",
        "cursor": {
          "ref": "ac8dee21-403d-4406-856d-25468f5a05fc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c502793b-e00d-4d57-a400-63d8fbf1d8ff"
        },
        "item": {
          "id": "7c873fd5-50a6-478d-9e58-a8a46fc0b8ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c6f4b7fb-d85e-42ea-bbdb-a4932d37d22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3dd846-f1b9-489c-a88e-a4162f3bb83c",
        "cursor": {
          "ref": "df7b9742-ebc3-4417-8967-9fcfae2174dd",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "885b9b84-f4e9-495f-9da2-4c805b448fbb"
        },
        "item": {
          "id": "1c3dd846-f1b9-489c-a88e-a4162f3bb83c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7b08a3db-d924-40fa-ab2f-445a1ccf9180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7552ab9c-8f2e-4957-8108-1669deb55232",
        "cursor": {
          "ref": "1cc72c22-8248-418a-a94b-3bd5d97108b8",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ae7f5c44-e210-4cd6-84c0-a4dea29431d6"
        },
        "item": {
          "id": "7552ab9c-8f2e-4957-8108-1669deb55232",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9639434b-a393-4e87-8213-35e955fd90f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac0ea56-eb64-4a07-b16b-e66f723a3bd5",
        "cursor": {
          "ref": "067e58d1-b9fe-4d6b-928f-ff9a1168ae4e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b7e5082b-6a81-47ca-84d7-95ac8aa42149"
        },
        "item": {
          "id": "6ac0ea56-eb64-4a07-b16b-e66f723a3bd5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e0467292-af02-4048-9c96-afb9c222bfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264fbc7d-abe3-40aa-827e-7e69c61230b8",
        "cursor": {
          "ref": "d6f8091d-769a-4a5b-8c18-be5b93c111a8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8e10d949-62de-4538-af8c-347c335c5687"
        },
        "item": {
          "id": "264fbc7d-abe3-40aa-827e-7e69c61230b8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ade0ee75-0cb0-4a13-b5f0-d4f9d37439ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc325979-1c4e-46f8-957a-a1dcb16d0a43",
        "cursor": {
          "ref": "f611775a-75ad-42cf-9363-e910b73e5772",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f629152c-cd10-4d0c-a2b3-f598dcfbcf46"
        },
        "item": {
          "id": "cc325979-1c4e-46f8-957a-a1dcb16d0a43",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "219d94da-01f6-49ca-bbcc-bf6bbe307c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340bee0d-671b-4f06-a3ac-d6121c70165e",
        "cursor": {
          "ref": "8997fd23-f9bf-4004-bf6f-b7642c72b6df",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "06953555-b323-4ec6-95d6-ff3a177f1bb0"
        },
        "item": {
          "id": "340bee0d-671b-4f06-a3ac-d6121c70165e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6a6ad671-97b2-40a1-a6f4-7bd1b1ff6885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be384753-3510-4029-8920-5315d196fd43",
        "cursor": {
          "ref": "57930baf-700a-4dcc-adcf-9f8bc1e89c8b",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e9b8baf2-8f9d-4080-8c99-f836f81f546e"
        },
        "item": {
          "id": "be384753-3510-4029-8920-5315d196fd43",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bb194529-f531-43e6-8d80-7cb934817d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff7d484-aeea-4b54-b1c1-b7411326fafa",
        "cursor": {
          "ref": "b9500d9a-aa55-4913-aff8-67f69012cff5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8b89254d-2e7e-4130-af33-43d875815ba8"
        },
        "item": {
          "id": "8ff7d484-aeea-4b54-b1c1-b7411326fafa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c00300f2-df75-4649-a2b2-dfca9b619122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989b45d8-9111-4b0c-b0ea-0da878352f48",
        "cursor": {
          "ref": "b968e215-4773-416e-81f8-32f7f1cdb6f6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cb3ff2d3-fe88-4661-9c0a-3eab865c8964"
        },
        "item": {
          "id": "989b45d8-9111-4b0c-b0ea-0da878352f48",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c0bee8af-db2c-4267-9f61-4f64dd90b4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaeee6af-0ceb-4fbb-b628-a8c4abb6a8e7",
        "cursor": {
          "ref": "34629e43-9856-4204-a730-c01d1e3078e4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5579c980-69c0-44ff-9060-68210649d925"
        },
        "item": {
          "id": "aaeee6af-0ceb-4fbb-b628-a8c4abb6a8e7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ceb3745d-e741-4045-b4cc-cabd9fa46e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08966101-6cfb-469d-8233-b4565b4d3251",
        "cursor": {
          "ref": "206ac069-304a-40a4-b552-416c85c4ef23",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "920d2f93-9793-4d43-b7fe-d32a16998c7e"
        },
        "item": {
          "id": "08966101-6cfb-469d-8233-b4565b4d3251",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3e645927-835a-47fd-9986-467b98be444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53bb79b-860f-46fa-9c10-afbe28ee8961",
        "cursor": {
          "ref": "e4265828-e6bf-4203-9aed-4b1e10043c5d",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1081bb3b-8415-40aa-8aa6-d459de50ce54"
        },
        "item": {
          "id": "a53bb79b-860f-46fa-9c10-afbe28ee8961",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "be542a4c-bde7-4097-9999-cdb218d3705f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d5b96f-8713-4830-9ea7-d31d0ad54396",
        "cursor": {
          "ref": "b231e362-7a6e-4abb-8c59-4af457b62026",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5f6b219e-f502-4a25-adaf-8064cd7c1da2"
        },
        "item": {
          "id": "54d5b96f-8713-4830-9ea7-d31d0ad54396",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "28c17a68-e31d-42a1-ae53-67c9e5954f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393f6f2d-8b1e-4100-bf0d-e1c1730917ea",
        "cursor": {
          "ref": "323ff055-2558-48af-88f2-e88190731dbd",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3e022704-f300-4c9b-804c-7d210ac14ac8"
        },
        "item": {
          "id": "393f6f2d-8b1e-4100-bf0d-e1c1730917ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fae00aa7-2e7e-4dba-93d3-17f894f371ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f9e621-7cbd-4b04-9442-6df219bf19b4",
        "cursor": {
          "ref": "f640426c-a2ab-47ec-80b9-a25f89ca7ed9",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cc872d35-db1d-48ac-8261-06a4573ee72c"
        },
        "item": {
          "id": "03f9e621-7cbd-4b04-9442-6df219bf19b4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3b8331ff-09c0-4826-a1c9-8f7154a88143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e535f16-1d32-4f71-b94b-7e4a21a25216",
        "cursor": {
          "ref": "b721dbce-ab4d-4f65-8cdc-cf66d280868d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "55e9130d-c22c-4956-9c5c-60a7630d1b29"
        },
        "item": {
          "id": "3e535f16-1d32-4f71-b94b-7e4a21a25216",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "469f681e-2c39-4dcb-9eaa-eca7f83e4de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092fdc8e-cb00-43f4-a605-ea2b92334288",
        "cursor": {
          "ref": "4a8928c7-6e19-4c38-a0e4-d4b00d8cec80",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "94ab36bb-de05-4d53-ae84-7f981e4e405a"
        },
        "item": {
          "id": "092fdc8e-cb00-43f4-a605-ea2b92334288",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6611f858-4375-484b-aca8-5567add4b93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c543c05-ae5a-4bf3-9ed3-10eaf35a2a9b",
        "cursor": {
          "ref": "e27a5167-4f66-4a03-b666-81381376e06d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fc1c1b87-60a9-4be6-95e3-e3b38a07b73d"
        },
        "item": {
          "id": "9c543c05-ae5a-4bf3-9ed3-10eaf35a2a9b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa0e2d5f-88cd-4a37-b9a1-0c265aec9962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb611cf9-e02b-402c-a663-b83f4e3ab342",
        "cursor": {
          "ref": "f6afd4e2-cab9-4cc0-ae06-bb91464be773",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d0bac982-fcd8-441a-9c2a-d959ba8510e5"
        },
        "item": {
          "id": "bb611cf9-e02b-402c-a663-b83f4e3ab342",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e30de1ff-5a76-4264-aea9-9a69cb9cd71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f661a6-8abd-4f3f-baf4-832877b22f93",
        "cursor": {
          "ref": "3e15a41d-56c6-4705-917b-d6af416ec310",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "21d92126-1073-401f-bb72-7b2df5bf781d"
        },
        "item": {
          "id": "d7f661a6-8abd-4f3f-baf4-832877b22f93",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8f7269e2-e4c3-4672-adf8-d5b27fcd996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e2e994-147f-4d85-963e-ed025f530a6d",
        "cursor": {
          "ref": "160ef75d-4499-4203-91fa-e379b486f042",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c1175722-74e8-40af-93f2-804d0254c659"
        },
        "item": {
          "id": "f7e2e994-147f-4d85-963e-ed025f530a6d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "041e43c0-945d-43d1-aa61-87fe70e2d30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82dc1a1-c4b0-476c-a3c0-92cc45d999fb",
        "cursor": {
          "ref": "91b5dc78-b34b-4b79-9c19-b11ada719a65",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dee88bf0-ff7c-4b2b-9424-9e5c0f7e5a81"
        },
        "item": {
          "id": "c82dc1a1-c4b0-476c-a3c0-92cc45d999fb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "35a79dc7-5b53-4d98-893f-c44178cf0279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921adc3d-c64d-4f48-b034-2748bb1bb76a",
        "cursor": {
          "ref": "97bb7932-9839-4366-acc2-482ab72bd2fe",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1c767cf9-7d19-495e-afb5-5ffcea7cebb3"
        },
        "item": {
          "id": "921adc3d-c64d-4f48-b034-2748bb1bb76a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cda5ec31-60e2-400a-a7e1-7e221eead5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cedf935-7b1a-4285-bbf7-168c0404e527",
        "cursor": {
          "ref": "6c48f977-8c56-48fd-8605-90cdf601f98c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b3d7ed1e-59cd-4ab5-bc4f-57dc0f4faa0f"
        },
        "item": {
          "id": "4cedf935-7b1a-4285-bbf7-168c0404e527",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "08b51415-f26f-422e-9d24-bf52f67264d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6119260-fa25-441a-87e5-6fd4d308ae72",
        "cursor": {
          "ref": "2120045c-047c-4a24-a55b-a710781a42ed",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5ffa9f0d-f24f-4a51-b3fd-3efdddd787a3"
        },
        "item": {
          "id": "a6119260-fa25-441a-87e5-6fd4d308ae72",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4e93ff04-7547-4483-94b1-f2eb9c2ac305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bf775d-55cd-4636-8985-12440f137021",
        "cursor": {
          "ref": "b1360452-7564-40ca-a969-c6ad3c341cc2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9cbafa86-5a4e-465f-99fe-f92501feb9ac"
        },
        "item": {
          "id": "46bf775d-55cd-4636-8985-12440f137021",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ac62b1a7-2eac-46c2-b255-a4a1a9472aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d23d626-d3c3-4dde-ade3-cb7f64125831",
        "cursor": {
          "ref": "402abede-886a-4831-ba2d-7e152b7408dc",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d78382bc-ab92-4957-87a1-70e2bc7b9038"
        },
        "item": {
          "id": "6d23d626-d3c3-4dde-ade3-cb7f64125831",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6830deab-47ca-4f58-b277-48a84007d8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981f6083-3b81-4c16-a4fa-ebdf95c663d3",
        "cursor": {
          "ref": "d8c1dd8a-801a-4b1a-81f0-ff7396513c59",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "581a5621-2f71-4db9-9c57-e84c4dbecb8c"
        },
        "item": {
          "id": "981f6083-3b81-4c16-a4fa-ebdf95c663d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b34386e4-da19-43ed-b65f-e7375d2e8a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1406d47d-63e3-4802-ba59-5280651dc357",
        "cursor": {
          "ref": "25ab9b00-3b81-44cb-8496-2fce41a33f94",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "12a27cf3-1953-4ffa-b630-6c31e90e5aa9"
        },
        "item": {
          "id": "1406d47d-63e3-4802-ba59-5280651dc357",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "44ac0bda-1e39-4700-a0f7-fff70f7afd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cceaddd-ebba-4704-8615-b0ae15769445",
        "cursor": {
          "ref": "0c25415c-94d5-48dd-b513-9762a683db84",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "311d5356-15b5-4e08-85a6-8fb4d5abc09b"
        },
        "item": {
          "id": "5cceaddd-ebba-4704-8615-b0ae15769445",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "03277455-08bb-4004-876f-d55a69e0cfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e21119-fdac-46c8-bacb-78b4d1378436",
        "cursor": {
          "ref": "9b7ac815-521f-413e-b158-116f80261c45",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4e74b4f7-7c80-4692-8030-f4a9f1f6cb56"
        },
        "item": {
          "id": "06e21119-fdac-46c8-bacb-78b4d1378436",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1112554d-299d-4e67-a999-641002ee53c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e984cbfc-ecec-41b6-8458-1df82f1f16f8",
        "cursor": {
          "ref": "5473c139-e2e1-4048-9cff-3df1df3b336c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b3239469-fec4-4d2d-bdd0-39820fb090a7"
        },
        "item": {
          "id": "e984cbfc-ecec-41b6-8458-1df82f1f16f8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "57791a03-92e9-4be9-8241-23c3ca648676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fc7210-6d2a-4303-b7b0-69a999dca93c",
        "cursor": {
          "ref": "045a1168-bcd7-4cd7-ad54-779585795220",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "743ce686-6cf8-4d2a-a2d8-9eca90f78ac4"
        },
        "item": {
          "id": "16fc7210-6d2a-4303-b7b0-69a999dca93c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e6bc9445-a703-411a-abec-5794501fed28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a96bbc-1d81-4ce1-8005-50c8edff2e2e",
        "cursor": {
          "ref": "e28f413f-8108-4884-9d3a-7a71b9b08606",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7dcc2695-334b-47f3-a65a-86b26955053b"
        },
        "item": {
          "id": "43a96bbc-1d81-4ce1-8005-50c8edff2e2e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "94cf5073-0c26-4a59-b4d7-17054208752c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4480e4-00be-4089-8a27-1de71aed8916",
        "cursor": {
          "ref": "e83a808f-77fd-46da-9a51-ac9f0034278c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ae9d8742-9123-4949-8773-10b545b6c417"
        },
        "item": {
          "id": "cc4480e4-00be-4089-8a27-1de71aed8916",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ed4f95c0-c807-4b60-b678-c96f05c54793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db3f50a-09be-4c1e-a7f7-d6c747ec295b",
        "cursor": {
          "ref": "db04915c-4b12-439c-8957-cfed2d851a55",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "40f290b4-a1b2-468c-bae2-c160769a567e"
        },
        "item": {
          "id": "3db3f50a-09be-4c1e-a7f7-d6c747ec295b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f871462b-fe77-4758-a5ed-5391325216a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba871df-6046-4224-8250-aa90a111bb8b",
        "cursor": {
          "ref": "e146fd0e-e40d-4f15-bf10-5295eb59d263",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4e982389-440a-48ef-9221-642033ecacc5"
        },
        "item": {
          "id": "1ba871df-6046-4224-8250-aa90a111bb8b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "54e1cde2-0333-4c37-88c8-1170ea22b2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42072c04-761c-4fc5-bda9-cd54180c0eac",
        "cursor": {
          "ref": "697717f4-6463-4de0-83c9-0ee56842727e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "49ab6d5f-5681-488b-8839-ddeede13c5be"
        },
        "item": {
          "id": "42072c04-761c-4fc5-bda9-cd54180c0eac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "76048b44-630e-4daa-a730-7ddfe0e6a622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d9dea0-002e-4372-888c-a02d76ad24ba",
        "cursor": {
          "ref": "6cf89403-7199-4879-b6d6-2f92de22a139",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "75f3dc76-7755-4b8b-a97b-95c86b37a29d"
        },
        "item": {
          "id": "a3d9dea0-002e-4372-888c-a02d76ad24ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "291991b5-e912-4bcc-b2d8-197c096d920a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2731f4-e15b-49ab-a44d-72670a074c5d",
        "cursor": {
          "ref": "f81b31d4-0bce-4842-815a-90469270bd08",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6f783272-c757-4d27-9b08-342d79f7f3ac"
        },
        "item": {
          "id": "5f2731f4-e15b-49ab-a44d-72670a074c5d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "56ba7376-7bfe-4394-9210-dc09dfa787fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b294ae-ae84-4bae-b7ce-66c1fbd5e993",
        "cursor": {
          "ref": "141dca34-07ac-4d13-822e-8f9b12db106a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3d8a7d81-c20a-46f6-aab6-bb7e58028a83"
        },
        "item": {
          "id": "36b294ae-ae84-4bae-b7ce-66c1fbd5e993",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4216b4a0-2bd5-4037-b563-932853fcd368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf91ee6-97ef-4858-bb10-21e08ad34b8a",
        "cursor": {
          "ref": "caee1fb7-a08a-41db-bf23-951c7ea87f86",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "aa0f7319-eb05-43e2-bb47-26e0fdae6640"
        },
        "item": {
          "id": "dcf91ee6-97ef-4858-bb10-21e08ad34b8a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "49ad48cc-3d8b-49a0-9132-6c07bb114621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7248b355-a9f2-451a-99fe-9dffbcb09481",
        "cursor": {
          "ref": "701b5f98-c6c2-42b3-8e5e-bc47a85c17ca",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "68ad732b-1827-452c-8794-179de7ff8c15"
        },
        "item": {
          "id": "7248b355-a9f2-451a-99fe-9dffbcb09481",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b0823725-fa16-493a-8e83-1025cc1e342a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf19431b-583b-4a03-9bbe-58b1c2e75bb2",
        "cursor": {
          "ref": "d96beb65-9864-43a3-ba6f-e09a9cbdae87",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c4a8c47d-2f0d-4922-b432-e521d2e1812d"
        },
        "item": {
          "id": "bf19431b-583b-4a03-9bbe-58b1c2e75bb2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b390fde4-6b3c-4c87-976f-8b017502c8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a8787c-5677-4d8c-a518-8405a27e8a60",
        "cursor": {
          "ref": "fee24169-2c54-4b6a-b049-8d69713094b7",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a8197009-bdbf-4774-95fb-86573e654ec1"
        },
        "item": {
          "id": "92a8787c-5677-4d8c-a518-8405a27e8a60",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2ccd0825-2f7b-4f3c-ba07-d67dcbb72f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3046140c-873c-48cf-bdfb-a350f73c7d52",
        "cursor": {
          "ref": "2b7f678a-65d4-446e-9fd7-39b6a38fbdc6",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "df6325da-b8c6-46bb-88a4-0bffeaf33cc3"
        },
        "item": {
          "id": "3046140c-873c-48cf-bdfb-a350f73c7d52",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1cc3c845-ee2a-4282-9db0-174c94f2b7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468d831a-a9e2-4b26-a8f2-9c8e72244816",
        "cursor": {
          "ref": "faff4138-caf4-4d8c-9777-aa3e9d283272",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e3aea1ec-8946-4454-ac1e-634dc3a4cf92"
        },
        "item": {
          "id": "468d831a-a9e2-4b26-a8f2-9c8e72244816",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fd2eed1d-a2b3-4216-819c-2ca4f3f9aaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63d7249-9e42-4d9d-b743-b30f47ce35f4",
        "cursor": {
          "ref": "6a2d727d-0f4c-4a7c-bcfa-8e715d10e403",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5fbf8180-be8f-4653-a66d-5ef98b5fd89c"
        },
        "item": {
          "id": "c63d7249-9e42-4d9d-b743-b30f47ce35f4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9a6cac65-f5d8-4685-9ef7-0e91827e0099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cc9640-61ad-4086-9f26-314359106304",
        "cursor": {
          "ref": "11dd28bb-487d-459d-8b7d-9652acc45a8a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "181a89f9-3d5a-4daf-98bd-7b45d1531b01"
        },
        "item": {
          "id": "57cc9640-61ad-4086-9f26-314359106304",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e37a8acd-0ecd-4894-ac1d-21fff5697c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70996363-9526-48cc-8fd3-acebf7803920",
        "cursor": {
          "ref": "6dbfaf87-e301-4569-b40a-ee5578fbf874",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "29e16435-8b8f-430a-a962-6cf13fd4cfc1"
        },
        "item": {
          "id": "70996363-9526-48cc-8fd3-acebf7803920",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "507c9cd1-16d0-4549-8a20-08f98e59896d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2c328e-01a6-484d-b118-9fe5f36b0205",
        "cursor": {
          "ref": "4624fc71-5082-4fdf-9a77-68fdad59b255",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "332f06f4-df7c-401c-af4b-5fc5383d1b53"
        },
        "item": {
          "id": "8d2c328e-01a6-484d-b118-9fe5f36b0205",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cb65bb25-c171-4756-90bc-baec9af9b65d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6396291-0a23-44fb-9ad4-72d7c4dd45ae",
        "cursor": {
          "ref": "b01faa6f-4516-446d-b4af-3b7872c6f832",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "24bb0e3c-f688-4a32-9a2e-ed654aa8b28c"
        },
        "item": {
          "id": "f6396291-0a23-44fb-9ad4-72d7c4dd45ae",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "db97c533-0ffe-49db-b3e8-d3ad5c0fff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cd888c-a2c3-441a-86a8-11ab6ed43b54",
        "cursor": {
          "ref": "4bb4e2e7-7f41-4ba8-ae47-cf8de1cafd7a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b2f6eaae-14c7-46ac-847b-2312dd84e165"
        },
        "item": {
          "id": "73cd888c-a2c3-441a-86a8-11ab6ed43b54",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "019e3dfd-f363-4110-a15c-669bd7b887ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80859351-5327-42e0-bc18-5aa424454c0f",
        "cursor": {
          "ref": "21c628da-51a8-48b5-82d9-5c5156af60b5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f054c843-a413-4a56-b160-4b21ceab8abb"
        },
        "item": {
          "id": "80859351-5327-42e0-bc18-5aa424454c0f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5ab43f70-d324-45e1-a785-e42062e2c7e8",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca5704a-f60e-43ae-8910-ae3767b5232e",
        "cursor": {
          "ref": "da2a2c54-6083-45d4-a5be-c9cb6ddd0eaa",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7e80e28b-8158-4805-99f6-ccdab9586be5"
        },
        "item": {
          "id": "1ca5704a-f60e-43ae-8910-ae3767b5232e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e8836cef-b801-4fe5-89d2-3eaf0b1189a7",
          "status": "OK",
          "code": 200,
          "responseTime": 1392,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a4a6e2-9ac5-4f5a-b552-f4d1228f2b98",
        "cursor": {
          "ref": "6c8275c0-c9b1-4f2a-9b9d-5feb37940065",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "42868e6e-9f6d-4009-a171-bcf724d28946"
        },
        "item": {
          "id": "44a4a6e2-9ac5-4f5a-b552-f4d1228f2b98",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8d5046f0-69e6-4036-ab2a-930cd93e251c",
          "status": "OK",
          "code": 200,
          "responseTime": 1523,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd95490-81a7-4d9b-bdcf-40bb9533cca8",
        "cursor": {
          "ref": "2d3739c6-248a-476f-bde9-382b531937f1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ebb2ade4-e150-4873-b814-00bd2a00723f"
        },
        "item": {
          "id": "4fd95490-81a7-4d9b-bdcf-40bb9533cca8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b97c71cd-08c2-4220-98e2-6180ef305265",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd95490-81a7-4d9b-bdcf-40bb9533cca8",
        "cursor": {
          "ref": "2d3739c6-248a-476f-bde9-382b531937f1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ebb2ade4-e150-4873-b814-00bd2a00723f"
        },
        "item": {
          "id": "4fd95490-81a7-4d9b-bdcf-40bb9533cca8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b97c71cd-08c2-4220-98e2-6180ef305265",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b93690-9121-4563-8c9e-fda8004b46d1",
        "cursor": {
          "ref": "6d1fcf72-a5fa-4caa-9dd7-6952732b390c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c3ffdb94-c03b-44b7-aa0f-afded8d00183"
        },
        "item": {
          "id": "06b93690-9121-4563-8c9e-fda8004b46d1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e5ef7207-1392-433e-8791-94690d698b26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9300afe8-5af8-4d03-980b-2b45e3a171f9",
        "cursor": {
          "ref": "d8bb99a2-44e5-4e6b-af33-b98b13243ab0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d88d49a8-79f0-42b4-bd26-8c1d8025d7d9"
        },
        "item": {
          "id": "9300afe8-5af8-4d03-980b-2b45e3a171f9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "20bd70ed-d321-4a51-8f51-14c017a1d6c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}